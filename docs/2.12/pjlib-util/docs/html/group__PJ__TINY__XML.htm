<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Mini/Tiny XML Parser/Helper (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB-UTIL Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Mini/Tiny XML Parser/Helper<div class="ingroups"><a class="el" href="group__PJ__FILE__FMT.htm">File Formats</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__xml__attr.htm">pj_xml_attr</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__xml__node__head.htm">pj_xml_node_head</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga08d03b3d1d92aa03b6a999e6ca903cab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga08d03b3d1d92aa03b6a999e6ca903cab">pj_xml_parse</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *msg, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> len)</td></tr>
<tr class="separator:ga08d03b3d1d92aa03b6a999e6ca903cab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga917ce39bdfc063a11b1ef0ff56c4846c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga917ce39bdfc063a11b1ef0ff56c4846c">pj_xml_print</a> (const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *node, char *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> len, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> prolog)</td></tr>
<tr class="separator:ga917ce39bdfc063a11b1ef0ff56c4846c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac20664ee986c1b5be305a14690010a69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#gac20664ee986c1b5be305a14690010a69">pj_xml_clone</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *rhs)</td></tr>
<tr class="separator:gac20664ee986c1b5be305a14690010a69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65fe66287a2b810e18487f2323634dae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga65fe66287a2b810e18487f2323634dae">pj_xml_node_new</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name)</td></tr>
<tr class="separator:ga65fe66287a2b810e18487f2323634dae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c92f267a95e76b1c53d42c858228a93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__attr.htm">pj_xml_attr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga0c92f267a95e76b1c53d42c858228a93">pj_xml_attr_new</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *value)</td></tr>
<tr class="separator:ga0c92f267a95e76b1c53d42c858228a93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0dd8dc1fe0d03922256ae5781ef4bbe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#gad0dd8dc1fe0d03922256ae5781ef4bbe">pj_xml_add_node</a> (<a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *parent, <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *node)</td></tr>
<tr class="separator:gad0dd8dc1fe0d03922256ae5781ef4bbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b419ff34d9cf18bfd9271cca9f22f49"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga9b419ff34d9cf18bfd9271cca9f22f49">pj_xml_add_attr</a> (<a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *node, <a class="el" href="structpj__xml__attr.htm">pj_xml_attr</a> *attr)</td></tr>
<tr class="separator:ga9b419ff34d9cf18bfd9271cca9f22f49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa05bd61537526fcf27374739e2b590a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#gaa05bd61537526fcf27374739e2b590a1">pj_xml_find_node</a> (const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *parent, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name)</td></tr>
<tr class="separator:gaa05bd61537526fcf27374739e2b590a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga81fc49cbf32b8f0dd02fe6165e94c452"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga81fc49cbf32b8f0dd02fe6165e94c452">pj_xml_find_next_node</a> (const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *parent, const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *node, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name)</td></tr>
<tr class="separator:ga81fc49cbf32b8f0dd02fe6165e94c452"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb562fc4fccffb871eaa5837bebd2873"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#gadb562fc4fccffb871eaa5837bebd2873">pj_xml_find_node_rec</a> (const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *parent, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name)</td></tr>
<tr class="separator:gadb562fc4fccffb871eaa5837bebd2873"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae7499bc30d6f3af991650b0ac898399"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__attr.htm">pj_xml_attr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#gaae7499bc30d6f3af991650b0ac898399">pj_xml_find_attr</a> (const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *node, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *value)</td></tr>
<tr class="separator:gaae7499bc30d6f3af991650b0ac898399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b2ae82035ee9e0d98092e5986e0747c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga5b2ae82035ee9e0d98092e5986e0747c">pj_xml_find</a> (const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *parent, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name, const void *data, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*match)(const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *, const void *))</td></tr>
<tr class="separator:ga5b2ae82035ee9e0d98092e5986e0747c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c8266688c4bf89bba0d42a70c24e8f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TINY__XML.htm#ga5c8266688c4bf89bba0d42a70c24e8f0">pj_xml_find_rec</a> (const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *parent, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name, const void *data, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*match)(const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *, const void *))</td></tr>
<tr class="separator:ga5c8266688c4bf89bba0d42a70c24e8f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga9b419ff34d9cf18bfd9271cca9f22f49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9b419ff34d9cf18bfd9271cca9f22f49">&#9670;&nbsp;</a></span>pj_xml_add_attr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_xml_add_attr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__xml__attr.htm">pj_xml_attr</a> *&#160;</td>
          <td class="paramname"><em>attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add attribute to a node.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>Node. </td></tr>
    <tr><td class="paramname">attr</td><td>Attribute to add to node. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gad0dd8dc1fe0d03922256ae5781ef4bbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad0dd8dc1fe0d03922256ae5781ef4bbe">&#9670;&nbsp;</a></span>pj_xml_add_node()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_xml_add_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add node to another node.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>Parent node. </td></tr>
    <tr><td class="paramname">node</td><td>Node to be added to parent. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga0c92f267a95e76b1c53d42c858228a93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0c92f267a95e76b1c53d42c858228a93">&#9670;&nbsp;</a></span>pj_xml_attr_new()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__attr.htm">pj_xml_attr</a>* pj_xml_attr_new </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create new XML attribute.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool. </td></tr>
    <tr><td class="paramname">name</td><td>Attribute name. </td></tr>
    <tr><td class="paramname">value</td><td>Attribute value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The new XML attribute. </dd></dl>

</div>
</div>
<a id="gac20664ee986c1b5be305a14690010a69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac20664ee986c1b5be305a14690010a69">&#9670;&nbsp;</a></span>pj_xml_clone()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_clone </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clone XML node and all subnodes.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory for new nodes. </td></tr>
    <tr><td class="paramname">rhs</td><td>The node to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Cloned XML node, or NULL on fail. </dd></dl>

</div>
</div>
<a id="ga5b2ae82035ee9e0d98092e5986e0747c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5b2ae82035ee9e0d98092e5986e0747c">&#9670;&nbsp;</a></span>pj_xml_find()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_find </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*)(const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *, const void *)&#160;</td>
          <td class="paramname"><em>match</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Find a direct child node with the specified name and match the function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>Parent node. </td></tr>
    <tr><td class="paramname">name</td><td>Optional name. If this is NULL, the name will not be matched. </td></tr>
    <tr><td class="paramname">data</td><td>Data to be passed to matching function. </td></tr>
    <tr><td class="paramname">match</td><td>Optional matching function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The first matched node, or NULL. </dd></dl>

</div>
</div>
<a id="gaae7499bc30d6f3af991650b0ac898399"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaae7499bc30d6f3af991650b0ac898399">&#9670;&nbsp;</a></span>pj_xml_find_attr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__attr.htm">pj_xml_attr</a>* pj_xml_find_attr </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Find first attribute within a node with the specified name and optional value.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>XML Node. </td></tr>
    <tr><td class="paramname">name</td><td>Attribute name to find. </td></tr>
    <tr><td class="paramname">value</td><td>Optional value to match.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>XML attribute found, or NULL. </dd></dl>

</div>
</div>
<a id="ga81fc49cbf32b8f0dd02fe6165e94c452"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga81fc49cbf32b8f0dd02fe6165e94c452">&#9670;&nbsp;</a></span>pj_xml_find_next_node()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_find_next_node </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Find next direct child node with the specified name.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>Parent node. </td></tr>
    <tr><td class="paramname">node</td><td>node-&gt;next is the starting point. </td></tr>
    <tr><td class="paramname">name</td><td>Node name to find.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>XML node found or NULL. </dd></dl>

</div>
</div>
<a id="gaa05bd61537526fcf27374739e2b590a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa05bd61537526fcf27374739e2b590a1">&#9670;&nbsp;</a></span>pj_xml_find_node()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_find_node </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Find first direct child node with the specified name.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>Parent node. </td></tr>
    <tr><td class="paramname">name</td><td>Node name to find.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>XML node found or NULL. </dd></dl>

</div>
</div>
<a id="gadb562fc4fccffb871eaa5837bebd2873"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb562fc4fccffb871eaa5837bebd2873">&#9670;&nbsp;</a></span>pj_xml_find_node_rec()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_find_node_rec </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Recursively find the first node with the specified name in the child nodes and their children.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>Parent node. </td></tr>
    <tr><td class="paramname">name</td><td>Node name to find.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>XML node found or NULL. </dd></dl>

</div>
</div>
<a id="ga5c8266688c4bf89bba0d42a70c24e8f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5c8266688c4bf89bba0d42a70c24e8f0">&#9670;&nbsp;</a></span>pj_xml_find_rec()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_find_rec </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*)(const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *, const void *)&#160;</td>
          <td class="paramname"><em>match</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Recursively find a child node with the specified name and match the function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>Parent node. </td></tr>
    <tr><td class="paramname">name</td><td>Optional name. If this is NULL, the name will not be matched. </td></tr>
    <tr><td class="paramname">data</td><td>Data to be passed to matching function. </td></tr>
    <tr><td class="paramname">match</td><td>Optional matching function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The first matched node, or NULL. </dd></dl>

</div>
</div>
<a id="ga65fe66287a2b810e18487f2323634dae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga65fe66287a2b810e18487f2323634dae">&#9670;&nbsp;</a></span>pj_xml_node_new()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_node_new </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create an empty node.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool. </td></tr>
    <tr><td class="paramname">name</td><td>Node name.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The new node. </dd></dl>

</div>
</div>
<a id="ga08d03b3d1d92aa03b6a999e6ca903cab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga08d03b3d1d92aa03b6a999e6ca903cab">&#9670;&nbsp;</a></span>pj_xml_parse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__xml__node.htm">pj_xml_node</a>* pj_xml_parse </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Parse XML message into XML document with a single root node. The parser is capable of parsing XML processing instruction construct ("&lt;?") and XML comments ("&lt;!--"), however such constructs will be ignored and will not be included in the resulted XML node tree.</p>
<p>Note that the XML message input buffer MUST be NULL terminated and have length at least len+1 (len MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The XML message to parse, MUST be NULL terminated. </td></tr>
    <tr><td class="paramname">len</td><td>The length of the message, not including NULL terminator.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>XML root node, or NULL if the XML document can not be parsed. </dd></dl>

</div>
</div>
<a id="ga917ce39bdfc063a11b1ef0ff56c4846c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga917ce39bdfc063a11b1ef0ff56c4846c">&#9670;&nbsp;</a></span>pj_xml_print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pj_xml_print </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__xml__node.htm">pj_xml_node</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>prolog</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Print XML into XML message. Note that the function WILL NOT NULL terminate the output.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>The XML node to print. </td></tr>
    <tr><td class="paramname">buf</td><td>Buffer to hold the output message. </td></tr>
    <tr><td class="paramname">len</td><td>The length of the buffer. </td></tr>
    <tr><td class="paramname">prolog</td><td>If set to nonzero, will print XML prolog ("&lt;?xml..")</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The size of the printed message, or -1 if there is not sufficient space in the buffer to print the message. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB-UTIL Open Source, small footprint, and portable asynchronous/caching DNS resolver, text scanner, STUN client, and XML library<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
