<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj::ToneGenerator Class Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacepj.htm">pj</a></li><li class="navelem"><a class="el" href="classpj_1_1ToneGenerator.htm">ToneGenerator</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">pj::ToneGenerator Class Reference<div class="ingroups"><a class="el" href="group__PJSUA2__Ref.htm">pjsua2 API Reference</a> &raquo; <a class="el" href="group__PJSUA2__MED.htm">Media</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;media.hpp&gt;</code></p>
<div class="dynheader">
Inheritance diagram for pj::ToneGenerator:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classpj_1_1ToneGenerator.png" usemap="#pj::ToneGenerator_map" alt=""/>
  <map id="pj::ToneGenerator_map" name="pj::ToneGenerator_map">
<area href="classpj_1_1AudioMedia.htm" alt="pj::AudioMedia" shape="rect" coords="0,56,113,80"/>
<area href="classpj_1_1Media.htm" alt="pj::Media" shape="rect" coords="0,0,113,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a70f441420693ba29d05214e0a6eb82de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#a70f441420693ba29d05214e0a6eb82de">ToneGenerator</a> ()</td></tr>
<tr class="separator:a70f441420693ba29d05214e0a6eb82de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62ea47e9bfa75f117bee0004b67d3100"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#a62ea47e9bfa75f117bee0004b67d3100">~ToneGenerator</a> ()</td></tr>
<tr class="separator:a62ea47e9bfa75f117bee0004b67d3100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4caf88180ef2f617633e07d1dbe5a344"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#a4caf88180ef2f617633e07d1dbe5a344">createToneGenerator</a> (unsigned clock_rate=16000, unsigned channel_count=1)  throw (Error)</td></tr>
<tr class="separator:a4caf88180ef2f617633e07d1dbe5a344"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4b76d47aa89f0dedca154226ed47e37"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#aa4b76d47aa89f0dedca154226ed47e37">isBusy</a> () const</td></tr>
<tr class="separator:aa4b76d47aa89f0dedca154226ed47e37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6e8a1fefa4830d60d196a9264ea84a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#adb6e8a1fefa4830d60d196a9264ea84a">stop</a> ()  throw (Error)</td></tr>
<tr class="separator:adb6e8a1fefa4830d60d196a9264ea84a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bae34e252c6ca18811391922cbf2cab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#a7bae34e252c6ca18811391922cbf2cab">rewind</a> ()  throw (Error)</td></tr>
<tr class="separator:a7bae34e252c6ca18811391922cbf2cab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a511d42ce533b753a713ab3252122de57"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#a511d42ce533b753a713ab3252122de57">play</a> (const <a class="el" href="group__PJSUA2__MED.htm#ga6db01dec69f08e063409431a5658e221">ToneDescVector</a> &amp;tones, bool loop=false)  throw (Error)</td></tr>
<tr class="separator:a511d42ce533b753a713ab3252122de57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67c5e6cdfb75fd9046992bb095d6f27a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#a67c5e6cdfb75fd9046992bb095d6f27a">playDigits</a> (const <a class="el" href="group__PJSUA2__MED.htm#gadb9756ae27d4de54c8d0c7425b059c3e">ToneDigitVector</a> &amp;digits, bool loop=false)  throw (Error)</td></tr>
<tr class="separator:a67c5e6cdfb75fd9046992bb095d6f27a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a523fe8f89254f171cfa1d1f51cf8a687"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__MED.htm#ga8c9ac7a1215780e6504f7e6eeb1df415">ToneDigitMapVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#a523fe8f89254f171cfa1d1f51cf8a687">getDigitMap</a> () const  throw (Error)</td></tr>
<tr class="separator:a523fe8f89254f171cfa1d1f51cf8a687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7014661426015c8939d3a1d8b7d990b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1ToneGenerator.htm#ae7014661426015c8939d3a1d8b7d990b">setDigitMap</a> (const <a class="el" href="group__PJSUA2__MED.htm#ga8c9ac7a1215780e6504f7e6eeb1df415">ToneDigitMapVector</a> &amp;digit_map)  throw (Error)</td></tr>
<tr class="separator:ae7014661426015c8939d3a1d8b7d990b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpj_1_1AudioMedia"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classpj_1_1AudioMedia')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classpj_1_1AudioMedia.htm">pj::AudioMedia</a></td></tr>
<tr class="memitem:aedefd069090192192a7fddff7e8a6112 inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj_1_1ConfPortInfo.htm">ConfPortInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#aedefd069090192192a7fddff7e8a6112">getPortInfo</a> () const  throw (Error)</td></tr>
<tr class="separator:aedefd069090192192a7fddff7e8a6112 inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acba08735cc7c5c88e8a13105499e4d4d inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#acba08735cc7c5c88e8a13105499e4d4d">getPortId</a> () const</td></tr>
<tr class="separator:acba08735cc7c5c88e8a13105499e4d4d inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a26c7478a0dbe7d7e6719f04156954d inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a7a26c7478a0dbe7d7e6719f04156954d">startTransmit</a> (const <a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;sink) const  throw (Error)</td></tr>
<tr class="separator:a7a26c7478a0dbe7d7e6719f04156954d inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00c9bd1391b275180128b6aabbce2d72 inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a00c9bd1391b275180128b6aabbce2d72">startTransmit2</a> (const <a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;sink, const <a class="el" href="structpj_1_1AudioMediaTransmitParam.htm">AudioMediaTransmitParam</a> &amp;param) const  throw (Error)</td></tr>
<tr class="separator:a00c9bd1391b275180128b6aabbce2d72 inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a397acb2a61103af40c28504f1d8ea8cd inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a397acb2a61103af40c28504f1d8ea8cd">stopTransmit</a> (const <a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;sink) const  throw (Error)</td></tr>
<tr class="separator:a397acb2a61103af40c28504f1d8ea8cd inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf541502614d847f117817cd12cbcdc4 inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#acf541502614d847f117817cd12cbcdc4">adjustRxLevel</a> (float level)  throw (Error)</td></tr>
<tr class="separator:acf541502614d847f117817cd12cbcdc4 inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6e4a58251e2fc3e9a5ec05cabe83d65 inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#af6e4a58251e2fc3e9a5ec05cabe83d65">adjustTxLevel</a> (float level)  throw (Error)</td></tr>
<tr class="separator:af6e4a58251e2fc3e9a5ec05cabe83d65 inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefc996b2a9856ddb959d82a6ad2bca0 inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#afefc996b2a9856ddb959d82a6ad2bca0">getRxLevel</a> () const  throw (Error)</td></tr>
<tr class="separator:afefc996b2a9856ddb959d82a6ad2bca0 inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ad447d8342428fe0efd33d23c935afc inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a0ad447d8342428fe0efd33d23c935afc">getTxLevel</a> () const  throw (Error)</td></tr>
<tr class="separator:a0ad447d8342428fe0efd33d23c935afc inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb8c3e0627bee0da72464ce2d22e0cf4 inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#adb8c3e0627bee0da72464ce2d22e0cf4">AudioMedia</a> ()</td></tr>
<tr class="separator:adb8c3e0627bee0da72464ce2d22e0cf4 inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a312e47a9aef75e3ff4a5a18e46d3cd3b inherit pub_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a312e47a9aef75e3ff4a5a18e46d3cd3b">~AudioMedia</a> ()</td></tr>
<tr class="separator:a312e47a9aef75e3ff4a5a18e46d3cd3b inherit pub_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpj_1_1Media"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classpj_1_1Media')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classpj_1_1Media.htm">pj::Media</a></td></tr>
<tr class="memitem:adfd0fc9150679ad14cc1e8fde8635f6b inherit pub_methods_classpj_1_1Media"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Media.htm#adfd0fc9150679ad14cc1e8fde8635f6b">~Media</a> ()</td></tr>
<tr class="separator:adfd0fc9150679ad14cc1e8fde8635f6b inherit pub_methods_classpj_1_1Media"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cad0cc7f003cd48c818f6025d10d514 inherit pub_methods_classpj_1_1Media"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__TYPES.htm#ga90c297eda05c19355635cecb9e7d9323">pjmedia_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Media.htm#a0cad0cc7f003cd48c818f6025d10d514">getType</a> () const</td></tr>
<tr class="separator:a0cad0cc7f003cd48c818f6025d10d514 inherit pub_methods_classpj_1_1Media"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpj_1_1AudioMedia"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classpj_1_1AudioMedia')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classpj_1_1AudioMedia.htm">pj::AudioMedia</a></td></tr>
<tr class="memitem:ab1d32b450a9ec00326cb579ab6bbb2ab inherit pub_static_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="structpj_1_1ConfPortInfo.htm">ConfPortInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#ab1d32b450a9ec00326cb579ab6bbb2ab">getPortInfoFromId</a> (int port_id)  throw (Error)</td></tr>
<tr class="separator:ab1d32b450a9ec00326cb579ab6bbb2ab inherit pub_static_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affeeb7a43efcc3f2a84b1800a83bcee7 inherit pub_static_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#affeeb7a43efcc3f2a84b1800a83bcee7">typecastFromMedia</a> (<a class="el" href="classpj_1_1Media.htm">Media</a> *media)</td></tr>
<tr class="separator:affeeb7a43efcc3f2a84b1800a83bcee7 inherit pub_static_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpj_1_1AudioMedia"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classpj_1_1AudioMedia')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classpj_1_1AudioMedia.htm">pj::AudioMedia</a></td></tr>
<tr class="memitem:a549cf4047c9c28ce1b3eb10b80aa9f1c inherit pro_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a549cf4047c9c28ce1b3eb10b80aa9f1c">registerMediaPort</a> (<a class="el" href="group__PJSUA2__MED.htm#gaae8a1276b7bf130aa2e1969f9ec1e150">MediaPort</a> port)  throw (Error)</td></tr>
<tr class="separator:a549cf4047c9c28ce1b3eb10b80aa9f1c inherit pro_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea5af793a07d39bd17facaaa359c2a23 inherit pro_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#aea5af793a07d39bd17facaaa359c2a23">registerMediaPort2</a> (<a class="el" href="group__PJSUA2__MED.htm#gaae8a1276b7bf130aa2e1969f9ec1e150">MediaPort</a> port, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool)  throw (Error)</td></tr>
<tr class="separator:aea5af793a07d39bd17facaaa359c2a23 inherit pro_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3abeee69b2c0bb298479806fe8cd7950 inherit pro_methods_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a3abeee69b2c0bb298479806fe8cd7950">unregisterMediaPort</a> ()</td></tr>
<tr class="separator:a3abeee69b2c0bb298479806fe8cd7950 inherit pro_methods_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpj_1_1Media"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classpj_1_1Media')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classpj_1_1Media.htm">pj::Media</a></td></tr>
<tr class="memitem:a3d3155407213b989382a4ffc031f336d inherit pro_methods_classpj_1_1Media"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Media.htm#a3d3155407213b989382a4ffc031f336d">Media</a> (<a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__TYPES.htm#ga90c297eda05c19355635cecb9e7d9323">pjmedia_type</a> med_type)</td></tr>
<tr class="separator:a3d3155407213b989382a4ffc031f336d inherit pro_methods_classpj_1_1Media"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpj_1_1AudioMedia"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classpj_1_1AudioMedia')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classpj_1_1AudioMedia.htm">pj::AudioMedia</a></td></tr>
<tr class="memitem:a404619f68d02593a2dc6fc09100327fa inherit pro_attribs_classpj_1_1AudioMedia"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1AudioMedia.htm#a404619f68d02593a2dc6fc09100327fa">id</a></td></tr>
<tr class="separator:a404619f68d02593a2dc6fc09100327fa inherit pro_attribs_classpj_1_1AudioMedia"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >Tone generator. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a70f441420693ba29d05214e0a6eb82de" name="a70f441420693ba29d05214e0a6eb82de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70f441420693ba29d05214e0a6eb82de">&#9670;&nbsp;</a></span>ToneGenerator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj::ToneGenerator::ToneGenerator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Constructor. </p>

</div>
</div>
<a id="a62ea47e9bfa75f117bee0004b67d3100" name="a62ea47e9bfa75f117bee0004b67d3100"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62ea47e9bfa75f117bee0004b67d3100">&#9670;&nbsp;</a></span>~ToneGenerator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj::ToneGenerator::~ToneGenerator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destructor. This will unregister the tone generator port from the conference bridge. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4caf88180ef2f617633e07d1dbe5a344" name="a4caf88180ef2f617633e07d1dbe5a344"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4caf88180ef2f617633e07d1dbe5a344">&#9670;&nbsp;</a></span>createToneGenerator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::ToneGenerator::createToneGenerator </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em> = <code>16000</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create tone generator and register the port to the conference bridge. </p>

</div>
</div>
<a id="aa4b76d47aa89f0dedca154226ed47e37" name="aa4b76d47aa89f0dedca154226ed47e37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4b76d47aa89f0dedca154226ed47e37">&#9670;&nbsp;</a></span>isBusy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::ToneGenerator::isBusy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Check if the tone generator is still busy producing some tones. </p><dl class="section return"><dt>Returns</dt><dd>Non-zero if busy. </dd></dl>

</div>
</div>
<a id="adb6e8a1fefa4830d60d196a9264ea84a" name="adb6e8a1fefa4830d60d196a9264ea84a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb6e8a1fefa4830d60d196a9264ea84a">&#9670;&nbsp;</a></span>stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::ToneGenerator::stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Instruct the tone generator to stop current processing. </p>

</div>
</div>
<a id="a7bae34e252c6ca18811391922cbf2cab" name="a7bae34e252c6ca18811391922cbf2cab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bae34e252c6ca18811391922cbf2cab">&#9670;&nbsp;</a></span>rewind()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::ToneGenerator::rewind </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Rewind the playback. This will start the playback to the first tone in the playback list. </p>

</div>
</div>
<a id="a511d42ce533b753a713ab3252122de57" name="a511d42ce533b753a713ab3252122de57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a511d42ce533b753a713ab3252122de57">&#9670;&nbsp;</a></span>play()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::ToneGenerator::play </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJSUA2__MED.htm#ga6db01dec69f08e063409431a5658e221">ToneDescVector</a> &amp;&#160;</td>
          <td class="paramname"><em>tones</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>loop</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Instruct the tone generator to play single or dual frequency tones with the specified duration. The new tones will be appended to currently playing tones, unless <a class="el" href="classpj_1_1ToneGenerator.htm#adb6e8a1fefa4830d60d196a9264ea84a">stop()</a> is called before calling this function. The playback will begin as soon as the tone generator is connected to other media.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tones</td><td>Array of tones to be played. </td></tr>
    <tr><td class="paramname">loop</td><td>Play the tone in a loop. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a67c5e6cdfb75fd9046992bb095d6f27a" name="a67c5e6cdfb75fd9046992bb095d6f27a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67c5e6cdfb75fd9046992bb095d6f27a">&#9670;&nbsp;</a></span>playDigits()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::ToneGenerator::playDigits </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJSUA2__MED.htm#gadb9756ae27d4de54c8d0c7425b059c3e">ToneDigitVector</a> &amp;&#160;</td>
          <td class="paramname"><em>digits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>loop</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Instruct the tone generator to play multiple MF digits with each of the digits having individual ON/OFF duration. Each of the digit in the digit array must have the corresponding descriptor in the digit map. The new tones will be appended to currently playing tones, unless <a class="el" href="classpj_1_1ToneGenerator.htm#adb6e8a1fefa4830d60d196a9264ea84a">stop()</a> is called before calling this function. The playback will begin as soon as the tone generator is connected to a sink media.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">digits</td><td>Array of MF digits. </td></tr>
    <tr><td class="paramname">loop</td><td>Play the tone in a loop. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a523fe8f89254f171cfa1d1f51cf8a687" name="a523fe8f89254f171cfa1d1f51cf8a687"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a523fe8f89254f171cfa1d1f51cf8a687">&#9670;&nbsp;</a></span>getDigitMap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__MED.htm#ga8c9ac7a1215780e6504f7e6eeb1df415">ToneDigitMapVector</a> pj::ToneGenerator::getDigitMap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the digit-map currently used by this tone generator.</p>
<dl class="section return"><dt>Returns</dt><dd>The digitmap currently used by the tone generator </dd></dl>

</div>
</div>
<a id="ae7014661426015c8939d3a1d8b7d990b" name="ae7014661426015c8939d3a1d8b7d990b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7014661426015c8939d3a1d8b7d990b">&#9670;&nbsp;</a></span>setDigitMap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::ToneGenerator::setDigitMap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJSUA2__MED.htm#ga8c9ac7a1215780e6504f7e6eeb1df415">ToneDigitMapVector</a> &amp;&#160;</td>
          <td class="paramname"><em>digit_map</em></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set digit map to be used by the tone generator.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">digit_map</td><td>Digitmap to be used by the tone generator. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="media_8hpp.htm">media.hpp</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
