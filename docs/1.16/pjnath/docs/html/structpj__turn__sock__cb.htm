<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJNATH Reference: pj_turn_sock_cb Struct Reference (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="functions.htm"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<h1>pj_turn_sock_cb Struct Reference<br/>
<small>
[<a class="el" href="group__PJNATH__TURN__SOCK.htm">TURN client transport</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<!-- doxytag: class="pj_turn_sock_cb" --><table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__sock__cb.htm#a945c61c314943761edf9d4fcd4372f72">on_rx_data</a> )(<a class="el" href="group__PJNATH__TURN__SOCK.htm#ga1464ed784633ea88e143db46fe9e51c5">pj_turn_sock</a> *turn_sock, void *pkt, unsigned pkt_len, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__sock__cb.htm#acc29e4536856058ee32832e9aa673d25">on_state</a> )(<a class="el" href="group__PJNATH__TURN__SOCK.htm#ga1464ed784633ea88e143db46fe9e51c5">pj_turn_sock</a> *turn_sock, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> old_state, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> new_state)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This structure contains callbacks that will be called by the TURN transport. </p>
<hr/><h2>Field Documentation</h2>
<a class="anchor" id="a945c61c314943761edf9d4fcd4372f72"></a><!-- doxytag: member="pj_turn_sock_cb::on_rx_data" ref="a945c61c314943761edf9d4fcd4372f72" args=")(pj_turn_sock *turn_sock, void *pkt, unsigned pkt_len, const pj_sockaddr_t *peer_addr, unsigned addr_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* <a class="el" href="structpj__turn__sock__cb.htm#a945c61c314943761edf9d4fcd4372f72">pj_turn_sock_cb::on_rx_data</a>)(<a class="el" href="group__PJNATH__TURN__SOCK.htm#ga1464ed784633ea88e143db46fe9e51c5">pj_turn_sock</a> *turn_sock, void *pkt, unsigned pkt_len, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Notification when incoming data has been received from the remote peer via the TURN server. The data reported in this callback will be the exact data as sent by the peer (e.g. the TURN encapsulation such as Data Indication or ChannelData will be removed before this function is called).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>turn_sock</em>&nbsp;</td><td>The TURN client transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>The data as received from the peer. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data_len</em>&nbsp;</td><td>Length of the data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>peer_addr</em>&nbsp;</td><td>The peer address. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>addr_len</em>&nbsp;</td><td>The length of the peer address. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acc29e4536856058ee32832e9aa673d25"></a><!-- doxytag: member="pj_turn_sock_cb::on_state" ref="acc29e4536856058ee32832e9aa673d25" args=")(pj_turn_sock *turn_sock, pj_turn_state_t old_state, pj_turn_state_t new_state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* <a class="el" href="structpj__turn__sock__cb.htm#acc29e4536856058ee32832e9aa673d25">pj_turn_sock_cb::on_state</a>)(<a class="el" href="group__PJNATH__TURN__SOCK.htm#ga1464ed784633ea88e143db46fe9e51c5">pj_turn_sock</a> *turn_sock, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> old_state, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> new_state)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Notification when TURN session state has changed. Application should implement this callback to monitor the progress of the TURN session.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>turn_sock</em>&nbsp;</td><td>The TURN client transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>old_state</em>&nbsp;</td><td>Previous state. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>new_state</em>&nbsp;</td><td>Current state. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="turn__sock_8h_source.htm">turn_sock.h</a></li>
</ul>
</div>
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
