<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Codec Framework (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#groups">Modules</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>Codec Framework</h1>  </div>
</div>
<div class="contents">

<p>Media codec framework and management.  
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__fmtp.htm">pjmedia_codec_fmtp</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm">pjmedia_codec_op</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__factory__op.htm">pjmedia_codec_factory_op</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__factory.htm">pjmedia_codec_factory</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__desc.htm">pjmedia_codec_desc</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a></td></tr>
<tr><td colspan="2"><h2><a name="groups"></a>
Modules</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC__CODECS.htm">Supported codecs</a></td></tr>

<p><tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p>Documentation about individual codec supported by PJMEDIA</p>
<p>Please see the APIs provided by the individual codecs below. </p>
<br/></td></tr>
</p>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pjmedia__codec__config.htm">PJMEDIA-CODEC Compile Time Settings</a></td></tr>

<p><tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p>Various compile time settings such as to enable/disable codecs. </p>
<br/></td></tr>
</p>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pjmedia__codec__types.htm">PJMEDIA-CODEC Types and Constants</a></td></tr>

<p><tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p>Constants used by PJMEDIA-CODEC. </p>
<br/></td></tr>
</p>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gad0d640e92db60cc0f90ed1b0c428a016"></a><!-- doxytag: member="PJMEDIA_CODEC::PJMEDIA_CODEC_MAX_FMTP_CNT" ref="gad0d640e92db60cc0f90ed1b0c428a016" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>PJMEDIA_CODEC_MAX_FMTP_CNT</b>&nbsp;&nbsp;&nbsp;8</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga2d116f61f0a9eb22c850af1334d0ac98">PJMEDIA_CODEC_MGR_MAX_CODECS</a>&nbsp;&nbsp;&nbsp;32</td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#gaae2e97e3289c4f37353d9f4f8462b9fe">pjmedia_codec_id</a> [32]</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="group__PJMEDIA__CODEC.htm#ga8dcc22449f5a2eb652cdac6ea82cf1d3">pjmedia_codec_default_param</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga8dcc22449f5a2eb652cdac6ea82cf1d3">pjmedia_codec_default_param</a></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga4d6101ed5c273882efd0e5034f264d08">pjmedia_rtp_pt</a> { <br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a0c015da7cf8ab2719479d77d36c7ada6">PJMEDIA_RTP_PT_PCMU</a> =  0, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a2b244c3ca3eb35ce76b4cb87ac966d83">PJMEDIA_RTP_PT_G721</a> =  2, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08ab4d004291b5a8e12ce0f22324aeab9e5">PJMEDIA_RTP_PT_GSM</a> =  3, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a72f7f06748fe6db3b2f917d74c26027d">PJMEDIA_RTP_PT_G723</a> =  4, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08abb419a0ed1e7f98e14c570ddd6b8df1f">PJMEDIA_RTP_PT_DVI4_8K</a> =  5, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08add79678e59cbdefc0c89e7f0648a7603">PJMEDIA_RTP_PT_DVI4_16K</a> =  6, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a4ea1f6958d94156ef99af6c08f03587c">PJMEDIA_RTP_PT_LPC</a> =  7, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a0034c1c682ad53035866b32a155b66cd">PJMEDIA_RTP_PT_PCMA</a> =  8, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a77c3df0b2e2ee1908c78d77f3f80164c">PJMEDIA_RTP_PT_G722</a> =  9, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a7472d6562cf31b58ec0e804f29f62d37">PJMEDIA_RTP_PT_L16_2</a> =  10, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a96c01ca272a7423d7f2615eccf82157b">PJMEDIA_RTP_PT_L16_1</a> =  11, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08aeab759198fbf07d440449eb94d1de3cc">PJMEDIA_RTP_PT_QCELP</a> =  12, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a3b63d1ee4771de6cd415d76d42544b31">PJMEDIA_RTP_PT_CN</a> =  13, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08ad07fa7c058e5d3b73cfad61d6126f1f2">PJMEDIA_RTP_PT_MPA</a> =  14, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a5dfcf5d5f8fd3be2f8db4d4d72730508">PJMEDIA_RTP_PT_G728</a> =  15, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a08a90e66a31251451f0378df00ecfc07">PJMEDIA_RTP_PT_DVI4_11K</a> =  16, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a4c76eec14b20aa05cfb230ef22b5657e">PJMEDIA_RTP_PT_DVI4_22K</a> =  17, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a9a542989c5bee8dfe8638961e9d05b2f">PJMEDIA_RTP_PT_G729</a> =  18, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08afe9e559a2341e971b4b194a5190f18e4">PJMEDIA_RTP_PT_CELB</a> =  25, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08ad24c8bb850be1ccc964dd0a6696fab7f">PJMEDIA_RTP_PT_JPEG</a> =  26, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08aec0a9eee0f238a17b777cc4ee5860e86">PJMEDIA_RTP_PT_NV</a> =  28, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08a97927168d455f162a9cad100af9aff95">PJMEDIA_RTP_PT_H261</a> =  31, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08aa9852e5110447b795c2a5b497fbce733">PJMEDIA_RTP_PT_MPV</a> =  32, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08abbccef784202b120b48d02f7ea657619">PJMEDIA_RTP_PT_MP2T</a> =  33, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08acaf380a327be91414943ba0e56941f87">PJMEDIA_RTP_PT_H263</a> =  34, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga4d6101ed5c273882efd0e5034f264d08af4d8328b09d7ebed598bc22b9b19e5da">PJMEDIA_RTP_PT_DYNAMIC</a> =  96
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga10192bdff2b6ed6203a52b183daab6d0">pjmedia_codec_priority</a> { <br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga10192bdff2b6ed6203a52b183daab6d0ae82557a1d46bdcc1720046841a9e8b0f">PJMEDIA_CODEC_PRIO_HIGHEST</a> =  255, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga10192bdff2b6ed6203a52b183daab6d0a9a022d3879ce3e38625b5bd3184efea5">PJMEDIA_CODEC_PRIO_NEXT_HIGHER</a> =  254, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga10192bdff2b6ed6203a52b183daab6d0a92f16dd6a099a5a40566466173c3f51c">PJMEDIA_CODEC_PRIO_NORMAL</a> =  128, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga10192bdff2b6ed6203a52b183daab6d0a6cffe0aefc28e52ffa0f588765d1645f">PJMEDIA_CODEC_PRIO_LOWEST</a> =  1, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJMEDIA__CODEC.htm#gga10192bdff2b6ed6203a52b183daab6d0a2ee1eb6c7c34b11e61f8af927f7cb395">PJMEDIA_CODEC_PRIO_DISABLED</a> =  0
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga94f7bdfa8247ae98253c6f5c31401372">pjmedia_codec_param_clone</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *src)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga1cd61a3e30e9879798e6c74bf59c809f">pjmedia_codec_mgr_init</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *pf)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga00af3cb8cf9bc969eed5faf7ec0f9f50">pjmedia_codec_mgr_destroy</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga969ef5545a835aae8476c66ce36a8496">pjmedia_codec_mgr_register_factory</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, <a class="el" href="structpjmedia__codec__factory.htm">pjmedia_codec_factory</a> *factory)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#gaf8f520350df00bb0cfd38ab48806f0b8">pjmedia_codec_mgr_unregister_factory</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, <a class="el" href="structpjmedia__codec__factory.htm">pjmedia_codec_factory</a> *factory)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga8b6f532ade26d2f26a513d9988a7bd10">pjmedia_codec_mgr_enum_codecs</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, unsigned *count, <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>[], unsigned *prio)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#gabd88496a08d43f5d41e26f0abe93b579">pjmedia_codec_mgr_get_codec_info</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, unsigned pt, const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> **inf)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga31e19ebf5558fb0ff8f2c5d1a21d30a4">pjmedia_codec_info_to_id</a> (const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>, char *id, unsigned max_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga81c62a95860137e0e7ece5bb80581e8d">pjmedia_codec_mgr_find_codecs_by_id</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *codec_id, unsigned *count, const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *p_info[], unsigned prio[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#gacfc4266d50474b348c8c7a0bf9d54abb">pjmedia_codec_mgr_set_codec_priority</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *codec_id, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> prio)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga7766eaa06db1ec402540cefe1b329af1">pjmedia_codec_mgr_get_default_param</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>, <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#gacbd83a91545d9f969370cd5e7918c75d">pjmedia_codec_mgr_set_default_param</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>, const <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga7587af95d801c5d32ac91bbf1e32789d">pjmedia_codec_mgr_alloc_codec</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>, <a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> **p_codec)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__CODEC.htm#ga90f173b694ea7f073859424dead76fe2">pjmedia_codec_mgr_dealloc_codec</a> (<a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *mgr, <a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<h2><a class="anchor" id="codec_mgmt_sec"></a>
Codec Management</h2>
<h3><a class="anchor" id="codec_fact_sec"></a>
Codec Manager</h3>
<p>The codec manager is used to manage all codec capabilities in the endpoint. When used with media endpoint (pjmedia_endpt), application can retrieve the codec manager instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>.</p>
<h3><a class="anchor" id="reg_new_codec"></a>
Registering New Codec</h3>
<p>New codec types can be registered to PJMEDIA (or to be precise, to the codec manager) during run-time. To do this, application needs to initialize an instance of codec factory (<a class="el" href="structpjmedia__codec__factory.htm">pjmedia_codec_factory</a>) and registers this codec factory by calling <a class="el" href="group__PJMEDIA__CODEC.htm#ga969ef5545a835aae8476c66ce36a8496">pjmedia_codec_mgr_register_factory()</a>.</p>
<p>For codecs implemented/supported by PJMEDIA, this process is normally concealed in an easy to use function such as <a class="el" href="group__PJMED__G711.htm#gaa4cc7591d63c308e1f2e7821240abf14">pjmedia_codec_g711_init()</a>.</p>
<h3><a class="anchor" id="codec_factory"></a>
Codec Factory</h3>
<p>A codec factory (<a class="el" href="structpjmedia__codec__factory.htm">pjmedia_codec_factory</a>) is registered to codec manager, and it is used to create and release codec instance.</p>
<p>The most important member of the codec factory is the "virtual" function table <a class="el" href="structpjmedia__codec__factory__op.htm">pjmedia_codec_factory_op</a>, where it contains, among other thing, pointer to functions to allocate and deallocate codec instance.</p>
<h3><a class="anchor" id="codec_inst"></a>
Codec Instance</h3>
<p>Application allocates codec instance by calling <a class="el" href="group__PJMEDIA__CODEC.htm#ga7587af95d801c5d32ac91bbf1e32789d">pjmedia_codec_mgr_alloc_codec()</a>. One codec instance (<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a>) can be used for simultaneous encoding and decoding.</p>
<p>The most important member of the codec instance is the "virtual" function table <a class="el" href="structpjmedia__codec__op.htm">pjmedia_codec_op</a>, where it holds pointer to functions to encode/decode media frames.</p>
<h3><a class="anchor" id="codec_ident"></a>
Codec Identification</h3>
<p>A particular codec type in PJMEDIA can be uniquely identified by two keys: by <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a>, or by <a class="el" href="group__PJMEDIA__CODEC.htm#gaae2e97e3289c4f37353d9f4f8462b9fe">pjmedia_codec_id</a> string. A fully qualified codec ID string consists of codec name, sampling rate, and number of channels. However, application may use only first parts of the tokens as long as it will make to codec ID unique. For example, "gsm" is a fully qualified codec name, since it will always have 8000 clock rate and 1 channel. Other examples of fully qualified codec ID strings are "pcma", "speex/8000", "speex/16000", and "L16/16000/1". A codec id "speex" (without clock rate) is not fully qualified, since it will match the narrowband, wideband, and ultrawideband Speex codec.</p>
<p>The two keys can be converted to one another, with <a class="el" href="group__PJMEDIA__CODEC.htm#ga31e19ebf5558fb0ff8f2c5d1a21d30a4">pjmedia_codec_info_to_id()</a> and <a class="el" href="group__PJMEDIA__CODEC.htm#ga81c62a95860137e0e7ece5bb80581e8d">pjmedia_codec_mgr_find_codecs_by_id()</a> functions.</p>
<p>Codec ID string is not case sensitive.</p>
<h2><a class="anchor" id="using_codec"></a>
Using the Codec Framework</h2>
<h3><a class="anchor" id="init_alloc_codec"></a>
Allocating Codec</h3>
<p>Application needs to allocate one codec instance for encoding and decoding media frames. One codec instance can be used to perform both encoding and decoding.</p>
<p>Application allocates codec by calling <a class="el" href="group__PJMEDIA__CODEC.htm#ga7587af95d801c5d32ac91bbf1e32789d">pjmedia_codec_mgr_alloc_codec()</a>. This function takes <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> argument, which is used to locate the particular codec factory to be used to allocate the codec.</p>
<p>Application can build <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> structure manually for the specific codec, or alternatively it may get the <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> from the codec ID string, by using <a class="el" href="group__PJMEDIA__CODEC.htm#ga81c62a95860137e0e7ece5bb80581e8d">pjmedia_codec_mgr_find_codecs_by_id()</a> function.</p>
<p>The following snippet shows an example to allocate a codec:</p>
<div class="fragment"><pre class="fragment">    <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> codec_id;
    <a class="code" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *codec_info;
    <span class="keywordtype">unsigned</span> count = 1;
    <a class="code" href="structpjmedia__codec.htm">pjmedia_codec</a> *codec;

    codec_id = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga20fa0c4d9ccddd0822a775730cf4a867">pj_str</a>(<span class="stringliteral">&quot;pcma&quot;</span>);

    <span class="comment">// Find codec info for the specified coded ID (i.e. &quot;pcma&quot;).</span>
    status = <a class="code" href="group__PJMEDIA__CODEC.htm#ga81c62a95860137e0e7ece5bb80581e8d">pjmedia_codec_mgr_find_codecs_by_id</a>( codec_mgr, &amp;codec_id,
                                                  &amp;count, &amp;codec_info, NULL);

    <span class="comment">// Allocate the codec.</span>
    status = <a class="code" href="group__PJMEDIA__CODEC.htm#ga7587af95d801c5d32ac91bbf1e32789d">pjmedia_codec_mgr_alloc_codec</a>( codec_mgr, codec_info, &amp;codec );
</pre></div><h3><a class="anchor" id="opening_codec"></a>
Initializing Codec</h3>
<p>Once codec is allocated, application needs to initialize the codec by calling <b><code>open</code></b> member of the codec. This function takes <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> as the argument, which contains the settings for the codec.</p>
<p>Application shoud use <a class="el" href="group__PJMEDIA__CODEC.htm#ga7766eaa06db1ec402540cefe1b329af1">pjmedia_codec_mgr_get_default_param()</a> function to initiaize <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a>. The <code>setting</code> part of <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> then can be tuned to suit the application's requirements.</p>
<p>The following snippet shows an example to initialize codec:</p>
<div class="fragment"><pre class="fragment">    <a class="code" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> param;

    <span class="comment">// Retrieve default codec param for the specified codec.</span>
    <a class="code" href="group__PJMEDIA__CODEC.htm#ga7766eaa06db1ec402540cefe1b329af1">pjmedia_codec_mgr_get_default_param</a>(codec_mgr, codec_info
                                        &amp;param);

    <span class="comment">// Application may change the &quot;settings&quot; part of codec param,</span>
    <span class="comment">// for example, to disable VAD</span>
    param.<a class="code" href="structpjmedia__codec__param.htm#af53cf234b62d3dc2b0d08320fbf45e08">setting</a>.<a class="code" href="structpjmedia__codec__param.htm#ab5abfc5c4115233551e0aa69ffb67ff1">vad</a> = 0;

    <span class="comment">// Open the codec using the specified settings.</span>
    codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#a7deff7cdb43d9f565e0aee1adbcfdeb7">open</a>( codec, &amp;param );
</pre></div><h3><a class="anchor" id="enc_dec_codec"></a>
Encoding and Decoding Media Frames</h3>
<p>Application encodes and decodes media frames by calling <code>encode</code> and <code>decode</code> member of the codec's "virtual" function table (<a class="el" href="structpjmedia__codec__op.htm">pjmedia_codec_op</a>).</p>
<h3><a class="anchor" id="plc_codec"></a>
Concealing Lost Frames</h3>
<p>All codecs has Packet Lost Concealment (PLC) feature, and application can activate the PLC to conceal lost frames by calling <code>recover</code> member of the codec's "virtual" function table (<a class="el" href="structpjmedia__codec__op.htm">pjmedia_codec_op</a>).</p>
<p>If the codec's algorithm supports PLC, the <code>recover</code> function will use the codec's PLC. Otherwise for codecs that don't have intrinsic PLC, PJMEDIA will suply the PLC implementation from the <a class="el" href="group__PJMED__PLC.htm">Packet Lost Concealment (PLC)</a> implementation.</p>
<h3><a class="anchor" id="close_codec"></a>
Closing and Releasing the Codec</h3>
<p>The codec must be closed by calling <code>close</code> member of the codec's operation. Then it must be released by calling <a class="el" href="group__PJMEDIA__CODEC.htm#ga90f173b694ea7f073859424dead76fe2">pjmedia_codec_mgr_dealloc_codec()</a>. </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga2d116f61f0a9eb22c850af1334d0ac98"></a><!-- doxytag: member="codec.h::PJMEDIA_CODEC_MGR_MAX_CODECS" ref="ga2d116f61f0a9eb22c850af1334d0ac98" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_CODEC_MGR_MAX_CODECS&nbsp;&nbsp;&nbsp;32</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Declare maximum codecs </p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gaae2e97e3289c4f37353d9f4f8462b9fe"></a><!-- doxytag: member="codec.h::pjmedia_codec_id" ref="gaae2e97e3289c4f37353d9f4f8462b9fe" args="[32]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef char <a class="el" href="group__PJMEDIA__CODEC.htm#gaae2e97e3289c4f37353d9f4f8462b9fe">pjmedia_codec_id</a>[32]</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Codec identification (e.g. "pcmu/8000/1"). See <a class="el" href="group__PJMEDIA__CODEC.htm#codec_ident">Codec Identification</a> for more info. </p>

</div>
</div>
<a class="anchor" id="ga8dcc22449f5a2eb652cdac6ea82cf1d3"></a><!-- doxytag: member="codec.h::pjmedia_codec_default_param" ref="ga8dcc22449f5a2eb652cdac6ea82cf1d3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJMEDIA__CODEC.htm#ga8dcc22449f5a2eb652cdac6ea82cf1d3">pjmedia_codec_default_param</a> <a class="el" href="group__PJMEDIA__CODEC.htm#ga8dcc22449f5a2eb652cdac6ea82cf1d3">pjmedia_codec_default_param</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Opaque declaration of default codecs parameters. </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga4d6101ed5c273882efd0e5034f264d08"></a><!-- doxytag: member="codec.h::pjmedia_rtp_pt" ref="ga4d6101ed5c273882efd0e5034f264d08" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMEDIA__CODEC.htm#ga4d6101ed5c273882efd0e5034f264d08">pjmedia_rtp_pt</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Standard RTP static payload types, as defined by RFC 3551. The header file &lt;pjmedia-codec/types.h&gt; also declares dynamic payload type numbers that are used by PJMEDIA when advertising the capability for example in SDP message. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a0c015da7cf8ab2719479d77d36c7ada6"></a><!-- doxytag: member="PJMEDIA_RTP_PT_PCMU" ref="gga4d6101ed5c273882efd0e5034f264d08a0c015da7cf8ab2719479d77d36c7ada6" args="" -->PJMEDIA_RTP_PT_PCMU</em>&nbsp;</td><td>
<p>audio PCMU </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a2b244c3ca3eb35ce76b4cb87ac966d83"></a><!-- doxytag: member="PJMEDIA_RTP_PT_G721" ref="gga4d6101ed5c273882efd0e5034f264d08a2b244c3ca3eb35ce76b4cb87ac966d83" args="" -->PJMEDIA_RTP_PT_G721</em>&nbsp;</td><td>
<p>audio G721 (old def for G726-32) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08ab4d004291b5a8e12ce0f22324aeab9e5"></a><!-- doxytag: member="PJMEDIA_RTP_PT_GSM" ref="gga4d6101ed5c273882efd0e5034f264d08ab4d004291b5a8e12ce0f22324aeab9e5" args="" -->PJMEDIA_RTP_PT_GSM</em>&nbsp;</td><td>
<p>audio GSM </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a72f7f06748fe6db3b2f917d74c26027d"></a><!-- doxytag: member="PJMEDIA_RTP_PT_G723" ref="gga4d6101ed5c273882efd0e5034f264d08a72f7f06748fe6db3b2f917d74c26027d" args="" -->PJMEDIA_RTP_PT_G723</em>&nbsp;</td><td>
<p>audio G723 </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08abb419a0ed1e7f98e14c570ddd6b8df1f"></a><!-- doxytag: member="PJMEDIA_RTP_PT_DVI4_8K" ref="gga4d6101ed5c273882efd0e5034f264d08abb419a0ed1e7f98e14c570ddd6b8df1f" args="" -->PJMEDIA_RTP_PT_DVI4_8K</em>&nbsp;</td><td>
<p>audio DVI4 8KHz </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08add79678e59cbdefc0c89e7f0648a7603"></a><!-- doxytag: member="PJMEDIA_RTP_PT_DVI4_16K" ref="gga4d6101ed5c273882efd0e5034f264d08add79678e59cbdefc0c89e7f0648a7603" args="" -->PJMEDIA_RTP_PT_DVI4_16K</em>&nbsp;</td><td>
<p>audio DVI4 16Khz </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a4ea1f6958d94156ef99af6c08f03587c"></a><!-- doxytag: member="PJMEDIA_RTP_PT_LPC" ref="gga4d6101ed5c273882efd0e5034f264d08a4ea1f6958d94156ef99af6c08f03587c" args="" -->PJMEDIA_RTP_PT_LPC</em>&nbsp;</td><td>
<p>audio LPC </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a0034c1c682ad53035866b32a155b66cd"></a><!-- doxytag: member="PJMEDIA_RTP_PT_PCMA" ref="gga4d6101ed5c273882efd0e5034f264d08a0034c1c682ad53035866b32a155b66cd" args="" -->PJMEDIA_RTP_PT_PCMA</em>&nbsp;</td><td>
<p>audio PCMA </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a77c3df0b2e2ee1908c78d77f3f80164c"></a><!-- doxytag: member="PJMEDIA_RTP_PT_G722" ref="gga4d6101ed5c273882efd0e5034f264d08a77c3df0b2e2ee1908c78d77f3f80164c" args="" -->PJMEDIA_RTP_PT_G722</em>&nbsp;</td><td>
<p>audio G722 </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a7472d6562cf31b58ec0e804f29f62d37"></a><!-- doxytag: member="PJMEDIA_RTP_PT_L16_2" ref="gga4d6101ed5c273882efd0e5034f264d08a7472d6562cf31b58ec0e804f29f62d37" args="" -->PJMEDIA_RTP_PT_L16_2</em>&nbsp;</td><td>
<p>audio 16bit linear 44.1KHz stereo </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a96c01ca272a7423d7f2615eccf82157b"></a><!-- doxytag: member="PJMEDIA_RTP_PT_L16_1" ref="gga4d6101ed5c273882efd0e5034f264d08a96c01ca272a7423d7f2615eccf82157b" args="" -->PJMEDIA_RTP_PT_L16_1</em>&nbsp;</td><td>
<p>audio 16bit linear 44.1KHz mono </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08aeab759198fbf07d440449eb94d1de3cc"></a><!-- doxytag: member="PJMEDIA_RTP_PT_QCELP" ref="gga4d6101ed5c273882efd0e5034f264d08aeab759198fbf07d440449eb94d1de3cc" args="" -->PJMEDIA_RTP_PT_QCELP</em>&nbsp;</td><td>
<p>audio QCELP </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a3b63d1ee4771de6cd415d76d42544b31"></a><!-- doxytag: member="PJMEDIA_RTP_PT_CN" ref="gga4d6101ed5c273882efd0e5034f264d08a3b63d1ee4771de6cd415d76d42544b31" args="" -->PJMEDIA_RTP_PT_CN</em>&nbsp;</td><td>
<p>audio Comfort Noise </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08ad07fa7c058e5d3b73cfad61d6126f1f2"></a><!-- doxytag: member="PJMEDIA_RTP_PT_MPA" ref="gga4d6101ed5c273882efd0e5034f264d08ad07fa7c058e5d3b73cfad61d6126f1f2" args="" -->PJMEDIA_RTP_PT_MPA</em>&nbsp;</td><td>
<p>audio MPEG1/MPEG2 elemetr. streams </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a5dfcf5d5f8fd3be2f8db4d4d72730508"></a><!-- doxytag: member="PJMEDIA_RTP_PT_G728" ref="gga4d6101ed5c273882efd0e5034f264d08a5dfcf5d5f8fd3be2f8db4d4d72730508" args="" -->PJMEDIA_RTP_PT_G728</em>&nbsp;</td><td>
<p>audio G728 </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a08a90e66a31251451f0378df00ecfc07"></a><!-- doxytag: member="PJMEDIA_RTP_PT_DVI4_11K" ref="gga4d6101ed5c273882efd0e5034f264d08a08a90e66a31251451f0378df00ecfc07" args="" -->PJMEDIA_RTP_PT_DVI4_11K</em>&nbsp;</td><td>
<p>audio DVI4 11.025KHz mono </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a4c76eec14b20aa05cfb230ef22b5657e"></a><!-- doxytag: member="PJMEDIA_RTP_PT_DVI4_22K" ref="gga4d6101ed5c273882efd0e5034f264d08a4c76eec14b20aa05cfb230ef22b5657e" args="" -->PJMEDIA_RTP_PT_DVI4_22K</em>&nbsp;</td><td>
<p>audio DVI4 22.050KHz mono </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a9a542989c5bee8dfe8638961e9d05b2f"></a><!-- doxytag: member="PJMEDIA_RTP_PT_G729" ref="gga4d6101ed5c273882efd0e5034f264d08a9a542989c5bee8dfe8638961e9d05b2f" args="" -->PJMEDIA_RTP_PT_G729</em>&nbsp;</td><td>
<p>audio G729 </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08afe9e559a2341e971b4b194a5190f18e4"></a><!-- doxytag: member="PJMEDIA_RTP_PT_CELB" ref="gga4d6101ed5c273882efd0e5034f264d08afe9e559a2341e971b4b194a5190f18e4" args="" -->PJMEDIA_RTP_PT_CELB</em>&nbsp;</td><td>
<p>video/comb Cell-B by Sun (RFC2029) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08ad24c8bb850be1ccc964dd0a6696fab7f"></a><!-- doxytag: member="PJMEDIA_RTP_PT_JPEG" ref="gga4d6101ed5c273882efd0e5034f264d08ad24c8bb850be1ccc964dd0a6696fab7f" args="" -->PJMEDIA_RTP_PT_JPEG</em>&nbsp;</td><td>
<p>video JPEG </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08aec0a9eee0f238a17b777cc4ee5860e86"></a><!-- doxytag: member="PJMEDIA_RTP_PT_NV" ref="gga4d6101ed5c273882efd0e5034f264d08aec0a9eee0f238a17b777cc4ee5860e86" args="" -->PJMEDIA_RTP_PT_NV</em>&nbsp;</td><td>
<p>video NV by nv program by Xerox </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08a97927168d455f162a9cad100af9aff95"></a><!-- doxytag: member="PJMEDIA_RTP_PT_H261" ref="gga4d6101ed5c273882efd0e5034f264d08a97927168d455f162a9cad100af9aff95" args="" -->PJMEDIA_RTP_PT_H261</em>&nbsp;</td><td>
<p>video H261 </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08aa9852e5110447b795c2a5b497fbce733"></a><!-- doxytag: member="PJMEDIA_RTP_PT_MPV" ref="gga4d6101ed5c273882efd0e5034f264d08aa9852e5110447b795c2a5b497fbce733" args="" -->PJMEDIA_RTP_PT_MPV</em>&nbsp;</td><td>
<p>video MPEG1 or MPEG2 elementary </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08abbccef784202b120b48d02f7ea657619"></a><!-- doxytag: member="PJMEDIA_RTP_PT_MP2T" ref="gga4d6101ed5c273882efd0e5034f264d08abbccef784202b120b48d02f7ea657619" args="" -->PJMEDIA_RTP_PT_MP2T</em>&nbsp;</td><td>
<p>video MPEG2 transport </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08acaf380a327be91414943ba0e56941f87"></a><!-- doxytag: member="PJMEDIA_RTP_PT_H263" ref="gga4d6101ed5c273882efd0e5034f264d08acaf380a327be91414943ba0e56941f87" args="" -->PJMEDIA_RTP_PT_H263</em>&nbsp;</td><td>
<p>video H263 </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d6101ed5c273882efd0e5034f264d08af4d8328b09d7ebed598bc22b9b19e5da"></a><!-- doxytag: member="PJMEDIA_RTP_PT_DYNAMIC" ref="gga4d6101ed5c273882efd0e5034f264d08af4d8328b09d7ebed598bc22b9b19e5da" args="" -->PJMEDIA_RTP_PT_DYNAMIC</em>&nbsp;</td><td>
<p>start of dynamic RTP payload </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga10192bdff2b6ed6203a52b183daab6d0"></a><!-- doxytag: member="codec.h::pjmedia_codec_priority" ref="ga10192bdff2b6ed6203a52b183daab6d0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMEDIA__CODEC.htm#ga10192bdff2b6ed6203a52b183daab6d0">pjmedia_codec_priority</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Specify these values to set the codec priority, by calling <a class="el" href="group__PJMEDIA__CODEC.htm#gacfc4266d50474b348c8c7a0bf9d54abb">pjmedia_codec_mgr_set_codec_priority()</a>. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga10192bdff2b6ed6203a52b183daab6d0ae82557a1d46bdcc1720046841a9e8b0f"></a><!-- doxytag: member="PJMEDIA_CODEC_PRIO_HIGHEST" ref="gga10192bdff2b6ed6203a52b183daab6d0ae82557a1d46bdcc1720046841a9e8b0f" args="" -->PJMEDIA_CODEC_PRIO_HIGHEST</em>&nbsp;</td><td>
<p>This priority makes the codec the highest in the order. The last codec specified with this priority will get the highest place in the order, and will change the priority of previously highest priority codec to NEXT_HIGHER. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga10192bdff2b6ed6203a52b183daab6d0a9a022d3879ce3e38625b5bd3184efea5"></a><!-- doxytag: member="PJMEDIA_CODEC_PRIO_NEXT_HIGHER" ref="gga10192bdff2b6ed6203a52b183daab6d0a9a022d3879ce3e38625b5bd3184efea5" args="" -->PJMEDIA_CODEC_PRIO_NEXT_HIGHER</em>&nbsp;</td><td>
<p>This priority will put the codec as the next codec after codecs with this same priority. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga10192bdff2b6ed6203a52b183daab6d0a92f16dd6a099a5a40566466173c3f51c"></a><!-- doxytag: member="PJMEDIA_CODEC_PRIO_NORMAL" ref="gga10192bdff2b6ed6203a52b183daab6d0a92f16dd6a099a5a40566466173c3f51c" args="" -->PJMEDIA_CODEC_PRIO_NORMAL</em>&nbsp;</td><td>
<p>This is the initial codec priority when it is registered to codec manager by codec factory. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga10192bdff2b6ed6203a52b183daab6d0a6cffe0aefc28e52ffa0f588765d1645f"></a><!-- doxytag: member="PJMEDIA_CODEC_PRIO_LOWEST" ref="gga10192bdff2b6ed6203a52b183daab6d0a6cffe0aefc28e52ffa0f588765d1645f" args="" -->PJMEDIA_CODEC_PRIO_LOWEST</em>&nbsp;</td><td>
<p>This priority makes the codec the lowest in the order. The last codec specified with this priority will be put in the last place in the order. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga10192bdff2b6ed6203a52b183daab6d0a2ee1eb6c7c34b11e61f8af927f7cb395"></a><!-- doxytag: member="PJMEDIA_CODEC_PRIO_DISABLED" ref="gga10192bdff2b6ed6203a52b183daab6d0a2ee1eb6c7c34b11e61f8af927f7cb395" args="" -->PJMEDIA_CODEC_PRIO_DISABLED</em>&nbsp;</td><td>
<p>This priority will prevent the codec from being listed in the SDP created by media endpoint, thus should prevent the codec from being used in the sessions. However, the codec will still be listed by <a class="el" href="group__PJMEDIA__CODEC.htm#ga8b6f532ade26d2f26a513d9988a7bd10">pjmedia_codec_mgr_enum_codecs()</a> and other codec query functions. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga94f7bdfa8247ae98253c6f5c31401372"></a><!-- doxytag: member="codec.h::pjmedia_codec_param_clone" ref="ga94f7bdfa8247ae98253c6f5c31401372" args="(pj_pool_t *pool, const pjmedia_codec_param *src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a>* pjmedia_codec_param_clone </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *&nbsp;</td>
          <td class="paramname"> <em>src</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Duplicate codec parameter.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>The codec parameter to be duplicated.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Duplicated codec parameter. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1cd61a3e30e9879798e6c74bf59c809f"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_init" ref="ga1cd61a3e30e9879798e6c74bf59c809f" args="(pjmedia_codec_mgr *mgr, pj_pool_factory *pf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *&nbsp;</td>
          <td class="paramname"> <em>pf</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize codec manager. Normally this function is called by pjmedia endpoint's initialization code.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>Codec manager instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pf</em>&nbsp;</td><td>Pool factory instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga00af3cb8cf9bc969eed5faf7ec0f9f50"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_destroy" ref="ga00af3cb8cf9bc969eed5faf7ec0f9f50" args="(pjmedia_codec_mgr *mgr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destroy codec manager. Normally this function is called by pjmedia endpoint's deinitialization code.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>Codec manager instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga969ef5545a835aae8476c66ce36a8496"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_register_factory" ref="ga969ef5545a835aae8476c66ce36a8496" args="(pjmedia_codec_mgr *mgr, pjmedia_codec_factory *factory)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_register_factory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__factory.htm">pjmedia_codec_factory</a> *&nbsp;</td>
          <td class="paramname"> <em>factory</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Register codec factory to codec manager. This will also register all supported codecs in the factory to the codec manager.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>factory</em>&nbsp;</td><td>The codec factory to be registered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf8f520350df00bb0cfd38ab48806f0b8"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_unregister_factory" ref="gaf8f520350df00bb0cfd38ab48806f0b8" args="(pjmedia_codec_mgr *mgr, pjmedia_codec_factory *factory)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_unregister_factory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__factory.htm">pjmedia_codec_factory</a> *&nbsp;</td>
          <td class="paramname"> <em>factory</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Unregister codec factory from the codec manager. This will also remove all the codecs registered by the codec factory from the codec manager's list of supported codecs.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>factory</em>&nbsp;</td><td>The codec factory to be unregistered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8b6f532ade26d2f26a513d9988a7bd10"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_enum_codecs" ref="ga8b6f532ade26d2f26a513d9988a7bd10" args="(pjmedia_codec_mgr *mgr, unsigned *count, pjmedia_codec_info info[], unsigned *prio)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_enum_codecs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a>&nbsp;</td>
          <td class="paramname"> <em>info</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&nbsp;</td>
          <td class="paramname"> <em>prio</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Enumerate all supported codecs that have been registered to the codec manager by codec factories.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>On input, specifies the number of elements in the array. On output, the value will be set to the number of elements that have been initialized by this function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>info</em>&nbsp;</td><td>The codec info array, which contents will be initialized upon return. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>prio</em>&nbsp;</td><td>Optional pointer to receive array of codec priorities.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gabd88496a08d43f5d41e26f0abe93b579"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_get_codec_info" ref="gabd88496a08d43f5d41e26f0abe93b579" args="(pjmedia_codec_mgr *mgr, unsigned pt, const pjmedia_codec_info **inf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_get_codec_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>pt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> **&nbsp;</td>
          <td class="paramname"> <em>inf</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get codec info for the specified static payload type. Note that this can only find codec with static payload types. This function can be used to find codec info for a payload type inside SDP which doesn't have the corresponding rtpmap attribute.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pt</em>&nbsp;</td><td>Static payload type/number. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>inf</em>&nbsp;</td><td>Pointer to receive codec info.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga31e19ebf5558fb0ff8f2c5d1a21d30a4"></a><!-- doxytag: member="codec.h::pjmedia_codec_info_to_id" ref="ga31e19ebf5558fb0ff8f2c5d1a21d30a4" args="(const pjmedia_codec_info *info, char *id, unsigned max_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* pjmedia_codec_info_to_id </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *&nbsp;</td>
          <td class="paramname"> <em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>max_len</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convert codec info struct into a unique codec identifier. A codec identifier looks something like "L16/44100/2".</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>info</em>&nbsp;</td><td>The codec info </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Buffer to put the codec info string. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>max_len</em>&nbsp;</td><td>The length of the buffer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The null terminated codec info string, or NULL if the buffer is not long enough. </dd></dl>

</div>
</div>
<a class="anchor" id="ga81c62a95860137e0e7ece5bb80581e8d"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_find_codecs_by_id" ref="ga81c62a95860137e0e7ece5bb80581e8d" args="(pjmedia_codec_mgr *mgr, const pj_str_t *codec_id, unsigned *count, const pjmedia_codec_info *p_info[], unsigned prio[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_find_codecs_by_id </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *&nbsp;</td>
          <td class="paramname"> <em>p_info</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>prio</em>[]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find codecs by the unique codec identifier. This function will find all codecs that match the codec identifier prefix. For example, if "L16" is specified, then it will find "L16/8000/1", "L16/16000/1", and so on, up to the maximum count specified in the argument.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>codec_id</em>&nbsp;</td><td>The full codec ID or codec ID prefix. If an empty string is given, it will match all codecs. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>Maximum number of codecs to find. On return, it contains the actual number of codecs found. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_info</em>&nbsp;</td><td>Array of pointer to codec info to be filled. This argument may be NULL, which in this case, only codec count will be returned. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>prio</em>&nbsp;</td><td>Optional array of codec priorities.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if at least one codec info is found. </dd></dl>

</div>
</div>
<a class="anchor" id="gacfc4266d50474b348c8c7a0bf9d54abb"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_set_codec_priority" ref="gacfc4266d50474b348c8c7a0bf9d54abb" args="(pjmedia_codec_mgr *mgr, const pj_str_t *codec_id, pj_uint8_t prio)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_set_codec_priority </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>&nbsp;</td>
          <td class="paramname"> <em>prio</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set codec priority. The codec priority determines the order of the codec in the SDP created by the endpoint. If more than one codecs are found with the same codec_id prefix, then the function sets the priorities of all those codecs.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>codec_id</em>&nbsp;</td><td>The full codec ID or codec ID prefix. If an empty string is given, it will match all codecs. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>prio</em>&nbsp;</td><td>Priority to be set. The priority can have any value between 1 to 255. When the priority is set to zero, the codec will be disabled.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if at least one codec info is found. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7766eaa06db1ec402540cefe1b329af1"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_get_default_param" ref="ga7766eaa06db1ec402540cefe1b329af1" args="(pjmedia_codec_mgr *mgr, const pjmedia_codec_info *info, pjmedia_codec_param *param)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_get_default_param </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *&nbsp;</td>
          <td class="paramname"> <em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *&nbsp;</td>
          <td class="paramname"> <em>param</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get default codec param for the specified codec info.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>info</em>&nbsp;</td><td>The codec info, which default parameter's is being queried. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>param</em>&nbsp;</td><td>On return, will be filled with the default codec parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gacbd83a91545d9f969370cd5e7918c75d"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_set_default_param" ref="gacbd83a91545d9f969370cd5e7918c75d" args="(pjmedia_codec_mgr *mgr, const pjmedia_codec_info *info, const pjmedia_codec_param *param)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_set_default_param </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *&nbsp;</td>
          <td class="paramname"> <em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *&nbsp;</td>
          <td class="paramname"> <em>param</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set default codec param for the specified codec info.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>info</em>&nbsp;</td><td>The codec info, which default parameter's is being updated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>param</em>&nbsp;</td><td>The new default codec parameter. Set to NULL to reset codec parameter to library default settings.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7587af95d801c5d32ac91bbf1e32789d"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_alloc_codec" ref="ga7587af95d801c5d32ac91bbf1e32789d" args="(pjmedia_codec_mgr *mgr, const pjmedia_codec_info *info, pjmedia_codec **p_codec)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_alloc_codec </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *&nbsp;</td>
          <td class="paramname"> <em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> **&nbsp;</td>
          <td class="paramname"> <em>p_codec</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Request the codec manager to allocate one instance of codec with the specified codec info. The codec will enumerate all codec factories until it finds factory that is able to create the specified codec.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>info</em>&nbsp;</td><td>The information about the codec to be created. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_codec</em>&nbsp;</td><td>Pointer to receive the codec instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga90f173b694ea7f073859424dead76fe2"></a><!-- doxytag: member="codec.h::pjmedia_codec_mgr_dealloc_codec" ref="ga90f173b694ea7f073859424dead76fe2" args="(pjmedia_codec_mgr *mgr, pjmedia_codec *codec)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_codec_mgr_dealloc_codec </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&nbsp;</td>
          <td class="paramname"> <em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *&nbsp;</td>
          <td class="paramname"> <em>codec</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Deallocate the specified codec instance. The codec manager will return the instance of the codec back to its factory.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mgr</em>&nbsp;</td><td>The codec manager instance. Application can get the instance by calling <a class="el" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCESS on success. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
