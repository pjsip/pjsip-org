<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Parser (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">Parser<div class="ingroups"><a class="el" href="group__PJSIP__CORE.htm">Core SIP Library</a> &raquo; <a class="el" href="group__PJSIP__MSG.htm">Messaging Elements</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Message and message elements parsing.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__parser__err__report.htm">pjsip_parser_err_report</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__parse__ctx.htm">pjsip_parse_ctx</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga96551f090347ffa2780afc5793d1b46d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga96551f090347ffa2780afc5793d1b46d">PJSIP_MIN_CONTENT_LENGTH</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga96551f090347ffa2780afc5793d1b46d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa7769ba5a6b0cd37abee744fe0eae8b2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gaa7769ba5a6b0cd37abee744fe0eae8b2">PJSIP_MAX_CONTENT_LENGTH</a>&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a></td></tr>
<tr class="separator:gaa7769ba5a6b0cd37abee744fe0eae8b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga049d8d76f288a4be6b2ab197e6cfe66c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga049d8d76f288a4be6b2ab197e6cfe66c">PJSIP_MIN_PORT</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga049d8d76f288a4be6b2ab197e6cfe66c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ce39dfd33ab88ba6c2f2fc059f4d593"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga4ce39dfd33ab88ba6c2f2fc059f4d593">PJSIP_MAX_PORT</a>&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad255ec04735d335f308cffdbfb4ee48e">PJ_MAXUINT16</a></td></tr>
<tr class="separator:ga4ce39dfd33ab88ba6c2f2fc059f4d593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb4cd8e01d0bd92780ccb36089bc463a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gafb4cd8e01d0bd92780ccb36089bc463a">PJSIP_MIN_TTL</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gafb4cd8e01d0bd92780ccb36089bc463a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13ae638482d47cfcbb5f3b285b806c36"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga13ae638482d47cfcbb5f3b285b806c36">PJSIP_MAX_TTL</a>&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#a877b3b2d381c55959d8c0c160a0d0d00">PJ_MAXUINT8</a></td></tr>
<tr class="separator:ga13ae638482d47cfcbb5f3b285b806c36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ae87a46c26e33198e7980411013d1e9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga2ae87a46c26e33198e7980411013d1e9">PJSIP_MIN_STATUS_CODE</a>&#160;&#160;&#160;100</td></tr>
<tr class="separator:ga2ae87a46c26e33198e7980411013d1e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96499371229d718fb8b49a8eb94c8c2d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga96499371229d718fb8b49a8eb94c8c2d">PJSIP_MAX_STATUS_CODE</a>&#160;&#160;&#160;999</td></tr>
<tr class="separator:ga96499371229d718fb8b49a8eb94c8c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27439e9463099dd2f36437ee5ede1498"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga27439e9463099dd2f36437ee5ede1498">PJSIP_MIN_Q1000</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga27439e9463099dd2f36437ee5ede1498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d78da2013e12b9b8723edb541296af2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga1d78da2013e12b9b8723edb541296af2">PJSIP_MAX_Q1000</a>&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a> / 1000</td></tr>
<tr class="separator:ga1d78da2013e12b9b8723edb541296af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab6cfa58426b2f10418bd384d0147130e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gab6cfa58426b2f10418bd384d0147130e">PJSIP_MIN_EXPIRES</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gab6cfa58426b2f10418bd384d0147130e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d826eb880e70fed299fdb10e59f4663"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga1d826eb880e70fed299fdb10e59f4663">PJSIP_MAX_EXPIRES</a>&#160;&#160;&#160;((<a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>)0xFFFFFFFFUL)</td></tr>
<tr class="separator:ga1d826eb880e70fed299fdb10e59f4663"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed91e74aedcbecbba896d2563aef7cb3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gaed91e74aedcbecbba896d2563aef7cb3">PJSIP_MIN_CSEQ</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gaed91e74aedcbecbba896d2563aef7cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga50f895ed952c33663e780297b1d04ee6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga50f895ed952c33663e780297b1d04ee6">PJSIP_MAX_CSEQ</a>&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a></td></tr>
<tr class="separator:ga50f895ed952c33663e780297b1d04ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8beb85e24c740aec9b76c316f675c94"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gad8beb85e24c740aec9b76c316f675c94">PJSIP_MIN_RETRY_AFTER</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gad8beb85e24c740aec9b76c316f675c94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f74afcf41a9ddc7b17338ccaf316a2c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga2f74afcf41a9ddc7b17338ccaf316a2c">PJSIP_MAX_RETRY_AFTER</a>&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a></td></tr>
<tr class="separator:ga2f74afcf41a9ddc7b17338ccaf316a2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gacdfaf5f37c64905068db0875d0527018"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *()&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gacdfaf5f37c64905068db0875d0527018">pjsip_parse_hdr_func</a>(<a class="el" href="structpjsip__parse__ctx.htm">pjsip_parse_ctx</a> *context)</td></tr>
<tr class="separator:gacdfaf5f37c64905068db0875d0527018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45acc6cd93ac01fc237281618e80d67b"><td class="memItemLeft" align="right" valign="top">typedef void *()&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga45acc6cd93ac01fc237281618e80d67b">pjsip_parse_uri_func</a>(<a class="elRef" href="../../../pjlib-util/docs/html/structpj__scanner.htm">pj_scanner</a> *scanner, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> parse_params)</td></tr>
<tr class="separator:ga45acc6cd93ac01fc237281618e80d67b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gadb49720dc49f7d4e4cf9adbf2948e409"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="group__PJSIP__PARSER.htm#ggadb49720dc49f7d4e4cf9adbf2948e409ade71a575a3017d1f482d53722d727876">PJSIP_PARSE_URI_AS_NAMEADDR</a> = 1
, <a class="el" href="group__PJSIP__PARSER.htm#ggadb49720dc49f7d4e4cf9adbf2948e409a623ba2dd90c210c9ce51c63d3775f8a9">PJSIP_PARSE_URI_IN_FROM_TO_HDR</a> = 2
 }</td></tr>
<tr class="separator:gadb49720dc49f7d4e4cf9adbf2948e409"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga7d57912df8d262a56b4ca38b1563df4a"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga7d57912df8d262a56b4ca38b1563df4a">pjsip_register_hdr_parser</a> (const char *hname, const char *hshortname, <a class="el" href="group__PJSIP__PARSER.htm#gacdfaf5f37c64905068db0875d0527018">pjsip_parse_hdr_func</a> *fptr)</td></tr>
<tr class="separator:ga7d57912df8d262a56b4ca38b1563df4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga220e21523d8e90096d0eb0ad1c13b0e1"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga220e21523d8e90096d0eb0ad1c13b0e1">pjsip_unregister_hdr_parser</a> (const char *hname, const char *hshortname, <a class="el" href="group__PJSIP__PARSER.htm#gacdfaf5f37c64905068db0875d0527018">pjsip_parse_hdr_func</a> *fptr)</td></tr>
<tr class="separator:ga220e21523d8e90096d0eb0ad1c13b0e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga794c4b0fd54c3b0764e6b1804b2e20a0"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga794c4b0fd54c3b0764e6b1804b2e20a0">pjsip_register_uri_parser</a> (char *scheme, <a class="el" href="group__PJSIP__PARSER.htm#ga45acc6cd93ac01fc237281618e80d67b">pjsip_parse_uri_func</a> *func)</td></tr>
<tr class="separator:ga794c4b0fd54c3b0764e6b1804b2e20a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34b7935ecbfb4e9150036fa1185e7cbe"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga34b7935ecbfb4e9150036fa1185e7cbe">pjsip_unregister_uri_parser</a> (const char *scheme, <a class="el" href="group__PJSIP__PARSER.htm#ga45acc6cd93ac01fc237281618e80d67b">pjsip_parse_uri_func</a> *func)</td></tr>
<tr class="separator:ga34b7935ecbfb4e9150036fa1185e7cbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd07c76b4bc0df81881996747aaecf4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__uri.htm">pjsip_uri</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gafd07c76b4bc0df81881996747aaecf4d">pjsip_parse_uri</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, unsigned options)</td></tr>
<tr class="separator:gafd07c76b4bc0df81881996747aaecf4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8a1c2c6e75d1108fe3556569679d0c7b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga8a1c2c6e75d1108fe3556569679d0c7b">pjsip_parse_status_line</a> (char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__status__line.htm">pjsip_status_line</a> *status_line)</td></tr>
<tr class="separator:ga8a1c2c6e75d1108fe3556569679d0c7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb93fd97d74508dd217935783793a152"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gafb93fd97d74508dd217935783793a152">pjsip_parse_msg</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__parser__err__report.htm">pjsip_parser_err_report</a> *err_list)</td></tr>
<tr class="separator:gafb93fd97d74508dd217935783793a152"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f0bffb88b8cce2967dfc3b238dbd819"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga5f0bffb88b8cce2967dfc3b238dbd819">pjsip_parse_rdata</a> (char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td></tr>
<tr class="separator:ga5f0bffb88b8cce2967dfc3b238dbd819"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54a6d5a104cdefd15fd701cee2776b03"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga54a6d5a104cdefd15fd701cee2776b03">pjsip_find_msg</a> (const char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> is_datagram, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *msg_size)</td></tr>
<tr class="separator:ga54a6d5a104cdefd15fd701cee2776b03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac52724b68c0f6e28a0b8a04b1ffaf5b7"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gac52724b68c0f6e28a0b8a04b1ffaf5b7">pjsip_parse_hdr</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *hname, char *line, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, int *parsed_len)</td></tr>
<tr class="separator:gac52724b68c0f6e28a0b8a04b1ffaf5b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b4d7521a5db5953dd7b37454c0dd188"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga2b4d7521a5db5953dd7b37454c0dd188">pjsip_parse_headers</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *input, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *hlist, unsigned options)</td></tr>
<tr class="separator:ga2b4d7521a5db5953dd7b37454c0dd188"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga40a8a73b9d71f533cbac3077bdfec002"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga40a8a73b9d71f533cbac3077bdfec002">PJSIP_SYN_ERR_EXCEPTION</a></td></tr>
<tr class="separator:ga40a8a73b9d71f533cbac3077bdfec002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3bc78c0f5d5a8f1e6b3affa0f370752f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga3bc78c0f5d5a8f1e6b3affa0f370752f">PJSIP_EINVAL_ERR_EXCEPTION</a></td></tr>
<tr class="separator:ga3bc78c0f5d5a8f1e6b3affa0f370752f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga96551f090347ffa2780afc5793d1b46d" name="ga96551f090347ffa2780afc5793d1b46d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga96551f090347ffa2780afc5793d1b46d">&#9670;&nbsp;</a></span>PJSIP_MIN_CONTENT_LENGTH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_CONTENT_LENGTH&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Contants for limit checks For limit checks </p>

</div>
</div>
<a id="gaa7769ba5a6b0cd37abee744fe0eae8b2" name="gaa7769ba5a6b0cd37abee744fe0eae8b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa7769ba5a6b0cd37abee744fe0eae8b2">&#9670;&nbsp;</a></span>PJSIP_MAX_CONTENT_LENGTH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_CONTENT_LENGTH&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga049d8d76f288a4be6b2ab197e6cfe66c" name="ga049d8d76f288a4be6b2ab197e6cfe66c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga049d8d76f288a4be6b2ab197e6cfe66c">&#9670;&nbsp;</a></span>PJSIP_MIN_PORT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_PORT&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga4ce39dfd33ab88ba6c2f2fc059f4d593" name="ga4ce39dfd33ab88ba6c2f2fc059f4d593"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4ce39dfd33ab88ba6c2f2fc059f4d593">&#9670;&nbsp;</a></span>PJSIP_MAX_PORT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_PORT&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad255ec04735d335f308cffdbfb4ee48e">PJ_MAXUINT16</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="gafb4cd8e01d0bd92780ccb36089bc463a" name="gafb4cd8e01d0bd92780ccb36089bc463a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafb4cd8e01d0bd92780ccb36089bc463a">&#9670;&nbsp;</a></span>PJSIP_MIN_TTL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_TTL&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga13ae638482d47cfcbb5f3b285b806c36" name="ga13ae638482d47cfcbb5f3b285b806c36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga13ae638482d47cfcbb5f3b285b806c36">&#9670;&nbsp;</a></span>PJSIP_MAX_TTL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_TTL&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#a877b3b2d381c55959d8c0c160a0d0d00">PJ_MAXUINT8</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga2ae87a46c26e33198e7980411013d1e9" name="ga2ae87a46c26e33198e7980411013d1e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2ae87a46c26e33198e7980411013d1e9">&#9670;&nbsp;</a></span>PJSIP_MIN_STATUS_CODE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_STATUS_CODE&#160;&#160;&#160;100</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga96499371229d718fb8b49a8eb94c8c2d" name="ga96499371229d718fb8b49a8eb94c8c2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga96499371229d718fb8b49a8eb94c8c2d">&#9670;&nbsp;</a></span>PJSIP_MAX_STATUS_CODE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_STATUS_CODE&#160;&#160;&#160;999</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga27439e9463099dd2f36437ee5ede1498" name="ga27439e9463099dd2f36437ee5ede1498"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga27439e9463099dd2f36437ee5ede1498">&#9670;&nbsp;</a></span>PJSIP_MIN_Q1000</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_Q1000&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga1d78da2013e12b9b8723edb541296af2" name="ga1d78da2013e12b9b8723edb541296af2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d78da2013e12b9b8723edb541296af2">&#9670;&nbsp;</a></span>PJSIP_MAX_Q1000</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_Q1000&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a> / 1000</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="gab6cfa58426b2f10418bd384d0147130e" name="gab6cfa58426b2f10418bd384d0147130e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab6cfa58426b2f10418bd384d0147130e">&#9670;&nbsp;</a></span>PJSIP_MIN_EXPIRES</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_EXPIRES&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga1d826eb880e70fed299fdb10e59f4663" name="ga1d826eb880e70fed299fdb10e59f4663"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d826eb880e70fed299fdb10e59f4663">&#9670;&nbsp;</a></span>PJSIP_MAX_EXPIRES</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_EXPIRES&#160;&#160;&#160;((<a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>)0xFFFFFFFFUL)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >for chk </p>

</div>
</div>
<a id="gaed91e74aedcbecbba896d2563aef7cb3" name="gaed91e74aedcbecbba896d2563aef7cb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed91e74aedcbecbba896d2563aef7cb3">&#9670;&nbsp;</a></span>PJSIP_MIN_CSEQ</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_CSEQ&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga50f895ed952c33663e780297b1d04ee6" name="ga50f895ed952c33663e780297b1d04ee6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga50f895ed952c33663e780297b1d04ee6">&#9670;&nbsp;</a></span>PJSIP_MAX_CSEQ</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_CSEQ&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="gad8beb85e24c740aec9b76c316f675c94" name="gad8beb85e24c740aec9b76c316f675c94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad8beb85e24c740aec9b76c316f675c94">&#9670;&nbsp;</a></span>PJSIP_MIN_RETRY_AFTER</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MIN_RETRY_AFTER&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<a id="ga2f74afcf41a9ddc7b17338ccaf316a2c" name="ga2f74afcf41a9ddc7b17338ccaf316a2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2f74afcf41a9ddc7b17338ccaf316a2c">&#9670;&nbsp;</a></span>PJSIP_MAX_RETRY_AFTER</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSIP_MAX_RETRY_AFTER&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/limits_8h.htm#ad6764d967ae9c2a63bc4493a72c20651">PJ_MAXINT32</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For limit checks </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gacdfaf5f37c64905068db0875d0527018" name="gacdfaf5f37c64905068db0875d0527018"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacdfaf5f37c64905068db0875d0527018">&#9670;&nbsp;</a></span>pjsip_parse_hdr_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *() pjsip_parse_hdr_func(<a class="el" href="structpjsip__parse__ctx.htm">pjsip_parse_ctx</a> *context)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Type of function to parse header. The parsing function must follow these specification:</p><ul>
<li>It must not modify the input text.</li>
<li>The hname and HCOLON has been parsed prior to invoking the handler.</li>
<li>It returns the header instance on success.</li>
<li>For error reporting, it must throw PJSIP_SYN_ERR_EXCEPTION exception instead of just returning NULL. When exception is thrown, the return value is ignored.</li>
<li>It must read the header separator after finished reading the header body. The separator types are described below, and if they don't exist, exception must be thrown. Header separator can be a:<ul>
<li>newline, such as when the header is part of a SIP message.</li>
<li>ampersand, such as when the header is part of an URI.</li>
<li>for the last header, these separator is optional since parsing can be terminated when seeing EOF. </li>
</ul>
</li>
</ul>

</div>
</div>
<a id="ga45acc6cd93ac01fc237281618e80d67b" name="ga45acc6cd93ac01fc237281618e80d67b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga45acc6cd93ac01fc237281618e80d67b">&#9670;&nbsp;</a></span>pjsip_parse_uri_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void *() pjsip_parse_uri_func(<a class="elRef" href="../../../pjlib-util/docs/html/structpj__scanner.htm">pj_scanner</a> *scanner, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> parse_params)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Type of function to parse URI scheme. Most of the specification of header parser handler (pjsip_parse_hdr_func) also applies here (except the separator part). </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gadb49720dc49f7d4e4cf9adbf2948e409" name="gadb49720dc49f7d4e4cf9adbf2948e409"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb49720dc49f7d4e4cf9adbf2948e409">&#9670;&nbsp;</a></span>anonymous enum</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >URI Parsing options. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggadb49720dc49f7d4e4cf9adbf2948e409ade71a575a3017d1f482d53722d727876" name="ggadb49720dc49f7d4e4cf9adbf2948e409ade71a575a3017d1f482d53722d727876"></a>PJSIP_PARSE_URI_AS_NAMEADDR&#160;</td><td class="fielddoc"><p >If this option is specified, function <a class="el" href="group__PJSIP__PARSER.htm#gafd07c76b4bc0df81881996747aaecf4d">pjsip_parse_uri</a> will return the URI object as <a class="el" href="structpjsip__name__addr.htm">pjsip_name_addr</a> instead of the corresponding URI object. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggadb49720dc49f7d4e4cf9adbf2948e409a623ba2dd90c210c9ce51c63d3775f8a9" name="ggadb49720dc49f7d4e4cf9adbf2948e409a623ba2dd90c210c9ce51c63d3775f8a9"></a>PJSIP_PARSE_URI_IN_FROM_TO_HDR&#160;</td><td class="fielddoc"><p >If this option is specified, function <a class="el" href="group__PJSIP__PARSER.htm#gafd07c76b4bc0df81881996747aaecf4d">pjsip_parse_uri</a> and other internal functions that this function calls will parse URI according to convention for parsing From/To/Contact header. For example, when the URI is not enclosed in brackets ("&lt;" and "&gt;"), all parameters are treated as header parameters (not URI parameters). </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga7d57912df8d262a56b4ca38b1563df4a" name="ga7d57912df8d262a56b4ca38b1563df4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7d57912df8d262a56b4ca38b1563df4a">&#9670;&nbsp;</a></span>pjsip_register_hdr_parser()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_register_hdr_parser </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>hshortname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#gacdfaf5f37c64905068db0875d0527018">pjsip_parse_hdr_func</a> *&#160;</td>
          <td class="paramname"><em>fptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register header parser handler. The parser handler MUST follow the specification of header parser handler function. New registration overwrites previous registration with the same name.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">hname</td><td>The header name. </td></tr>
    <tr><td class="paramname">hshortname</td><td>The short header name or NULL. </td></tr>
    <tr><td class="paramname">fptr</td><td>The pointer to function to parser the header.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga220e21523d8e90096d0eb0ad1c13b0e1" name="ga220e21523d8e90096d0eb0ad1c13b0e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga220e21523d8e90096d0eb0ad1c13b0e1">&#9670;&nbsp;</a></span>pjsip_unregister_hdr_parser()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_unregister_hdr_parser </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>hshortname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#gacdfaf5f37c64905068db0875d0527018">pjsip_parse_hdr_func</a> *&#160;</td>
          <td class="paramname"><em>fptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Unregister previously registered header parser handler. All the arguments MUST exactly equal to the value specified upon registration of the handler.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">hname</td><td>The header name registered. </td></tr>
    <tr><td class="paramname">hshortname</td><td>The short header name registered, or NULL. </td></tr>
    <tr><td class="paramname">fptr</td><td>Previously registered function to parse the header.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>zero if unregistration was successfull. </dd></dl>

</div>
</div>
<a id="ga794c4b0fd54c3b0764e6b1804b2e20a0" name="ga794c4b0fd54c3b0764e6b1804b2e20a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga794c4b0fd54c3b0764e6b1804b2e20a0">&#9670;&nbsp;</a></span>pjsip_register_uri_parser()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_register_uri_parser </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>scheme</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#ga45acc6cd93ac01fc237281618e80d67b">pjsip_parse_uri_func</a> *&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register URI scheme parser handler.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scheme</td><td>The URI scheme registered. </td></tr>
    <tr><td class="paramname">func</td><td>The URI parser function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>zero on success. </dd></dl>

</div>
</div>
<a id="ga34b7935ecbfb4e9150036fa1185e7cbe" name="ga34b7935ecbfb4e9150036fa1185e7cbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga34b7935ecbfb4e9150036fa1185e7cbe">&#9670;&nbsp;</a></span>pjsip_unregister_uri_parser()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_unregister_uri_parser </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>scheme</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#ga45acc6cd93ac01fc237281618e80d67b">pjsip_parse_uri_func</a> *&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Unregister URI scheme parser handler. All the arguments MUST exactly equal to the value specified upon registration of the handler.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scheme</td><td>The URI scheme as registered previously. </td></tr>
    <tr><td class="paramname">func</td><td>The function handler as registered previously.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>zero if the registration was successfull. </dd></dl>

</div>
</div>
<a id="gafd07c76b4bc0df81881996747aaecf4d" name="gafd07c76b4bc0df81881996747aaecf4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd07c76b4bc0df81881996747aaecf4d">&#9670;&nbsp;</a></span>pjsip_parse_uri()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__uri.htm">pjsip_uri</a> * pjsip_parse_uri </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Parse an URI in the input and return the correct instance of URI. Note that the input string buffer MUST be NULL terminated and have length at least size+1 (size MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to get memory allocations. </td></tr>
    <tr><td class="paramname">buf</td><td>The input buffer, which MUST be NULL terminated. </td></tr>
    <tr><td class="paramname">size</td><td>The length of the string (not counting NULL terminator). </td></tr>
    <tr><td class="paramname">options</td><td>If no options are given (value is zero), the object returned is dependent on the syntax of the URI, eg. basic SIP URL, TEL URL, or name address. If option PJSIP_PARSE_URI_AS_NAMEADDR is given, then the returned object is always name address object, with the relevant URI object contained in the name address object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The URI or NULL when failed. No exception is thrown by this function (or any public parser functions). </dd></dl>

</div>
</div>
<a id="ga8a1c2c6e75d1108fe3556569679d0c7b" name="ga8a1c2c6e75d1108fe3556569679d0c7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8a1c2c6e75d1108fe3556569679d0c7b">&#9670;&nbsp;</a></span>pjsip_parse_status_line()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_parse_status_line </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__status__line.htm">pjsip_status_line</a> *&#160;</td>
          <td class="paramname"><em>status_line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Parse SIP status line. Note that the input string buffer MUST be NULL terminated and have length at least size+1 (size MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>Text buffer to parse, which MUST be NULL terminated. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the buffer, excluding the NULL character. </td></tr>
    <tr><td class="paramname">status_line</td><td>Structure to receive the parsed elements.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if a status line is parsed successfully. </dd></dl>

</div>
</div>
<a id="gafb93fd97d74508dd217935783793a152" name="gafb93fd97d74508dd217935783793a152"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafb93fd97d74508dd217935783793a152">&#9670;&nbsp;</a></span>pjsip_parse_msg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a> * pjsip_parse_msg </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__parser__err__report.htm">pjsip_parser_err_report</a> *&#160;</td>
          <td class="paramname"><em>err_list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Parse a packet buffer and build a full SIP message from the packet. This function parses all parts of the message, including request/status line, all headers, and the message body. The message body however is only treated as a text block, ie. the function will not try to parse the content of the body.</p>
<p >Note that the input string buffer MUST be NULL terminated and have length at least size+1 (size MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory. </td></tr>
    <tr><td class="paramname">buf</td><td>The input buffer, which MUST be NULL terminated. </td></tr>
    <tr><td class="paramname">size</td><td>The length of the string (not counting NULL terminator). </td></tr>
    <tr><td class="paramname">err_list</td><td>If this parameter is not NULL, then the parser will put error messages during parsing in this list.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The message or NULL when failed. No exception is thrown by this function (or any public parser functions). </dd></dl>

</div>
</div>
<a id="ga5f0bffb88b8cce2967dfc3b238dbd819" name="ga5f0bffb88b8cce2967dfc3b238dbd819"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5f0bffb88b8cce2967dfc3b238dbd819">&#9670;&nbsp;</a></span>pjsip_parse_rdata()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a> * pjsip_parse_rdata </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Parse a packet buffer and build a rdata. The resulting message will be stored in <code>msg</code> field in the <code>rdata</code>. This behaves pretty much like <a class="el" href="group__PJSIP__PARSER.htm#gafb93fd97d74508dd217935783793a152">pjsip_parse_msg()</a>, except that it will also initialize the header fields in the <code>rdata</code>.</p>
<p >This function is normally called by the transport layer.</p>
<p >Note that the input string buffer MUST be NULL terminated and have length at least size+1 (size MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>The input buffer, which MUST be NULL terminated. </td></tr>
    <tr><td class="paramname">size</td><td>The length of the string (not counting NULL terminator). </td></tr>
    <tr><td class="paramname">rdata</td><td>The receive data buffer to store the message and its elements.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The message inside the rdata if successfull, or NULL. </dd></dl>

</div>
</div>
<a id="ga54a6d5a104cdefd15fd701cee2776b03" name="ga54a6d5a104cdefd15fd701cee2776b03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga54a6d5a104cdefd15fd701cee2776b03">&#9670;&nbsp;</a></span>pjsip_find_msg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_find_msg </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>is_datagram</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&#160;</td>
          <td class="paramname"><em>msg_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Check incoming packet to see if a (probably) valid SIP message has been received. Note that the input string buffer MUST be NULL terminated and have length at least size+1 (size MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>The input buffer, which must be NULL terminated. </td></tr>
    <tr><td class="paramname">size</td><td>The length of the string (not counting NULL terminator). </td></tr>
    <tr><td class="paramname">is_datagram</td><td>Put non-zero if transport is datagram oriented. </td></tr>
    <tr><td class="paramname">msg_size</td><td>[out] If message is valid, this parameter will contain the size of the SIP message (including body, if any).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if a message is found, or an error code. </dd></dl>

</div>
</div>
<a id="gac52724b68c0f6e28a0b8a04b1ffaf5b7" name="gac52724b68c0f6e28a0b8a04b1ffaf5b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac52724b68c0f6e28a0b8a04b1ffaf5b7">&#9670;&nbsp;</a></span>pjsip_parse_hdr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void * pjsip_parse_hdr </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>parsed_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Parse the content of a header and return the header instance. This function parses the content of a header (ie. part after colon) according to the expected name, and will return the correct instance of header.</p>
<p >Note that the input string buffer MUST be NULL terminated and have length at least size+1 (size MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory for the header. </td></tr>
    <tr><td class="paramname">hname</td><td>Header name which is used to find the correct function to parse the header. </td></tr>
    <tr><td class="paramname">line</td><td>Header content, which must be NULL terminated. </td></tr>
    <tr><td class="paramname">size</td><td>The length of the string (not counting NULL terminator, if any). </td></tr>
    <tr><td class="paramname">parsed_len</td><td>If the value is not NULL, then upon return the function will fill the pointer with the length of the string that has been parsed. This is usefull for two purposes, one is when the string may contain more than one header lines, and two when an error happen the value can pinpoint the location of the error in the buffer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The instance of the header if parsing was successful, or otherwise a NULL pointer will be returned. </dd></dl>

</div>
</div>
<a id="ga2b4d7521a5db5953dd7b37454c0dd188" name="ga2b4d7521a5db5953dd7b37454c0dd188"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b4d7521a5db5953dd7b37454c0dd188">&#9670;&nbsp;</a></span>pjsip_parse_headers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_parse_headers </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *&#160;</td>
          <td class="paramname"><em>hlist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Parse header line(s). Multiple headers can be parsed by this function. When there are multiple headers, the headers MUST be separated by either a newline (as in SIP message) or ampersand mark (as in URI). This separator is optional for the last header.</p>
<p >Note that the input string buffer MUST be NULL terminated and have length at least size+1 (size MUST NOT include the NULL terminator).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool. </td></tr>
    <tr><td class="paramname">input</td><td>The input text to parse, which must be NULL terminated. </td></tr>
    <tr><td class="paramname">size</td><td>The text length (not counting NULL terminator). </td></tr>
    <tr><td class="paramname">hlist</td><td>The header list to store the parsed headers. This list must have been initialized before calling this function. </td></tr>
    <tr><td class="paramname">options</td><td>Specify 1 here to make parsing stop when error is encountered when parsing the header. Otherwise the error is silently ignored and parsing resumes to the next line. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>zero if successfull, or -1 if error is encountered. Upon error, the <em>hlist</em> argument MAY contain successfully parsed headers. </dd></dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="ga40a8a73b9d71f533cbac3077bdfec002" name="ga40a8a73b9d71f533cbac3077bdfec002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga40a8a73b9d71f533cbac3077bdfec002">&#9670;&nbsp;</a></span>PJSIP_SYN_ERR_EXCEPTION</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int PJSIP_SYN_ERR_EXCEPTION</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >Parser syntax error exception value. </p>

</div>
</div>
<a id="ga3bc78c0f5d5a8f1e6b3affa0f370752f" name="ga3bc78c0f5d5a8f1e6b3affa0f370752f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3bc78c0f5d5a8f1e6b3affa0f370752f">&#9670;&nbsp;</a></span>PJSIP_EINVAL_ERR_EXCEPTION</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int PJSIP_EINVAL_ERR_EXCEPTION</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >Invalid value error exception value. </p>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
