<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Memory/Buffer-based Capture Port (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Memory/Buffer-based Capture Port<div class="ingroups"><a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Media capture to fixed size memory buffer.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gab07caf1863ef993b2d39d6c38cd6c6f7"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__MEM__CAPTURE.htm#gab07caf1863ef993b2d39d6c38cd6c6f7">pjmedia_mem_capture_create</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, void *buffer, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, unsigned clock_rate, unsigned channel_count, unsigned samples_per_frame, unsigned bits_per_sample, unsigned options, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **p_port)</td></tr>
<tr class="separator:gab07caf1863ef993b2d39d6c38cd6c6f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaaa90386ac6771e5d80669297e0372db"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__MEM__CAPTURE.htm#gaaaa90386ac6771e5d80669297e0372db">pjmedia_mem_capture_set_eof_cb</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*cb)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data))</td></tr>
<tr class="separator:gaaaa90386ac6771e5d80669297e0372db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga697a97cd037d735f9d5c1039707d96e4"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__MEM__CAPTURE.htm#ga697a97cd037d735f9d5c1039707d96e4">pjmedia_mem_capture_set_eof_cb2</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, void(*cb)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data))</td></tr>
<tr class="separator:ga697a97cd037d735f9d5c1039707d96e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6ef58dcf5e477fb8f1aa7ce97f620eb7"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__MEM__CAPTURE.htm#ga6ef58dcf5e477fb8f1aa7ce97f620eb7">pjmedia_mem_capture_get_size</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port)</td></tr>
<tr class="separator:ga6ef58dcf5e477fb8f1aa7ce97f620eb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>A memory based capture is used to save media streams to a fixed size buffer. This is useful over <a class="el" href="group__PJMEDIA__FILE__REC.htm">File Writer (Recorder)</a> for situation where filesystems are not available in the target system. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gab07caf1863ef993b2d39d6c38cd6c6f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab07caf1863ef993b2d39d6c38cd6c6f7">&#9670;&nbsp;</a></span>pjmedia_mem_capture_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_mem_capture_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>samples_per_frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bits_per_sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **&#160;</td>
          <td class="paramname"><em>p_port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create media port to capture/record media into a fixed size buffer.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory for the port structure. </td></tr>
    <tr><td class="paramname">buffer</td><td>The buffer to record the media to, which should be available throughout the life time of the port. </td></tr>
    <tr><td class="paramname">size</td><td>The maximum size of the buffer, in bytes. </td></tr>
    <tr><td class="paramname">clock_rate</td><td>Sampling rate. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Number of channels. </td></tr>
    <tr><td class="paramname">samples_per_frame</td><td>Number of samples per frame. </td></tr>
    <tr><td class="paramname">bits_per_sample</td><td>Number of bits per sample. </td></tr>
    <tr><td class="paramname">options</td><td>Option flags. </td></tr>
    <tr><td class="paramname">p_port</td><td>Pointer to receive the port instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaaaa90386ac6771e5d80669297e0372db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaaa90386ac6771e5d80669297e0372db">&#9670;&nbsp;</a></span>pjmedia_mem_capture_set_eof_cb()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_mem_capture_set_eof_cb </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data)&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Register a callback to be called when no space left in the buffer. Note that when a callback is registered, this callback will also be called when application destroys the port and the callback has not been called before.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The memory recorder port. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be specified in the callback </td></tr>
    <tr><td class="paramname">cb</td><td>Callback to be called. If the callback returns non- PJ_SUCCESS, the recording will stop. In other cases recording will be restarted and the rest of the frame will be stored starting from the beginning of the buffer. Note that if application destroys the capture port in the callback, it must return non-PJ_SUCCESS here.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga697a97cd037d735f9d5c1039707d96e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga697a97cd037d735f9d5c1039707d96e4">&#9670;&nbsp;</a></span>pjmedia_mem_capture_set_eof_cb2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_mem_capture_set_eof_cb2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data)&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Register a callback to be called when no space left in the buffer.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The memory recorder port. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be specified in the callback </td></tr>
    <tr><td class="paramname">cb</td><td>Callback to be called. Note that if application wishes to stop the recording, it can disconnect the port in the callback, and only after all connections have been removed could the application safely destroy the port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga6ef58dcf5e477fb8f1aa7ce97f620eb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6ef58dcf5e477fb8f1aa7ce97f620eb7">&#9670;&nbsp;</a></span>pjmedia_mem_capture_get_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pjmedia_mem_capture_get_size </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return the current size of the recorded data in the buffer.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The memory recorder port. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The size of buffer data.. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
