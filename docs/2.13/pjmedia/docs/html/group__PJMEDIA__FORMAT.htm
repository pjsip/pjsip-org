<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Media format (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Media format<div class="ingroups"><a class="el" href="group__PJMEDIA__BASE.htm">Base Types and Configurations</a> &raquo; <a class="el" href="group__PJMEDIA__TYPES.htm">Basic Types</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Media format.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__video__format__detail.htm">pjmedia_video_format_detail</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__format.htm">pjmedia_format</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__video__apply__fmt__param.htm">pjmedia_video_apply_fmt_param</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__video__format__info.htm">pjmedia_video_format_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga446fde40276150b5a7665be7ffe5dda0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga446fde40276150b5a7665be7ffe5dda0">PJMEDIA_FORMAT_PACK</a>(C1,  C2,  C3,  C4)&#160;&#160;&#160;<a class="el" href="group__PJMEDIA__TYPES.htm#ga65194586b61d0be8180bf961ad35dcd0">PJMEDIA_FOURCC</a>(C1, C2, C3, C4)</td></tr>
<tr class="separator:ga446fde40276150b5a7665be7ffe5dda0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5bd26dc0cf1a990075aa983c0a5fe03d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga5bd26dc0cf1a990075aa983c0a5fe03d">PJMEDIA_FORMAT_DETAIL_USER_SIZE</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga5bd26dc0cf1a990075aa983c0a5fe03d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga03aafe9d4903bb7c6f3f98dabbbac1a2"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a></td></tr>
<tr class="separator:ga03aafe9d4903bb7c6f3f98dabbbac1a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga7a0830cb291693cabb364a3403777bda"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga7a0830cb291693cabb364a3403777bda">pjmedia_format_id</a> { <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa02ef5e47a5e529fafe3d8b812a9aaa0b">PJMEDIA_FORMAT_L16</a> = 0
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaad39935bd29f647006b91a86ba25d0250">PJMEDIA_FORMAT_PCM</a> = PJMEDIA_FORMAT_L16
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa37e2dee9b52f7681af4cab0f9fcd6545">PJMEDIA_FORMAT_PCMA</a> = PJMEDIA_FOURCC( 'A' , 'L' , 'A' , 'W' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa28fb4224e7491424d0e97616410ea4a0">PJMEDIA_FORMAT_ALAW</a> = PJMEDIA_FORMAT_PCMA
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa4043fda71014e7a35afdc2d076030e24">PJMEDIA_FORMAT_PCMU</a> = PJMEDIA_FOURCC( 'u' , 'L' , 'A' , 'W' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaaf1e9b64bde93fc148980e98f09840ff5">PJMEDIA_FORMAT_ULAW</a> = PJMEDIA_FORMAT_PCMU
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa8c33598ca4e6da5d0e9bce21377d5eb3">PJMEDIA_FORMAT_AMR</a> = PJMEDIA_FOURCC( ' ' , 'A' , 'M' , 'R' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaae56c0e65b53ac023a72d3f69fd77c6fb">PJMEDIA_FORMAT_G729</a> = PJMEDIA_FOURCC( 'G' , '7' , '2' , '9' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa0d5148fcd9b3767ec8d54a2b208447c9">PJMEDIA_FORMAT_ILBC</a> = PJMEDIA_FOURCC( 'I' , 'L' , 'B' , 'C' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa2d5134901ecb76d67197fb8935fa79f1">PJMEDIA_FORMAT_RGB24</a> = PJMEDIA_FOURCC( 'R' , 'G' , 'B' , '3' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa914dc16bb95a77898e525fe1f554a4c8">PJMEDIA_FORMAT_RGBA</a> = PJMEDIA_FOURCC( 'R' , 'G' , 'B' , 'A' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_BGRA</b> = PJMEDIA_FOURCC( 'B' , 'G' , 'R' , 'A' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa313df269c2c927846b85597f2f687d82">PJMEDIA_FORMAT_RGB32</a> = PJMEDIA_FORMAT_RGBA
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa0d8215756e479ddbe36760ae08e68f89">PJMEDIA_FORMAT_DIB</a> = PJMEDIA_FOURCC( 'D' , 'I' , 'B' , ' ' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa1033b6f4a4a1f29ed722315332b3c80f">PJMEDIA_FORMAT_GBRP</a> = PJMEDIA_FOURCC( 'G' , 'B' , 'R' , 'P' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa67e962a6b195a3eccf422ef8cd9f8516">PJMEDIA_FORMAT_AYUV</a> = PJMEDIA_FOURCC( 'A' , 'Y' , 'U' , 'V' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa0086d2b1277a27a77d6b9741f0dddd87">PJMEDIA_FORMAT_YUY2</a> = PJMEDIA_FOURCC( 'Y' , 'U' , 'Y' , '2' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa26817ec0c53869c65b0ef7795835e668">PJMEDIA_FORMAT_UYVY</a> = PJMEDIA_FOURCC( 'U' , 'Y' , 'V' , 'Y' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaad24d29daaae292d3e626c854ce886bbf">PJMEDIA_FORMAT_YVYU</a> = PJMEDIA_FOURCC( 'Y' , 'V' , 'Y' , 'U' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa603cf0c76dcda73ce7e68266e2c3d7cc">PJMEDIA_FORMAT_I420</a> = PJMEDIA_FOURCC( 'I' , '4' , '2' , '0' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa96453063207773667b1c3babdea382fe">PJMEDIA_FORMAT_IYUV</a> = PJMEDIA_FORMAT_I420
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa777dfb82e9dbc259539a9d503cfa74a8">PJMEDIA_FORMAT_YV12</a> = PJMEDIA_FOURCC( 'Y' , 'V' , '1' , '2' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa45c4f749ce86d722402261f8acb6f024">PJMEDIA_FORMAT_NV12</a> = PJMEDIA_FOURCC( 'N' , 'V' , '1' , '2' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa93cf9e58d5072c0e448f305910f723c7">PJMEDIA_FORMAT_NV21</a> = PJMEDIA_FOURCC( 'N' , 'V' , '2' , '1' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaad6989937f3bfb72318b85b7f06fd814c">PJMEDIA_FORMAT_I422</a> = PJMEDIA_FOURCC( 'I' , '4' , '2' , '2' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaad3647b4ce55205934c47eca16521f8aa">PJMEDIA_FORMAT_I420JPEG</a> = PJMEDIA_FOURCC( 'J' , '4' , '2' , '0' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa8edcb6c2c960f7ab4601833f12090fa0">PJMEDIA_FORMAT_I422JPEG</a> = PJMEDIA_FOURCC( 'J' , '4' , '2' , '2' )
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga7a0830cb291693cabb364a3403777bdaa631171cb4398bab9b6c2d7c00b4cb10a">PJMEDIA_FORMAT_H261</a> = PJMEDIA_FOURCC( 'H' , '2' , '6' , '1' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_H263</b> = PJMEDIA_FOURCC( 'H' , '2' , '6' , '3' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_H263P</b> = PJMEDIA_FOURCC( 'P' , '2' , '6' , '3' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_H264</b> = PJMEDIA_FOURCC( 'H' , '2' , '6' , '4' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_VP8</b> = PJMEDIA_FOURCC( 'V' , 'P' , '8' , '0' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_VP9</b> = PJMEDIA_FOURCC( 'V' , 'P' , '9' , '0' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_MJPEG</b> = PJMEDIA_FOURCC( 'M' , 'J' , 'P' , 'G' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_MPEG1VIDEO</b> = PJMEDIA_FOURCC( 'M' , 'P' , '1' , 'V' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_MPEG2VIDEO</b> = PJMEDIA_FOURCC( 'M' , 'P' , '2' , 'V' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_MPEG4</b> = PJMEDIA_FOURCC( 'M' , 'P' , 'G' , '4' )
, <br />
&#160;&#160;<b>PJMEDIA_FORMAT_INVALID</b> = 0xFFFFFFF
<br />
 }</td></tr>
<tr class="separator:ga7a0830cb291693cabb364a3403777bda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3272e8f9dc6d369dc9fe5dcb67408fc5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga3272e8f9dc6d369dc9fe5dcb67408fc5">pjmedia_format_detail_type</a> { <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga3272e8f9dc6d369dc9fe5dcb67408fc5a1886348e7c4f99f8fa28dfb53930b542">PJMEDIA_FORMAT_DETAIL_NONE</a>
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga3272e8f9dc6d369dc9fe5dcb67408fc5a08da16fdbe9735e5659539353516ffcc">PJMEDIA_FORMAT_DETAIL_AUDIO</a>
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga3272e8f9dc6d369dc9fe5dcb67408fc5a31494f52b698e2f6313b9e12d825000f">PJMEDIA_FORMAT_DETAIL_VIDEO</a>
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga3272e8f9dc6d369dc9fe5dcb67408fc5a43cb8428bbf56b4649734b737fcadee9">PJMEDIA_FORMAT_DETAIL_MAX</a>
<br />
 }</td></tr>
<tr class="separator:ga3272e8f9dc6d369dc9fe5dcb67408fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga552e20ed5aa9339f05fb0024576782ff"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga552e20ed5aa9339f05fb0024576782ff">pjmedia_color_model</a> { <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga552e20ed5aa9339f05fb0024576782ffae219f6d26e32aa14627bf5f52b312533">PJMEDIA_COLOR_MODEL_NONE</a>
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga552e20ed5aa9339f05fb0024576782ffaf6b17ec77d4f8a13244a247f5cceb4b4">PJMEDIA_COLOR_MODEL_RGB</a>
, <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FORMAT.htm#gga552e20ed5aa9339f05fb0024576782ffabdd5dd22aaac32ad0fd63fa82730d27a">PJMEDIA_COLOR_MODEL_YUV</a>
<br />
 }</td></tr>
<tr class="separator:ga552e20ed5aa9339f05fb0024576782ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gab3c96afc2154a82d848ea76a68f22e6f"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gab3c96afc2154a82d848ea76a68f22e6f">PJMEDIA_SPF</a> (unsigned clock_rate, unsigned usec_ptime, unsigned channel_count)</td></tr>
<tr class="separator:gab3c96afc2154a82d848ea76a68f22e6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga820e313f6d5ce26434ca5bc8c5d4b30c"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga820e313f6d5ce26434ca5bc8c5d4b30c">PJMEDIA_SPF2</a> (unsigned clock_rate, const <a class="el" href="structpjmedia__ratio.htm">pjmedia_ratio</a> *fr, unsigned channel_count)</td></tr>
<tr class="separator:ga820e313f6d5ce26434ca5bc8c5d4b30c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42faba3807c5ed5732bc26789adf1f80"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga42faba3807c5ed5732bc26789adf1f80">PJMEDIA_FSZ</a> (unsigned bps, unsigned usec_ptime)</td></tr>
<tr class="separator:ga42faba3807c5ed5732bc26789adf1f80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52ed586320fee34544495f8cb505af63"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga52ed586320fee34544495f8cb505af63">PJMEDIA_PTIME</a> (const <a class="el" href="structpjmedia__ratio.htm">pjmedia_ratio</a> *frame_rate)</td></tr>
<tr class="separator:ga52ed586320fee34544495f8cb505af63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d7e70941b4c15d4d8c10ee795311b2b"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga5d7e70941b4c15d4d8c10ee795311b2b">PJMEDIA_AFD_SPF</a> (const <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> *pafd)</td></tr>
<tr class="separator:ga5d7e70941b4c15d4d8c10ee795311b2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2fd91433f9a6b60190a42d79a3729921"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga2fd91433f9a6b60190a42d79a3729921">PJMEDIA_AFD_AVG_FSZ</a> (const <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> *afd)</td></tr>
<tr class="separator:ga2fd91433f9a6b60190a42d79a3729921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae2c3ca6945d4c0cae8911db6c9343938"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gae2c3ca6945d4c0cae8911db6c9343938">PJMEDIA_AFD_MAX_FSZ</a> (const <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> *afd)</td></tr>
<tr class="separator:gae2c3ca6945d4c0cae8911db6c9343938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1619eaabe031a5fcfef40fedcd9760a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gaa1619eaabe031a5fcfef40fedcd9760a">pjmedia_format_init_audio</a> (<a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *fmt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> fmt_id, unsigned clock_rate, unsigned channel_count, unsigned bits_per_sample, unsigned frame_time_usec, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> avg_bps, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> max_bps)</td></tr>
<tr class="separator:gaa1619eaabe031a5fcfef40fedcd9760a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab18e56e6f2c64f79abc57bcf50f2f423"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gab18e56e6f2c64f79abc57bcf50f2f423">pjmedia_format_init_video</a> (<a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *fmt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> fmt_id, unsigned width, unsigned height, unsigned fps_num, unsigned fps_denum)</td></tr>
<tr class="separator:gab18e56e6f2c64f79abc57bcf50f2f423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac83f34d6a165779978918df3a42a8f1f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gac83f34d6a165779978918df3a42a8f1f">pjmedia_format_copy</a> (<a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *dst, const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *src)</td></tr>
<tr class="separator:gac83f34d6a165779978918df3a42a8f1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga379c93e88a574637b6e8ce4635b9c4a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga379c93e88a574637b6e8ce4635b9c4a4">pjmedia_format_get_audio_format_detail</a> (const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *fmt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> assert_valid)</td></tr>
<tr class="separator:ga379c93e88a574637b6e8ce4635b9c4a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9e18593edc8d051ee80e8c37ba8350a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__video__format__detail.htm">pjmedia_video_format_detail</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gac9e18593edc8d051ee80e8c37ba8350a">pjmedia_format_get_video_format_detail</a> (const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *fmt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> assert_valid)</td></tr>
<tr class="separator:gac9e18593edc8d051ee80e8c37ba8350a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed9bc73ac9048239d28193916f9a2a91"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gaed9bc73ac9048239d28193916f9a2a91">pjmedia_video_format_mgr_create</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, unsigned max_fmt, unsigned options, <a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> **p_mgr)</td></tr>
<tr class="separator:gaed9bc73ac9048239d28193916f9a2a91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab6856edda3cf909b461bfb78e76cc8ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gab6856edda3cf909b461bfb78e76cc8ec">pjmedia_video_format_mgr_instance</a> (void)</td></tr>
<tr class="separator:gab6856edda3cf909b461bfb78e76cc8ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22584dece952e58b92f42872df887fb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga22584dece952e58b92f42872df887fb3">pjmedia_video_format_mgr_set_instance</a> (<a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *mgr)</td></tr>
<tr class="separator:ga22584dece952e58b92f42872df887fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga778067231c047b0eaaec53537297e1cc"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structpjmedia__video__format__info.htm">pjmedia_video_format_info</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga778067231c047b0eaaec53537297e1cc">pjmedia_get_video_format_info</a> (<a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *mgr, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> id)</td></tr>
<tr class="separator:ga778067231c047b0eaaec53537297e1cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c1c8363bef9b306c80ee27ef945f86c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga1c1c8363bef9b306c80ee27ef945f86c">pjmedia_register_video_format_info</a> (<a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *mgr, <a class="el" href="structpjmedia__video__format__info.htm">pjmedia_video_format_info</a> *vfi)</td></tr>
<tr class="separator:ga1c1c8363bef9b306c80ee27ef945f86c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68cbb74df2431495318f7edfb1622821"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga68cbb74df2431495318f7edfb1622821">pjmedia_video_format_mgr_destroy</a> (<a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *mgr)</td></tr>
<tr class="separator:ga68cbb74df2431495318f7edfb1622821"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa14db4daeb82b36fa39e57dbf99f2b90"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FORMAT.htm#gaa14db4daeb82b36fa39e57dbf99f2b90">pjmedia_video_format_fill_black</a> (const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *fmt, void *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> buf_size)</td></tr>
<tr class="separator:gaa14db4daeb82b36fa39e57dbf99f2b90"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga446fde40276150b5a7665be7ffe5dda0" name="ga446fde40276150b5a7665be7ffe5dda0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga446fde40276150b5a7665be7ffe5dda0">&#9670;&nbsp;</a></span>PJMEDIA_FORMAT_PACK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_FORMAT_PACK</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">C1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">C2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">C3, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">C4&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="group__PJMEDIA__TYPES.htm#ga65194586b61d0be8180bf961ad35dcd0">PJMEDIA_FOURCC</a>(C1, C2, C3, C4)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Macro for packing format from a four character code, similar to FOURCC. This macro is used for building the constants in pjmedia_format_id enumeration. </p>

</div>
</div>
<a id="ga5bd26dc0cf1a990075aa983c0a5fe03d" name="ga5bd26dc0cf1a990075aa983c0a5fe03d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5bd26dc0cf1a990075aa983c0a5fe03d">&#9670;&nbsp;</a></span>PJMEDIA_FORMAT_DETAIL_USER_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_FORMAT_DETAIL_USER_SIZE&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This macro declares the size of the detail section in <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> to be reserved for user defined detail. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga03aafe9d4903bb7c6f3f98dabbbac1a2" name="ga03aafe9d4903bb7c6f3f98dabbbac1a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga03aafe9d4903bb7c6f3f98dabbbac1a2">&#9670;&nbsp;</a></span>pjmedia_video_format_mgr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> <a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Opaque data type for video format manager. The video format manager manages the repository of video formats that the framework recognises. Typically it is a singleton instance, although application may instantiate more than one instances of this if required. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga7a0830cb291693cabb364a3403777bda" name="ga7a0830cb291693cabb364a3403777bda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7a0830cb291693cabb364a3403777bda">&#9670;&nbsp;</a></span>pjmedia_format_id</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMEDIA__FORMAT.htm#ga7a0830cb291693cabb364a3403777bda">pjmedia_format_id</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration uniquely identify audio sample and/or video pixel formats. Some well known formats are listed here. The format ids are built by combining four character codes, similar to FOURCC. The format id is extensible, as application may define and use format ids not declared on this enumeration.</p>
<p >This format id along with other information will fully describe the media in <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> structure. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa02ef5e47a5e529fafe3d8b812a9aaa0b" name="gga7a0830cb291693cabb364a3403777bdaa02ef5e47a5e529fafe3d8b812a9aaa0b"></a>PJMEDIA_FORMAT_L16&#160;</td><td class="fielddoc"><p >16bit signed integer linear PCM audio </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaad39935bd29f647006b91a86ba25d0250" name="gga7a0830cb291693cabb364a3403777bdaad39935bd29f647006b91a86ba25d0250"></a>PJMEDIA_FORMAT_PCM&#160;</td><td class="fielddoc"><p >Alias for PJMEDIA_FORMAT_L16 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa37e2dee9b52f7681af4cab0f9fcd6545" name="gga7a0830cb291693cabb364a3403777bdaa37e2dee9b52f7681af4cab0f9fcd6545"></a>PJMEDIA_FORMAT_PCMA&#160;</td><td class="fielddoc"><p >G.711 ALAW </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa28fb4224e7491424d0e97616410ea4a0" name="gga7a0830cb291693cabb364a3403777bdaa28fb4224e7491424d0e97616410ea4a0"></a>PJMEDIA_FORMAT_ALAW&#160;</td><td class="fielddoc"><p >Alias for PJMEDIA_FORMAT_PCMA </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa4043fda71014e7a35afdc2d076030e24" name="gga7a0830cb291693cabb364a3403777bdaa4043fda71014e7a35afdc2d076030e24"></a>PJMEDIA_FORMAT_PCMU&#160;</td><td class="fielddoc"><p >G.711 ULAW </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaaf1e9b64bde93fc148980e98f09840ff5" name="gga7a0830cb291693cabb364a3403777bdaaf1e9b64bde93fc148980e98f09840ff5"></a>PJMEDIA_FORMAT_ULAW&#160;</td><td class="fielddoc"><p >Aliaw for PJMEDIA_FORMAT_PCMU </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa8c33598ca4e6da5d0e9bce21377d5eb3" name="gga7a0830cb291693cabb364a3403777bdaa8c33598ca4e6da5d0e9bce21377d5eb3"></a>PJMEDIA_FORMAT_AMR&#160;</td><td class="fielddoc"><p >AMR narrowband </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaae56c0e65b53ac023a72d3f69fd77c6fb" name="gga7a0830cb291693cabb364a3403777bdaae56c0e65b53ac023a72d3f69fd77c6fb"></a>PJMEDIA_FORMAT_G729&#160;</td><td class="fielddoc"><p >ITU G.729 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa0d5148fcd9b3767ec8d54a2b208447c9" name="gga7a0830cb291693cabb364a3403777bdaa0d5148fcd9b3767ec8d54a2b208447c9"></a>PJMEDIA_FORMAT_ILBC&#160;</td><td class="fielddoc"><p >Internet Low Bit-Rate Codec (ILBC) </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa2d5134901ecb76d67197fb8935fa79f1" name="gga7a0830cb291693cabb364a3403777bdaa2d5134901ecb76d67197fb8935fa79f1"></a>PJMEDIA_FORMAT_RGB24&#160;</td><td class="fielddoc"><p >24bit RGB </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa914dc16bb95a77898e525fe1f554a4c8" name="gga7a0830cb291693cabb364a3403777bdaa914dc16bb95a77898e525fe1f554a4c8"></a>PJMEDIA_FORMAT_RGBA&#160;</td><td class="fielddoc"><p >32bit RGB with alpha channel </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa313df269c2c927846b85597f2f687d82" name="gga7a0830cb291693cabb364a3403777bdaa313df269c2c927846b85597f2f687d82"></a>PJMEDIA_FORMAT_RGB32&#160;</td><td class="fielddoc"><p >Alias for PJMEDIA_FORMAT_RGBA </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa0d8215756e479ddbe36760ae08e68f89" name="gga7a0830cb291693cabb364a3403777bdaa0d8215756e479ddbe36760ae08e68f89"></a>PJMEDIA_FORMAT_DIB&#160;</td><td class="fielddoc"><p >Device Independent Bitmap, alias for 24 bit RGB </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa1033b6f4a4a1f29ed722315332b3c80f" name="gga7a0830cb291693cabb364a3403777bdaa1033b6f4a4a1f29ed722315332b3c80f"></a>PJMEDIA_FORMAT_GBRP&#160;</td><td class="fielddoc"><p >This is planar 4:4:4/24bpp RGB format, the data can be treated as three planes of color components, where the first plane contains only the G samples, the second plane contains only the B samples, and the third plane contains only the R samples. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa67e962a6b195a3eccf422ef8cd9f8516" name="gga7a0830cb291693cabb364a3403777bdaa67e962a6b195a3eccf422ef8cd9f8516"></a>PJMEDIA_FORMAT_AYUV&#160;</td><td class="fielddoc"><p >This is a packed 4:4:4/32bpp format, where each pixel is encoded as four consecutive bytes, arranged in the following sequence: V0, U0, Y0, A0. Source: <a href="http://msdn.microsoft.com/en-us/library/dd206750%28v=VS.85%29.aspx#ayuv">http://msdn.microsoft.com/en-us/library/dd206750%28v=VS.85%29.aspx#ayuv</a> </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa0086d2b1277a27a77d6b9741f0dddd87" name="gga7a0830cb291693cabb364a3403777bdaa0086d2b1277a27a77d6b9741f0dddd87"></a>PJMEDIA_FORMAT_YUY2&#160;</td><td class="fielddoc"><p >This is packed 4:2:2/16bpp YUV format, the data can be treated as an array of unsigned char values, where the first byte contains the first Y sample, the second byte contains the first U (Cb) sample, the third byte contains the second Y sample, and the fourth byte contains the first V (Cr) sample, and so forth. Source: <a href="http://msdn.microsoft.com/en-us/library/dd206750%28v=VS.85%29.aspx#yuy2">http://msdn.microsoft.com/en-us/library/dd206750%28v=VS.85%29.aspx#yuy2</a> </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa26817ec0c53869c65b0ef7795835e668" name="gga7a0830cb291693cabb364a3403777bdaa26817ec0c53869c65b0ef7795835e668"></a>PJMEDIA_FORMAT_UYVY&#160;</td><td class="fielddoc"><p >This format is the same as the YUY2 format except the byte order is reversed &ndash; that is, the chroma and luma bytes are flipped. If the image is addressed as an array of two little-endian WORD values, the first WORD contains U in the LSBs and Y0 in the MSBs, and the second WORD contains V in the LSBs and Y1 in the MSBs. Source: <a href="http://msdn.microsoft.com/en-us/library/dd206750%28v=VS.85%29.aspx#uyvy">http://msdn.microsoft.com/en-us/library/dd206750%28v=VS.85%29.aspx#uyvy</a> </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaad24d29daaae292d3e626c854ce886bbf" name="gga7a0830cb291693cabb364a3403777bdaad24d29daaae292d3e626c854ce886bbf"></a>PJMEDIA_FORMAT_YVYU&#160;</td><td class="fielddoc"><p >This format is the same as the YUY2 and UYVY format except the byte order is reversed &ndash; that is, the chroma and luma bytes are flipped. If the image is addressed as an array of two little-endian WORD values, the first WORD contains Y0 in the LSBs and V in the MSBs, and the second WORD contains Y1 in the LSBs and U in the MSBs. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa603cf0c76dcda73ce7e68266e2c3d7cc" name="gga7a0830cb291693cabb364a3403777bdaa603cf0c76dcda73ce7e68266e2c3d7cc"></a>PJMEDIA_FORMAT_I420&#160;</td><td class="fielddoc"><p >This is planar 4:2:0/12bpp YUV format, the data can be treated as three planes of color components, where the first plane contains only the Y samples, the second plane contains only the U (Cb) samples, and the third plane contains only the V (Cr) sample. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa96453063207773667b1c3babdea382fe" name="gga7a0830cb291693cabb364a3403777bdaa96453063207773667b1c3babdea382fe"></a>PJMEDIA_FORMAT_IYUV&#160;</td><td class="fielddoc"><p >IYUV is alias for I420. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa777dfb82e9dbc259539a9d503cfa74a8" name="gga7a0830cb291693cabb364a3403777bdaa777dfb82e9dbc259539a9d503cfa74a8"></a>PJMEDIA_FORMAT_YV12&#160;</td><td class="fielddoc"><p >This is planar 4:2:0/12bpp YUV format, similar to I420 or IYUV but the U (Cb) and V (Cr) planes order is switched, i.e: the second plane contains the V (Cb) samples and the third plane contains the V (Cr) samples. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa45c4f749ce86d722402261f8acb6f024" name="gga7a0830cb291693cabb364a3403777bdaa45c4f749ce86d722402261f8acb6f024"></a>PJMEDIA_FORMAT_NV12&#160;</td><td class="fielddoc"><p >This is planar 4:2:0/12bpp YUV format, the data can be treated as two planes of color components, where the first plane contains only the Y samples, the second plane contains interleaved U (Cb) - V (Cr) samples. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa93cf9e58d5072c0e448f305910f723c7" name="gga7a0830cb291693cabb364a3403777bdaa93cf9e58d5072c0e448f305910f723c7"></a>PJMEDIA_FORMAT_NV21&#160;</td><td class="fielddoc"><p >This is planar 4:2:0/12bpp YUV format, the data can be treated as two planes of color components, where the first plane contains only the Y samples, the second plane contains interleaved V (Cr) - U (Cb) samples. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaad6989937f3bfb72318b85b7f06fd814c" name="gga7a0830cb291693cabb364a3403777bdaad6989937f3bfb72318b85b7f06fd814c"></a>PJMEDIA_FORMAT_I422&#160;</td><td class="fielddoc"><p >This is planar 4:2:2/16bpp YUV format, the data can be treated as three planes of color components, where the first plane contains only the Y samples, the second plane contains only the U (Cb) samples, and the third plane contains only the V (Cr) sample. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaad3647b4ce55205934c47eca16521f8aa" name="gga7a0830cb291693cabb364a3403777bdaad3647b4ce55205934c47eca16521f8aa"></a>PJMEDIA_FORMAT_I420JPEG&#160;</td><td class="fielddoc"><p >The JPEG version of planar 4:2:0/12bpp YUV format. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa8edcb6c2c960f7ab4601833f12090fa0" name="gga7a0830cb291693cabb364a3403777bdaa8edcb6c2c960f7ab4601833f12090fa0"></a>PJMEDIA_FORMAT_I422JPEG&#160;</td><td class="fielddoc"><p >The JPEG version of planar 4:2:2/16bpp YUV format. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7a0830cb291693cabb364a3403777bdaa631171cb4398bab9b6c2d7c00b4cb10a" name="gga7a0830cb291693cabb364a3403777bdaa631171cb4398bab9b6c2d7c00b4cb10a"></a>PJMEDIA_FORMAT_H261&#160;</td><td class="fielddoc"><p >Encoded video formats </p>
</td></tr>
</table>

</div>
</div>
<a id="ga3272e8f9dc6d369dc9fe5dcb67408fc5" name="ga3272e8f9dc6d369dc9fe5dcb67408fc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3272e8f9dc6d369dc9fe5dcb67408fc5">&#9670;&nbsp;</a></span>pjmedia_format_detail_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMEDIA__FORMAT.htm#ga3272e8f9dc6d369dc9fe5dcb67408fc5">pjmedia_format_detail_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration specifies what type of detail is included in a <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> structure. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga3272e8f9dc6d369dc9fe5dcb67408fc5a1886348e7c4f99f8fa28dfb53930b542" name="gga3272e8f9dc6d369dc9fe5dcb67408fc5a1886348e7c4f99f8fa28dfb53930b542"></a>PJMEDIA_FORMAT_DETAIL_NONE&#160;</td><td class="fielddoc"><p >Format detail is not specified. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga3272e8f9dc6d369dc9fe5dcb67408fc5a08da16fdbe9735e5659539353516ffcc" name="gga3272e8f9dc6d369dc9fe5dcb67408fc5a08da16fdbe9735e5659539353516ffcc"></a>PJMEDIA_FORMAT_DETAIL_AUDIO&#160;</td><td class="fielddoc"><p >Audio format detail. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga3272e8f9dc6d369dc9fe5dcb67408fc5a31494f52b698e2f6313b9e12d825000f" name="gga3272e8f9dc6d369dc9fe5dcb67408fc5a31494f52b698e2f6313b9e12d825000f"></a>PJMEDIA_FORMAT_DETAIL_VIDEO&#160;</td><td class="fielddoc"><p >Video format detail. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga3272e8f9dc6d369dc9fe5dcb67408fc5a43cb8428bbf56b4649734b737fcadee9" name="gga3272e8f9dc6d369dc9fe5dcb67408fc5a43cb8428bbf56b4649734b737fcadee9"></a>PJMEDIA_FORMAT_DETAIL_MAX&#160;</td><td class="fielddoc"><p >Number of format detail type that has been defined. </p>
</td></tr>
</table>

</div>
</div>
<a id="ga552e20ed5aa9339f05fb0024576782ff" name="ga552e20ed5aa9339f05fb0024576782ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga552e20ed5aa9339f05fb0024576782ff">&#9670;&nbsp;</a></span>pjmedia_color_model</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMEDIA__FORMAT.htm#ga552e20ed5aa9339f05fb0024576782ff">pjmedia_color_model</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration describes video color model. It mostly serves as information only. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga552e20ed5aa9339f05fb0024576782ffae219f6d26e32aa14627bf5f52b312533" name="gga552e20ed5aa9339f05fb0024576782ffae219f6d26e32aa14627bf5f52b312533"></a>PJMEDIA_COLOR_MODEL_NONE&#160;</td><td class="fielddoc"><p >The color model is unknown or unspecified. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga552e20ed5aa9339f05fb0024576782ffaf6b17ec77d4f8a13244a247f5cceb4b4" name="gga552e20ed5aa9339f05fb0024576782ffaf6b17ec77d4f8a13244a247f5cceb4b4"></a>PJMEDIA_COLOR_MODEL_RGB&#160;</td><td class="fielddoc"><p >RGB color model. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga552e20ed5aa9339f05fb0024576782ffabdd5dd22aaac32ad0fd63fa82730d27a" name="gga552e20ed5aa9339f05fb0024576782ffabdd5dd22aaac32ad0fd63fa82730d27a"></a>PJMEDIA_COLOR_MODEL_YUV&#160;</td><td class="fielddoc"><p >YUV color model. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gab3c96afc2154a82d848ea76a68f22e6f" name="gab3c96afc2154a82d848ea76a68f22e6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab3c96afc2154a82d848ea76a68f22e6f">&#9670;&nbsp;</a></span>PJMEDIA_SPF()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned PJMEDIA_SPF </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>usec_ptime</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >General utility routine to calculate samples per frame value from clock rate, ptime (in usec), and channel count. Application should use this macro whenever possible due to possible overflow in the math calculation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">clock_rate</td><td>Clock rate. </td></tr>
    <tr><td class="paramname">usec_ptime</td><td>Frame interval, in microsecond. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Number of channels.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The samples per frame value. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>.</p>

<p class="reference">Referenced by <a class="el" href="group__PJMEDIA__FORMAT.htm#ga5d7e70941b4c15d4d8c10ee795311b2b">PJMEDIA_AFD_SPF()</a>.</p>

</div>
</div>
<a id="ga820e313f6d5ce26434ca5bc8c5d4b30c" name="ga820e313f6d5ce26434ca5bc8c5d4b30c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga820e313f6d5ce26434ca5bc8c5d4b30c">&#9670;&nbsp;</a></span>PJMEDIA_SPF2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned PJMEDIA_SPF2 </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__ratio.htm">pjmedia_ratio</a> *&#160;</td>
          <td class="paramname"><em>fr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Variant of <a class="el" href="group__PJMEDIA__FORMAT.htm#gab3c96afc2154a82d848ea76a68f22e6f">PJMEDIA_SPF()</a> which takes frame rate instead of ptime. </p>

<p class="reference">References <a class="el" href="structpjmedia__ratio.htm#a0eed3e9cb263b3aa8e61d7f90b4f2992">pjmedia_ratio::denum</a>, and <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>.</p>

</div>
</div>
<a id="ga42faba3807c5ed5732bc26789adf1f80" name="ga42faba3807c5ed5732bc26789adf1f80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga42faba3807c5ed5732bc26789adf1f80">&#9670;&nbsp;</a></span>PJMEDIA_FSZ()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned PJMEDIA_FSZ </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>usec_ptime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Utility routine to calculate frame size (in bytes) from bitrate and frame interval values. Application should use this macro whenever possible due to possible overflow in the math calculation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bps</td><td>The bitrate of the stream. </td></tr>
    <tr><td class="paramname">usec_ptime</td><td>Frame interval, in microsecond.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Frame size in bytes. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>.</p>

<p class="reference">Referenced by <a class="el" href="group__PJMEDIA__FORMAT.htm#ga2fd91433f9a6b60190a42d79a3729921">PJMEDIA_AFD_AVG_FSZ()</a>, and <a class="el" href="group__PJMEDIA__FORMAT.htm#gae2c3ca6945d4c0cae8911db6c9343938">PJMEDIA_AFD_MAX_FSZ()</a>.</p>

</div>
</div>
<a id="ga52ed586320fee34544495f8cb505af63" name="ga52ed586320fee34544495f8cb505af63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga52ed586320fee34544495f8cb505af63">&#9670;&nbsp;</a></span>PJMEDIA_PTIME()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned PJMEDIA_PTIME </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__ratio.htm">pjmedia_ratio</a> *&#160;</td>
          <td class="paramname"><em>frame_rate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >General utility routine to calculate ptime value from frame rate. Application should use this macro whenever possible due to possible overflow in the math calculation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">frame_rate</td><td>Frame rate</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The ptime value (in usec). </dd></dl>

<p class="reference">References <a class="el" href="structpjmedia__ratio.htm#a0eed3e9cb263b3aa8e61d7f90b4f2992">pjmedia_ratio::denum</a>, and <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>.</p>

</div>
</div>
<a id="ga5d7e70941b4c15d4d8c10ee795311b2b" name="ga5d7e70941b4c15d4d8c10ee795311b2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5d7e70941b4c15d4d8c10ee795311b2b">&#9670;&nbsp;</a></span>PJMEDIA_AFD_SPF()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned PJMEDIA_AFD_SPF </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> *&#160;</td>
          <td class="paramname"><em>pafd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Utility to retrieve samples_per_frame value from <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pafd</td><td>Pointer to <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Samples per frame </dd></dl>

<p class="reference">References <a class="el" href="structpjmedia__audio__format__detail.htm#a67673800f0948be30861c621cd456d63">pjmedia_audio_format_detail::channel_count</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#a024c6445c73f749b6998851dbbe529e7">pjmedia_audio_format_detail::clock_rate</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#af068d63a7b9d3b1239bfe7ae98deb644">pjmedia_audio_format_detail::frame_time_usec</a>, <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, and <a class="el" href="group__PJMEDIA__FORMAT.htm#gab3c96afc2154a82d848ea76a68f22e6f">PJMEDIA_SPF()</a>.</p>

<p class="reference">Referenced by <a class="el" href="group__PJMEDIA__PORT.htm#ga6dee744f71bd8adc87a76add5b2f5d9b">PJMEDIA_PIA_SPF()</a>.</p>

</div>
</div>
<a id="ga2fd91433f9a6b60190a42d79a3729921" name="ga2fd91433f9a6b60190a42d79a3729921"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2fd91433f9a6b60190a42d79a3729921">&#9670;&nbsp;</a></span>PJMEDIA_AFD_AVG_FSZ()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned PJMEDIA_AFD_AVG_FSZ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> *&#160;</td>
          <td class="paramname"><em>afd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Utility to retrieve average frame size from <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a>. The average frame size is derived from the average bitrate of the audio stream.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">afd</td><td>Pointer to <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Average frame size. </dd></dl>

<p class="reference">References <a class="el" href="structpjmedia__audio__format__detail.htm#a0a9318bf7706ecc121000b292a564f65">pjmedia_audio_format_detail::avg_bps</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#af068d63a7b9d3b1239bfe7ae98deb644">pjmedia_audio_format_detail::frame_time_usec</a>, <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, and <a class="el" href="group__PJMEDIA__FORMAT.htm#ga42faba3807c5ed5732bc26789adf1f80">PJMEDIA_FSZ()</a>.</p>

<p class="reference">Referenced by <a class="el" href="group__PJMEDIA__PORT.htm#ga2ed9fd6cae549e8b657d3f182d2e5971">PJMEDIA_PIA_AVG_FSZ()</a>.</p>

</div>
</div>
<a id="gae2c3ca6945d4c0cae8911db6c9343938" name="gae2c3ca6945d4c0cae8911db6c9343938"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae2c3ca6945d4c0cae8911db6c9343938">&#9670;&nbsp;</a></span>PJMEDIA_AFD_MAX_FSZ()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned PJMEDIA_AFD_MAX_FSZ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> *&#160;</td>
          <td class="paramname"><em>afd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Utility to retrieve maximum frame size from <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a>. The maximum frame size is derived from the maximum bitrate of the audio stream.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">afd</td><td>Pointer to <a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Average frame size. </dd></dl>

<p class="reference">References <a class="el" href="structpjmedia__audio__format__detail.htm#af068d63a7b9d3b1239bfe7ae98deb644">pjmedia_audio_format_detail::frame_time_usec</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#aaa2de4b71b732e523fd17f92e7562210">pjmedia_audio_format_detail::max_bps</a>, <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, and <a class="el" href="group__PJMEDIA__FORMAT.htm#ga42faba3807c5ed5732bc26789adf1f80">PJMEDIA_FSZ()</a>.</p>

<p class="reference">Referenced by <a class="el" href="group__PJMEDIA__PORT.htm#gafcc367860b1712ab9c0a1f5645a04e9b">PJMEDIA_PIA_MAX_FSZ()</a>.</p>

</div>
</div>
<a id="gaa1619eaabe031a5fcfef40fedcd9760a" name="gaa1619eaabe031a5fcfef40fedcd9760a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa1619eaabe031a5fcfef40fedcd9760a">&#9670;&nbsp;</a></span>pjmedia_format_init_audio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_format_init_audio </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>fmt_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bits_per_sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>frame_time_usec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>avg_bps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>max_bps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Initialize the format as audio format with the specified parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fmt</td><td>The format to be initialized. </td></tr>
    <tr><td class="paramname">fmt_id</td><td>Format ID. See <a class="el" href="group__PJMEDIA__FORMAT.htm#ga7a0830cb291693cabb364a3403777bda">pjmedia_format_id</a> </td></tr>
    <tr><td class="paramname">clock_rate</td><td>Audio clock rate. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Number of channels. </td></tr>
    <tr><td class="paramname">bits_per_sample</td><td>Number of bits per sample. </td></tr>
    <tr><td class="paramname">frame_time_usec</td><td>Frame interval, in microsecond. </td></tr>
    <tr><td class="paramname">avg_bps</td><td>Average bitrate. </td></tr>
    <tr><td class="paramname">max_bps</td><td>Maximum bitrate. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="structpjmedia__format.htm#a50cc5dc38842555b01a57162c710313f">pjmedia_format::aud</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#a0a9318bf7706ecc121000b292a564f65">pjmedia_audio_format_detail::avg_bps</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#a57a3bf757e6f88e740cc130c308f2146">pjmedia_audio_format_detail::bits_per_sample</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#a67673800f0948be30861c621cd456d63">pjmedia_audio_format_detail::channel_count</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#a024c6445c73f749b6998851dbbe529e7">pjmedia_audio_format_detail::clock_rate</a>, <a class="el" href="structpjmedia__format.htm#a185aa234c35378cc5b27625ab826ef0c">pjmedia_format::det</a>, <a class="el" href="structpjmedia__format.htm#a811ce8dac8a67f33999e106ee01d93e8">pjmedia_format::detail_type</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#af068d63a7b9d3b1239bfe7ae98deb644">pjmedia_audio_format_detail::frame_time_usec</a>, <a class="el" href="structpjmedia__format.htm#a5115e0d9d35a8e8fb7ecbde8b772f700">pjmedia_format::id</a>, <a class="el" href="structpjmedia__audio__format__detail.htm#aaa2de4b71b732e523fd17f92e7562210">pjmedia_audio_format_detail::max_bps</a>, <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, <a class="el" href="group__PJMEDIA__FORMAT.htm#gga3272e8f9dc6d369dc9fe5dcb67408fc5a08da16fdbe9735e5659539353516ffcc">PJMEDIA_FORMAT_DETAIL_AUDIO</a>, <a class="el" href="group__PJMEDIA__TYPES.htm#gga90c297eda05c19355635cecb9e7d9323a6bb3422797739e194f45325f497561f4">PJMEDIA_TYPE_AUDIO</a>, and <a class="el" href="structpjmedia__format.htm#a001c611f2e81466d98cac107502a9e18">pjmedia_format::type</a>.</p>

</div>
</div>
<a id="gab18e56e6f2c64f79abc57bcf50f2f423" name="gab18e56e6f2c64f79abc57bcf50f2f423"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab18e56e6f2c64f79abc57bcf50f2f423">&#9670;&nbsp;</a></span>pjmedia_format_init_video()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_format_init_video </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>fmt_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>fps_num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>fps_denum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Initialize the format as video format with the specified parameters. A format manager should have been created, as this function will need to consult to a format manager in order to fill in detailed information about the format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fmt</td><td>The format to be initialised. </td></tr>
    <tr><td class="paramname">fmt_id</td><td>Format ID. See <a class="el" href="group__PJMEDIA__FORMAT.htm#ga7a0830cb291693cabb364a3403777bda">pjmedia_format_id</a> </td></tr>
    <tr><td class="paramname">width</td><td>Image width. </td></tr>
    <tr><td class="paramname">height</td><td>Image heigth. </td></tr>
    <tr><td class="paramname">fps_num</td><td>FPS numerator. </td></tr>
    <tr><td class="paramname">fps_denum</td><td>FPS denumerator. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gac83f34d6a165779978918df3a42a8f1f" name="gac83f34d6a165779978918df3a42a8f1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac83f34d6a165779978918df3a42a8f1f">&#9670;&nbsp;</a></span>pjmedia_format_copy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__format.htm">pjmedia_format</a> * pjmedia_format_copy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Copy format to another.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dst</td><td>The destination format. </td></tr>
    <tr><td class="paramname">src</td><td>The source format.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to destination format. </dd></dl>

</div>
</div>
<a id="ga379c93e88a574637b6e8ce4635b9c4a4" name="ga379c93e88a574637b6e8ce4635b9c4a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga379c93e88a574637b6e8ce4635b9c4a4">&#9670;&nbsp;</a></span>pjmedia_format_get_audio_format_detail()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__audio__format__detail.htm">pjmedia_audio_format_detail</a> * pjmedia_format_get_audio_format_detail </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>assert_valid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Check if the format contains audio format, and retrieve the audio format detail in the format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fmt</td><td>The format structure. </td></tr>
    <tr><td class="paramname">assert_valid</td><td>If this is set to non-zero, an assertion will be raised if the detail type is not audio or if the the detail is NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The instance of audio format detail in the format structure, or NULL if the format doesn't contain audio detail. </dd></dl>

</div>
</div>
<a id="gac9e18593edc8d051ee80e8c37ba8350a" name="gac9e18593edc8d051ee80e8c37ba8350a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac9e18593edc8d051ee80e8c37ba8350a">&#9670;&nbsp;</a></span>pjmedia_format_get_video_format_detail()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__video__format__detail.htm">pjmedia_video_format_detail</a> * pjmedia_format_get_video_format_detail </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>assert_valid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Check if the format contains video format, and retrieve the video format detail in the format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fmt</td><td>The format structure. </td></tr>
    <tr><td class="paramname">assert_valid</td><td>If this is set to non-zero, an assertion will be raised if the detail type is not video or if the the detail is NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The instance of video format detail in the format structure, or NULL if the format doesn't contain video detail. </dd></dl>

</div>
</div>
<a id="gaed9bc73ac9048239d28193916f9a2a91" name="gaed9bc73ac9048239d28193916f9a2a91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed9bc73ac9048239d28193916f9a2a91">&#9670;&nbsp;</a></span>pjmedia_video_format_mgr_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_video_format_mgr_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>max_fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> **&#160;</td>
          <td class="paramname"><em>p_mgr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a new video format manager instance. This will also set the pointer to the singleton instance if the value is still NULL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory. </td></tr>
    <tr><td class="paramname">max_fmt</td><td>Maximum number of formats to accommodate. </td></tr>
    <tr><td class="paramname">options</td><td>Option flags. Must be zero for now. </td></tr>
    <tr><td class="paramname">p_mgr</td><td>Pointer to hold the created instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appripriate error value. </dd></dl>

</div>
</div>
<a id="gab6856edda3cf909b461bfb78e76cc8ec" name="gab6856edda3cf909b461bfb78e76cc8ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab6856edda3cf909b461bfb78e76cc8ec">&#9670;&nbsp;</a></span>pjmedia_video_format_mgr_instance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> * pjmedia_video_format_mgr_instance </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the singleton instance of the video format manager.</p>
<dl class="section return"><dt>Returns</dt><dd>The instance. </dd></dl>

</div>
</div>
<a id="ga22584dece952e58b92f42872df887fb3" name="ga22584dece952e58b92f42872df887fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga22584dece952e58b92f42872df887fb3">&#9670;&nbsp;</a></span>pjmedia_video_format_mgr_set_instance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_video_format_mgr_set_instance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *&#160;</td>
          <td class="paramname"><em>mgr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Manually assign a specific video manager instance as the singleton instance. Normally this is not needed if only one instance is ever going to be created, as the library automatically assign the singleton instance.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mgr</td><td>The instance to be used as the singleton instance. Application may specify NULL to clear the singleton singleton instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga778067231c047b0eaaec53537297e1cc" name="ga778067231c047b0eaaec53537297e1cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga778067231c047b0eaaec53537297e1cc">&#9670;&nbsp;</a></span>pjmedia_get_video_format_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structpjmedia__video__format__info.htm">pjmedia_video_format_info</a> * pjmedia_get_video_format_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *&#160;</td>
          <td class="paramname"><em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve a video format info for the specified format id.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mgr</td><td>The video format manager. Specify NULL to use the singleton instance (however, a video format manager still must have been created prior to calling this function). </td></tr>
    <tr><td class="paramname">id</td><td>The format id which format info is to be retrieved.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The video format info. </dd></dl>

</div>
</div>
<a id="ga1c1c8363bef9b306c80ee27ef945f86c" name="ga1c1c8363bef9b306c80ee27ef945f86c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1c1c8363bef9b306c80ee27ef945f86c">&#9670;&nbsp;</a></span>pjmedia_register_video_format_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_register_video_format_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *&#160;</td>
          <td class="paramname"><em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__video__format__info.htm">pjmedia_video_format_info</a> *&#160;</td>
          <td class="paramname"><em>vfi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register a new video format to the framework. By default, built-in formats will be registered automatically to the format manager when it is created (note: built-in formats are ones which format id is listed in pjmedia_format_id enumeration). This function allows application to use user defined format id by registering that format into the framework.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mgr</td><td>The video format manager. Specify NULL to use the singleton instance (however, a video format manager still must have been created prior to calling this function). </td></tr>
    <tr><td class="paramname">vfi</td><td>The video format info to be registered. This structure must remain valid until the format manager is destroyed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appripriate error value. </dd></dl>

</div>
</div>
<a id="ga68cbb74df2431495318f7edfb1622821" name="ga68cbb74df2431495318f7edfb1622821"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga68cbb74df2431495318f7edfb1622821">&#9670;&nbsp;</a></span>pjmedia_video_format_mgr_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_video_format_mgr_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__FORMAT.htm#ga03aafe9d4903bb7c6f3f98dabbbac1a2">pjmedia_video_format_mgr</a> *&#160;</td>
          <td class="paramname"><em>mgr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destroy a video format manager. If the manager happens to be the singleton instance, the singleton instance will be set to NULL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mgr</td><td>The video format manager. Specify NULL to use the singleton instance (however, a video format manager still must have been created prior to calling this function). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaa14db4daeb82b36fa39e57dbf99f2b90" name="gaa14db4daeb82b36fa39e57dbf99f2b90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa14db4daeb82b36fa39e57dbf99f2b90">&#9670;&nbsp;</a></span>pjmedia_video_format_fill_black()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_video_format_fill_black </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__format.htm">pjmedia_format</a> *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>buf_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Fill video frame buffer with black color.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fmt</td><td>The video format. </td></tr>
    <tr><td class="paramname">buf</td><td>The frame buffer. </td></tr>
    <tr><td class="paramname">buf_size</td><td>The frame buffer size.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
