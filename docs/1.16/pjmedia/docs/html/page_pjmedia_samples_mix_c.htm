<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Samples: Mixing WAV files (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Samples: Mixing WAV files </h1>  </div>
</div>
<div class="contents">
<p>This file is pjsip-apps/src/samples/mix.c</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: mix.c 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;pjlib.h&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;pjlib-util.h&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;<a class="code" href="pjmedia_8h.htm" title="PJMEDIA main header file.">pjmedia.h</a>&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#define THIS_FILE   &quot;mix.c&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span>
<a name="l00035"></a>00035 <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *desc = 
<a name="l00036"></a>00036  <span class="stringliteral">&quot; mix\n&quot;</span>
<a name="l00037"></a>00037  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00038"></a>00038  <span class="stringliteral">&quot; PURPOSE:\n&quot;</span>
<a name="l00039"></a>00039  <span class="stringliteral">&quot;  Mix input WAV files and save it to output WAV. Input WAV can have\n&quot;</span>
<a name="l00040"></a>00040  <span class="stringliteral">&quot;  different clock rate.\n&quot;</span>
<a name="l00041"></a>00041  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00042"></a>00042  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00043"></a>00043  <span class="stringliteral">&quot; USAGE:\n&quot;</span>
<a name="l00044"></a>00044  <span class="stringliteral">&quot;  mix [options] output.wav input1.wav [input2.wav] ...\n&quot;</span>
<a name="l00045"></a>00045  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00046"></a>00046  <span class="stringliteral">&quot; arguments:\n&quot;</span>
<a name="l00047"></a>00047  <span class="stringliteral">&quot;    output.wav    Set the output WAV filename.\n&quot;</span>
<a name="l00048"></a>00048  <span class="stringliteral">&quot;    input1.wav    Set the input WAV filename.\n&quot;</span>
<a name="l00049"></a>00049  <span class="stringliteral">&quot;    input2.wav    Set the input WAV filename.\n&quot;</span>
<a name="l00050"></a>00050  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00051"></a>00051  <span class="stringliteral">&quot; options:\n&quot;</span>
<a name="l00052"></a>00052  <span class="stringliteral">&quot;    -c N          Set clock rate to N Hz (default 16000)\n&quot;</span>
<a name="l00053"></a>00053  <span class="stringliteral">&quot;    -f            Force write (overwrite output without warning\n&quot;</span>
<a name="l00054"></a>00054 ;
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="preprocessor">#define MAX_WAV     16</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span><span class="preprocessor">#define PTIME       20</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span><span class="preprocessor">#define APPEND      1000</span>
<a name="l00059"></a>00059 <span class="preprocessor"></span>
<a name="l00060"></a>00060 <span class="keyword">struct </span><a class="code" href="structwav__input.htm">wav_input</a>
<a name="l00061"></a>00061 {
<a name="l00062"></a>00062     <span class="keyword">const</span> <span class="keywordtype">char</span>      *fname;
<a name="l00063"></a>00063     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a>    *port;
<a name="l00064"></a>00064     <span class="keywordtype">unsigned</span>         slot;
<a name="l00065"></a>00065 };
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 <span class="keyword">static</span> <span class="keywordtype">int</span> err_ret(<span class="keyword">const</span> <span class="keywordtype">char</span> *title, <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)
<a name="l00068"></a>00068 {
<a name="l00069"></a>00069     <span class="keywordtype">char</span> errmsg[PJ_ERR_MSG_SIZE];
<a name="l00070"></a>00070     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__errno.htm#ga7d2616aded0d61924fb31f4fd6ee45c0">pj_strerror</a>(status, errmsg, <span class="keyword">sizeof</span>(errmsg));
<a name="l00071"></a>00071     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;%s error: %s&quot;</span>, title, errmsg));
<a name="l00072"></a>00072     <span class="keywordflow">return</span> 1;
<a name="l00073"></a>00073 }
<a name="l00074"></a>00074 
<a name="l00075"></a>00075 <span class="keyword">static</span> <span class="keywordtype">void</span> usage(<span class="keywordtype">void</span>)
<a name="l00076"></a>00076 {
<a name="l00077"></a>00077     puts(desc);
<a name="l00078"></a>00078 }
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
<a name="l00081"></a>00081 {
<a name="l00082"></a>00082     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm">pj_caching_pool</a> cp;
<a name="l00083"></a>00083     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool;
<a name="l00084"></a>00084     <a class="code" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *med_ept;
<a name="l00085"></a>00085     <span class="keywordtype">unsigned</span> clock_rate = 16000;
<a name="l00086"></a>00086     <span class="keywordtype">int</span> c, force=0;
<a name="l00087"></a>00087     <span class="keyword">const</span> <span class="keywordtype">char</span> *out_fname;
<a name="l00088"></a>00088     <a class="code" href="group__PJMEDIA__CONF.htm#ga7af91147cffd957784f2e51b72d19edd">pjmedia_conf</a> *conf;
<a name="l00089"></a>00089     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *wavout;
<a name="l00090"></a>00090     <span class="keyword">struct </span><a class="code" href="structwav__input.htm">wav_input</a> <a class="code" href="structwav__input.htm">wav_input</a>[MAX_WAV];
<a name="l00091"></a>00091     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> longest = 0, processed;
<a name="l00092"></a>00092     <span class="keywordtype">unsigned</span> i, input_cnt = 0;
<a name="l00093"></a>00093     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="preprocessor">#define CHECK(op)   do { \</span>
<a name="l00096"></a>00096 <span class="preprocessor">                        status = op; \</span>
<a name="l00097"></a>00097 <span class="preprocessor">                        if (status != PJ_SUCCESS) \</span>
<a name="l00098"></a>00098 <span class="preprocessor">                            return err_ret(#op, status); \</span>
<a name="l00099"></a>00099 <span class="preprocessor">                    } while (0)</span>
<a name="l00100"></a>00100 <span class="preprocessor"></span>
<a name="l00101"></a>00101 
<a name="l00102"></a>00102     <span class="comment">/* Parse arguments */</span>
<a name="l00103"></a>00103     <span class="keywordflow">while</span> ((c=<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga4b0616c67077cdc496c1bb963c414970">pj_getopt</a>(argc, argv, <span class="stringliteral">&quot;c:f&quot;</span>)) != -1) {
<a name="l00104"></a>00104         <span class="keywordflow">switch</span> (c) {
<a name="l00105"></a>00105         <span class="keywordflow">case</span> <span class="charliteral">&#39;c&#39;</span>:
<a name="l00106"></a>00106             clock_rate = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00107"></a>00107             <span class="keywordflow">if</span> (clock_rate &lt; 1000) {
<a name="l00108"></a>00108                 puts(<span class="stringliteral">&quot;Error: invalid clock rate&quot;</span>);
<a name="l00109"></a>00109                 usage();
<a name="l00110"></a>00110                 <span class="keywordflow">return</span> -1;
<a name="l00111"></a>00111             }
<a name="l00112"></a>00112             <span class="keywordflow">break</span>;
<a name="l00113"></a>00113         <span class="keywordflow">case</span> <span class="charliteral">&#39;f&#39;</span>:
<a name="l00114"></a>00114             force = 1;
<a name="l00115"></a>00115             <span class="keywordflow">break</span>;
<a name="l00116"></a>00116         }
<a name="l00117"></a>00117     }
<a name="l00118"></a>00118 
<a name="l00119"></a>00119     <span class="comment">/* Get output WAV name */</span>
<a name="l00120"></a>00120     <span class="keywordflow">if</span> (pj_optind == argc) {
<a name="l00121"></a>00121         puts(<span class="stringliteral">&quot;Error: no WAV output is specified&quot;</span>);
<a name="l00122"></a>00122         usage();
<a name="l00123"></a>00123         <span class="keywordflow">return</span> 1;
<a name="l00124"></a>00124     }
<a name="l00125"></a>00125 
<a name="l00126"></a>00126     out_fname = argv[pj_optind++];
<a name="l00127"></a>00127     <span class="keywordflow">if</span> (force==0 &amp;&amp; <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__FILE__ACCESS.htm#ga8727e31c1d3499969bc8eef69cb04c11">pj_file_exists</a>(out_fname)) {
<a name="l00128"></a>00128         <span class="keywordtype">char</span> in[8];
<a name="l00129"></a>00129 
<a name="l00130"></a>00130         printf(<span class="stringliteral">&quot;File %s exists, overwrite? [Y/N] &quot;</span>, out_fname);
<a name="l00131"></a>00131         fflush(stdout);
<a name="l00132"></a>00132         <span class="keywordflow">if</span> (fgets(in, <span class="keyword">sizeof</span>(in), stdin) == NULL)
<a name="l00133"></a>00133             <span class="keywordflow">return</span> 1;
<a name="l00134"></a>00134         <span class="keywordflow">if</span> (<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__ctype.htm#ga066d70327f5ccb31f4f92a87f6f6bcbf">pj_tolower</a>(in[0]) != <span class="charliteral">&#39;y&#39;</span>)
<a name="l00135"></a>00135             <span class="keywordflow">return</span> 1;
<a name="l00136"></a>00136     }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138     <span class="comment">/* Scan input file names */</span>
<a name="l00139"></a>00139     <span class="keywordflow">for</span> (input_cnt=0 ; pj_optind&lt;argc &amp;&amp; input_cnt&lt;MAX_WAV; 
<a name="l00140"></a>00140          ++pj_optind, ++input_cnt) 
<a name="l00141"></a>00141     {
<a name="l00142"></a>00142         <span class="keywordflow">if</span> (!<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__FILE__ACCESS.htm#ga8727e31c1d3499969bc8eef69cb04c11">pj_file_exists</a>(argv[pj_optind])) {
<a name="l00143"></a>00143             printf(<span class="stringliteral">&quot;Error: input file %s doesn&#39;t exist\n&quot;</span>,
<a name="l00144"></a>00144                    argv[pj_optind]);
<a name="l00145"></a>00145             <span class="keywordflow">return</span> 1;
<a name="l00146"></a>00146         }
<a name="l00147"></a>00147         <a class="code" href="structwav__input.htm">wav_input</a>[input_cnt].fname = argv[pj_optind];
<a name="l00148"></a>00148         <a class="code" href="structwav__input.htm">wav_input</a>[input_cnt].port = NULL;
<a name="l00149"></a>00149         <a class="code" href="structwav__input.htm">wav_input</a>[input_cnt].slot = 0;
<a name="l00150"></a>00150     }
<a name="l00151"></a>00151 
<a name="l00152"></a>00152     <span class="keywordflow">if</span> (input_cnt == 0) {
<a name="l00153"></a>00153         puts(<span class="stringliteral">&quot;Error: no input WAV is specified&quot;</span>);
<a name="l00154"></a>00154         <span class="keywordflow">return</span> 0;
<a name="l00155"></a>00155     }
<a name="l00156"></a>00156 
<a name="l00157"></a>00157     <span class="comment">/* Initialialize */</span>
<a name="l00158"></a>00158     CHECK( <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga069615152140fa2df009cebc8a36b769">pj_init</a>() );
<a name="l00159"></a>00159     CHECK( <a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__BASE.htm#gaf44fef477c4b0e38a99004965fc55110">pjlib_util_init</a>() );
<a name="l00160"></a>00160     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>(&amp;cp, NULL, 0);
<a name="l00161"></a>00161     CHECK( <a class="code" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, NULL, 1, &amp;med_ept) );
<a name="l00162"></a>00162 
<a name="l00163"></a>00163     pool = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, <span class="stringliteral">&quot;mix&quot;</span>, 1000, 1000, NULL);
<a name="l00164"></a>00164 
<a name="l00165"></a>00165     <span class="comment">/* Create the bridge */</span>
<a name="l00166"></a>00166     CHECK( <a class="code" href="group__PJMEDIA__CONF.htm#gad5472b9cfd45952fa209e830188b63ae">pjmedia_conf_create</a>(pool, MAX_WAV+4, clock_rate, 1, 
<a name="l00167"></a>00167                                clock_rate * PTIME / 1000, 16, 
<a name="l00168"></a>00168                                <a class="code" href="group__PJMEDIA__CONF.htm#gga95e1f5fd21e35d6317cc218844c2e0baaca6d818006ba08b360cdf63e5f14ed01">PJMEDIA_CONF_NO_DEVICE</a>, &amp;conf) );
<a name="l00169"></a>00169 
<a name="l00170"></a>00170     <span class="comment">/* Create the WAV output */</span>
<a name="l00171"></a>00171     CHECK( <a class="code" href="group__PJMEDIA__FILE__REC.htm#ga899268674e9657e8033738bca29621a2">pjmedia_wav_writer_port_create</a>(pool, out_fname, clock_rate, 1,
<a name="l00172"></a>00172                                           clock_rate * PTIME / 1000,
<a name="l00173"></a>00173                                           16, 0, 0, &amp;wavout) );
<a name="l00174"></a>00174 
<a name="l00175"></a>00175     <span class="comment">/* Create and register each WAV input to the bridge */</span>
<a name="l00176"></a>00176     <span class="keywordflow">for</span> (i=0; i&lt;input_cnt; ++i) {
<a name="l00177"></a>00177         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> len;
<a name="l00178"></a>00178 
<a name="l00179"></a>00179         CHECK( <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga987129692be57281a40c836e8749313f">pjmedia_wav_player_port_create</a>(pool, <a class="code" href="structwav__input.htm">wav_input</a>[i].fname, 20,
<a name="l00180"></a>00180                                               <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#gga090e1b63247b254576a9b20a53bb4568aec9c00b3a775a1b34f1c41ff12bae159">PJMEDIA_FILE_NO_LOOP</a>, 0, 
<a name="l00181"></a>00181                                               &amp;<a class="code" href="structwav__input.htm">wav_input</a>[i].port) );
<a name="l00182"></a>00182         len = <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga819348ffae491fb645d86ae1ef85ff55">pjmedia_wav_player_get_len</a>(<a class="code" href="structwav__input.htm">wav_input</a>[i].port);
<a name="l00183"></a>00183         len = (pj_ssize_t)(len * 1.0 * clock_rate / 
<a name="l00184"></a>00184                             <a class="code" href="structwav__input.htm">wav_input</a>[i].port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a>);
<a name="l00185"></a>00185         <span class="keywordflow">if</span> (len &gt; (<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a>)longest)
<a name="l00186"></a>00186             longest = len;
<a name="l00187"></a>00187 
<a name="l00188"></a>00188         CHECK( <a class="code" href="group__PJMEDIA__CONF.htm#ga9d056daff78457a4b770b479df15f657">pjmedia_conf_add_port</a>(conf, pool, <a class="code" href="structwav__input.htm">wav_input</a>[i].port,
<a name="l00189"></a>00189                                      NULL, &amp;<a class="code" href="structwav__input.htm">wav_input</a>[i].slot));
<a name="l00190"></a>00190 
<a name="l00191"></a>00191         CHECK( <a class="code" href="group__PJMEDIA__CONF.htm#ga2cb7faa6a252f2ed9b95c845347f915b">pjmedia_conf_connect_port</a>(conf, <a class="code" href="structwav__input.htm">wav_input</a>[i].slot, 0, 0) );
<a name="l00192"></a>00192     }
<a name="l00193"></a>00193 
<a name="l00194"></a>00194     <span class="comment">/* Loop reading frame from the bridge and write it to WAV */</span>
<a name="l00195"></a>00195     processed = 0;
<a name="l00196"></a>00196     <span class="keywordflow">while</span> (processed &lt; longest + clock_rate * APPEND * 2 / 1000) {
<a name="l00197"></a>00197         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1bc332ac2d70cd1a23adef144571790f">pj_int16_t</a> framebuf[PTIME * 48000 / 1000];
<a name="l00198"></a>00198         <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *cp = <a class="code" href="group__PJMEDIA__CONF.htm#gafcac2438fa076eb94571de14e51835cb">pjmedia_conf_get_master_port</a>(conf);
<a name="l00199"></a>00199         <a class="code" href="structpjmedia__frame.htm">pjmedia_frame</a> frame;
<a name="l00200"></a>00200 
<a name="l00201"></a>00201         frame.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = framebuf;
<a name="l00202"></a>00202         frame.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = cp-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> * 2;
<a name="l00203"></a>00203         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#ga981d47a5e9d7e9655473244839f0f5d3">pj_assert</a>(frame.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> &lt;= <span class="keyword">sizeof</span>(framebuf));
<a name="l00204"></a>00204         
<a name="l00205"></a>00205         CHECK( <a class="code" href="group__PJMEDIA__PORT.htm#gabb664bcbd6c07ac3b0b4793a68c9a757">pjmedia_port_get_frame</a>(cp, &amp;frame) );
<a name="l00206"></a>00206 
<a name="l00207"></a>00207         <span class="keywordflow">if</span> (frame.<a class="code" href="structpjmedia__frame.htm#a7b4e62af4cbe9e40aa9ef276b43f61dc">type</a> != <a class="code" href="group__PJMEDIA__TYPES.htm#gga59dceaa77e4a0d37f8a89f1f2af04cf2af26cab1ae619c9ea6420407b2587c724">PJMEDIA_FRAME_TYPE_AUDIO</a>) {
<a name="l00208"></a>00208             <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#gafa92001573289c87313c660146369fa3">pj_bzero</a>(frame.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a>, frame.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>);
<a name="l00209"></a>00209             frame.<a class="code" href="structpjmedia__frame.htm#a7b4e62af4cbe9e40aa9ef276b43f61dc">type</a> = PJMEDIA_FRAME_TYPE_AUDIO;
<a name="l00210"></a>00210         }
<a name="l00211"></a>00211 
<a name="l00212"></a>00212         CHECK( <a class="code" href="group__PJMEDIA__PORT.htm#ga8f5f75da0c30cac7770805472bbfa9d7">pjmedia_port_put_frame</a>(wavout, &amp;frame));
<a name="l00213"></a>00213 
<a name="l00214"></a>00214         processed += frame.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>;
<a name="l00215"></a>00215     }
<a name="l00216"></a>00216 
<a name="l00217"></a>00217     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;Done. Output duration: %d.%03d&quot;</span>,
<a name="l00218"></a>00218               (processed &gt;&gt; 2)/clock_rate,
<a name="l00219"></a>00219               ((processed &gt;&gt; 2)*1000/clock_rate) % 1000));
<a name="l00220"></a>00220 
<a name="l00221"></a>00221     <span class="comment">/* Shutdown everything */</span>
<a name="l00222"></a>00222     CHECK( <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>(wavout) );
<a name="l00223"></a>00223     <span class="keywordflow">for</span> (i=0; i&lt;input_cnt; ++i) {
<a name="l00224"></a>00224         CHECK( <a class="code" href="group__PJMEDIA__CONF.htm#gacdc2225684e723a260c669cc88629882">pjmedia_conf_remove_port</a>(conf, <a class="code" href="structwav__input.htm">wav_input</a>[i].slot) );
<a name="l00225"></a>00225         CHECK( <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>(<a class="code" href="structwav__input.htm">wav_input</a>[i].port) );
<a name="l00226"></a>00226     }
<a name="l00227"></a>00227 
<a name="l00228"></a>00228     CHECK(<a class="code" href="group__PJMEDIA__CONF.htm#ga4d785e898ad613ca80904eb452935437">pjmedia_conf_destroy</a>(conf));
<a name="l00229"></a>00229     CHECK(<a class="code" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy</a>(med_ept));
<a name="l00230"></a>00230 
<a name="l00231"></a>00231     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release</a>(pool);
<a name="l00232"></a>00232     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#ga4c912e7d9e08dae33c2fecea9f1949bc">pj_caching_pool_destroy</a>(&amp;cp);
<a name="l00233"></a>00233     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gad42209dcf11f957ed9f1790e30f519cd">pj_shutdown</a>();
<a name="l00234"></a>00234 
<a name="l00235"></a>00235     <span class="keywordflow">return</span> 0;
<a name="l00236"></a>00236 }
<a name="l00237"></a>00237 
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
