<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj_ssl_sock_param Struct Reference (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">pj_ssl_sock_param Struct Reference<div class="ingroups"><a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a> &raquo; <a class="el" href="group__PJ__IO.htm">Input/Output</a> &raquo; <a class="el" href="group__PJ__SSL__SOCK.htm">Secure socket I/O</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a2c6feea9a2e63c76cc01b806dc665448"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a2c6feea9a2e63c76cc01b806dc665448">grp_lock</a></td></tr>
<tr class="separator:a2c6feea9a2e63c76cc01b806dc665448"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc97a0b29e06776239a079ea6ef507f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#adc97a0b29e06776239a079ea6ef507f9">sock_af</a></td></tr>
<tr class="separator:adc97a0b29e06776239a079ea6ef507f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4531d263f63510d1fb1246fa89327eff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a4531d263f63510d1fb1246fa89327eff">sock_type</a></td></tr>
<tr class="separator:a4531d263f63510d1fb1246fa89327eff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49899423225d2e42ae52129da80f7123"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a49899423225d2e42ae52129da80f7123">ioqueue</a></td></tr>
<tr class="separator:a49899423225d2e42ae52129da80f7123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19793d81f47bd1678292a35bb3a07f88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gaec8852c90e22c6868c83d44dcbdecb8a">pj_timer_heap_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a19793d81f47bd1678292a35bb3a07f88">timer_heap</a></td></tr>
<tr class="separator:a19793d81f47bd1678292a35bb3a07f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6974ec4a03e0e2958e053de4f9150e0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__ssl__sock__cb.htm">pj_ssl_sock_cb</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#ac6974ec4a03e0e2958e053de4f9150e0">cb</a></td></tr>
<tr class="separator:ac6974ec4a03e0e2958e053de4f9150e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a475f4acd34aa57df8231e7ebbbbe1bf6"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a475f4acd34aa57df8231e7ebbbbe1bf6">user_data</a></td></tr>
<tr class="separator:a475f4acd34aa57df8231e7ebbbbe1bf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a186d2d20129793dfaf170fe91f49da76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a186d2d20129793dfaf170fe91f49da76">proto</a></td></tr>
<tr class="separator:a186d2d20129793dfaf170fe91f49da76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8ee7b817889d8c8fcc7b42edda146d0"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#ab8ee7b817889d8c8fcc7b42edda146d0">async_cnt</a></td></tr>
<tr class="separator:ab8ee7b817889d8c8fcc7b42edda146d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad772f6a832b98abe89f8ee30cca8cfe4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#ad772f6a832b98abe89f8ee30cca8cfe4">concurrency</a></td></tr>
<tr class="separator:ad772f6a832b98abe89f8ee30cca8cfe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7655a747814c7b542b84cd1689dea5d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a7655a747814c7b542b84cd1689dea5d5">whole_data</a></td></tr>
<tr class="separator:a7655a747814c7b542b84cd1689dea5d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e8858d7c54d7fd5f6786ca8c21e7adb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a1e8858d7c54d7fd5f6786ca8c21e7adb">send_buffer_size</a></td></tr>
<tr class="separator:a1e8858d7c54d7fd5f6786ca8c21e7adb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa47ab30aa5a005e0a7450cefd11f5b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#afa47ab30aa5a005e0a7450cefd11f5b5">read_buffer_size</a></td></tr>
<tr class="separator:afa47ab30aa5a005e0a7450cefd11f5b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b283d72fea5e51670226ffd8948d3a"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a13b283d72fea5e51670226ffd8948d3a">ciphers_num</a></td></tr>
<tr class="separator:a13b283d72fea5e51670226ffd8948d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accda22374f2fbb898abb90cd6e5f3362"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__SSL__SOCK.htm#ga79c116fefb7b7618fddb1b790c58e078">pj_ssl_cipher</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#accda22374f2fbb898abb90cd6e5f3362">ciphers</a></td></tr>
<tr class="separator:accda22374f2fbb898abb90cd6e5f3362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727f9de8fd4ad31d599f27db2fca1ba7"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a727f9de8fd4ad31d599f27db2fca1ba7">curves_num</a></td></tr>
<tr class="separator:a727f9de8fd4ad31d599f27db2fca1ba7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dff0ffc50078d24323c3853328eeffd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__SSL__SOCK.htm#gac28d939f81b88e799221aa1b9abf607e">pj_ssl_curve</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a4dff0ffc50078d24323c3853328eeffd">curves</a></td></tr>
<tr class="separator:a4dff0ffc50078d24323c3853328eeffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f5f0bc24e6a2e30e7823887c0e2369b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__str__t.htm">pj_str_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a5f5f0bc24e6a2e30e7823887c0e2369b">sigalgs</a></td></tr>
<tr class="separator:a5f5f0bc24e6a2e30e7823887c0e2369b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06011596f079b150e37b382c9144562e"><td class="memItemLeft" align="right" valign="top">pj_ssl_entropy_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a06011596f079b150e37b382c9144562e">entropy_type</a></td></tr>
<tr class="separator:a06011596f079b150e37b382c9144562e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85efbf7f0d478c876af375249d6f2e23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__str__t.htm">pj_str_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a85efbf7f0d478c876af375249d6f2e23">entropy_path</a></td></tr>
<tr class="separator:a85efbf7f0d478c876af375249d6f2e23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d74037890fb7ac1e29e6ee1d87899a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__time__val.htm">pj_time_val</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a2d74037890fb7ac1e29e6ee1d87899a5">timeout</a></td></tr>
<tr class="separator:a2d74037890fb7ac1e29e6ee1d87899a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afceae100562c20b48ee27fe447cf66ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#afceae100562c20b48ee27fe447cf66ef">verify_peer</a></td></tr>
<tr class="separator:afceae100562c20b48ee27fe447cf66ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a817d7a8cc079bfa7ac6ee275445c3768"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a817d7a8cc079bfa7ac6ee275445c3768">require_client_cert</a></td></tr>
<tr class="separator:a817d7a8cc079bfa7ac6ee275445c3768"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1bc98c53bc6e8c20656633b0a8f7eea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__str__t.htm">pj_str_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#ac1bc98c53bc6e8c20656633b0a8f7eea">server_name</a></td></tr>
<tr class="separator:ac1bc98c53bc6e8c20656633b0a8f7eea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e05ab7b3f0c31ac77e8caa137731e16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a3e05ab7b3f0c31ac77e8caa137731e16">reuse_addr</a></td></tr>
<tr class="separator:a3e05ab7b3f0c31ac77e8caa137731e16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d412a19aafcb170548e237fef9efa7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a8d412a19aafcb170548e237fef9efa7c">qos_type</a></td></tr>
<tr class="separator:a8d412a19aafcb170548e237fef9efa7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96627e9bfbd8562884b6d8ed44f7d1c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__qos__params.htm">pj_qos_params</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a96627e9bfbd8562884b6d8ed44f7d1c4">qos_params</a></td></tr>
<tr class="separator:a96627e9bfbd8562884b6d8ed44f7d1c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92a886ddfb3a84e3e5486c966f36a24c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a92a886ddfb3a84e3e5486c966f36a24c">qos_ignore_error</a></td></tr>
<tr class="separator:a92a886ddfb3a84e3e5486c966f36a24c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bcedff5b5e61f2176bf75154239953f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__sockopt__params.htm">pj_sockopt_params</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#a4bcedff5b5e61f2176bf75154239953f">sockopt_params</a></td></tr>
<tr class="separator:a4bcedff5b5e61f2176bf75154239953f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc77b908f3f8bab1b580e093f41675dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ssl__sock__param.htm#acc77b908f3f8bab1b580e093f41675dc">sockopt_ignore_error</a></td></tr>
<tr class="separator:acc77b908f3f8bab1b580e093f41675dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Definition of secure socket creation parameters. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="ab8ee7b817889d8c8fcc7b42edda146d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8ee7b817889d8c8fcc7b42edda146d0">&#9670;&nbsp;</a></span>async_cnt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj_ssl_sock_param::async_cnt</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Number of concurrent asynchronous operations that is to be supported by the secure socket. This value only affects socket receive and accept operations &ndash; the secure socket will issue one or more asynchronous read and accept operations based on the value of this field. Setting this field to more than one will allow more than one incoming data or incoming connections to be processed simultaneously on multiprocessor systems, when the ioqueue is polled by more than one threads.</p>
<p>The default value is 1. </p>

</div>
</div>
<a id="ac6974ec4a03e0e2958e053de4f9150e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6974ec4a03e0e2958e053de4f9150e0">&#9670;&nbsp;</a></span>cb</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__ssl__sock__cb.htm">pj_ssl_sock_cb</a> pj_ssl_sock_param::cb</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify secure socket callbacks, see <a class="el" href="structpj__ssl__sock__cb.htm">pj_ssl_sock_cb</a>. </p>

</div>
</div>
<a id="accda22374f2fbb898abb90cd6e5f3362"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accda22374f2fbb898abb90cd6e5f3362">&#9670;&nbsp;</a></span>ciphers</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__SSL__SOCK.htm#ga79c116fefb7b7618fddb1b790c58e078">pj_ssl_cipher</a>* pj_ssl_sock_param::ciphers</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Ciphers and order preference. If empty, then default cipher list and its default order of the backend will be used. </p>

</div>
</div>
<a id="a13b283d72fea5e51670226ffd8948d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13b283d72fea5e51670226ffd8948d3a">&#9670;&nbsp;</a></span>ciphers_num</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj_ssl_sock_param::ciphers_num</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Number of ciphers contained in the specified cipher preference. If this is set to zero, then the cipher list used will be determined by the backend default (for OpenSSL backend, setting PJ_SSL_SOCK_OSSL_CIPHERS will be used). </p>

</div>
</div>
<a id="ad772f6a832b98abe89f8ee30cca8cfe4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad772f6a832b98abe89f8ee30cca8cfe4">&#9670;&nbsp;</a></span>concurrency</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pj_ssl_sock_param::concurrency</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The ioqueue concurrency to be forced on the socket when it is registered to the ioqueue. See <a class="el" href="group__PJ__IOQUEUE.htm#gac9a11ef3e95391eb85193bb15284af93">pj_ioqueue_set_concurrency()</a> for more info about ioqueue concurrency.</p>
<p>When this value is -1, the concurrency setting will not be forced for this socket, and the socket will inherit the concurrency setting of the ioqueue. When this value is zero, the secure socket will disable concurrency for the socket. When this value is +1, the secure socket will enable concurrency for the socket.</p>
<p>The default value is -1. </p>

</div>
</div>
<a id="a4dff0ffc50078d24323c3853328eeffd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4dff0ffc50078d24323c3853328eeffd">&#9670;&nbsp;</a></span>curves</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__SSL__SOCK.htm#gac28d939f81b88e799221aa1b9abf607e">pj_ssl_curve</a>* pj_ssl_sock_param::curves</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Curves and order preference. The <a class="el" href="group__PJ__SSL__SOCK.htm#gaebd32cd02c1f61139687b09d6c78ccd0">pj_ssl_curve_get_availables()</a> can be used to check the available curves supported by backend. </p>

</div>
</div>
<a id="a727f9de8fd4ad31d599f27db2fca1ba7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a727f9de8fd4ad31d599f27db2fca1ba7">&#9670;&nbsp;</a></span>curves_num</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj_ssl_sock_param::curves_num</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Number of curves contained in the specified curve preference. If this is set to zero, then default curve list of the backend will be used.</p>
<p>Default: 0 (zero). </p>

</div>
</div>
<a id="a85efbf7f0d478c876af375249d6f2e23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85efbf7f0d478c876af375249d6f2e23">&#9670;&nbsp;</a></span>entropy_path</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__str__t.htm">pj_str_t</a> pj_ssl_sock_param::entropy_path</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>When using a file/socket for entropy #PJ_SSL_ENTROPY_EGD or #PJ_SSL_ENTROPY_FILE, <em>entropy_path</em> must contain the path to entropy socket/file.</p>
<p>Default value is an empty string. </p>

</div>
</div>
<a id="a06011596f079b150e37b382c9144562e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06011596f079b150e37b382c9144562e">&#9670;&nbsp;</a></span>entropy_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_ssl_entropy_t pj_ssl_sock_param::entropy_type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reseed random number generator. For type #PJ_SSL_ENTROPY_FILE, parameter <em>entropy_path</em> must be set to a file. For type #PJ_SSL_ENTROPY_EGD, parameter <em>entropy_path</em> must be set to a socket.</p>
<p>Default value is PJ_SSL_ENTROPY_NONE. </p>

</div>
</div>
<a id="a2c6feea9a2e63c76cc01b806dc665448"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c6feea9a2e63c76cc01b806dc665448">&#9670;&nbsp;</a></span>grp_lock</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a>* pj_ssl_sock_param::grp_lock</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Optional group lock to be assigned to the ioqueue key.</p>
<p>Note that when a secure socket listener is configured with a group lock, any new secure socket of an accepted incoming connection will have its own group lock created automatically by the library, this group lock can be queried via <a class="el" href="group__PJ__SSL__SOCK.htm#gaee1d4ddbd7c680cdd7ef0636900ef5cb">pj_ssl_sock_get_info()</a> in the info field <a class="el" href="structpj__ssl__sock__info.htm#ab8d490b317cf006fb3181965161363bc">pj_ssl_sock_info::grp_lock</a>. </p>

</div>
</div>
<a id="a49899423225d2e42ae52129da80f7123"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49899423225d2e42ae52129da80f7123">&#9670;&nbsp;</a></span>ioqueue</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a>* pj_ssl_sock_param::ioqueue</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify the ioqueue to use. Secure socket uses the ioqueue to perform active socket operations, see <a class="el" href="group__PJ__ACTIVESOCK.htm">Active socket I/O</a> for more detail. </p>

</div>
</div>
<a id="a186d2d20129793dfaf170fe91f49da76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a186d2d20129793dfaf170fe91f49da76">&#9670;&nbsp;</a></span>proto</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> pj_ssl_sock_param::proto</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify security protocol to use, see <a class="el" href="group__PJ__SSL__SOCK.htm#gac9ec96552b4d363c7293b12ac3fa36d8">pj_ssl_sock_proto</a>. Use bitwise OR operation to combine the protocol type.</p>
<p>Default is PJ_SSL_SOCK_PROTO_DEFAULT. </p>

</div>
</div>
<a id="a92a886ddfb3a84e3e5486c966f36a24c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92a886ddfb3a84e3e5486c966f36a24c">&#9670;&nbsp;</a></span>qos_ignore_error</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_ssl_sock_param::qos_ignore_error</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify if the transport should ignore any errors when setting the QoS traffic type/parameters.</p>
<p>Default: PJ_TRUE </p>

</div>
</div>
<a id="a96627e9bfbd8562884b6d8ed44f7d1c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96627e9bfbd8562884b6d8ed44f7d1c4">&#9670;&nbsp;</a></span>qos_params</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__qos__params.htm">pj_qos_params</a> pj_ssl_sock_param::qos_params</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the low level QoS parameters to the transport. This is a lower level operation than setting the <em>qos_type</em> field and may not be supported on all platforms.</p>
<p>By default all settings in this structure are disabled. </p>

</div>
</div>
<a id="a8d412a19aafcb170548e237fef9efa7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d412a19aafcb170548e237fef9efa7c">&#9670;&nbsp;</a></span>qos_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> pj_ssl_sock_param::qos_type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>QoS traffic type to be set on this transport. When application wants to apply QoS tagging to the transport, it's preferable to set this field rather than <em>qos_param</em> fields since this is more portable.</p>
<p>Default value is PJ_QOS_TYPE_BEST_EFFORT. </p>

</div>
</div>
<a id="afa47ab30aa5a005e0a7450cefd11f5b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa47ab30aa5a005e0a7450cefd11f5b5">&#9670;&nbsp;</a></span>read_buffer_size</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pj_ssl_sock_param::read_buffer_size</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify buffer size for receiving encrypted (and perhaps compressed) data on underlying socket. This setting is unused on Symbian, since SSL/TLS Symbian backend, CSecureSocket, can use application buffer directly.</p>
<p>Default value is 1500. </p>

</div>
</div>
<a id="a817d7a8cc079bfa7ac6ee275445c3768"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a817d7a8cc079bfa7ac6ee275445c3768">&#9670;&nbsp;</a></span>require_client_cert</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_ssl_sock_param::require_client_cert</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>When secure socket is acting as server (handles incoming connection), it will require the client to provide certificate.</p>
<p>Default value is PJ_FALSE. </p>

</div>
</div>
<a id="a3e05ab7b3f0c31ac77e8caa137731e16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e05ab7b3f0c31ac77e8caa137731e16">&#9670;&nbsp;</a></span>reuse_addr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_ssl_sock_param::reuse_addr</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify if SO_REUSEADDR should be used for listening socket. This option will only be used with accept() operation.</p>
<p>Default is PJ_FALSE. </p>

</div>
</div>
<a id="a1e8858d7c54d7fd5f6786ca8c21e7adb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e8858d7c54d7fd5f6786ca8c21e7adb">&#9670;&nbsp;</a></span>send_buffer_size</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pj_ssl_sock_param::send_buffer_size</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify buffer size for sending operation. Buffering sending data is used for allowing application to perform multiple outstanding send operations. Whenever application specifies this setting too small, sending operation may return PJ_ENOMEM.</p>
<p>Default value is 8192 bytes. </p>

</div>
</div>
<a id="ac1bc98c53bc6e8c20656633b0a8f7eea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1bc98c53bc6e8c20656633b0a8f7eea">&#9670;&nbsp;</a></span>server_name</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__str__t.htm">pj_str_t</a> pj_ssl_sock_param::server_name</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Server name indication. When secure socket is acting as client (perform outgoing connection) and the server may host multiple 'virtual' servers at a single underlying network address, setting this will allow client to tell the server a name of the server it is contacting. This must be set to hostname and literal IP addresses are not allowed.</p>
<p>Default value is zero/not-set. </p>

</div>
</div>
<a id="a5f5f0bc24e6a2e30e7823887c0e2369b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f5f0bc24e6a2e30e7823887c0e2369b">&#9670;&nbsp;</a></span>sigalgs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__str__t.htm">pj_str_t</a> pj_ssl_sock_param::sigalgs</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The supported signature algorithms. Set the sigalgs string using this form: "&lt;DIGEST&gt;+&lt;ALGORITHM&gt;:&lt;DIGEST&gt;+&lt;ALGORITHM&gt;" Digests are: "RSA", "DSA" or "ECDSA" Algorithms are: "MD5", "SHA1", "SHA224", "SHA256", "SHA384", "SHA512" Example: "ECDSA+SHA256:RSA+SHA256" </p>

</div>
</div>
<a id="adc97a0b29e06776239a079ea6ef507f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc97a0b29e06776239a079ea6ef507f9">&#9670;&nbsp;</a></span>sock_af</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pj_ssl_sock_param::sock_af</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specifies socket address family, either <a class="el" href="group__PJ__SOCK.htm#ga8ea303b95fe973432a361e47e0459086">pj_AF_INET()</a> and <a class="el" href="group__PJ__SOCK.htm#ga60a867be35581f776aa88156505309de">pj_AF_INET6()</a>.</p>
<p>Default is <a class="el" href="group__PJ__SOCK.htm#ga8ea303b95fe973432a361e47e0459086">pj_AF_INET()</a>. </p>

</div>
</div>
<a id="a4531d263f63510d1fb1246fa89327eff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4531d263f63510d1fb1246fa89327eff">&#9670;&nbsp;</a></span>sock_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pj_ssl_sock_param::sock_type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify socket type, either <a class="el" href="group__PJ__SOCK.htm#gaaa5fa1293ffc11d0970811819b3828dc">pj_SOCK_DGRAM()</a> or <a class="el" href="group__PJ__SOCK.htm#gae224fbf8e8bd55b40030fcd8f9645291">pj_SOCK_STREAM()</a>.</p>
<p>Default is <a class="el" href="group__PJ__SOCK.htm#gae224fbf8e8bd55b40030fcd8f9645291">pj_SOCK_STREAM()</a>. </p>

</div>
</div>
<a id="acc77b908f3f8bab1b580e093f41675dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc77b908f3f8bab1b580e093f41675dc">&#9670;&nbsp;</a></span>sockopt_ignore_error</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_ssl_sock_param::sockopt_ignore_error</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify if the transport should ignore any errors when setting the sockopt parameters.</p>
<p>Default: PJ_TRUE </p>

</div>
</div>
<a id="a4bcedff5b5e61f2176bf75154239953f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bcedff5b5e61f2176bf75154239953f">&#9670;&nbsp;</a></span>sockopt_params</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__sockopt__params.htm">pj_sockopt_params</a> pj_ssl_sock_param::sockopt_params</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify options to be set on the transport.</p>
<p>By default there is no options. </p>

</div>
</div>
<a id="a2d74037890fb7ac1e29e6ee1d87899a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d74037890fb7ac1e29e6ee1d87899a5">&#9670;&nbsp;</a></span>timeout</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__time__val.htm">pj_time_val</a> pj_ssl_sock_param::timeout</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Security negotiation timeout. If this is set to zero (both sec and msec), the negotiation doesn't have a timeout.</p>
<p>Default value is zero. </p>

</div>
</div>
<a id="a19793d81f47bd1678292a35bb3a07f88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19793d81f47bd1678292a35bb3a07f88">&#9670;&nbsp;</a></span>timer_heap</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gaec8852c90e22c6868c83d44dcbdecb8a">pj_timer_heap_t</a>* pj_ssl_sock_param::timer_heap</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify the timer heap to use. Secure socket uses the timer to provide auto cancelation on asynchronous operation when it takes longer time than specified timeout period, e.g: security negotiation timeout. </p>

</div>
</div>
<a id="a475f4acd34aa57df8231e7ebbbbe1bf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a475f4acd34aa57df8231e7ebbbbe1bf6">&#9670;&nbsp;</a></span>user_data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* pj_ssl_sock_param::user_data</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify secure socket user data. </p>

</div>
</div>
<a id="afceae100562c20b48ee27fe447cf66ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afceae100562c20b48ee27fe447cf66ef">&#9670;&nbsp;</a></span>verify_peer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_ssl_sock_param::verify_peer</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Specify whether endpoint should verify peer certificate.</p>
<p>Default value is PJ_FALSE. </p>

</div>
</div>
<a id="a7655a747814c7b542b84cd1689dea5d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7655a747814c7b542b84cd1689dea5d5">&#9670;&nbsp;</a></span>whole_data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_ssl_sock_param::whole_data</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>If this option is specified, the secure socket will make sure that asynchronous send operation with stream oriented socket will only call the callback after all data has been sent. This means that the secure socket will automatically resend the remaining data until all data has been sent.</p>
<p>Please note that when this option is specified, it is possible that error is reported after partial data has been sent. Also setting this will disable the ioqueue concurrency for the socket.</p>
<p>Default value is 1. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="ssl__sock_8h_source.htm">ssl_sock.h</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
