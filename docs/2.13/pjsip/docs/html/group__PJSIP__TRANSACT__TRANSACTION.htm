<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Transaction (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Transaction<div class="ingroups"><a class="el" href="group__PJSIP__TRANSACT.htm">Transaction Layer</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Transaction instance for all types of SIP transactions.The <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> describes SIP transaction, and is used for both INVITE and non-INVITE, UAC or UAS. Application must register the transaction layer module with <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga98b6d8edf24b82c6cbc6afbdf274cdf1">pjsip_tsx_layer_init_module()</a> before performing any stateful operations.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gaf361da71faf4b6d47ca50db1b43e95b7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gaf361da71faf4b6d47ca50db1b43e95b7">pjsip_tsx_state_e</a> { <br />
&#160;&#160;<a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7ad2a5792589a5bd2f35fa50a9f6bb8ba2">PJSIP_TSX_STATE_NULL</a>
, <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7a4df011c6e64bbe1550ca7b7fe7c67b89">PJSIP_TSX_STATE_CALLING</a>
, <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7ac050f749ffcf161c6b95fadf40842968">PJSIP_TSX_STATE_TRYING</a>
, <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7a60ce900a007c074eab992d65dc6e3f07">PJSIP_TSX_STATE_PROCEEDING</a>
, <br />
&#160;&#160;<a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7adea6edaf4e6382e18913d6d98443bea0">PJSIP_TSX_STATE_COMPLETED</a>
, <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7a648a4a0676b3c10cb2fad9f562d3befd">PJSIP_TSX_STATE_CONFIRMED</a>
, <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7af394413f4682ed002b8527de702e8ee9">PJSIP_TSX_STATE_TERMINATED</a>
, <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7ae63bf8a258d7738415d53aacc2ef7391">PJSIP_TSX_STATE_DESTROYED</a>
, <br />
&#160;&#160;<a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7a766dcc13f13a29c0e5c8cd16f5ce114c">PJSIP_TSX_STATE_MAX</a>
<br />
 }</td></tr>
<tr class="separator:gaf361da71faf4b6d47ca50db1b43e95b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga98b6d8edf24b82c6cbc6afbdf274cdf1"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga98b6d8edf24b82c6cbc6afbdf274cdf1">pjsip_tsx_layer_init_module</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:ga98b6d8edf24b82c6cbc6afbdf274cdf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b3429575a2103ce227e7f7d2db49702"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3b3429575a2103ce227e7f7d2db49702">pjsip_tsx_layer_instance</a> (void)</td></tr>
<tr class="separator:ga3b3429575a2103ce227e7f7d2db49702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11f1e4922c831dca2b8c3a342db1846f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga11f1e4922c831dca2b8c3a342db1846f">pjsip_tsx_layer_destroy</a> (void)</td></tr>
<tr class="separator:ga11f1e4922c831dca2b8c3a342db1846f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72b7dc6e0f9d8225bbb7d4f97ce5be45"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga72b7dc6e0f9d8225bbb7d4f97ce5be45">pjsip_tsx_layer_get_tsx_count</a> (void)</td></tr>
<tr class="separator:ga72b7dc6e0f9d8225bbb7d4f97ce5be45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ec90acd51e770b015277028d2ba7941"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga9ec90acd51e770b015277028d2ba7941">pjsip_tsx_layer_find_tsx</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *key, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> lock)</td></tr>
<tr class="separator:ga9ec90acd51e770b015277028d2ba7941"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e9674970d8e38fa4c23ce9c5da4ed8b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga4e9674970d8e38fa4c23ce9c5da4ed8b">pjsip_tsx_layer_find_tsx2</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *key, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> add_ref)</td></tr>
<tr class="separator:ga4e9674970d8e38fa4c23ce9c5da4ed8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga668082f69563fb0e609b8692783288fb"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga668082f69563fb0e609b8692783288fb">pjsip_tsx_create_uac</a> (<a class="el" href="structpjsip__module.htm">pjsip_module</a> *tsx_user, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **p_tsx)</td></tr>
<tr class="separator:ga668082f69563fb0e609b8692783288fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcb38da96ccc48bb0c7e690738fc8989"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gafcb38da96ccc48bb0c7e690738fc8989">pjsip_tsx_create_uac2</a> (<a class="el" href="structpjsip__module.htm">pjsip_module</a> *tsx_user, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **p_tsx)</td></tr>
<tr class="separator:gafcb38da96ccc48bb0c7e690738fc8989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d91aa95b2b1c561a26452dad58e7dea"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3d91aa95b2b1c561a26452dad58e7dea">pjsip_tsx_create_uas</a> (<a class="el" href="structpjsip__module.htm">pjsip_module</a> *tsx_user, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **p_tsx)</td></tr>
<tr class="separator:ga3d91aa95b2b1c561a26452dad58e7dea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0ae2875466d4999212c7b88c500e46e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gaa0ae2875466d4999212c7b88c500e46e">pjsip_tsx_create_uas2</a> (<a class="el" href="structpjsip__module.htm">pjsip_module</a> *tsx_user, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **p_tsx)</td></tr>
<tr class="separator:gaa0ae2875466d4999212c7b88c500e46e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a9499ba68a066e998e76e99da80cd72"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga0a9499ba68a066e998e76e99da80cd72">pjsip_tsx_set_transport</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *sel)</td></tr>
<tr class="separator:ga0a9499ba68a066e998e76e99da80cd72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5d24d997aabab0d50c2af87055c34bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gaa5d24d997aabab0d50c2af87055c34bd">pjsip_tsx_recv_msg</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td></tr>
<tr class="separator:gaa5d24d997aabab0d50c2af87055c34bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae8656195e02e1059dcddf94e5218c4f2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gae8656195e02e1059dcddf94e5218c4f2">pjsip_tsx_send_msg</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata)</td></tr>
<tr class="separator:gae8656195e02e1059dcddf94e5218c4f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab6a83e6dbf726110e6ad60d89438efd"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gaab6a83e6dbf726110e6ad60d89438efd">pjsip_tsx_retransmit_no_state</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata)</td></tr>
<tr class="separator:gaab6a83e6dbf726110e6ad60d89438efd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3098550af065696fdc9ad4a3d9fe3a1d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3098550af065696fdc9ad4a3d9fe3a1d">pjsip_tsx_create_key</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *key, <a class="el" href="group__PJSIP__TYPES.htm#ga1a2637e9a3a7d4cd160dd608c02bf5a9">pjsip_role_e</a> role, const <a class="el" href="structpjsip__method.htm">pjsip_method</a> *method, const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td></tr>
<tr class="separator:ga3098550af065696fdc9ad4a3d9fe3a1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga838bd435451cb82fec1276edf02d3bf3"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga838bd435451cb82fec1276edf02d3bf3">pjsip_tsx_terminate</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, int code)</td></tr>
<tr class="separator:ga838bd435451cb82fec1276edf02d3bf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10e7740a51f4df7ffc7a3973ba9247f8"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga10e7740a51f4df7ffc7a3973ba9247f8">pjsip_tsx_stop_retransmit</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx)</td></tr>
<tr class="separator:ga10e7740a51f4df7ffc7a3973ba9247f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92e51f879d0a7ced95722aeb679dd6df"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga92e51f879d0a7ced95722aeb679dd6df">pjsip_tsx_set_timeout</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, unsigned millisec)</td></tr>
<tr class="separator:ga92e51f879d0a7ced95722aeb679dd6df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97108276dffe9d893288bbd6816a2dce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga97108276dffe9d893288bbd6816a2dce">pjsip_tsx_set_timers</a> (unsigned t1, unsigned t2, unsigned t4, unsigned td)</td></tr>
<tr class="separator:ga97108276dffe9d893288bbd6816a2dce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0252d17a47bdc6a36a9cb421b16414b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga0252d17a47bdc6a36a9cb421b16414b0">pjsip_tsx_initialize_timer_values</a> (void)</td></tr>
<tr class="separator:ga0252d17a47bdc6a36a9cb421b16414b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8485679b6bb05642dae803ed25c6424"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gab8485679b6bb05642dae803ed25c6424">pjsip_rdata_get_tsx</a> (<a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td></tr>
<tr class="separator:gab8485679b6bb05642dae803ed25c6424"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gaf361da71faf4b6d47ca50db1b43e95b7" name="gaf361da71faf4b6d47ca50db1b43e95b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf361da71faf4b6d47ca50db1b43e95b7">&#9670;&nbsp;</a></span>pjsip_tsx_state_e</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gaf361da71faf4b6d47ca50db1b43e95b7">pjsip_tsx_state_e</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration represents transaction state. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7ad2a5792589a5bd2f35fa50a9f6bb8ba2" name="ggaf361da71faf4b6d47ca50db1b43e95b7ad2a5792589a5bd2f35fa50a9f6bb8ba2"></a>PJSIP_TSX_STATE_NULL&#160;</td><td class="fielddoc"><p >For UAC, before any message is sent. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7a4df011c6e64bbe1550ca7b7fe7c67b89" name="ggaf361da71faf4b6d47ca50db1b43e95b7a4df011c6e64bbe1550ca7b7fe7c67b89"></a>PJSIP_TSX_STATE_CALLING&#160;</td><td class="fielddoc"><p >For UAC, just after request is sent. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7ac050f749ffcf161c6b95fadf40842968" name="ggaf361da71faf4b6d47ca50db1b43e95b7ac050f749ffcf161c6b95fadf40842968"></a>PJSIP_TSX_STATE_TRYING&#160;</td><td class="fielddoc"><p >For UAS, just after request is received. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7a60ce900a007c074eab992d65dc6e3f07" name="ggaf361da71faf4b6d47ca50db1b43e95b7a60ce900a007c074eab992d65dc6e3f07"></a>PJSIP_TSX_STATE_PROCEEDING&#160;</td><td class="fielddoc"><p >For UAS/UAC, after provisional response. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7adea6edaf4e6382e18913d6d98443bea0" name="ggaf361da71faf4b6d47ca50db1b43e95b7adea6edaf4e6382e18913d6d98443bea0"></a>PJSIP_TSX_STATE_COMPLETED&#160;</td><td class="fielddoc"><p >For UAS/UAC, after final response. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7a648a4a0676b3c10cb2fad9f562d3befd" name="ggaf361da71faf4b6d47ca50db1b43e95b7a648a4a0676b3c10cb2fad9f562d3befd"></a>PJSIP_TSX_STATE_CONFIRMED&#160;</td><td class="fielddoc"><p >For UAS, after ACK is received. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7af394413f4682ed002b8527de702e8ee9" name="ggaf361da71faf4b6d47ca50db1b43e95b7af394413f4682ed002b8527de702e8ee9"></a>PJSIP_TSX_STATE_TERMINATED&#160;</td><td class="fielddoc"><p >For UAS/UAC, before it's destroyed. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7ae63bf8a258d7738415d53aacc2ef7391" name="ggaf361da71faf4b6d47ca50db1b43e95b7ae63bf8a258d7738415d53aacc2ef7391"></a>PJSIP_TSX_STATE_DESTROYED&#160;</td><td class="fielddoc"><p >For UAS/UAC, will be destroyed now. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="ggaf361da71faf4b6d47ca50db1b43e95b7a766dcc13f13a29c0e5c8cd16f5ce114c" name="ggaf361da71faf4b6d47ca50db1b43e95b7a766dcc13f13a29c0e5c8cd16f5ce114c"></a>PJSIP_TSX_STATE_MAX&#160;</td><td class="fielddoc"><p >Number of states. <br  />
 </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga98b6d8edf24b82c6cbc6afbdf274cdf1" name="ga98b6d8edf24b82c6cbc6afbdf274cdf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga98b6d8edf24b82c6cbc6afbdf274cdf1">&#9670;&nbsp;</a></span>pjsip_tsx_layer_init_module()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_layer_init_module </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create and register transaction layer module to the specified endpoint.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga3b3429575a2103ce227e7f7d2db49702" name="ga3b3429575a2103ce227e7f7d2db49702"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3b3429575a2103ce227e7f7d2db49702">&#9670;&nbsp;</a></span>pjsip_tsx_layer_instance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__module.htm">pjsip_module</a> * pjsip_tsx_layer_instance </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the instance of the transaction layer module.</p>
<dl class="section return"><dt>Returns</dt><dd>The transaction layer module. </dd></dl>

</div>
</div>
<a id="ga11f1e4922c831dca2b8c3a342db1846f" name="ga11f1e4922c831dca2b8c3a342db1846f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11f1e4922c831dca2b8c3a342db1846f">&#9670;&nbsp;</a></span>pjsip_tsx_layer_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_layer_destroy </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Unregister and destroy transaction layer module.</p>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga72b7dc6e0f9d8225bbb7d4f97ce5be45" name="ga72b7dc6e0f9d8225bbb7d4f97ce5be45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga72b7dc6e0f9d8225bbb7d4f97ce5be45">&#9670;&nbsp;</a></span>pjsip_tsx_layer_get_tsx_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pjsip_tsx_layer_get_tsx_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve the current number of transactions currently registered in the hash table.</p>
<dl class="section return"><dt>Returns</dt><dd>Number of transactions. </dd></dl>

</div>
</div>
<a id="ga9ec90acd51e770b015277028d2ba7941" name="ga9ec90acd51e770b015277028d2ba7941"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9ec90acd51e770b015277028d2ba7941">&#9670;&nbsp;</a></span>pjsip_tsx_layer_find_tsx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> * pjsip_tsx_layer_find_tsx </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>lock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Find a transaction with the specified key. The transaction key normally is created by calling <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3098550af065696fdc9ad4a3d9fe3a1d">pjsip_tsx_create_key()</a> from an incoming message.</p>
<p >IMPORTANT: To prevent deadlock, application should use <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga4e9674970d8e38fa4c23ce9c5da4ed8b">pjsip_tsx_layer_find_tsx2()</a> instead which only adds a reference to the transaction instead of locking it.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key string to find the transaction. </td></tr>
    <tr><td class="paramname">lock</td><td>If non-zero, transaction will be locked before the function returns, to make sure that it's not deleted by other threads.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The matching transaction instance, or NULL if transaction can not be found. </dd></dl>

</div>
</div>
<a id="ga4e9674970d8e38fa4c23ce9c5da4ed8b" name="ga4e9674970d8e38fa4c23ce9c5da4ed8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4e9674970d8e38fa4c23ce9c5da4ed8b">&#9670;&nbsp;</a></span>pjsip_tsx_layer_find_tsx2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> * pjsip_tsx_layer_find_tsx2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>add_ref</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Find a transaction with the specified key. The transaction key normally is created by calling <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3098550af065696fdc9ad4a3d9fe3a1d">pjsip_tsx_create_key()</a> from an incoming message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key string to find the transaction. </td></tr>
    <tr><td class="paramname">add_ref</td><td>If non-zero, transaction's reference will be added by one before the function returns, to make sure that it's not deleted by other threads.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The matching transaction instance, or NULL if transaction can not be found. </dd></dl>

</div>
</div>
<a id="ga668082f69563fb0e609b8692783288fb" name="ga668082f69563fb0e609b8692783288fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga668082f69563fb0e609b8692783288fb">&#9670;&nbsp;</a></span>pjsip_tsx_create_uac()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_create_uac </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td>
          <td class="paramname"><em>tsx_user</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **&#160;</td>
          <td class="paramname"><em>p_tsx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create, initialize, and register a new transaction as UAC from the specified transmit data (<code>tdata</code>). The transmit data must have a valid <code>Request-Line</code> and <code>CSeq</code> header.</p>
<p >If <code>Via</code> header does not exist, it will be created along with a unique <code>branch</code> parameter. If it exists and contains branch parameter, then the <code>branch</code> parameter will be used as is as the transaction key. If it exists but branch parameter doesn't exist, a unique branch parameter will be created.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx_user</td><td>Module to be registered as transaction user of the new transaction, which will receive notification from the transaction via on_tsx_state() callback. </td></tr>
    <tr><td class="paramname">tdata</td><td>The outgoing request message. </td></tr>
    <tr><td class="paramname">p_tsx</td><td>On return will contain the new transaction instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="gafcb38da96ccc48bb0c7e690738fc8989" name="gafcb38da96ccc48bb0c7e690738fc8989"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafcb38da96ccc48bb0c7e690738fc8989">&#9670;&nbsp;</a></span>pjsip_tsx_create_uac2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_create_uac2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td>
          <td class="paramname"><em>tsx_user</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **&#160;</td>
          <td class="paramname"><em>p_tsx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Variant of <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga668082f69563fb0e609b8692783288fb">pjsip_tsx_create_uac()</a> with additional parameter to specify the group lock to use. Group lock can be used to synchronize locking among several objects to prevent deadlock, and to synchronize the lifetime of objects sharing the same group lock.</p>
<p >See <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga668082f69563fb0e609b8692783288fb">pjsip_tsx_create_uac()</a> for general info about this function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx_user</td><td>Module to be registered as transaction user of the new transaction, which will receive notification from the transaction via on_tsx_state() callback. </td></tr>
    <tr><td class="paramname">tdata</td><td>The outgoing request message. </td></tr>
    <tr><td class="paramname">grp_lock</td><td>Optional group lock to use by this transaction. If the value is NULL, the transaction will create its own group lock. </td></tr>
    <tr><td class="paramname">p_tsx</td><td>On return will contain the new transaction instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="ga3d91aa95b2b1c561a26452dad58e7dea" name="ga3d91aa95b2b1c561a26452dad58e7dea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d91aa95b2b1c561a26452dad58e7dea">&#9670;&nbsp;</a></span>pjsip_tsx_create_uas()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_create_uas </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td>
          <td class="paramname"><em>tsx_user</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **&#160;</td>
          <td class="paramname"><em>p_tsx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create, initialize, and register a new transaction as UAS from the specified incoming request in <code>rdata</code>. After calling this function, application MUST call <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#gaa5d24d997aabab0d50c2af87055c34bd">pjsip_tsx_recv_msg()</a> so that transaction moves from state NULL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx_user</td><td>Module to be registered as transaction user of the new transaction, which will receive notification from the transaction via on_tsx_state() callback. </td></tr>
    <tr><td class="paramname">rdata</td><td>The received incoming request. </td></tr>
    <tr><td class="paramname">p_tsx</td><td>On return will contain the new transaction instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="gaa0ae2875466d4999212c7b88c500e46e" name="gaa0ae2875466d4999212c7b88c500e46e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa0ae2875466d4999212c7b88c500e46e">&#9670;&nbsp;</a></span>pjsip_tsx_create_uas2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_create_uas2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td>
          <td class="paramname"><em>tsx_user</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> **&#160;</td>
          <td class="paramname"><em>p_tsx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Variant of <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3d91aa95b2b1c561a26452dad58e7dea">pjsip_tsx_create_uas()</a> with additional parameter to specify the group lock to use. Group lock can be used to synchronize locking among several objects to prevent deadlock, and to synchronize the lifetime of objects sharing the same group lock.</p>
<p >See <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3d91aa95b2b1c561a26452dad58e7dea">pjsip_tsx_create_uas()</a> for general info about this function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx_user</td><td>Module to be registered as transaction user of the new transaction, which will receive notification from the transaction via on_tsx_state() callback. </td></tr>
    <tr><td class="paramname">rdata</td><td>The received incoming request. </td></tr>
    <tr><td class="paramname">grp_lock</td><td>Optional group lock to use by this transaction. If the value is NULL, the transaction will create its own group lock. </td></tr>
    <tr><td class="paramname">p_tsx</td><td>On return will contain the new transaction instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="ga0a9499ba68a066e998e76e99da80cd72" name="ga0a9499ba68a066e998e76e99da80cd72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0a9499ba68a066e998e76e99da80cd72">&#9670;&nbsp;</a></span>pjsip_tsx_set_transport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_set_transport </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *&#160;</td>
          <td class="paramname"><em>sel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Lock/bind transaction to a specific transport/listener. This is optional, as normally transport will be selected automatically based on the destination of the message upon resolver completion.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction. </td></tr>
    <tr><td class="paramname">sel</td><td>Transport selector containing the specification of transport or listener to be used by this transaction to send requests.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaa5d24d997aabab0d50c2af87055c34bd" name="gaa5d24d997aabab0d50c2af87055c34bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa5d24d997aabab0d50c2af87055c34bd">&#9670;&nbsp;</a></span>pjsip_tsx_recv_msg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_tsx_recv_msg </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Call this function to manually feed a message to the transaction. For UAS transaction, application MUST call this function after UAS transaction has been created.</p>
<p >This function SHOULD only be called to pass initial request message to UAS transaction. Before this function returns, on_tsx_state() callback of the transaction user will be called. If response message is passed to this function, then on_rx_response() will also be called before on_tsx_state().</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction. </td></tr>
    <tr><td class="paramname">rdata</td><td>The message. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gae8656195e02e1059dcddf94e5218c4f2" name="gae8656195e02e1059dcddf94e5218c4f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae8656195e02e1059dcddf94e5218c4f2">&#9670;&nbsp;</a></span>pjsip_tsx_send_msg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_send_msg </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Transmit message in tdata with this transaction. It is possible to pass NULL in tdata for UAC transaction, which in this case the last message transmitted, or the request message which was specified when calling <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga668082f69563fb0e609b8692783288fb">pjsip_tsx_create_uac()</a>, will be sent.</p>
<p >This function decrements the reference counter of the transmit buffer only when it returns PJ_SUCCESS;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction. </td></tr>
    <tr><td class="paramname">tdata</td><td>The outgoing message. If NULL is specified, then the last message transmitted (or the message specified in UAC initialization) will be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="gaab6a83e6dbf726110e6ad60d89438efd" name="gaab6a83e6dbf726110e6ad60d89438efd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab6a83e6dbf726110e6ad60d89438efd">&#9670;&nbsp;</a></span>pjsip_tsx_retransmit_no_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_retransmit_no_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Manually retransmit the last message transmitted by this transaction, without updating the transaction state. This function is useful when TU wants to maintain the retransmision by itself (for example, retransmitting reliable provisional response).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction. </td></tr>
    <tr><td class="paramname">tdata</td><td>The outgoing message. If NULL is specified, then the last message transmitted (or the message specified in UAC initialization) will be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successful. </dd></dl>

</div>
</div>
<a id="ga3098550af065696fdc9ad4a3d9fe3a1d" name="ga3098550af065696fdc9ad4a3d9fe3a1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3098550af065696fdc9ad4a3d9fe3a1d">&#9670;&nbsp;</a></span>pjsip_tsx_create_key()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_create_key </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga1a2637e9a3a7d4cd160dd608c02bf5a9">pjsip_role_e</a>&#160;</td>
          <td class="paramname"><em>role</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__method.htm">pjsip_method</a> *&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create transaction key, which is used to match incoming requests or response (retransmissions) against transactions.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool </td></tr>
    <tr><td class="paramname">key</td><td>Output key. </td></tr>
    <tr><td class="paramname">role</td><td>The role of the transaction. </td></tr>
    <tr><td class="paramname">method</td><td>The method to be put as a key. </td></tr>
    <tr><td class="paramname">rdata</td><td>The received data to calculate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga838bd435451cb82fec1276edf02d3bf3" name="ga838bd435451cb82fec1276edf02d3bf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga838bd435451cb82fec1276edf02d3bf3">&#9670;&nbsp;</a></span>pjsip_tsx_terminate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_terminate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>code</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Force terminate transaction.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction. </td></tr>
    <tr><td class="paramname">code</td><td>The status code to report. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga10e7740a51f4df7ffc7a3973ba9247f8" name="ga10e7740a51f4df7ffc7a3973ba9247f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga10e7740a51f4df7ffc7a3973ba9247f8">&#9670;&nbsp;</a></span>pjsip_tsx_stop_retransmit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_stop_retransmit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Cease retransmission on the UAC transaction. The UAC transaction is still considered running, and it will complete when either final response is received or the transaction times out.</p>
<p >This operation normally is used for INVITE transaction only, when the transaction is cancelled before any provisional response has been received.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga92e51f879d0a7ced95722aeb679dd6df" name="ga92e51f879d0a7ced95722aeb679dd6df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga92e51f879d0a7ced95722aeb679dd6df">&#9670;&nbsp;</a></span>pjsip_tsx_set_timeout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tsx_set_timeout </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>millisec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Start a timer to terminate transaction after the specified time has elapsed. This function is only valid for INVITE transaction, and only before final response is received for the INVITE transaction. It is normally called after the UAC has sent CANCEL for this INVITE transaction.</p>
<p >The purpose of this function is to terminate the transaction if UAS does not send final response to this INVITE transaction even after it sends 200/OK to CANCEL (for example when the UAS complies to RFC 2543).</p>
<p >Once this timer is set, the transaction will be terminated either when a final response is received or the timer expires.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction. </td></tr>
    <tr><td class="paramname">millisec</td><td>Timeout value in milliseconds.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga97108276dffe9d893288bbd6816a2dce" name="ga97108276dffe9d893288bbd6816a2dce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga97108276dffe9d893288bbd6816a2dce">&#9670;&nbsp;</a></span>pjsip_tsx_set_timers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_tsx_set_timers </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>t1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>t2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>t4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>td</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Change timer values used by transaction layer. Currently scheduled timers will not be changed. Any value set to 0 will be left unchanged.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">t1</td><td>- Transaction T1 timeout, in msec </td></tr>
    <tr><td class="paramname">t2</td><td>- Transaction T2 timeout, in msec </td></tr>
    <tr><td class="paramname">t4</td><td>- Transaction completed timer for non-INVITE, in msec </td></tr>
    <tr><td class="paramname">td</td><td>- Transaction completed timer for INVITE, in msec </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga0252d17a47bdc6a36a9cb421b16414b0" name="ga0252d17a47bdc6a36a9cb421b16414b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0252d17a47bdc6a36a9cb421b16414b0">&#9670;&nbsp;</a></span>pjsip_tsx_initialize_timer_values()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_tsx_initialize_timer_values </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >(Re)Initializes timer values from <a class="el" href="group__PJSIP__CONFIG.htm#gae44a6ef065f8ddc0e8f0af2981a94f17">pjsip_cfg()</a>. </p>

</div>
</div>
<a id="gab8485679b6bb05642dae803ed25c6424" name="gab8485679b6bb05642dae803ed25c6424"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab8485679b6bb05642dae803ed25c6424">&#9670;&nbsp;</a></span>pjsip_rdata_get_tsx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> * pjsip_rdata_get_tsx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the transaction instance in the incoming message. If the message has a corresponding transaction, this function will return non NULL value.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rdata</td><td>The incoming message buffer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The transaction instance associated with this message, or NULL if the message doesn't match any transactions. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
