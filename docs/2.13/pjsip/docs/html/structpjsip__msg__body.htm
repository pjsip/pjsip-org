<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pjsip_msg_body Struct Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">pjsip_msg_body Struct Reference<div class="ingroups"><a class="el" href="group__PJSIP__CORE.htm">Core SIP Library</a> &raquo; <a class="el" href="group__PJSIP__MSG.htm">Messaging Elements</a> &raquo; <a class="el" href="group__PJSIP__MSG__BODY.htm">Message Body</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;sip_msg.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a9fa45e63ee0bee8dbf9ac6868161801d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__msg__body.htm#a9fa45e63ee0bee8dbf9ac6868161801d">content_type</a></td></tr>
<tr class="separator:a9fa45e63ee0bee8dbf9ac6868161801d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c1af82993d867efd1392330fe0fad10"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__msg__body.htm#a0c1af82993d867efd1392330fe0fad10">data</a></td></tr>
<tr class="separator:a0c1af82993d867efd1392330fe0fad10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c269f51e84bfbe74694cf93ac7928a5"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__msg__body.htm#a4c269f51e84bfbe74694cf93ac7928a5">len</a></td></tr>
<tr class="separator:a4c269f51e84bfbe74694cf93ac7928a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4096154e8a842ee5da038362604792"><td class="memItemLeft" align="right" valign="top">int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__msg__body.htm#a2e4096154e8a842ee5da038362604792">print_body</a> )(struct <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> *msg_body, char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr class="separator:a2e4096154e8a842ee5da038362604792"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13ec7f27cb74d3583b8b659a74679f2f"><td class="memItemLeft" align="right" valign="top">void *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__msg__body.htm#a13ec7f27cb74d3583b8b659a74679f2f">clone_data</a> )(<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const void *<a class="el" href="structpjsip__msg__body.htm#a0c1af82993d867efd1392330fe0fad10">data</a>, unsigned <a class="el" href="structpjsip__msg__body.htm#a4c269f51e84bfbe74694cf93ac7928a5">len</a>)</td></tr>
<tr class="separator:a13ec7f27cb74d3583b8b659a74679f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >Generic abstraction to message body. When an incoming message is parsed (<a class="el" href="group__PJSIP__PARSER.htm#gafb93fd97d74508dd217935783793a152">pjsip_parse_msg()</a>), the parser fills in all members with the appropriate value. The 'data' and 'len' member will describe portion of incoming packet which denotes the message body. When application needs to attach message body to outgoing SIP message, it must fill in all members of this structure.</p>
<p >Forward declaration for message body (<a class="el" href="sip__msg_8h.htm" title="SIP Message Structure.">sip_msg.h</a>). </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a9fa45e63ee0bee8dbf9ac6868161801d" name="a9fa45e63ee0bee8dbf9ac6868161801d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fa45e63ee0bee8dbf9ac6868161801d">&#9670;&nbsp;</a></span>content_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> pjsip_msg_body::content_type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >MIME content type. For incoming messages, the parser will fill in this member with the content type found in Content-Type header.</p>
<p >For outgoing messages, application may fill in this member with appropriate value, because the stack will generate Content-Type header based on the value specified here.</p>
<p >If the content_type is empty, no Content-Type AND Content-Length header will be added to the message. The stack assumes that application adds these headers themselves. </p>

</div>
</div>
<a id="a0c1af82993d867efd1392330fe0fad10" name="a0c1af82993d867efd1392330fe0fad10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c1af82993d867efd1392330fe0fad10">&#9670;&nbsp;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* pjsip_msg_body::data</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Pointer to buffer which holds the message body data. For incoming messages, the parser will fill in this member with the pointer to the body string.</p>
<p >When sending outgoing message, this member doesn't need to point to the actual message body string. It can be assigned with arbitrary pointer, because the value will only need to be understood by the <a class="el" href="structpjsip__msg__body.htm#a2e4096154e8a842ee5da038362604792">print_body()</a> function. The stack itself will not try to interpret this value, but instead will always call the <a class="el" href="structpjsip__msg__body.htm#a2e4096154e8a842ee5da038362604792">print_body()</a> whenever it needs to get the actual body string. </p>

</div>
</div>
<a id="a4c269f51e84bfbe74694cf93ac7928a5" name="a4c269f51e84bfbe74694cf93ac7928a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c269f51e84bfbe74694cf93ac7928a5">&#9670;&nbsp;</a></span>len</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pjsip_msg_body::len</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The length of the data. For incoming messages, the parser will fill in this member with the actual length of message body.</p>
<p >When sending outgoing message, again just like the "data" member, the "len" member doesn't need to point to the actual length of the body string. </p>

</div>
</div>
<a id="a2e4096154e8a842ee5da038362604792" name="a2e4096154e8a842ee5da038362604792"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e4096154e8a842ee5da038362604792">&#9670;&nbsp;</a></span>print_body</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int(* pjsip_msg_body::print_body) (struct <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> *msg_body, char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Pointer to function to print this message body. Application must set a proper function here when sending outgoing message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg_body</td><td>This structure itself. </td></tr>
    <tr><td class="paramname">buf</td><td>The buffer. </td></tr>
    <tr><td class="paramname">size</td><td>The buffer size.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The length of the string printed, or -1 if there is not enough space in the buffer to print the whole message body. </dd></dl>

</div>
</div>
<a id="a13ec7f27cb74d3583b8b659a74679f2f" name="a13ec7f27cb74d3583b8b659a74679f2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13ec7f27cb74d3583b8b659a74679f2f">&#9670;&nbsp;</a></span>clone_data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void *(* pjsip_msg_body::clone_data) (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const void *<a class="el" href="structpjsip__msg__body.htm#a0c1af82993d867efd1392330fe0fad10">data</a>, unsigned <a class="el" href="structpjsip__msg__body.htm#a4c269f51e84bfbe74694cf93ac7928a5">len</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Clone the data part only of this message body. Note that this only duplicates the data part of the body instead of the whole message body. If application wants to duplicate the entire message body structure, it must call <a class="el" href="group__PJSIP__MSG__BODY.htm#ga6d8cb76d88388e11068a3322d2d6938e">pjsip_msg_body_clone()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool used to clone the data. </td></tr>
    <tr><td class="paramname">data</td><td>The data inside message body, to be cloned. </td></tr>
    <tr><td class="paramname">len</td><td>The length of the data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>New data duplicated from the original data. </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="sip__msg_8h.htm">sip_msg.h</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
