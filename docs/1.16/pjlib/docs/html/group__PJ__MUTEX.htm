<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: Mutexes. (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>Mutexes.<br/>
<small>
[<a class="el" href="group__PJ__SYS__INFO.htm">System Information</a>,&nbsp;<a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga68e3b826414e91fae87d6dbbd0de1a10">pj_mutex_type_e</a> { <b>PJ_MUTEX_DEFAULT</b>, 
<b>PJ_MUTEX_SIMPLE</b>, 
<b>PJ_MUTEX_RECURSE</b>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga1a5c058548d6b82189f80e07318e06d1">pj_mutex_create</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, int type, <a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **mutex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gaf5517cba6f6e3225076986998b5d4b59">pj_mutex_create_simple</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, <a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **mutex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga4022a1375412b1e610c54a8bbfb31199">pj_mutex_create_recursive</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, <a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **mutex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gab117022a6c2041b6be1f436ef9480619">pj_mutex_lock</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga1b7fd8fda31c55a7ef7dd9af1663314f">pj_mutex_unlock</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gac86b4b78edd55f75585bcc57f4ecd8d4">pj_mutex_trylock</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gabe7fdf5e3c16ef97b25919230c04f9bd">pj_mutex_destroy</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gaf767a306e88a21308ddf136edf10089e">pj_mutex_is_locked</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Mutex manipulation. Alternatively, application can use higher abstraction for lock objects, which provides uniform API for all kinds of lock mechanisms, including mutex. See <a class="el" href="group__PJ__LOCK.htm">Lock Objects</a> for more information. </p>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga68e3b826414e91fae87d6dbbd0de1a10"></a><!-- doxytag: member="os.h::pj_mutex_type_e" ref="ga68e3b826414e91fae87d6dbbd0de1a10" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJ__MUTEX.htm#ga68e3b826414e91fae87d6dbbd0de1a10">pj_mutex_type_e</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Mutex types:</p>
<ul>
<li>PJ_MUTEX_DEFAULT: default mutex type, which is system dependent.</li>
<li>PJ_MUTEX_SIMPLE: non-recursive mutex.</li>
<li>PJ_MUTEX_RECURSE: recursive mutex. </li>
</ul>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga1a5c058548d6b82189f80e07318e06d1"></a><!-- doxytag: member="os.h::pj_mutex_create" ref="ga1a5c058548d6b82189f80e07318e06d1" args="(pj_pool_t *pool, const char *name, int type, pj_mutex_t **mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create mutex of the specified type.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Name to be associated with the mutex (for debugging). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>The type of the mutex, of type <a class="el" href="group__PJ__MUTEX.htm#ga68e3b826414e91fae87d6dbbd0de1a10">pj_mutex_type_e</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>Pointer to hold the returned mutex instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4022a1375412b1e610c54a8bbfb31199"></a><!-- doxytag: member="os.h::pj_mutex_create_recursive" ref="ga4022a1375412b1e610c54a8bbfb31199" args="(pj_pool_t *pool, const char *name, pj_mutex_t **mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_create_recursive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create recursive mutex. This function is a simple wrapper for <a class="el" href="group__PJ__MUTEX.htm#ga1a5c058548d6b82189f80e07318e06d1">pj_mutex_create</a> to create recursive mutex.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Mutex name. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>Pointer to hold the returned mutex instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf5517cba6f6e3225076986998b5d4b59"></a><!-- doxytag: member="os.h::pj_mutex_create_simple" ref="gaf5517cba6f6e3225076986998b5d4b59" args="(pj_pool_t *pool, const char *name, pj_mutex_t **mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_create_simple </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create simple, non-recursive mutex. This function is a simple wrapper for <a class="el" href="group__PJ__MUTEX.htm#ga1a5c058548d6b82189f80e07318e06d1">pj_mutex_create</a> to create non-recursive mutex.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Mutex name. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>Pointer to hold the returned mutex instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gabe7fdf5e3c16ef97b25919230c04f9bd"></a><!-- doxytag: member="os.h::pj_mutex_destroy" ref="gabe7fdf5e3c16ef97b25919230c04f9bd" args="(pj_mutex_t *mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destroy mutex.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>Te mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf767a306e88a21308ddf136edf10089e"></a><!-- doxytag: member="os.h::pj_mutex_is_locked" ref="gaf767a306e88a21308ddf136edf10089e" args="(pj_mutex_t *mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_mutex_is_locked </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Determine whether calling thread is owning the mutex (only available when PJ_DEBUG is set). </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero if yes. </dd></dl>

</div>
</div>
<a class="anchor" id="gab117022a6c2041b6be1f436ef9480619"></a><!-- doxytag: member="os.h::pj_mutex_lock" ref="gab117022a6c2041b6be1f436ef9480619" args="(pj_mutex_t *mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_lock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Acquire mutex lock.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gac86b4b78edd55f75585bcc57f4ecd8d4"></a><!-- doxytag: member="os.h::pj_mutex_trylock" ref="gac86b4b78edd55f75585bcc57f4ecd8d4" args="(pj_mutex_t *mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_trylock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Try to acquire mutex lock.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the error code if the lock couldn't be acquired. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1b7fd8fda31c55a7ef7dd9af1663314f"></a><!-- doxytag: member="os.h::pj_mutex_unlock" ref="ga1b7fd8fda31c55a7ef7dd9af1663314f" args="(pj_mutex_t *mutex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_unlock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&nbsp;</td>
          <td class="paramname"> <em>mutex</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Release mutex lock.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>mutex</em>&nbsp;</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
