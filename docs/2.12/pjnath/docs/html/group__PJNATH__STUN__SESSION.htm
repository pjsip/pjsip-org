<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>STUN session (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">STUN session<div class="ingroups"><a class="el" href="group__PJNATH.htm">NAT Traversal Helper Library</a> &raquo; <a class="el" href="group__PJNATH__STUN.htm">STUN: Session Traversal Utilities for NAT</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>STUN client and server session.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__rx__data.htm">pj_stun_rx_data</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gac3fc8c37c0d50c5daac0944b3c109cc9"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a></td></tr>
<tr class="separator:gac3fc8c37c0d50c5daac0944b3c109cc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga65952e3ea20202965284021d5086e48d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga65952e3ea20202965284021d5086e48d">pj_stun_sess_msg_log_flag</a> { <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SESSION.htm#gga65952e3ea20202965284021d5086e48da90f58a7294799bda3249d0e93f67af51">PJ_STUN_SESS_LOG_TX_REQ</a> =1, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SESSION.htm#gga65952e3ea20202965284021d5086e48da56f35f51c372b87b691a58609da94d89">PJ_STUN_SESS_LOG_TX_RES</a> =2, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SESSION.htm#gga65952e3ea20202965284021d5086e48da7282b1bc7d190835bfa0f383d2b871a1">PJ_STUN_SESS_LOG_TX_IND</a> =4, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SESSION.htm#gga65952e3ea20202965284021d5086e48da5f6565d96e199f89b309ffca160c8a20">PJ_STUN_SESS_LOG_RX_REQ</a> =8, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SESSION.htm#gga65952e3ea20202965284021d5086e48dab1e4c10cbc5f362007e781b816743987">PJ_STUN_SESS_LOG_RX_RES</a> =16, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SESSION.htm#gga65952e3ea20202965284021d5086e48da3e0bc3f93f0eda0bbffb57c119c15b98">PJ_STUN_SESS_LOG_RX_IND</a> =32
<br />
 }</td></tr>
<tr class="separator:ga65952e3ea20202965284021d5086e48d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga9e878e048f0ea245773c6a63b571f13c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga9e878e048f0ea245773c6a63b571f13c">pj_stun_session_create</a> (<a class="el" href="structpj__stun__config.htm">pj_stun_config</a> *cfg, const char *name, const <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a> *cb, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> fingerprint, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock, <a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> **p_sess)</td></tr>
<tr class="separator:ga9e878e048f0ea245773c6a63b571f13c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabca1fd4cdc98149f811d871eaf347a0d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gabca1fd4cdc98149f811d871eaf347a0d">pj_stun_session_destroy</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess)</td></tr>
<tr class="separator:gabca1fd4cdc98149f811d871eaf347a0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64283d55a10f92a479060d1930fc35a6"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga64283d55a10f92a479060d1930fc35a6">pj_stun_session_set_user_data</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>)</td></tr>
<tr class="separator:ga64283d55a10f92a479060d1930fc35a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe16fbf16fb2559e992475baca9b4d6b"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gafe16fbf16fb2559e992475baca9b4d6b">pj_stun_session_get_user_data</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess)</td></tr>
<tr class="separator:gafe16fbf16fb2559e992475baca9b4d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5252476aa24d005ac5c633f3e366bd52"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga5252476aa24d005ac5c633f3e366bd52">pj_stun_session_get_grp_lock</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess)</td></tr>
<tr class="separator:ga5252476aa24d005ac5c633f3e366bd52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2a32fd4752e48f8744c154c2c81fbc1"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac2a32fd4752e48f8744c154c2c81fbc1">pj_stun_session_set_software_name</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *sw)</td></tr>
<tr class="separator:gac2a32fd4752e48f8744c154c2c81fbc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca702f2c0ae8c889a4c37c61a307f4ba"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gaca702f2c0ae8c889a4c37c61a307f4ba">pj_stun_session_set_credential</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="el" href="group__PJNATH__STUN__AUTH.htm#ga2b5c95ba6bb32358c11dc2c613f641b0">pj_stun_auth_type</a> auth_type, const <a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *cred)</td></tr>
<tr class="separator:gaca702f2c0ae8c889a4c37c61a307f4ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga797c00bf8022aebe191e9a4c2d46fd2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga797c00bf8022aebe191e9a4c2d46fd2f">pj_stun_session_set_log</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, unsigned <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#gae4737d316c3696dc34a85aa1c09dab99">flags</a>)</td></tr>
<tr class="separator:ga797c00bf8022aebe191e9a4c2d46fd2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a88dbdeaeab0bdfd85565d00b24c3d3"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1a88dbdeaeab0bdfd85565d00b24c3d3">pj_stun_session_use_fingerprint</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> use)</td></tr>
<tr class="separator:ga1a88dbdeaeab0bdfd85565d00b24c3d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga40a0aeaf1cf9bf3b091130d7a2adf92b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga40a0aeaf1cf9bf3b091130d7a2adf92b">pj_stun_session_create_req</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> msg_type, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> magic, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> tsx_id[12], <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga40a0aeaf1cf9bf3b091130d7a2adf92b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga86c7b1c582e4d81386470ec169377267"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga86c7b1c582e4d81386470ec169377267">pj_stun_session_create_ind</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> msg_type, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga86c7b1c582e4d81386470ec169377267"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga107a113fa922883adbde6bb6613ee093"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga107a113fa922883adbde6bb6613ee093">pj_stun_session_create_res</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const <a class="el" href="structpj__stun__rx__data.htm">pj_stun_rx_data</a> *rdata, unsigned err_code, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *err_msg, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga107a113fa922883adbde6bb6613ee093"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga69d39f4165f0e54ee1806cf342b52f47"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, void *token, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> cache_res, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> retransmit, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *tdata)</td></tr>
<tr class="separator:ga69d39f4165f0e54ee1806cf342b52f47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e6b3b44a8ec67696e644c37755ee2d9"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga9e6b3b44a8ec67696e644c37755ee2d9">pj_stun_session_respond</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const <a class="el" href="structpj__stun__rx__data.htm">pj_stun_rx_data</a> *rdata, unsigned code, const char *err_msg, void *token, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> cache, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td></tr>
<tr class="separator:ga9e6b3b44a8ec67696e644c37755ee2d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d2076e598c9683297730043fd988c6a"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga8d2076e598c9683297730043fd988c6a">pj_stun_session_cancel_req</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *tdata, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> notify, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)</td></tr>
<tr class="separator:ga8d2076e598c9683297730043fd988c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gade7bf7eaa291937420f5588025abc66d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gade7bf7eaa291937420f5588025abc66d">pj_stun_session_retransmit_req</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *tdata, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> mod_count)</td></tr>
<tr class="separator:gade7bf7eaa291937420f5588025abc66d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c091311b90e4d6e25f7dc1c7b8cbe8c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const void *packet, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pkt_size, unsigned options, void *token, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *parsed_len, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned src_addr_len)</td></tr>
<tr class="separator:ga1c091311b90e4d6e25f7dc1c7b8cbe8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga32917cdf8f78c269e27c7ea167f7bffb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SESSION.htm#ga32917cdf8f78c269e27c7ea167f7bffb">pj_stun_msg_destroy_tdata</a> (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *tdata)</td></tr>
<tr class="separator:ga32917cdf8f78c269e27c7ea167f7bffb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>This is is a transport-independent object to manage a client or server STUN session. It has the following features:</p>
<ul>
<li><b>transport independent</b>:<br />
 the object does not have it's own socket, but rather it provides functions and callbacks to send and receive packets. This way the object can be used by different transport types (e.g. UDP, TCP, TLS, etc.) as well as better integration to application which already has its own means to send and receive packets.</li>
<li><b>authentication management</b>:<br />
 the object manages STUN authentication throughout the lifetime of the session. For client sessions, once it's given a credential to authenticate itself with the server, the object will automatically add authentication info (the MESSAGE-INTEGRITY) to the request as well as authenticate the response. It will also handle long-term authentication challenges, including handling of nonce expiration, and retry the request automatically. For server sessions, it can be configured to authenticate incoming requests automatically.</li>
<li><b>static or dynamic credential</b>:<br />
 application may specify static or dynamic credential to be used by the STUN session. Static credential means a static combination of username and password (and these cannot change during the session duration), while dynamic credential provides callback to ask the application about which username/password to use everytime authentication is about to be performed.</li>
<li><b>client transaction management</b>:<br />
 outgoing requests may be sent with a STUN transaction for reliability, and the object will manage the transaction internally (including performing retransmissions). Application will be notified about the result of the request when the response arrives (or the transaction times out). When the request is challenged with authentication, the object will retry the request with new authentication info, and application will be notified about the final result of this request.</li>
<li><b>server transaction management</b>:<br />
 application may ask response to incoming requests to be cached by the object, and in this case the object will check for cached response everytime request is received. The cached response will be deleted once a timer expires.</li>
</ul>
<h1><a class="anchor" id="using_stun_sess_sec"></a>
Using the STUN session</h1>
<p>The following steps describes how to use the STUN session:</p>
<ul>
<li><b>create the object configuration</b>:<br />
 The <a class="el" href="structpj__stun__config.htm">pj_stun_config</a> contains the configuration to create the STUN session, such as the timer heap to register internal timers and various STUN timeout values. You can initialize this structure by calling <a class="el" href="group__PJNATH__STUN__CONFIG.htm#ga2654ee0038afad692906dd3de4745052">pj_stun_config_init()</a></li>
<li><b>create the STUN session</b>:<br />
 by calling <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga9e878e048f0ea245773c6a63b571f13c">pj_stun_session_create()</a>. Among other things, this function requires the instance of <a class="el" href="structpj__stun__config.htm">pj_stun_config</a> and also <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a> structure which stores callbacks to send outgoing packets as well as to notify application about incoming STUN requests, responses, and indicates and other events.</li>
<li><b>configure credential:</b><br />
 if authentication is required for the session, configure the credential with <a class="el" href="group__PJNATH__STUN__SESSION.htm#gaca702f2c0ae8c889a4c37c61a307f4ba">pj_stun_session_set_credential()</a></li>
<li><b>configuring other settings:</b><br />
 several APIs are provided to configure the behavior of the STUN session (for example, to set the SOFTWARE attribute value, controls the logging behavior, fine tune the mutex locking, etc.). Please see the API reference for more info.</li>
<li><b>creating outgoing STUN requests or indications:</b><br />
 create the STUN message by using <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga40a0aeaf1cf9bf3b091130d7a2adf92b">pj_stun_session_create_req()</a> or <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga86c7b1c582e4d81386470ec169377267">pj_stun_session_create_ind()</a>. This will create a transmit data buffer containing a blank STUN request or indication. You will then typically need to add STUN attributes that are relevant to the request or indication, but note that some default attributes will be added by the session later when the message is sent (such as SOFTWARE attribute and attributes related to authentication). The message is now ready to be sent.</li>
<li><b>sending outgoing message:</b><br />
 use <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a> to send outgoing STUN messages (this includes STUN requests, indications, and responses). The function has options whether to retransmit the request (for non reliable transports) or to cache the response if we're sending response. This function in turn will call the <em>on_send_msg()</em> callback of <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a> to request the application to send the packet.</li>
<li><b>handling incoming packet:</b><br />
 call <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> everytime the application receives a STUN packet. This function will decode the packet and process the packet according to the message, and normally this will cause one of the callback in the <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a> to be called to notify the application about the event.</li>
<li><b>handling incoming requests:</b><br />
 incoming requests are notified to application in the <em>on_rx_request</em> callback of the <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a>. If authentication is enabled in the session, the application will only receive this callback after the incoming request has been authenticated (if the authentication fails, the session would respond automatically with 401 error and the callback will not be called). Application now must create and send response for this request.</li>
<li><b>creating and sending response:</b><br />
 create the STUN response with <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga107a113fa922883adbde6bb6613ee093">pj_stun_session_create_res()</a>. This will create a transmit data buffer containing a blank STUN response. You will then typically need to add STUN attributes that are relevant to the response, but note that some default attributes will be added by the session later when the message is sent (such as SOFTWARE attribute and attributes related to authentication). The message is now ready to be sent. Use <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a> (as explained above) to send the response.</li>
<li><b>convenient way to send response:</b><br />
 the <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga9e6b3b44a8ec67696e644c37755ee2d9">pj_stun_session_respond()</a> is provided as a convenient way to create and send simple STUN responses, such as error responses.</li>
<li><b>destroying the session:</b><br />
 once the session is done, use <a class="el" href="group__PJNATH__STUN__SESSION.htm#gabca1fd4cdc98149f811d871eaf347a0d">pj_stun_session_destroy()</a> to destroy the session. </li>
</ul>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gac3fc8c37c0d50c5daac0944b3c109cc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac3fc8c37c0d50c5daac0944b3c109cc9">&#9670;&nbsp;</a></span>pj_stun_session</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> <a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Forward declaration for pj_stun_session </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga65952e3ea20202965284021d5086e48d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga65952e3ea20202965284021d5086e48d">&#9670;&nbsp;</a></span>pj_stun_sess_msg_log_flag</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga65952e3ea20202965284021d5086e48d">pj_stun_sess_msg_log_flag</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>These are the flags to control the message logging in the STUN session. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga65952e3ea20202965284021d5086e48da90f58a7294799bda3249d0e93f67af51"></a>PJ_STUN_SESS_LOG_TX_REQ&#160;</td><td class="fielddoc"><p>Log outgoing STUN requests. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga65952e3ea20202965284021d5086e48da56f35f51c372b87b691a58609da94d89"></a>PJ_STUN_SESS_LOG_TX_RES&#160;</td><td class="fielddoc"><p>Log outgoing STUN responses. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga65952e3ea20202965284021d5086e48da7282b1bc7d190835bfa0f383d2b871a1"></a>PJ_STUN_SESS_LOG_TX_IND&#160;</td><td class="fielddoc"><p>Log outgoing STUN indications. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga65952e3ea20202965284021d5086e48da5f6565d96e199f89b309ffca160c8a20"></a>PJ_STUN_SESS_LOG_RX_REQ&#160;</td><td class="fielddoc"><p>Log incoming STUN requests. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga65952e3ea20202965284021d5086e48dab1e4c10cbc5f362007e781b816743987"></a>PJ_STUN_SESS_LOG_RX_RES&#160;</td><td class="fielddoc"><p>Log incoming STUN responses </p>
</td></tr>
<tr><td class="fieldname"><a id="gga65952e3ea20202965284021d5086e48da3e0bc3f93f0eda0bbffb57c119c15b98"></a>PJ_STUN_SESS_LOG_RX_IND&#160;</td><td class="fielddoc"><p>Log incoming STUN indications </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga32917cdf8f78c269e27c7ea167f7bffb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga32917cdf8f78c269e27c7ea167f7bffb">&#9670;&nbsp;</a></span>pj_stun_msg_destroy_tdata()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_stun_msg_destroy_tdata </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroy the transmit data. Call this function only when tdata has been created but application doesn't want to send the message (perhaps because of other error).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session. </td></tr>
    <tr><td class="paramname">tdata</td><td>The transmit data. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga8d2076e598c9683297730043fd988c6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8d2076e598c9683297730043fd988c6a">&#9670;&nbsp;</a></span>pj_stun_session_cancel_req()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_cancel_req </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>notify</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td>
          <td class="paramname"><em>status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Cancel outgoing STUN transaction. This operation is only valid for outgoing STUN request, to cease retransmission of the request and destroy the STUN client transaction that is used to send the request.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">tdata</td><td>The request message previously sent. </td></tr>
    <tr><td class="paramname">notify</td><td>Specify whether <em>on_request_complete()</em> callback should be called. </td></tr>
    <tr><td class="paramname">status</td><td>If <em>on_request_complete()</em> callback is to be called, specify the error status to be given when calling the callback. This error status MUST NOT be PJ_SUCCESS.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if transaction is successfully cancelled. This function will return PJNATH_ESTUNDESTROYED if application has destroyed the session in <em>on_request_complete()</em> callback. </dd></dl>

</div>
</div>
<a id="ga9e878e048f0ea245773c6a63b571f13c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9e878e048f0ea245773c6a63b571f13c">&#9670;&nbsp;</a></span>pj_stun_session_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__config.htm">pj_stun_config</a> *&#160;</td>
          <td class="paramname"><em>cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a> *&#160;</td>
          <td class="paramname"><em>cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>fingerprint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> **&#160;</td>
          <td class="paramname"><em>p_sess</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a STUN session.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfg</td><td>The STUN endpoint, to be used to register timers etc. </td></tr>
    <tr><td class="paramname">name</td><td>Optional name to be associated with this instance. The name will be used for example for logging purpose. </td></tr>
    <tr><td class="paramname">cb</td><td>Session callback. </td></tr>
    <tr><td class="paramname">fingerprint</td><td>Enable message fingerprint for outgoing messages. </td></tr>
    <tr><td class="paramname">grp_lock</td><td>Optional group lock to be used by this session. If NULL, the session will create one itself. </td></tr>
    <tr><td class="paramname">p_sess</td><td>Pointer to receive STUN session instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga86c7b1c582e4d81386470ec169377267"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga86c7b1c582e4d81386470ec169377267">&#9670;&nbsp;</a></span>pj_stun_session_create_ind()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_create_ind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>msg_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a STUN Indication message. After the message has been successfully created, application can send the message by calling <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">msg_type</td><td>The STUN request message type, from pj_stun_method_e or from pj_stun_msg_type. This function will add the indication bit as necessary. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive STUN transmit data instance containing the message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga40a0aeaf1cf9bf3b091130d7a2adf92b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga40a0aeaf1cf9bf3b091130d7a2adf92b">&#9670;&nbsp;</a></span>pj_stun_session_create_req()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_create_req </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>msg_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>magic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>&#160;</td>
          <td class="paramname"><em>tsx_id</em>[12], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a STUN request message. After the message has been successfully created, application can send the message by calling <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">msg_type</td><td>The STUN request message type, from pj_stun_method_e or from pj_stun_msg_type. </td></tr>
    <tr><td class="paramname">magic</td><td>STUN magic, use PJ_STUN_MAGIC. </td></tr>
    <tr><td class="paramname">tsx_id</td><td>Optional transaction ID. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive STUN transmit data instance containing the request.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga107a113fa922883adbde6bb6613ee093"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga107a113fa922883adbde6bb6613ee093">&#9670;&nbsp;</a></span>pj_stun_session_create_res()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_create_res </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__rx__data.htm">pj_stun_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>err_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>err_msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a STUN response message. After the message has been successfully created, application can send the message by calling <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a>. Alternatively application may use <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga9e6b3b44a8ec67696e644c37755ee2d9">pj_stun_session_respond()</a> to create and send response in one function call.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">rdata</td><td>The STUN request where the response is to be created. </td></tr>
    <tr><td class="paramname">err_code</td><td>Error code to be set in the response, if error response is to be created, according to pj_stun_status enumeration. This argument MUST be zero if successful response is to be created. </td></tr>
    <tr><td class="paramname">err_msg</td><td>Optional pointer for the error message string, when creating error response. If the value is NULL and the <em>err_code</em> is non-zero, then default error message will be used. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive the response message created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gabca1fd4cdc98149f811d871eaf347a0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabca1fd4cdc98149f811d871eaf347a0d">&#9670;&nbsp;</a></span>pj_stun_session_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroy the STUN session and all objects created in the context of this session.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. This function will return PJ_EPENDING if the operation cannot be performed immediately because callbacks are being called; in this case the session will be destroyed as soon as the last callback returns. </dd></dl>

</div>
</div>
<a id="ga5252476aa24d005ac5c633f3e366bd52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5252476aa24d005ac5c633f3e366bd52">&#9670;&nbsp;</a></span>pj_stun_session_get_grp_lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a>* pj_stun_session_get_grp_lock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the group lock for this STUN session.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The group lock. </dd></dl>

</div>
</div>
<a id="gafe16fbf16fb2559e992475baca9b4d6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafe16fbf16fb2559e992475baca9b4d6b">&#9670;&nbsp;</a></span>pj_stun_session_get_user_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* pj_stun_session_get_user_data </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieve the user data previously associated to this STUN session with <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga64283d55a10f92a479060d1930fc35a6">pj_stun_session_set_user_data()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The user data associated with this STUN session. </dd></dl>

</div>
</div>
<a id="ga1c091311b90e4d6e25f7dc1c7b8cbe8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">&#9670;&nbsp;</a></span>pj_stun_session_on_rx_pkt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_on_rx_pkt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>packet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>pkt_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&#160;</td>
          <td class="paramname"><em>parsed_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *&#160;</td>
          <td class="paramname"><em>src_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>src_addr_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Application must call this function to notify the STUN session about the arrival of STUN packet. The STUN packet MUST have been checked first with <a class="el" href="group__PJNATH__STUN__MSG.htm#ga66011e59d3b137e1ee41bead1eeb36d8">pj_stun_msg_check()</a> to verify that this is indeed a valid STUN packet.</p>
<p>The STUN session will decode the packet into <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a>, and process the message accordingly. If the message is a response, it will search through the outstanding STUN client transactions for a matching transaction ID and hand over the response to the transaction.</p>
<p>On successful message processing, application will be notified about the message via one of the <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a> callback.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">packet</td><td>The packet containing STUN message. </td></tr>
    <tr><td class="paramname">pkt_size</td><td>Size of the packet. </td></tr>
    <tr><td class="paramname">options</td><td>Options, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga597502d06b5b523c05d30e6d70e5b764">pj_stun_decode_options</a>. </td></tr>
    <tr><td class="paramname">parsed_len</td><td>Optional pointer to receive the size of the parsed STUN message (useful if packet is received via a stream oriented protocol). </td></tr>
    <tr><td class="paramname">token</td><td>Optional token which will be given back to application in the <em>on_rx_request()</em>, <em>on_rx_indication()</em> and <em>on_send_msg()</em> callbacks. The token can be used to associate processing or incoming request or indication with some context. </td></tr>
    <tr><td class="paramname">src_addr</td><td>The source address of the packet, which will also be given back to application callbacks, along with source address length. </td></tr>
    <tr><td class="paramname">src_addr_len</td><td>Length of the source address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. This function will return PJNATH_ESTUNDESTROYED if application has destroyed the session in one of the callback. </dd></dl>

</div>
</div>
<a id="ga9e6b3b44a8ec67696e644c37755ee2d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9e6b3b44a8ec67696e644c37755ee2d9">&#9670;&nbsp;</a></span>pj_stun_session_respond()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_respond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__rx__data.htm">pj_stun_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>err_msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>cache</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *&#160;</td>
          <td class="paramname"><em>dst_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>addr_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is a utility function to create and send response for an incoming STUN request. Internally this function calls <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga107a113fa922883adbde6bb6613ee093">pj_stun_session_create_res()</a> and <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a>. It is provided here as a matter of convenience.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">rdata</td><td>The STUN request message to be responded. </td></tr>
    <tr><td class="paramname">code</td><td>Error code to be set in the response, if error response is to be created, according to pj_stun_status enumeration. This argument MUST be zero if successful response is to be created. </td></tr>
    <tr><td class="paramname">err_msg</td><td>Optional pointer for the error message string, when creating error response. If the value is NULL and the <em>err_code</em> is non-zero, then default error message will be used. </td></tr>
    <tr><td class="paramname">token</td><td>Optional token which will be given back to application in <em>on_send_msg()</em> callback and <em>on_request_complete()</em> callback, if the message is a STUN request message. Internally this function will put the token in the <em>token</em> field of <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a>, hence it will overwrite any value that the application puts there. </td></tr>
    <tr><td class="paramname">cache</td><td>Specify whether session should cache this response for future request retransmission. If TRUE, subsequent request retransmission will be handled by the session and it will not call request callback. </td></tr>
    <tr><td class="paramname">dst_addr</td><td>Destination address of the response (or equal to the source address of the original request). </td></tr>
    <tr><td class="paramname">addr_len</td><td>Address length.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. This function will return PJNATH_ESTUNDESTROYED if application has destroyed the session in <em>on_send_msg()</em> callback. </dd></dl>

</div>
</div>
<a id="gade7bf7eaa291937420f5588025abc66d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gade7bf7eaa291937420f5588025abc66d">&#9670;&nbsp;</a></span>pj_stun_session_retransmit_req()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_retransmit_req </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>mod_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Explicitly request retransmission of the request. Normally application doesn't need to do this, but this functionality is needed by ICE to speed up connectivity check completion.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">tdata</td><td>The request message previously sent. </td></tr>
    <tr><td class="paramname">mod_count</td><td>Boolean flag to indicate whether transmission count needs to be incremented.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error. This function will return PJNATH_ESTUNDESTROYED if application has destroyed the session in <em>on_send_msg()</em> callback. </dd></dl>

</div>
</div>
<a id="ga69d39f4165f0e54ee1806cf342b52f47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga69d39f4165f0e54ee1806cf342b52f47">&#9670;&nbsp;</a></span>pj_stun_session_send_msg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_send_msg </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>cache_res</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>retransmit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *&#160;</td>
          <td class="paramname"><em>dst_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>addr_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Send STUN message to the specified destination. This function will encode the <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> instance to a packet buffer, and add credential or fingerprint if necessary. If the message is a request, the session will also create and manage a STUN client transaction to be used to manage the retransmission of the request. After the message has been encoded and transaction is setup, the <em>on_send_msg()</em> callback of <a class="el" href="structpj__stun__session__cb.htm">pj_stun_session_cb</a> (which is registered when the STUN session is created) will be called to actually send the message to the wire.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">token</td><td>Optional token which will be given back to application in <em>on_send_msg()</em> callback and <em>on_request_complete()</em> callback, if the message is a STUN request message. Internally this function will put the token in the <em>token</em> field of <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a>, hence it will overwrite any value that the application puts there. </td></tr>
    <tr><td class="paramname">cache_res</td><td>If the message is a response message for an incoming request, specify PJ_TRUE to instruct the STUN session to cache this response for subsequent incoming request retransmission. Otherwise this parameter will be ignored for non-response message. </td></tr>
    <tr><td class="paramname">retransmit</td><td>If the message is a request message, specify whether the request should be retransmitted. Normally application will specify TRUE if the underlying transport is UDP and FALSE if the underlying transport is TCP or TLS. </td></tr>
    <tr><td class="paramname">dst_addr</td><td>The destination socket address. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of destination address. </td></tr>
    <tr><td class="paramname">tdata</td><td>The STUN transmit data containing the STUN message to be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. This function will return PJNATH_ESTUNDESTROYED if application has destroyed the session in <em>on_send_msg()</em> callback. </dd></dl>

</div>
</div>
<a id="gaca702f2c0ae8c889a4c37c61a307f4ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaca702f2c0ae8c889a4c37c61a307f4ba">&#9670;&nbsp;</a></span>pj_stun_session_set_credential()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_set_credential </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__AUTH.htm#ga2b5c95ba6bb32358c11dc2c613f641b0">pj_stun_auth_type</a>&#160;</td>
          <td class="paramname"><em>auth_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *&#160;</td>
          <td class="paramname"><em>cred</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set credential to be used by this session. Once credential is set, all outgoing messages will include MESSAGE-INTEGRITY, and all incoming message will be authenticated against this credential.</p>
<p>To disable authentication after it has been set, call this function again with NULL as the argument.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">auth_type</td><td>Type of authentication. </td></tr>
    <tr><td class="paramname">cred</td><td>The credential to be used by this session. If NULL is specified, authentication will be disabled.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga797c00bf8022aebe191e9a4c2d46fd2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga797c00bf8022aebe191e9a4c2d46fd2f">&#9670;&nbsp;</a></span>pj_stun_session_set_log()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_stun_session_set_log </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Configure message logging. By default all flags are enabled.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">flags</td><td>Bitmask combination of <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga65952e3ea20202965284021d5086e48d">pj_stun_sess_msg_log_flag</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gac2a32fd4752e48f8744c154c2c81fbc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac2a32fd4752e48f8744c154c2c81fbc1">&#9670;&nbsp;</a></span>pj_stun_session_set_software_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_set_software_name </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>sw</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set SOFTWARE name to be included in all requests and responses.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">sw</td><td>Software name string. If this argument is NULL or empty, the session will not include SOFTWARE attribute in STUN requests and responses.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga64283d55a10f92a479060d1930fc35a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga64283d55a10f92a479060d1930fc35a6">&#9670;&nbsp;</a></span>pj_stun_session_set_user_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_session_set_user_data </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Associated an arbitrary data with this STUN session. The user data may be retrieved later with <a class="el" href="group__PJNATH__STUN__SESSION.htm#gafe16fbf16fb2559e992475baca9b4d6b">pj_stun_session_get_user_data()</a> function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">user_data</td><td>The user data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga1a88dbdeaeab0bdfd85565d00b24c3d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1a88dbdeaeab0bdfd85565d00b24c3d3">&#9670;&nbsp;</a></span>pj_stun_session_use_fingerprint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_stun_session_use_fingerprint </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *&#160;</td>
          <td class="paramname"><em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>use</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Configure whether the STUN session should utilize FINGERPRINT in outgoing messages.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session instance. </td></tr>
    <tr><td class="paramname">use</td><td>Boolean for the setting.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The previous configured value of FINGERPRINT utilization of the sessoin. </dd></dl>

</div>
</div>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
