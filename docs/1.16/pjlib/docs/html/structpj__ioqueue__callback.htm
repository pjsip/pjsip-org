<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: pj_ioqueue_callback Struct Reference (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="functions.htm"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<h1>pj_ioqueue_callback Struct Reference<br/>
<small>
[<a class="el" href="group__PJ__IOQUEUE.htm">IOQueue: I/O Event Dispatching with Proactor Pattern</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<!-- doxytag: class="pj_ioqueue_callback" --><table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ioqueue__callback.htm#aef60532d102c3174555e61127cf9ec1b">on_read_complete</a> )(<a class="el" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, <a class="el" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="el" href="structop__key.htm">op_key</a>, <a class="el" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> bytes_read)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__IOQUEUE.htm#gad79249d319b012a8366921e277299dc7">on_write_complete</a> )(<a class="el" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, <a class="el" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="el" href="structop__key.htm">op_key</a>, <a class="el" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> bytes_sent)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__IOQUEUE.htm#ga4330720fb952bd7c256d2752418bcc66">on_accept_complete</a> )(<a class="el" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, <a class="el" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="el" href="structop__key.htm">op_key</a>, <a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, <a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__IOQUEUE.htm#ga268a5bf548a9656a8652e35b567f7776">on_connect_complete</a> )(<a class="el" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, <a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This structure describes the callbacks to be called when I/O operation completes. </p>
<hr/><h2>Field Documentation</h2>
<a class="anchor" id="aef60532d102c3174555e61127cf9ec1b"></a><!-- doxytag: member="pj_ioqueue_callback::on_read_complete" ref="aef60532d102c3174555e61127cf9ec1b" args=")(pj_ioqueue_key_t *key, pj_ioqueue_op_key_t *op_key, pj_ssize_t bytes_read)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* <a class="el" href="structpj__ioqueue__callback.htm#aef60532d102c3174555e61127cf9ec1b">pj_ioqueue_callback::on_read_complete</a>)(<a class="el" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, <a class="el" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="el" href="structop__key.htm">op_key</a>, <a class="el" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> bytes_read)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This callback is called when <a class="el" href="group__PJ__IOQUEUE.htm#ga71e08c6414a6f0cd1c1d2fde267bccbe">pj_ioqueue_recv</a> or <a class="el" href="group__PJ__IOQUEUE.htm#ga374d409596460c721e6c185e4a13f25d">pj_ioqueue_recvfrom</a> completes.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>key</em>&nbsp;</td><td>The key. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em><a class="el" href="structop__key.htm">op_key</a></em>&nbsp;</td><td>Operation key. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bytes_read</em>&nbsp;</td><td>&gt;= 0 to indicate the amount of data read, otherwise negative value containing the error code. To obtain the pj_status_t error code, use (pj_status_t code = -bytes_read). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="ioqueue_8h_source.htm">ioqueue.h</a></li>
</ul>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
