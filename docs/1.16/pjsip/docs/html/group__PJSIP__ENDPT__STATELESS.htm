<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJSIP Reference: Message Creation and Stateless Operations (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>

<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>Message Creation and Stateless Operations<br/>
<small>
[<a class="el" href="group__PJSIP__CORE__CORE.htm">At the Very Core</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>Utilities to create various messages and base function to send messages.  
</p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__send__state.htm">pjsip_send_state</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__response__addr.htm">pjsip_response_addr</a></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a> )(<a class="el" href="structpjsip__send__state.htm">pjsip_send_state</a> *st, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> sent, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *cont)</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga6a5dc2cd5b43a1adf869c9746593f818">pjsip_endpt_create_request</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="el" href="structpjsip__method.htm">pjsip_method</a> *method, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *target, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *call_id, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> cseq, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *text, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gafbcdac0f5e7116397eb650ed6ae59644">pjsip_endpt_create_request_from_hdr</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="el" href="structpjsip__method.htm">pjsip_method</a> *method, const <a class="el" href="structpjsip__uri.htm">pjsip_uri</a> *target, const <a class="el" href="structpjsip__fromto__hdr.htm">pjsip_from_hdr</a> *from, const <a class="el" href="structpjsip__fromto__hdr.htm">pjsip_to_hdr</a> *to, const <a class="el" href="structpjsip__contact__hdr.htm">pjsip_contact_hdr</a> *contact, const <a class="el" href="structpjsip__cid__hdr.htm">pjsip_cid_hdr</a> *call_id, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> cseq, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *text, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gac9f1f0b66ed886e7f717a3a087e386ec">pjsip_endpt_create_response</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> st_code, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga4dcb02a9dadb786bd8aa902a207e6195">pjsip_endpt_create_ack</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **ack)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gaaa0d0613b0db39a7d634d18288dbe452">pjsip_endpt_create_cancel</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gab0152865eea909cc26519ac6d70d8430">pjsip_get_request_dest</a> (const <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="el" href="structpjsip__host__info.htm">pjsip_host_info</a> *dest_info)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga8d1030bd2a6b5b55c4a6a95e03393ed7">pjsip_process_route_set</a> (<a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="el" href="structpjsip__host__info.htm">pjsip_host_info</a> *dest_info)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga0466e76dd131e32dd471a5e808d9003e">pjsip_restore_strict_route_set</a> (<a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga155a9b9dce2138e91605d6b7561d70a3">pjsip_endpt_send_request_stateless</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, void *token, <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a> cb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga5ebe940444f71bdc00aa1f927a9a3677">pjsip_endpt_send_raw</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="sip__types_8h.htm#a281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a> tp_type, const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *sel, const void *raw_data, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> data_len, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *addr, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> addr_len, void *token, <a class="el" href="group__PJSIP__TRANSPORT.htm#ga2e45f1d05fb9db6a7819a1c7e59ad091">pjsip_tp_send_callback</a> cb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga087ee478d61623a18d4e0b3d6a4e6aa0">pjsip_endpt_send_raw_to_uri</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *dst_uri, const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *sel, const void *raw_data, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> data_len, void *token, <a class="el" href="group__PJSIP__TRANSPORT.htm#ga2e45f1d05fb9db6a7819a1c7e59ad091">pjsip_tp_send_callback</a> cb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga5d1406491458eff09be035d6441ff5cf">pjsip_get_response_addr</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="structpjsip__response__addr.htm">pjsip_response_addr</a> *res_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gad0b30a81c6b26ffd3615a5adcb9bd1f6">pjsip_endpt_send_response</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__response__addr.htm">pjsip_response_addr</a> *res_addr, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, void *token, <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a> cb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga200f3c0ae515582fff4561395b7a51b2">pjsip_endpt_send_response2</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, void *token, <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a> cb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga09a4577a6c0b7c14c37d0981b1d55f07">pjsip_endpt_respond_stateless</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> st_code, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, const <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *hdr_list, const <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> *body)</td></tr>
</table>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="ga92a8259f0a9381f7b9c9163de990004a"></a><!-- doxytag: member="sip_util.h::pjsip_send_callback" ref="ga92a8259f0a9381f7b9c9163de990004a" args=")(pjsip_send_state *st, pj_ssize_t sent, pj_bool_t *cont)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a>)(<a class="el" href="structpjsip__send__state.htm">pjsip_send_state</a> *st, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> sent, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *cont)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Declaration for callback function to be specified in <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga155a9b9dce2138e91605d6b7561d70a3">pjsip_endpt_send_request_stateless()</a>, <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gad0b30a81c6b26ffd3615a5adcb9bd1f6">pjsip_endpt_send_response()</a>, or <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga200f3c0ae515582fff4561395b7a51b2">pjsip_endpt_send_response2()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>st</em>&nbsp;</td><td>Structure to keep transmission state. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sent</em>&nbsp;</td><td>Number of bytes sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cont</em>&nbsp;</td><td>When current transmission fails, specify whether the function should fallback to next destination. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga6a5dc2cd5b43a1adf869c9746593f818"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_create_request" ref="ga6a5dc2cd5b43a1adf869c9746593f818" args="(pjsip_endpoint *endpt, const pjsip_method *method, const pj_str_t *target, const pj_str_t *from, const pj_str_t *to, const pj_str_t *contact, const pj_str_t *call_id, int cseq, const pj_str_t *text, pjsip_tx_data **p_tdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create_request </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__method.htm">pjsip_method</a> *&nbsp;</td>
          <td class="paramname"> <em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>from</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>to</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>contact</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>call_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td>
          <td class="paramname"> <em>cseq</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&nbsp;</td>
          <td class="paramname"> <em>p_tdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create an independent request message. This can be used to build any request outside a dialog, such as OPTIONS, MESSAGE, etc. To create a request inside a dialog, application should use <a class="el" href="group__PJSIP__DIALOG.htm#ga8e057a2b3b89d071a2027eba4321751f">pjsip_dlg_create_request</a>.</p>
<p>This function adds the following headers in the request:</p>
<ul>
<li>From, To, Call-ID, and CSeq,</li>
<li>Contact header, if contact is specified.</li>
<li>A blank Via header.</li>
<li>Additional request headers (such as Max-Forwards) which are copied from endpoint configuration.</li>
</ul>
<p>In addition, the function adds a unique tag in the From header.</p>
<p>Once a transmit data is created, the reference counter is initialized to 1.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>Endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>method</em>&nbsp;</td><td>SIP Method. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>target</em>&nbsp;</td><td>Target URI. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>from</em>&nbsp;</td><td>URL to put in From header. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>to</em>&nbsp;</td><td>URL to put in To header. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>contact</em>&nbsp;</td><td>Contact to be put as Contact header value, hence the format must follow RFC 3261 Section 20.10: When the header field value contains a display name, the URI including all URI parameters is enclosed in "&lt;" and "&gt;". If no "&lt;" and "&gt;" are present, all parameters after the URI are header parameters, not URI parameters. The display name can be tokens, or a quoted string, if a larger character set is desired. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>call_id</em>&nbsp;</td><td>Optional Call-ID (put NULL to generate unique Call-ID). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cseq</em>&nbsp;</td><td>Optional CSeq (put -1 to generate random CSeq). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>text</em>&nbsp;</td><td>Optional text body (put NULL to omit body). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_tdata</em>&nbsp;</td><td>Pointer to receive the transmit data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gafbcdac0f5e7116397eb650ed6ae59644"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_create_request_from_hdr" ref="gafbcdac0f5e7116397eb650ed6ae59644" args="(pjsip_endpoint *endpt, const pjsip_method *method, const pjsip_uri *target, const pjsip_from_hdr *from, const pjsip_to_hdr *to, const pjsip_contact_hdr *contact, const pjsip_cid_hdr *call_id, int cseq, const pj_str_t *text, pjsip_tx_data **p_tdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create_request_from_hdr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__method.htm">pjsip_method</a> *&nbsp;</td>
          <td class="paramname"> <em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__uri.htm">pjsip_uri</a> *&nbsp;</td>
          <td class="paramname"> <em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__fromto__hdr.htm">pjsip_from_hdr</a> *&nbsp;</td>
          <td class="paramname"> <em>from</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__fromto__hdr.htm">pjsip_to_hdr</a> *&nbsp;</td>
          <td class="paramname"> <em>to</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__contact__hdr.htm">pjsip_contact_hdr</a> *&nbsp;</td>
          <td class="paramname"> <em>contact</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__cid__hdr.htm">pjsip_cid_hdr</a> *&nbsp;</td>
          <td class="paramname"> <em>call_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td>
          <td class="paramname"> <em>cseq</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&nbsp;</td>
          <td class="paramname"> <em>p_tdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create an independent request message from the specified headers. This function will clone the headers and put them in the request.</p>
<p>This function adds the following headers in the request:</p>
<ul>
<li>From, To, Call-ID, and CSeq,</li>
<li>Contact header, if contact is specified.</li>
<li>A blank Via header.</li>
<li>Additional request headers (such as Max-Forwards) which are copied from endpoint configuration.</li>
</ul>
<p>In addition, the function adds a unique tag in the From header.</p>
<p>Once a transmit data is created, the reference counter is initialized to 1.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>Endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>method</em>&nbsp;</td><td>SIP Method. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>target</em>&nbsp;</td><td>Target URI. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>from</em>&nbsp;</td><td>From header. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>to</em>&nbsp;</td><td>To header. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>contact</em>&nbsp;</td><td>Contact header. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>call_id</em>&nbsp;</td><td>Optional Call-ID (put NULL to generate unique Call-ID). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cseq</em>&nbsp;</td><td>Optional CSeq (put -1 to generate random CSeq). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>text</em>&nbsp;</td><td>Optional text body (put NULL to omit body). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_tdata</em>&nbsp;</td><td>Pointer to receive the transmit data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gac9f1f0b66ed886e7f717a3a087e386ec"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_create_response" ref="gac9f1f0b66ed886e7f717a3a087e386ec" args="(pjsip_endpoint *endpt, const pjsip_rx_data *rdata, int st_code, const pj_str_t *st_text, pjsip_tx_data **p_tdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create_response </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td>
          <td class="paramname"> <em>st_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>st_text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&nbsp;</td>
          <td class="paramname"> <em>p_tdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Construct a minimal response message for the received request. This function will construct all the Via, Record-Route, Call-ID, From, To, CSeq, and Call-ID headers from the request.</p>
<p>Note: the txdata reference counter is set to ZERO!.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The endpoint. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rdata</em>&nbsp;</td><td>The request receive data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>st_code</em>&nbsp;</td><td>Status code to be put in the response. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>st_text</em>&nbsp;</td><td>Optional status text, or NULL to get the default text. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_tdata</em>&nbsp;</td><td>Pointer to receive the transmit data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4dcb02a9dadb786bd8aa902a207e6195"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_create_ack" ref="ga4dcb02a9dadb786bd8aa902a207e6195" args="(pjsip_endpoint *endpt, const pjsip_tx_data *tdata, const pjsip_rx_data *rdata, pjsip_tx_data **ack)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create_ack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&nbsp;</td>
          <td class="paramname"> <em>ack</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Construct a full ACK request for the received non-2xx final response. This utility function is normally called by the transaction to construct an ACK request to 3xx-6xx final response. The generation of ACK message for 2xx final response is different than this one.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The endpoint. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>This contains the original INVITE request </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rdata</em>&nbsp;</td><td>The final response. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ack</em>&nbsp;</td><td>The ACK request created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gaaa0d0613b0db39a7d634d18288dbe452"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_create_cancel" ref="gaaa0d0613b0db39a7d634d18288dbe452" args="(pjsip_endpoint *endpt, const pjsip_tx_data *tdata, pjsip_tx_data **p_tdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create_cancel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&nbsp;</td>
          <td class="paramname"> <em>p_tdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Construct CANCEL request for the previously sent request.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The endpoint. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>The transmit buffer for the request being cancelled. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_tdata</em>&nbsp;</td><td>Pointer to receive the transmit data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gab0152865eea909cc26519ac6d70d8430"></a><!-- doxytag: member="sip_util.h::pjsip_get_request_dest" ref="gab0152865eea909cc26519ac6d70d8430" args="(const pjsip_tx_data *tdata, pjsip_host_info *dest_info)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_get_request_dest </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__host__info.htm">pjsip_host_info</a> *&nbsp;</td>
          <td class="paramname"> <em>dest_info</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find which destination to be used to send the request message, based on the request URI and Route headers in the message. The procedure used here follows the guidelines on sending the request in RFC 3261 chapter 8.1.2.</p>
<p>Note there was a change in the behavior of this function since version 0.5.10.2. Previously this function may modify the request when strict route is present (to update request URI and route-set). This is no longer the case now, and this process is done in separate function (see <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga8d1030bd2a6b5b55c4a6a95e03393ed7">pjsip_process_route_set()</a>).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>The transmit data containing the request message. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dest_info</em>&nbsp;</td><td>On return, it contains information about destination host to contact, along with the preferable transport type, if any. Caller will then normally proceed with resolving this host with server resolution procedure described in RFC 3263.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga8d1030bd2a6b5b55c4a6a95e03393ed7">pjsip_process_route_set</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga8d1030bd2a6b5b55c4a6a95e03393ed7"></a><!-- doxytag: member="sip_util.h::pjsip_process_route_set" ref="ga8d1030bd2a6b5b55c4a6a95e03393ed7" args="(pjsip_tx_data *tdata, pjsip_host_info *dest_info)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_process_route_set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__host__info.htm">pjsip_host_info</a> *&nbsp;</td>
          <td class="paramname"> <em>dest_info</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Process route-set found in the request and calculate destination to be used to send the request message, based on the request URI and Route headers in the message. The procedure used here follows the guidelines on sending the request in RFC 3261 chapter 8.1.2.</p>
<p>This function may modify the message (request line and Route headers), if the Route information specifies strict routing and the request URI in the message is different than the calculated target URI. In that case, the target URI will be put as the request URI of the request and current request URI will be put as the last entry of the Route headers.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>The transmit data containing the request message. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dest_info</em>&nbsp;</td><td>On return, it contains information about destination host to contact, along with the preferable transport type, if any. Caller will then normally proceed with resolving this host with server resolution procedure described in RFC 3263.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd>pjsip_get_request_addr </dd></dl>

</div>
</div>
<a class="anchor" id="ga0466e76dd131e32dd471a5e808d9003e"></a><!-- doxytag: member="sip_util.h::pjsip_restore_strict_route_set" ref="ga0466e76dd131e32dd471a5e808d9003e" args="(pjsip_tx_data *tdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_restore_strict_route_set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Swap the request URI and strict route back to the original position before <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga8d1030bd2a6b5b55c4a6a95e03393ed7">pjsip_process_route_set()</a> function is called. If no strict route URI was found by <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga8d1030bd2a6b5b55c4a6a95e03393ed7">pjsip_process_route_set()</a>, this function will do nothing.</p>
<p>This function should only used internally by PJSIP client authentication module.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>Transmit data containing request message. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga155a9b9dce2138e91605d6b7561d70a3"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_send_request_stateless" ref="ga155a9b9dce2138e91605d6b7561d70a3" args="(pjsip_endpoint *endpt, pjsip_tx_data *tdata, void *token, pjsip_send_callback cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_send_request_stateless </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a>&nbsp;</td>
          <td class="paramname"> <em>cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Send outgoing request statelessly The function will take care of which destination and transport to use based on the information in the message, taking care of URI in the request line and Route header.</p>
<p>This function is different than <a class="el" href="group__PJSIP__TRANSPORT.htm#ga8e027b046719769ad0794572c83b33d7">pjsip_transport_send()</a> in that this function adds/modify the Via header as necessary.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>The transmit data to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>token</em>&nbsp;</td><td>Arbitrary token to be given back on the callback. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Optional callback to notify transmission status (also gives chance for application to discontinue retrying sending to alternate address).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5ebe940444f71bdc00aa1f927a9a3677"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_send_raw" ref="ga5ebe940444f71bdc00aa1f927a9a3677" args="(pjsip_endpoint *endpt, pjsip_transport_type_e tp_type, const pjsip_tpselector *sel, const void *raw_data, pj_size_t data_len, const pj_sockaddr_t *addr, int addr_len, void *token, pjsip_tp_send_callback cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_send_raw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a>&nbsp;</td>
          <td class="paramname"> <em>tp_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *&nbsp;</td>
          <td class="paramname"> <em>sel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&nbsp;</td>
          <td class="paramname"> <em>raw_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>data_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *&nbsp;</td>
          <td class="paramname"> <em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td>
          <td class="paramname"> <em>addr_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TRANSPORT.htm#ga2e45f1d05fb9db6a7819a1c7e59ad091">pjsip_tp_send_callback</a>&nbsp;</td>
          <td class="paramname"> <em>cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a low-level function to send raw data to a destination.</p>
<p>See also <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga087ee478d61623a18d4e0b3d6a4e6aa0">pjsip_endpt_send_raw_to_uri()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The SIP endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tp_type</em>&nbsp;</td><td>Transport type. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sel</em>&nbsp;</td><td>Optional pointer to transport selector instance if application wants to use a specific transport instance rather then letting transport manager finds the suitable transport.. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>raw_data</em>&nbsp;</td><td>The data to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data_len</em>&nbsp;</td><td>The length of the data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>addr</em>&nbsp;</td><td>Destination address. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>addr_len</em>&nbsp;</td><td>Length of destination address. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>token</em>&nbsp;</td><td>Arbitrary token to be returned back to callback. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Optional callback to be called to notify caller about the completion status of the pending send operation.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If the message has been sent successfully, this function will return PJ_SUCCESS and the callback will not be called. If message cannot be sent immediately, this function will return PJ_EPENDING, and application will be notified later about the completion via the callback. Any statuses other than PJ_SUCCESS or PJ_EPENDING indicates immediate failure, and in this case the callback will not be called. </dd></dl>

</div>
</div>
<a class="anchor" id="ga087ee478d61623a18d4e0b3d6a4e6aa0"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_send_raw_to_uri" ref="ga087ee478d61623a18d4e0b3d6a4e6aa0" args="(pjsip_endpoint *endpt, const pj_str_t *dst_uri, const pjsip_tpselector *sel, const void *raw_data, pj_size_t data_len, void *token, pjsip_tp_send_callback cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_send_raw_to_uri </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>dst_uri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *&nbsp;</td>
          <td class="paramname"> <em>sel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&nbsp;</td>
          <td class="paramname"> <em>raw_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>data_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TRANSPORT.htm#ga2e45f1d05fb9db6a7819a1c7e59ad091">pjsip_tp_send_callback</a>&nbsp;</td>
          <td class="paramname"> <em>cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Send raw data to the specified destination URI. The actual destination address will be calculated from the URI, using normal SIP URI to host resolution.</p>
<p>See also <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga5ebe940444f71bdc00aa1f927a9a3677">pjsip_endpt_send_raw()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The SIP endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dst_uri</em>&nbsp;</td><td>Destination address URI. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sel</em>&nbsp;</td><td>Optional pointer to transport selector instance if application wants to use a specific transport instance rather then letting transport manager finds the suitable transport.. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>raw_data</em>&nbsp;</td><td>The data to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data_len</em>&nbsp;</td><td>The length of the data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>token</em>&nbsp;</td><td>Arbitrary token to be returned back to callback. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Optional callback to be called to notify caller about the completion status of the pending send operation.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If the message has been sent successfully, this function will return PJ_SUCCESS and the callback will not be called. If message cannot be sent immediately, this function will return PJ_EPENDING, and application will be notified later about the completion via the callback. Any statuses other than PJ_SUCCESS or PJ_EPENDING indicates immediate failure, and in this case the callback will not be called. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5d1406491458eff09be035d6441ff5cf"></a><!-- doxytag: member="sip_util.h::pjsip_get_response_addr" ref="ga5d1406491458eff09be035d6441ff5cf" args="(pj_pool_t *pool, pjsip_rx_data *rdata, pjsip_response_addr *res_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_get_response_addr </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__response__addr.htm">pjsip_response_addr</a> *&nbsp;</td>
          <td class="paramname"> <em>res_addr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Determine which address (and transport) to use to send response message based on the received request. This function follows the specification in section 18.2.2 of RFC 3261 and RFC 3581 for calculating the destination address and transport.</p>
<p>The information about destination to send the response will be returned in res_addr argument. Please see <a class="el" href="structpjsip__response__addr.htm">pjsip_response_addr</a> for more info.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rdata</em>&nbsp;</td><td>The incoming request received by the server. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>res_addr</em>&nbsp;</td><td>On return, it will be initialized with information about destination address and transport to send the response.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero (PJ_OK) if successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="gad0b30a81c6b26ffd3615a5adcb9bd1f6"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_send_response" ref="gad0b30a81c6b26ffd3615a5adcb9bd1f6" args="(pjsip_endpoint *endpt, pjsip_response_addr *res_addr, pjsip_tx_data *tdata, void *token, pjsip_send_callback cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_send_response </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__response__addr.htm">pjsip_response_addr</a> *&nbsp;</td>
          <td class="paramname"> <em>res_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a>&nbsp;</td>
          <td class="paramname"> <em>cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Send response in tdata statelessly. The function will take care of which response destination and transport to use based on the information in the Via header (such as the presence of rport, symmetric transport, etc.).</p>
<p>This function will create a new ephemeral transport if no existing transports can be used to send the message to the destination. The ephemeral transport will be destroyed after some period if it is not used to send any more messages.</p>
<p>The behavior of this function complies with section 18.2.2 of RFC 3261 and RFC 3581.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>res_addr</em>&nbsp;</td><td>The information about the address and transport to send the response to. Application can get this information by calling <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga5d1406491458eff09be035d6441ff5cf">pjsip_get_response_addr()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>The response message to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>token</em>&nbsp;</td><td>Token to be passed back when the callback is called. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Optional callback to notify the transmission status to application, and to inform whether next address or transport will be tried.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if response has been successfully created and sent to transport layer, or a non-zero error code. However, even when it returns PJ_SUCCESS, there is no guarantee that the response has been successfully sent. </dd></dl>

</div>
</div>
<a class="anchor" id="ga200f3c0ae515582fff4561395b7a51b2"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_send_response2" ref="ga200f3c0ae515582fff4561395b7a51b2" args="(pjsip_endpoint *endpt, pjsip_rx_data *rdata, pjsip_tx_data *tdata, void *token, pjsip_send_callback cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_send_response2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga92a8259f0a9381f7b9c9163de990004a">pjsip_send_callback</a>&nbsp;</td>
          <td class="paramname"> <em>cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a convenient function which wraps <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#ga5d1406491458eff09be035d6441ff5cf">pjsip_get_response_addr()</a> and <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gad0b30a81c6b26ffd3615a5adcb9bd1f6">pjsip_endpt_send_response()</a> in a single function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rdata</em>&nbsp;</td><td>The original request to be responded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tdata</em>&nbsp;</td><td>The response message to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>token</em>&nbsp;</td><td>Token to be passed back when the callback is called. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Optional callback to notify the transmission status to application, and to inform whether next address or transport will be tried.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if response has been successfully created and sent to transport layer, or a non-zero error code. However, even when it returns PJ_SUCCESS, there is no guarantee that the response has been successfully sent. </dd></dl>

</div>
</div>
<a class="anchor" id="ga09a4577a6c0b7c14c37d0981b1d55f07"></a><!-- doxytag: member="sip_util.h::pjsip_endpt_respond_stateless" ref="ga09a4577a6c0b7c14c37d0981b1d55f07" args="(pjsip_endpoint *endpt, pjsip_rx_data *rdata, int st_code, const pj_str_t *st_text, const pjsip_hdr *hdr_list, const pjsip_msg_body *body)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_respond_stateless </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td>
          <td class="paramname"> <em>st_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>st_text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *&nbsp;</td>
          <td class="paramname"> <em>hdr_list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> *&nbsp;</td>
          <td class="paramname"> <em>body</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This composite function sends response message statelessly to an incoming request message. Internally it calls <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gac9f1f0b66ed886e7f717a3a087e386ec">pjsip_endpt_create_response()</a> and <a class="el" href="group__PJSIP__ENDPT__STATELESS.htm#gad0b30a81c6b26ffd3615a5adcb9bd1f6">pjsip_endpt_send_response()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The endpoint instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rdata</em>&nbsp;</td><td>The incoming request message. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>st_code</em>&nbsp;</td><td>Status code of the response. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>st_text</em>&nbsp;</td><td>Optional status text of the response. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>hdr_list</em>&nbsp;</td><td>Optional header list to be added to the response. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>body</em>&nbsp;</td><td>Optional message body to be added to the response.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if response message has successfully been sent. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
