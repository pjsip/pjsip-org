<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: PJMEDIA and PJMEDIA-CODEC Examples (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>PJMEDIA and PJMEDIA-CODEC Examples </h1>  </div>
</div>
<div class="contents">
<h2><a class="anchor" id="pjmedia_samples_sec"></a>
PJMEDIA and PJMEDIA-CODEC Examples</h2>
<p>Please find below some PJMEDIA related examples that may help in giving some more info:</p>
<ul>
<li><a class="el" href="page_pjmedia_samples_level_c.htm">Samples: Reading from WAV File</a><br/>
 This is a good place to start learning about <a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a>, as it shows that <a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a> are only "passive" objects with <code>get_frame()</code> and <code>put_frame()</code> interface, and someone has to call these to retrieve/store media frames.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_playfile_c.htm">Samples: Playing WAV File to Sound Device</a><br/>
 This example shows that when application connects a media port (in this case a <a class="el" href="group__PJMEDIA__FILE__PLAY.htm">WAV File Player</a>) to <a class="el" href="group__PJMED__SND__PORT.htm">Sound Device Port</a>, media will flow automatically since the <a class="el" href="group__PJMED__SND__PORT.htm">Sound Device Port</a> provides <a class="el" href="group__PJMEDIA__PORT__CLOCK.htm">Clock/Timing</a>.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_recfile_c.htm">Samples: Capturing Audio to WAV File</a><br/>
 Demonstrates how to capture audio from microphone to WAV file.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_playsine_c.htm">Samples: Using Custom Ports (Sine Wave Generator)</a><br/>
 Demonstrates how to create a custom <a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a> (in this case a sine wave generator) and integrate it to PJMEDIA.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_confsample_c.htm">Samples: Using Conference Bridge</a><br/>
 This demonstrates how to use the <a class="el" href="group__PJMEDIA__CONF.htm">Conference Bridge</a>. The sample program can open multiple WAV files, and instruct the conference bridge to mix the signal before playing it to the sound device.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_confbench_c.htm">Samples: Benchmarking Conference Bridge</a><br/>
 I use this to benchmark/optimize the conference bridge algorithm, but readers may find the source useful.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_resampleplay_c.htm">Samples: Using Resample Port</a><br/>
 Demonstrates how to use <a class="el" href="group__PJMEDIA__RESAMPLE__PORT.htm">Resample Port</a> to change the sampling rate of a media port (in this case, a <a class="el" href="group__PJMEDIA__FILE__PLAY.htm">WAV File Player</a>).</li>
</ul>
<ul>
<li>page_pjmedia_samples_sndtest_c<br/>
 This program performs some tests to the sound device to get some quality parameters (such as sound jitter and clock drifts).<br/>
 Screenshots on WinXP: <div align="center">
<img src="sndtest.jpg" alt="sndtest.jpg"/>
<p><strong>sndtest screenshot on WinXP</strong></p></div>
</li>
<li><a class="el" href="page_pjmedia_samples_streamutil_c.htm">Samples: Remote Streaming</a><br/>
 This example mainly demonstrates how to stream media (in this case a <a class="el" href="group__PJMEDIA__FILE__PLAY.htm">WAV File Player</a>) to remote peer using RTP.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_siprtp_c.htm">Samples: Using SIP and Custom RTP/RTCP to Monitor Quality</a><br/>
 This is a useful program (integrated with PJSIP) to actively measure the network quality/impairment parameters by making one or more SIP calls (or receiving one or more SIP calls) and display the network impairment of each stream direction at the end of the call. The program is able to measure network quality parameters such as jitter, packet lost/reorder/duplicate, round trip time, etc.<br/>
 Note that the remote peer MUST support RTCP so that network quality of each direction can be calculated. Using siprtp for both endpoints is recommended.<br/>
 Screenshots on WinXP: <div align="center">
<img src="siprtp.jpg" alt="siprtp.jpg"/>
<p><strong>siprtp screenshot on WinXP</strong></p></div>
</li>
<li><a class="el" href="page_pjmedia_samples_tonegen_c.htm">Samples: Sine Wave/Dual-Tone Generation</a><br/>
 This is a simple program to generate a tone and write the samples to a raw PCM file. The main purpose of this file is to analyze the quality of the tones/sine wave generated by PJMEDIA tone/sine wave generator.</li>
</ul>
<ul>
<li><a class="el" href="page_pjmedia_samples_aectest_c.htm">Samples: AEC Test (aectest.c)</a><br/>
 Play a file to speaker, run AEC, and record the microphone input to see if echo is coming. </li>
</ul>
</div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
