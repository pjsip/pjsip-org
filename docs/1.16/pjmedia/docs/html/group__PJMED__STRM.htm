<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Streams (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>Streams<br/>
<small>
[<a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>Communicating with remote peer via the network.  
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__stream__info.htm">pjmedia_stream_info</a></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJMED__STRM.htm#ga7675de8de36bbe5a985889f306c19341">pjmedia_channel</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga7675de8de36bbe5a985889f306c19341">pjmedia_channel</a></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga67575c8e7b15e325b98ebaa89639b550">pjmedia_stream_create</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__stream__info.htm">pjmedia_stream_info</a> *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>, <a class="el" href="structpjmedia__transport.htm">pjmedia_transport</a> *tp, void *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, pjmedia_stream **p_stream)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#gad8161da9e12277010753c9c174158369">pjmedia_stream_destroy</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga00fead53393db84ea5f7cf9faf272ea6">pjmedia_stream_get_last_jb_frame_type</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#gae3cb31df5aa921ef3085d5eb539af063">pjmedia_stream_get_port</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **p_port)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__transport.htm">pjmedia_transport</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#gad8c6b31f8e32f127dbe994966970048b">pjmedia_stream_get_transport</a> (pjmedia_stream *st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga93d59e3be009de86a3823303784d31a2">pjmedia_stream_start</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga10eef122bc961cead72f983ced0f6241">pjmedia_stream_get_stat</a> (const pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, <a class="el" href="structpjmedia__rtcp__stat.htm">pjmedia_rtcp_stat</a> *stat)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga6fbca1749ec2b004d1be2d5de4a81335">pjmedia_stream_reset_stat</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga00e2236e05d5c5992746c8e7c067f663">pjmedia_stream_get_stat_jbuf</a> (const pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, <a class="el" href="structpjmedia__jb__state.htm">pjmedia_jb_state</a> *state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga996ec5e721afbdb6a5be0937b8e26b95">pjmedia_stream_pause</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, <a class="el" href="group__PJMEDIA__TYPES.htm#gaf19d0dce3e3c99a3b9514726c28baa30">pjmedia_dir</a> dir)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga57d5f2f32dd59cd3d8c4971f755d67c0">pjmedia_stream_resume</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, <a class="el" href="group__PJMEDIA__TYPES.htm#gaf19d0dce3e3c99a3b9514726c28baa30">pjmedia_dir</a> dir)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#gab78e4337d5c837a516c8773826aae514">pjmedia_stream_dial_dtmf</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *ascii_digit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#gafa8c8985bad073edc43a54927b85aeb1">pjmedia_stream_check_dtmf</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#gace1d2c92068352ecf3187f157a9329b5">pjmedia_stream_get_dtmf</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, char *ascii_digits, unsigned *size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga21241e185c16b839fb3f5c236e90192d">pjmedia_stream_set_dtmf_callback</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>, void(*cb)(pjmedia_stream *, void *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> digit), void *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#gad9a048c70f825cd55ebd16eeff5499fb">pjmedia_stream_send_rtcp_sdes</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__STRM.htm#ga0877aa5210f568cf834697055c1555f2">pjmedia_stream_send_rtcp_bye</a> (pjmedia_stream *<a class="el" href="structstream.htm">stream</a>)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>A media stream is a bidirectional multimedia communication between two endpoints. It corresponds to a media description (m= line) in SDP session descriptor.</p>
<p>A media stream consists of two unidirectional channels:</p>
<ul>
<li>encoding channel, which transmits unidirectional media to remote, and</li>
<li>decoding channel, which receives unidirectional media from remote.</li>
</ul>
<p>A media stream exports media port interface (see <a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a>) and application normally uses this interface to interconnect the stream to other PJMEDIA components.</p>
<p>A media stream internally manages the following objects:</p>
<ul>
<li>an instance of media codec (see <a class="el" href="group__PJMEDIA__CODEC.htm">Codec Framework</a>),</li>
<li>an <a class="el" href="group__PJMED__JBUF.htm">Adaptive jitter buffer</a>,</li>
<li>two instances of RTP sessions (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a>, one for each direction),</li>
<li>one instance of RTCP session (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a>),</li>
<li>and a reference to media transport to send and receive packets to/from the network (see <a class="el" href="group__PJMEDIA__TRANSPORT.htm">Media Transport</a>).</li>
</ul>
<p>Streams are created by calling <a class="el" href="group__PJMED__STRM.htm#ga67575c8e7b15e325b98ebaa89639b550">pjmedia_stream_create()</a>, specifying <a class="el" href="structpjmedia__stream__info.htm">pjmedia_stream_info</a> structure in the parameter. Application can construct the <a class="el" href="structpjmedia__stream__info.htm">pjmedia_stream_info</a> structure manually, or use <a class="el" href="group__PJMEDIA__SESSION.htm#gae0400f365c07b6f141f202defe92f2a6">pjmedia_stream_info_from_sdp()</a> or <a class="el" href="group__PJMEDIA__SESSION.htm#gafb5bdab351e35b00b1c92e5f6c996e77">pjmedia_session_info_from_sdp()</a> functions to construct the <a class="el" href="structpjmedia__stream__info.htm">pjmedia_stream_info</a> from local and remote SDP session descriptors.</p>
<p>Application can also use <a class="el" href="group__PJMEDIA__SESSION.htm">Media Sessions</a> to indirectly create the streams. </p>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="ga7675de8de36bbe5a985889f306c19341"></a><!-- doxytag: member="stream.h::pjmedia_channel" ref="ga7675de8de36bbe5a985889f306c19341" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJMED__STRM.htm#ga7675de8de36bbe5a985889f306c19341">pjmedia_channel</a> <a class="el" href="group__PJMED__STRM.htm#ga7675de8de36bbe5a985889f306c19341">pjmedia_channel</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Opaque declaration for media channel. Media channel is unidirectional flow of media from sender to receiver. </p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga67575c8e7b15e325b98ebaa89639b550"></a><!-- doxytag: member="stream.h::pjmedia_stream_create" ref="ga67575c8e7b15e325b98ebaa89639b550" args="(pjmedia_endpt *endpt, pj_pool_t *pool, const pjmedia_stream_info *info, pjmedia_transport *tp, void *user_data, pjmedia_stream **p_stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__stream__info.htm">pjmedia_stream_info</a> *&nbsp;</td>
          <td class="paramname"> <em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__transport.htm">pjmedia_transport</a> *&nbsp;</td>
          <td class="paramname"> <em>tp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pjmedia_stream **&nbsp;</td>
          <td class="paramname"> <em>p_stream</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a media stream based on the specified parameter. After the stream has been created, application normally would want to get the media port interface of the streams, by calling <a class="el" href="group__PJMED__STRM.htm#gae3cb31df5aa921ef3085d5eb539af063">pjmedia_stream_get_port()</a>. The media port interface exports put_frame() and get_frame() function, used to transmit and receive media frames from the stream.</p>
<p>Without application calling put_frame() and get_frame(), there will be no media frames transmitted or received by the stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>Media endpoint. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to allocate memory for the stream. A large number of memory may be needed because jitter buffer needs to preallocate some storage. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>info</em>&nbsp;</td><td>Stream information. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tp</em>&nbsp;</td><td>Stream transport instance used to transmit and receive RTP/RTCP packets to/from the underlying transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>user_data</em>&nbsp;</td><td>Arbitrary user data (for future callback feature). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_stream</em>&nbsp;</td><td>Pointer to receive the media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gad8161da9e12277010753c9c174158369"></a><!-- doxytag: member="stream.h::pjmedia_stream_destroy" ref="gad8161da9e12277010753c9c174158369" args="(pjmedia_stream *stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_destroy </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destroy the media stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga00fead53393db84ea5f7cf9faf272ea6"></a><!-- doxytag: member="stream.h::pjmedia_stream_get_last_jb_frame_type" ref="ga00fead53393db84ea5f7cf9faf272ea6" args="(pjmedia_stream *stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char pjmedia_stream_get_last_jb_frame_type </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the last frame type retreived from the jitter buffer.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Jitter buffer frame type. </dd></dl>

</div>
</div>
<a class="anchor" id="gae3cb31df5aa921ef3085d5eb539af063"></a><!-- doxytag: member="stream.h::pjmedia_stream_get_port" ref="gae3cb31df5aa921ef3085d5eb539af063" args="(pjmedia_stream *stream, pjmedia_port **p_port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_get_port </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **&nbsp;</td>
          <td class="paramname"> <em>p_port</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the media port interface of the stream. The media port interface declares put_frame() and get_frame() function, which is the only way for application to transmit and receive media frames from the stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_port</em>&nbsp;</td><td>Pointer to receive the port interface.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gad8c6b31f8e32f127dbe994966970048b"></a><!-- doxytag: member="stream.h::pjmedia_stream_get_transport" ref="gad8c6b31f8e32f127dbe994966970048b" args="(pjmedia_stream *st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__transport.htm">pjmedia_transport</a>* pjmedia_stream_get_transport </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>st</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the media transport object associated with this stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>st</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The transport object being used by the stream. </dd></dl>

</div>
</div>
<a class="anchor" id="ga93d59e3be009de86a3823303784d31a2"></a><!-- doxytag: member="stream.h::pjmedia_stream_start" ref="ga93d59e3be009de86a3823303784d31a2" args="(pjmedia_stream *stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_start </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Start the media stream. This will start the appropriate channels in the media stream, depending on the media direction that was set when the stream was created.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga10eef122bc961cead72f983ced0f6241"></a><!-- doxytag: member="stream.h::pjmedia_stream_get_stat" ref="ga10eef122bc961cead72f983ced0f6241" args="(const pjmedia_stream *stream, pjmedia_rtcp_stat *stat)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_get_stat </td>
          <td>(</td>
          <td class="paramtype">const pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__stat.htm">pjmedia_rtcp_stat</a> *&nbsp;</td>
          <td class="paramname"> <em>stat</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the stream statistics. See also <a class="el" href="group__PJMED__STRM.htm#ga00e2236e05d5c5992746c8e7c067f663">pjmedia_stream_get_stat_jbuf()</a></p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>stat</em>&nbsp;</td><td>Media stream statistics.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6fbca1749ec2b004d1be2d5de4a81335"></a><!-- doxytag: member="stream.h::pjmedia_stream_reset_stat" ref="ga6fbca1749ec2b004d1be2d5de4a81335" args="(pjmedia_stream *stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_reset_stat </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Reset the stream statistics.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga00e2236e05d5c5992746c8e7c067f663"></a><!-- doxytag: member="stream.h::pjmedia_stream_get_stat_jbuf" ref="ga00e2236e05d5c5992746c8e7c067f663" args="(const pjmedia_stream *stream, pjmedia_jb_state *state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_get_stat_jbuf </td>
          <td>(</td>
          <td class="paramtype">const pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__jb__state.htm">pjmedia_jb_state</a> *&nbsp;</td>
          <td class="paramname"> <em>state</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get current jitter buffer state. See also <a class="el" href="group__PJMED__STRM.htm#ga10eef122bc961cead72f983ced0f6241">pjmedia_stream_get_stat()</a></p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>state</em>&nbsp;</td><td>Jitter buffer state.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga996ec5e721afbdb6a5be0937b8e26b95"></a><!-- doxytag: member="stream.h::pjmedia_stream_pause" ref="ga996ec5e721afbdb6a5be0937b8e26b95" args="(pjmedia_stream *stream, pjmedia_dir dir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_pause </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#gaf19d0dce3e3c99a3b9514726c28baa30">pjmedia_dir</a>&nbsp;</td>
          <td class="paramname"> <em>dir</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Pause the individual channel in the stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media channel. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dir</em>&nbsp;</td><td>Which direction to pause.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga57d5f2f32dd59cd3d8c4971f755d67c0"></a><!-- doxytag: member="stream.h::pjmedia_stream_resume" ref="ga57d5f2f32dd59cd3d8c4971f755d67c0" args="(pjmedia_stream *stream, pjmedia_dir dir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_resume </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#gaf19d0dce3e3c99a3b9514726c28baa30">pjmedia_dir</a>&nbsp;</td>
          <td class="paramname"> <em>dir</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Resume the individual channel in the stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media channel. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dir</em>&nbsp;</td><td>Which direction to resume.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success; </dd></dl>

</div>
</div>
<a class="anchor" id="gab78e4337d5c837a516c8773826aae514"></a><!-- doxytag: member="stream.h::pjmedia_stream_dial_dtmf" ref="gab78e4337d5c837a516c8773826aae514" args="(pjmedia_stream *stream, const pj_str_t *ascii_digit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_dial_dtmf </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>ascii_digit</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Transmit DTMF to this stream. The DTMF will be transmitted uisng RTP telephone-events as described in RFC 2833. This operation is only valid for audio stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ascii_digit</em>&nbsp;</td><td>String containing digits to be sent to remote. Currently the maximum number of digits are 32.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gafa8c8985bad073edc43a54927b85aeb1"></a><!-- doxytag: member="stream.h::pjmedia_stream_check_dtmf" ref="gafa8c8985bad073edc43a54927b85aeb1" args="(pjmedia_stream *stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pjmedia_stream_check_dtmf </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check if the stream has incoming DTMF digits in the incoming DTMF queue. Incoming DTMF digits received via RFC 2833 mechanism are saved in the incoming digits queue.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero (PJ_TRUE) if the stream has received DTMF digits in the . </dd></dl>

</div>
</div>
<a class="anchor" id="gace1d2c92068352ecf3187f157a9329b5"></a><!-- doxytag: member="stream.h::pjmedia_stream_get_dtmf" ref="gace1d2c92068352ecf3187f157a9329b5" args="(pjmedia_stream *stream, char *ascii_digits, unsigned *size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_get_dtmf </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>ascii_digits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieve the incoming DTMF digits from the stream, and remove the digits from stream's DTMF buffer. Note that the digits buffer will not be NULL terminated.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ascii_digits</em>&nbsp;</td><td>Buffer to receive the digits. The length of this buffer is indicated in the "size" argument. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>On input, contains the maximum digits to be copied to the buffer. On output, it contains the actual digits that has been copied to the buffer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero (PJ_TRUE) if the stream has received DTMF digits in the . </dd></dl>

</div>
</div>
<a class="anchor" id="ga21241e185c16b839fb3f5c236e90192d"></a><!-- doxytag: member="stream.h::pjmedia_stream_set_dtmf_callback" ref="ga21241e185c16b839fb3f5c236e90192d" args="(pjmedia_stream *stream, void(*cb)(pjmedia_stream *, void *user_data, int digit), void *user_data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_set_dtmf_callback </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(pjmedia_stream *, void *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> digit)&nbsp;</td>
          <td class="paramname"> <em>cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>user_data</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set callback to be called upon receiving DTMF digits. If callback is registered, the stream will not buffer incoming DTMF but rather call the callback as soon as DTMF digit is received completely.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Callback to be called upon receiving DTMF digits. The DTMF digits will be given to the callback as ASCII digits. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>user_data</em>&nbsp;</td><td>User data to be returned back when the callback is called.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gad9a048c70f825cd55ebd16eeff5499fb"></a><!-- doxytag: member="stream.h::pjmedia_stream_send_rtcp_sdes" ref="gad9a048c70f825cd55ebd16eeff5499fb" args="(pjmedia_stream *stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_send_rtcp_sdes </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Send RTCP SDES for the media stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0877aa5210f568cf834697055c1555f2"></a><!-- doxytag: member="stream.h::pjmedia_stream_send_rtcp_bye" ref="ga0877aa5210f568cf834697055c1555f2" args="(pjmedia_stream *stream)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_stream_send_rtcp_bye </td>
          <td>(</td>
          <td class="paramtype">pjmedia_stream *&nbsp;</td>
          <td class="paramname"> <em>stream</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Send RTCP BYE for the media stream.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stream</em>&nbsp;</td><td>The media stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
