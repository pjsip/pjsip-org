<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Media channel splitter/combiner (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Media channel splitter/combiner<div class="ingroups"><a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Split and combine multiple mono-channel media ports into a single multiple-channels media port.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga4cc0abefb5b62ee8d88f875994e548dd"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a> <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SPLITCOMB.htm#ga4cc0abefb5b62ee8d88f875994e548dd">pjmedia_splitcomb_create</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, unsigned clock_rate, unsigned channel_count, unsigned samples_per_frame, unsigned bits_per_sample, unsigned options, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **p_splitcomb)</td></tr>
<tr class="separator:ga4cc0abefb5b62ee8d88f875994e548dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaceb0d2daa86c6f33df67b6975be6ba37"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SPLITCOMB.htm#gaceb0d2daa86c6f33df67b6975be6ba37">pjmedia_splitcomb_set_channel</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *splitcomb, unsigned ch_num, unsigned options, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port)</td></tr>
<tr class="separator:gaceb0d2daa86c6f33df67b6975be6ba37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac59338fd9d471a14c06b0f51c2290b68"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SPLITCOMB.htm#gac59338fd9d471a14c06b0f51c2290b68">pjmedia_splitcomb_create_rev_channel</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *splitcomb, unsigned ch_num, unsigned options, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **p_chport)</td></tr>
<tr class="separator:gac59338fd9d471a14c06b0f51c2290b68"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>This section describes media port to split and combine media channels in the stream.</p>
<p>A splitter/combiner splits a single stereo/multichannels audio frame into multiple audio frames to each channel when put_frame() is called, and combines mono frames from each channel into a stereo/multichannel frame when get_frame() is called. A common application for the splitter/ combiner is to split frames from stereo to mono and vise versa. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4cc0abefb5b62ee8d88f875994e548dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4cc0abefb5b62ee8d88f875994e548dd">&#9670;&nbsp;</a></span>pjmedia_splitcomb_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a> <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_splitcomb_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>samples_per_frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bits_per_sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **&#160;</td>
          <td class="paramname"><em>p_splitcomb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a media splitter/combiner with the specified parameters. When the splitter/combiner is created, it creates an instance of <a class="el" href="structpjmedia__port.htm">pjmedia_port</a>. This media port represents the stereo/multichannel side of the splitter/combiner. Application needs to supply the splitter/ combiner with a media port for each audio channels.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory to create the splitter/ combiner. </td></tr>
    <tr><td class="paramname">clock_rate</td><td>Audio clock rate/sampling rate. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Number of channels. </td></tr>
    <tr><td class="paramname">samples_per_frame</td><td>Number of samples per frame. </td></tr>
    <tr><td class="paramname">bits_per_sample</td><td>Bits per sample. </td></tr>
    <tr><td class="paramname">options</td><td>Optional flags. </td></tr>
    <tr><td class="paramname">p_splitcomb</td><td>Pointer to receive the splitter/combiner.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaceb0d2daa86c6f33df67b6975be6ba37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaceb0d2daa86c6f33df67b6975be6ba37">&#9670;&nbsp;</a></span>pjmedia_splitcomb_set_channel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_splitcomb_set_channel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>splitcomb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>ch_num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Supply the splitter/combiner with media port for the specified channel number. The media port will be called at the same phase as the splitter/combiner; which means that when application calls get_frame() of the splitter/combiner, it will call get_frame() for all ports that have the same phase. And similarly for put_frame().</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">splitcomb</td><td>The splitter/combiner. </td></tr>
    <tr><td class="paramname">ch_num</td><td>Audio channel starting number (zero based). </td></tr>
    <tr><td class="paramname">options</td><td>Must be zero at the moment. </td></tr>
    <tr><td class="paramname">port</td><td>The media port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gac59338fd9d471a14c06b0f51c2290b68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac59338fd9d471a14c06b0f51c2290b68">&#9670;&nbsp;</a></span>pjmedia_splitcomb_create_rev_channel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_splitcomb_create_rev_channel </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>splitcomb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>ch_num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **&#160;</td>
          <td class="paramname"><em>p_chport</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a reverse phase media port for the specified channel number. For channels with reversed phase, when application calls put_frame() to the splitter/combiner, the splitter/combiner will only put the frame to a buffer. Later on, when application calls get_frame() on the channel's media port, it will return the frame that are available in the buffer. The same process happens when application calls put_frame() to the channel's media port, it will only put the frame to another buffer, which will be returned when application calls get_frame() to the splitter's media port. So this effectively reverse the phase of the media port.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory for the port and buffers. </td></tr>
    <tr><td class="paramname">splitcomb</td><td>The splitter/combiner. </td></tr>
    <tr><td class="paramname">ch_num</td><td>Audio channel starting number (zero based). </td></tr>
    <tr><td class="paramname">options</td><td>Normally is zero, but the lower 8-bit of the options can be used to specify the number of buffers in the circular buffer. If zero, then default number will be used (default: 8). The second lowest 8 bits can be used to specify the options for the underlying delay buffer (see <a class="el" href="group__PJMED__DELAYBUF.htm#gaa469ae0e30d6e8bfb17a185af02b868e">pjmedia_delay_buf_flag</a> for the possible options). </td></tr>
    <tr><td class="paramname">p_chport</td><td>The media port created with reverse phase for the specified audio channel.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
