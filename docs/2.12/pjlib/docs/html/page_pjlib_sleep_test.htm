<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Test: Sleep, Time, and Timestamp (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Test: Sleep, Time, and Timestamp </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>This file provides implementation of <b>sleep_test()</b>.</p>
<h1><a class="anchor" id="sleep_test_sec"></a>
Scope of the Test</h1>
<p>This tests:</p><ul>
<li>whether <a class="el" href="group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep()</a> works.</li>
<li>whether <a class="el" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday()</a> works.</li>
<li>whether <a class="el" href="group__PJ__TIMESTAMP.htm#gaa419b8448d1cb55db85aeac2e86fe11c">pj_get_timestamp()</a> and friends works.</li>
</ul>
<p>API tested:</p><ul>
<li><a class="el" href="group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep()</a></li>
<li><a class="el" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday()</a></li>
<li><a class="el" href="group__PJ__TIME.htm#gaec98fc019fc44b5a6f6b0b9137bcf272">PJ_TIME_VAL_SUB()</a></li>
<li><a class="el" href="group__PJ__TIME.htm#ga33a03349659e92074f1d39a137047385">PJ_TIME_VAL_LTE()</a></li>
<li><a class="el" href="group__PJ__TIMESTAMP.htm#gaa419b8448d1cb55db85aeac2e86fe11c">pj_get_timestamp()</a></li>
<li><a class="el" href="group__PJ__TIMESTAMP.htm#ga08e3e11a5e8f68f3111e5ecf3bff0ac1">pj_get_timestamp_freq()</a> (implicitly)</li>
<li><a class="el" href="group__PJ__TIMESTAMP.htm#gad4cb75af00fbf3a55a5e6a4825624dff">pj_elapsed_time()</a></li>
<li><a class="el" href="group__PJ__TIMESTAMP.htm#gad5a0323beb04de52474b59693b4b12ac">pj_elapsed_usec()</a></li>
</ul>
<p>This file is <b>pjlib-test/sleep.c</b></p>
<div class="fragment"><div class="line"><span class="comment">/* $Id$ */</span></div><div class="line"><span class="comment">/* </span></div><div class="line"><span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span></div><div class="line"><span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span></div><div class="line"><span class="comment"> * (at your option) any later version.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><span class="comment"> * along with this program; if not, write to the Free Software</span></div><div class="line"><span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="preprocessor">#include &quot;test.h&quot;</span></div><div class="line"></div><div class="line"><span class="preprocessor">#if INCLUDE_SLEEP_TEST</span></div><div class="line"></div><div class="line"><span class="preprocessor">#include &lt;pjlib.h&gt;</span></div><div class="line"></div><div class="line"><span class="preprocessor">#define THIS_FILE   &quot;sleep_test&quot;</span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> simple_sleep_test(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <span class="keyword">enum</span> { COUNT = 10 };</div><div class="line">    <span class="keywordtype">int</span> i;</div><div class="line">    <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> rc;</div><div class="line">    </div><div class="line">    <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;..will write messages every 1 second:&quot;</span>));</div><div class="line">    </div><div class="line">    <span class="keywordflow">for</span> (i=0; i&lt;COUNT; ++i) {</div><div class="line">        <a class="code" href="structpj__time__val.htm">pj_time_val</a> tv;</div><div class="line">        <a class="code" href="structpj__parsed__time.htm">pj_parsed_time</a> pt;</div><div class="line"></div><div class="line">        rc = <a class="code" href="group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep</a>(1000);</div><div class="line">        <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>) {</div><div class="line">            app_perror(<span class="stringliteral">&quot;...error: pj_thread_sleep()&quot;</span>, rc);</div><div class="line">            <span class="keywordflow">return</span> -10;</div><div class="line">        }</div><div class="line"></div><div class="line">        rc = <a class="code" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a>(&amp;tv);</div><div class="line">        <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>) {</div><div class="line">            app_perror(<span class="stringliteral">&quot;...error: pj_gettimeofday()&quot;</span>, rc);</div><div class="line">            <span class="keywordflow">return</span> -11;</div><div class="line">        }</div><div class="line"></div><div class="line">        <a class="code" href="group__PJ__TIME.htm#gad82b73b1187d98baba15328a90b8cf2e">pj_time_decode</a>(&amp;tv, &amp;pt);</div><div class="line"></div><div class="line">        <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, </div><div class="line">                  <span class="stringliteral">&quot;...%04d-%02d-%02d %02d:%02d:%02d.%03d&quot;</span>,</div><div class="line">                  pt.<a class="code" href="structpj__parsed__time.htm#a2db2ac0e15af85af99e75189a5bfd0f8">year</a>, pt.<a class="code" href="structpj__parsed__time.htm#afb8d3aea54a058a60e8727f077bcef1c">mon</a>, pt.<a class="code" href="structpj__parsed__time.htm#aa356207416f9cc04ec4055f9a8bf3da3">day</a>,</div><div class="line">                  pt.<a class="code" href="structpj__parsed__time.htm#a1e47294449fb5f873a810e4bb21545ef">hour</a>, pt.<a class="code" href="structpj__parsed__time.htm#a748e0af4b2caef0e8296fcd5a4181d69">min</a>, pt.<a class="code" href="structpj__parsed__time.htm#a002f185290c683cf4b3d2057a6582b63">sec</a>, pt.<a class="code" href="structpj__parsed__time.htm#a2eeb5a81049643e0536c518bd0483498">msec</a>));</div><div class="line"></div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> sleep_duration_test(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <span class="keyword">enum</span> { MIS = 20};</div><div class="line">    <span class="keywordtype">unsigned</span> duration[] = { 2000, 1000, 500, 200, 100 };</div><div class="line">    <span class="keywordtype">unsigned</span> i;</div><div class="line">    <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> rc;</div><div class="line"></div><div class="line">    <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;..running sleep duration test&quot;</span>));</div><div class="line"></div><div class="line">    <span class="comment">/* Test pj_thread_sleep() and pj_gettimeofday() */</span></div><div class="line">    <span class="keywordflow">for</span> (i=0; i&lt;<a class="code" href="group__PJ__BASIC.htm#gacd8459212a1e5175eeb04e3a6cd76659">PJ_ARRAY_SIZE</a>(duration); ++i) {</div><div class="line">        <a class="code" href="structpj__time__val.htm">pj_time_val</a> start, stop;</div><div class="line">        <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> msec;</div><div class="line"></div><div class="line">        <span class="comment">/* Mark start of test. */</span></div><div class="line">        rc = <a class="code" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a>(&amp;start);</div><div class="line">        <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>) {</div><div class="line">            app_perror(<span class="stringliteral">&quot;...error: pj_gettimeofday()&quot;</span>, rc);</div><div class="line">            <span class="keywordflow">return</span> -10;</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="comment">/* Sleep */</span></div><div class="line">        rc = <a class="code" href="group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep</a>(duration[i]);</div><div class="line">        <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>) {</div><div class="line">            app_perror(<span class="stringliteral">&quot;...error: pj_thread_sleep()&quot;</span>, rc);</div><div class="line">            <span class="keywordflow">return</span> -20;</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="comment">/* Mark end of test. */</span></div><div class="line">        rc = <a class="code" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a>(&amp;stop);</div><div class="line"></div><div class="line">        <span class="comment">/* Calculate duration (store in stop). */</span></div><div class="line">        <a class="code" href="group__PJ__TIME.htm#gaec98fc019fc44b5a6f6b0b9137bcf272">PJ_TIME_VAL_SUB</a>(stop, start);</div><div class="line"></div><div class="line">        <span class="comment">/* Convert to msec. */</span></div><div class="line">        msec = <a class="code" href="group__PJ__TIME.htm#gad015d440803cb8f62ff73878f35badaa">PJ_TIME_VAL_MSEC</a>(stop);</div><div class="line"></div><div class="line">        <span class="comment">/* Check if it&#39;s within range. */</span></div><div class="line">        <span class="keywordflow">if</span> (msec &lt; duration[i] * (100-MIS)/100 ||</div><div class="line">            msec &gt; duration[i] * (100+MIS)/100)</div><div class="line">        {</div><div class="line">            <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, </div><div class="line">                      <span class="stringliteral">&quot;...error: slept for %d ms instead of %d ms &quot;</span></div><div class="line">                      <span class="stringliteral">&quot;(outside %d%% err window)&quot;</span>,</div><div class="line">                      msec, duration[i], MIS));</div><div class="line">            <span class="keywordflow">return</span> -30;</div><div class="line">        }</div><div class="line">    }</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/* Test pj_thread_sleep() and pj_get_timestamp() and friends */</span></div><div class="line">    <span class="keywordflow">for</span> (i=0; i&lt;<a class="code" href="group__PJ__BASIC.htm#gacd8459212a1e5175eeb04e3a6cd76659">PJ_ARRAY_SIZE</a>(duration); ++i) {</div><div class="line">        <a class="code" href="structpj__time__val.htm">pj_time_val</a> t1, t2;</div><div class="line">        <a class="code" href="unionpj__timestamp.htm">pj_timestamp</a> start, stop;</div><div class="line">        <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> msec;</div><div class="line"></div><div class="line">        <a class="code" href="group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep</a>(0);</div><div class="line"></div><div class="line">        <span class="comment">/* Mark start of test. */</span></div><div class="line">        rc = <a class="code" href="group__PJ__TIMESTAMP.htm#gaa419b8448d1cb55db85aeac2e86fe11c">pj_get_timestamp</a>(&amp;start);</div><div class="line">        <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>) {</div><div class="line">            app_perror(<span class="stringliteral">&quot;...error: pj_get_timestamp()&quot;</span>, rc);</div><div class="line">            <span class="keywordflow">return</span> -60;</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="comment">/* ..also with gettimeofday() */</span></div><div class="line">        <a class="code" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a>(&amp;t1);</div><div class="line"></div><div class="line">        <span class="comment">/* Sleep */</span></div><div class="line">        rc = <a class="code" href="group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep</a>(duration[i]);</div><div class="line">        <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>) {</div><div class="line">            app_perror(<span class="stringliteral">&quot;...error: pj_thread_sleep()&quot;</span>, rc);</div><div class="line">            <span class="keywordflow">return</span> -70;</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="comment">/* Mark end of test. */</span></div><div class="line">        <a class="code" href="group__PJ__TIMESTAMP.htm#gaa419b8448d1cb55db85aeac2e86fe11c">pj_get_timestamp</a>(&amp;stop);</div><div class="line"></div><div class="line">        <span class="comment">/* ..also with gettimeofday() */</span></div><div class="line">        <a class="code" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a>(&amp;t2);</div><div class="line"></div><div class="line">        <span class="comment">/* Compare t1 and t2. */</span></div><div class="line">        <span class="keywordflow">if</span> (<a class="code" href="group__PJ__TIME.htm#ga9dd4507187780ed1e83a10176dc845b8">PJ_TIME_VAL_LT</a>(t2, t1)) {</div><div class="line">            <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;...error: t2 is less than t1!!&quot;</span>));</div><div class="line">            <span class="keywordflow">return</span> -75;</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="comment">/* Get elapsed time in msec */</span></div><div class="line">        msec = <a class="code" href="group__PJ__TIMESTAMP.htm#ga2e09f4da6b04d417e1acd11b477ed6a2">pj_elapsed_msec</a>(&amp;start, &amp;stop);</div><div class="line"></div><div class="line">        <span class="comment">/* Check if it&#39;s within range. */</span></div><div class="line">        <span class="keywordflow">if</span> (msec &lt; duration[i] * (100-MIS)/100 ||</div><div class="line">            msec &gt; duration[i] * (100+MIS)/100)</div><div class="line">        {</div><div class="line">            <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, </div><div class="line">                      <span class="stringliteral">&quot;...error: slept for %d ms instead of %d ms &quot;</span></div><div class="line">                      <span class="stringliteral">&quot;(outside %d%% err window)&quot;</span>,</div><div class="line">                      msec, duration[i], MIS));</div><div class="line">            <a class="code" href="group__PJ__TIME.htm#gaec98fc019fc44b5a6f6b0b9137bcf272">PJ_TIME_VAL_SUB</a>(t2, t1);</div><div class="line">            <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, </div><div class="line">                      <span class="stringliteral">&quot;...info: gettimeofday() reported duration is &quot;</span></div><div class="line">                      <span class="stringliteral">&quot;%d msec&quot;</span>,</div><div class="line">                      <a class="code" href="group__PJ__TIME.htm#gad015d440803cb8f62ff73878f35badaa">PJ_TIME_VAL_MSEC</a>(t2)));</div><div class="line"></div><div class="line">            <span class="keywordflow">return</span> -76;</div><div class="line">        }</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="comment">/* All done. */</span></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keywordtype">int</span> sleep_test()</div><div class="line">{</div><div class="line">    <span class="keywordtype">int</span> rc;</div><div class="line"></div><div class="line">    rc = simple_sleep_test();</div><div class="line">    <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line">    rc = sleep_duration_test();</div><div class="line">    <span class="keywordflow">if</span> (rc != <a class="code" href="group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="preprocessor">#else</span></div><div class="line"><span class="comment">/* To prevent warning about &quot;translation unit is empty&quot;</span></div><div class="line"><span class="comment"> * when this test is disabled. </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keywordtype">int</span> dummy_sleep_test;</div><div class="line"><span class="preprocessor">#endif  </span><span class="comment">/* INCLUDE_SLEEP_TEST */</span><span class="preprocessor"></span></div></div><!-- fragment --> </div></div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
