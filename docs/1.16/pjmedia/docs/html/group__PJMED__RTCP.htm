<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: RTCP Session and Encapsulation (RFC 3550) (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>RTCP Session and Encapsulation (RFC 3550)<br/>
<small>
[<a class="el" href="group__PJMEDIA__SESSION.htm">Media Sessions</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>RTCP format and session management.  
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__sr.htm">pjmedia_rtcp_sr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__rr.htm">pjmedia_rtcp_rr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__common.htm">pjmedia_rtcp_common</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__sr__pkt.htm">pjmedia_rtcp_sr_pkt</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__rr__pkt.htm">pjmedia_rtcp_rr_pkt</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__sdes.htm">pjmedia_rtcp_sdes</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__ntp__rec.htm">pjmedia_rtcp_ntp_rec</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__stream__stat.htm">pjmedia_rtcp_stream_stat</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__stat.htm">pjmedia_rtcp_stat</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__session__setting.htm">pjmedia_rtcp_session_setting</a></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#gaa0b6445a778b17a69016ad39383f71f5">pjmedia_rtcp_session_setting_default</a> (<a class="el" href="structpjmedia__rtcp__session__setting.htm">pjmedia_rtcp_session_setting</a> *settings)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#gab995e281f8daf35c7678f120ae05b5cf">pjmedia_rtcp_init_stat</a> (<a class="el" href="structpjmedia__rtcp__stat.htm">pjmedia_rtcp_stat</a> *stat)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#gacb5133d8da883347f3d87ec0b161dfb1">pjmedia_rtcp_init</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, char *name, unsigned clock_rate, unsigned samples_per_frame, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> ssrc)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga88f9fa8abdeb31239a9a624a34f3ca0b">pjmedia_rtcp_init2</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, const <a class="el" href="structpjmedia__rtcp__session__setting.htm">pjmedia_rtcp_session_setting</a> *settings)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga626c3b30e1467697f062918a2da4072a">pjmedia_rtcp_get_ntp_time</a> (const <a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *sess, <a class="el" href="structpjmedia__rtcp__ntp__rec.htm">pjmedia_rtcp_ntp_rec</a> *ntp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga14616ca99616fe49c55e8f872c7cfabf">pjmedia_rtcp_fini</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga7ce9e4e76674dba050c01cd295964bde">pjmedia_rtcp_rx_rtp</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, unsigned seq, unsigned ts, unsigned payload)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#gaf1a6ff9f79b74e6c7478719e7da9cfb3">pjmedia_rtcp_rx_rtp2</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, unsigned seq, unsigned ts, unsigned payload, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> discarded)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#gaa0927538050a3cde5a51f32cb586f7d0">pjmedia_rtcp_tx_rtp</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, unsigned ptsize)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga42ed1b0fc1e7bd65aea78e67e8415dca">pjmedia_rtcp_rx_rtcp</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, const void *rtcp_pkt, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga8f2568957839ac3ecd8be01d2bc2c148">pjmedia_rtcp_build_rtcp</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, void **rtcp_pkt, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga8ddca87e2b3ab0b02635edd66d7de748">pjmedia_rtcp_build_rtcp_sdes</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, void *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *length, const <a class="el" href="structpjmedia__rtcp__sdes.htm">pjmedia_rtcp_sdes</a> *sdes)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga9eb25597d5815cee68fe7fdc3b4cd9e9">pjmedia_rtcp_build_rtcp_bye</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, void *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *length, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *reason)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP.htm#ga314834ca379f60e4319fb30e6c60e657">pjmedia_rtcp_enable_xr</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> enable)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>PJMEDIA implements subsets of RTCP specification (RFC 3550) to monitor the quality of the real-time media (audio/video) transmission. In addition to the standard quality monitoring and reporting with RTCP SR and RR types, PJMEDIA's RTCP implementation is able to report extended statistics for incoming streams, such as packet duplications, reorder, discarded, and loss period (to distinguish between random and burst loss).</p>
<p>The bidirectional media quality statistic is represented with <a class="el" href="structpjmedia__rtcp__stat.htm">pjmedia_rtcp_stat</a> structure.</p>
<p>When application uses the stream interface (see <a class="el" href="group__PJMED__STRM.htm">Streams</a>), application may retrieve the RTCP statistic by calling <a class="el" href="group__PJMED__STRM.htm#ga10eef122bc961cead72f983ced0f6241">pjmedia_stream_get_stat()</a> function. </p>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="gaa0b6445a778b17a69016ad39383f71f5"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_session_setting_default" ref="gaa0b6445a778b17a69016ad39383f71f5" args="(pjmedia_rtcp_session_setting *settings)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_session_setting_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session__setting.htm">pjmedia_rtcp_session_setting</a> *&nbsp;</td>
          <td class="paramname"> <em>settings</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize RTCP session setting.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>settings</em>&nbsp;</td><td>The RTCP session setting to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab995e281f8daf35c7678f120ae05b5cf"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_init_stat" ref="gab995e281f8daf35c7678f120ae05b5cf" args="(pjmedia_rtcp_stat *stat)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_init_stat </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__stat.htm">pjmedia_rtcp_stat</a> *&nbsp;</td>
          <td class="paramname"> <em>stat</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize bidirectional RTCP statistics.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stat</em>&nbsp;</td><td>The bidirectional RTCP statistics. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacb5133d8da883347f3d87ec0b161dfb1"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_init" ref="gacb5133d8da883347f3d87ec0b161dfb1" args="(pjmedia_rtcp_session *session, char *name, unsigned clock_rate, unsigned samples_per_frame, pj_uint32_t ssrc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>samples_per_frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&nbsp;</td>
          <td class="paramname"> <em>ssrc</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize RTCP session.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The session </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Optional name to identify the session (for logging purpose). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>clock_rate</em>&nbsp;</td><td>Codec clock rate in samples per second. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>samples_per_frame</em>&nbsp;</td><td>Average number of samples per frame. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ssrc</em>&nbsp;</td><td>The SSRC used in to identify the session. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga88f9fa8abdeb31239a9a624a34f3ca0b"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_init2" ref="ga88f9fa8abdeb31239a9a624a34f3ca0b" args="(pjmedia_rtcp_session *session, const pjmedia_rtcp_session_setting *settings)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_init2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__session__setting.htm">pjmedia_rtcp_session_setting</a> *&nbsp;</td>
          <td class="paramname"> <em>settings</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize RTCP session.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The session </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>settings</em>&nbsp;</td><td>The RTCP session settings. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga626c3b30e1467697f062918a2da4072a"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_get_ntp_time" ref="ga626c3b30e1467697f062918a2da4072a" args="(const pjmedia_rtcp_session *sess, pjmedia_rtcp_ntp_rec *ntp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_get_ntp_time </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>sess</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__ntp__rec.htm">pjmedia_rtcp_ntp_rec</a> *&nbsp;</td>
          <td class="paramname"> <em>ntp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Utility function to retrieve current NTP timestamp.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sess</em>&nbsp;</td><td>RTCP session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ntp</em>&nbsp;</td><td>NTP record.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga14616ca99616fe49c55e8f872c7cfabf"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_fini" ref="ga14616ca99616fe49c55e8f872c7cfabf" args="(pjmedia_rtcp_session *session)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_fini </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Deinitialize RTCP session.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The session. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga7ce9e4e76674dba050c01cd295964bde"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_rx_rtp" ref="ga7ce9e4e76674dba050c01cd295964bde" args="(pjmedia_rtcp_session *session, unsigned seq, unsigned ts, unsigned payload)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_rx_rtp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>seq</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>ts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>payload</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Call this function everytime an RTP packet is received to let the RTCP session do its internal calculations.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>seq</em>&nbsp;</td><td>The RTP packet sequence number, in host byte order. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ts</em>&nbsp;</td><td>The RTP packet timestamp, in host byte order. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>payload</em>&nbsp;</td><td>Size of the payload. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf1a6ff9f79b74e6c7478719e7da9cfb3"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_rx_rtp2" ref="gaf1a6ff9f79b74e6c7478719e7da9cfb3" args="(pjmedia_rtcp_session *session, unsigned seq, unsigned ts, unsigned payload, pj_bool_t discarded)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_rx_rtp2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>seq</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>ts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>payload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td>
          <td class="paramname"> <em>discarded</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Call this function everytime an RTP packet is received to let the RTCP session do its internal calculations.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>seq</em>&nbsp;</td><td>The RTP packet sequence number, in host byte order. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ts</em>&nbsp;</td><td>The RTP packet timestamp, in host byte order. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>payload</em>&nbsp;</td><td>Size of the payload. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>discarded</em>&nbsp;</td><td>Flag to specify whether the packet is discarded. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa0927538050a3cde5a51f32cb586f7d0"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_tx_rtp" ref="gaa0927538050a3cde5a51f32cb586f7d0" args="(pjmedia_rtcp_session *session, unsigned ptsize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_tx_rtp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>ptsize</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Call this function everytime an RTP packet is sent to let the RTCP session do its internal calculations.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ptsize</em>&nbsp;</td><td>The payload size of the RTP packet (ie packet minus RTP header) in bytes. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga42ed1b0fc1e7bd65aea78e67e8415dca"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_rx_rtcp" ref="ga42ed1b0fc1e7bd65aea78e67e8415dca" args="(pjmedia_rtcp_session *session, const void *rtcp_pkt, pj_size_t size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_rx_rtcp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&nbsp;</td>
          <td class="paramname"> <em>rtcp_pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Call this function when an RTCP packet is received from remote peer. This RTCP packet received from remote is used to calculate the end-to- end delay of the network.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>RTCP session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rtcp_pkt</em>&nbsp;</td><td>The received RTCP packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>Size of the incoming packet. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8f2568957839ac3ecd8be01d2bc2c148"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_build_rtcp" ref="ga8f2568957839ac3ecd8be01d2bc2c148" args="(pjmedia_rtcp_session *session, void **rtcp_pkt, int *len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_build_rtcp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&nbsp;</td>
          <td class="paramname"> <em>rtcp_pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *&nbsp;</td>
          <td class="paramname"> <em>len</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Build a RTCP packet to be transmitted to remote RTP peer. This will create RTCP Sender Report (SR) or Receiver Report (RR) depending on whether the endpoint has been transmitting RTP since the last interval. Note that this function will reset the interval counters (such as the ones to calculate fraction lost) in the session.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The RTCP session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rtcp_pkt</em>&nbsp;</td><td>Upon return, it will contain pointer to the RTCP packet, which can be RTCP SR or RR. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>len</em>&nbsp;</td><td>Upon return, it will indicate the size of the RTCP packet. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8ddca87e2b3ab0b02635edd66d7de748"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_build_rtcp_sdes" ref="ga8ddca87e2b3ab0b02635edd66d7de748" args="(pjmedia_rtcp_session *session, void *buf, pj_size_t *length, const pjmedia_rtcp_sdes *sdes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_build_rtcp_sdes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&nbsp;</td>
          <td class="paramname"> <em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__sdes.htm">pjmedia_rtcp_sdes</a> *&nbsp;</td>
          <td class="paramname"> <em>sdes</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Build an RTCP SDES (source description) packet. This packet can be appended to other RTCP packets, e.g: RTCP RR/SR, to compose a compound RTCP packet.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The RTCP session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The buffer to receive RTCP SDES packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>length</em>&nbsp;</td><td>On input, it will contain the buffer length. On output, it will contain the generated RTCP SDES packet length. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sdes</em>&nbsp;</td><td>The source description, see <a class="el" href="structpjmedia__rtcp__sdes.htm">pjmedia_rtcp_sdes</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9eb25597d5815cee68fe7fdc3b4cd9e9"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_build_rtcp_bye" ref="ga9eb25597d5815cee68fe7fdc3b4cd9e9" args="(pjmedia_rtcp_session *session, void *buf, pj_size_t *length, const pj_str_t *reason)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_build_rtcp_bye </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&nbsp;</td>
          <td class="paramname"> <em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>reason</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Build an RTCP BYE packet. This packet can be appended to other RTCP packets, e.g: RTCP RR/SR, to compose a compound RTCP packet.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The RTCP session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The buffer to receive RTCP BYE packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>length</em>&nbsp;</td><td>On input, it will contain the buffer length. On output, it will contain the generated RTCP BYE packet length. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>reason</em>&nbsp;</td><td>Optional, the BYE reason.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga314834ca379f60e4319fb30e6c60e657"></a><!-- doxytag: member="rtcp.h::pjmedia_rtcp_enable_xr" ref="ga314834ca379f60e4319fb30e6c60e657" args="(pjmedia_rtcp_session *session, pj_bool_t enable)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_enable_xr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td>
          <td class="paramname"> <em>enable</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Call this function if RTCP XR needs to be enabled/disabled in the RTCP session.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>session</em>&nbsp;</td><td>The RTCP session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>enable</em>&nbsp;</td><td>Enable/disable RTCP XR.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
