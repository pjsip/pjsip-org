<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj_http_req_callback Struct Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB-UTIL Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">pj_http_req_callback Struct Reference<div class="ingroups"><a class="el" href="group__PJ__PROTOCOLS.htm">Protocols</a> &raquo; <a class="el" href="group__PJ__HTTP__CLIENT.htm">Simple HTTP Client</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="http__client_8h_source.htm">http_client.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a5bff147f0564f0f29b2bc870eb30e23b"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#a5bff147f0564f0f29b2bc870eb30e23b">on_response</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td></tr>
<tr class="separator:a5bff147f0564f0f29b2bc870eb30e23b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5bd17c212de7c943f74a0f567d76b9b"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#ad5bd17c212de7c943f74a0f567d76b9b">on_send_data</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void **data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *size)</td></tr>
<tr class="separator:ad5bd17c212de7c943f74a0f567d76b9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbbdd4c7175509c5f9e3c4d928de1d5b"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#abbbdd4c7175509c5f9e3c4d928de1d5b">on_data_read</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void *data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr class="separator:abbbdd4c7175509c5f9e3c4d928de1d5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ebc4254f5e53e00ba608ed3c43c0b51"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#a6ebc4254f5e53e00ba608ed3c43c0b51">on_complete</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td></tr>
<tr class="separator:a6ebc4254f5e53e00ba608ed3c43c0b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >This structure describes the callbacks to be called by the HTTP request. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a6ebc4254f5e53e00ba608ed3c43c0b51" name="a6ebc4254f5e53e00ba608ed3c43c0b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ebc4254f5e53e00ba608ed3c43c0b51">&#9670;&nbsp;</a></span>on_complete</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_http_req_callback::on_complete) (<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when the HTTP request is completed. If the callback <a class="el" href="structpj__http__req__callback.htm#abbbdd4c7175509c5f9e3c4d928de1d5b">on_data_read()</a> is specified, the variable response-&gt;data will be set to NULL, otherwise it will contain the complete data. Response data is allocated from pj_http_req's internal memory pool so the data remain valid as long as pj_http_req is not destroyed and application does not start a new request.</p>
<p >If no longer required, application may choose to destroy pj_http_req immediately by calling <a class="el" href="group__PJ__HTTP__CLIENT.htm#gaa5cadef93141e4b115df881bbded8c8e">pj_http_req_destroy()</a> inside the callback.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">http_req</td><td>The http request. </td></tr>
    <tr><td class="paramname">status</td><td>The status of the request operation. PJ_SUCCESS if the operation completed successfully (connection-wise). To check the server's status-code response to the HTTP request, application should check resp-&gt;status_code instead. </td></tr>
    <tr><td class="paramname">resp</td><td>The response of the corresponding request. If the status argument is non-PJ_SUCCESS, this argument will be set to NULL. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abbbdd4c7175509c5f9e3c4d928de1d5b" name="abbbdd4c7175509c5f9e3c4d928de1d5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbbdd4c7175509c5f9e3c4d928de1d5b">&#9670;&nbsp;</a></span>on_data_read</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_http_req_callback::on_data_read) (<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void *data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when a segment of response body data arrives. If this callback is specified (i.e. not NULL), the <a class="el" href="structpj__http__req__callback.htm#a6ebc4254f5e53e00ba608ed3c43c0b51">on_complete()</a> callback will be called with zero-length data (within the response parameter), hence the application must store and manage its own data buffer, otherwise the <a class="el" href="structpj__http__req__callback.htm#a6ebc4254f5e53e00ba608ed3c43c0b51">on_complete()</a> callback will be called with the response parameter containing the complete data.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">http_req</td><td>The http request. </td></tr>
    <tr><td class="paramname">data</td><td>The buffer containing the data. </td></tr>
    <tr><td class="paramname">size</td><td>The length of data in the buffer. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5bff147f0564f0f29b2bc870eb30e23b" name="a5bff147f0564f0f29b2bc870eb30e23b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bff147f0564f0f29b2bc870eb30e23b">&#9670;&nbsp;</a></span>on_response</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_http_req_callback::on_response) (<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when a complete HTTP response header is received.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">http_req</td><td>The http request. </td></tr>
    <tr><td class="paramname">resp</td><td>The response of the request. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad5bd17c212de7c943f74a0f567d76b9b" name="ad5bd17c212de7c943f74a0f567d76b9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5bd17c212de7c943f74a0f567d76b9b">&#9670;&nbsp;</a></span>on_send_data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_http_req_callback::on_send_data) (<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void **data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *size)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when the HTTP request is ready to send its request body. Application may wish to use this callback if it wishes to load the data at a later time or if it does not wish to load the whole data into memory. In order for this callback to be called, application MUST set http_req_param.total_size to a value greater than 0.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">http_req</td><td>The http request. </td></tr>
    <tr><td class="paramname">data</td><td>Pointer to the data that will be sent. Application must set the pointer to the current data chunk/segment to be sent. Data must remain valid until the next <a class="el" href="structpj__http__req__callback.htm#ad5bd17c212de7c943f74a0f567d76b9b">on_send_data()</a> callback or for the last segment, until it is sent. </td></tr>
    <tr><td class="paramname">size</td><td>Pointer to the data size that will be sent. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="http__client_8h_source.htm">http_client.h</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB-UTIL Open Source, small footprint, and portable asynchronous/caching DNS resolver, text scanner, STUN client, and XML library<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
