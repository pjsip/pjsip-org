<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pjsua_callback Struct Reference (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">pjsua_callback Struct Reference<div class="ingroups"><a class="el" href="group__PJSUA__LIB.htm">PJSUA API - High Level Softphone API</a> &raquo; <a class="el" href="group__PJSUA__LIB__BASE.htm">PJSUA-API Basic API</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;pjsua.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a8029ac58404a39067691a1530a2b585a"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a8029ac58404a39067691a1530a2b585a">on_call_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *e)</td></tr>
<tr class="separator:a8029ac58404a39067691a1530a2b585a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1e853098b7200d625bee109e0044b38"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#ad1e853098b7200d625bee109e0044b38">on_incoming_call</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td></tr>
<tr class="separator:ad1e853098b7200d625bee109e0044b38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a866ba28b5df01a85ca6ead42ba3a57de"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a866ba28b5df01a85ca6ead42ba3a57de">on_call_tsx_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *e)</td></tr>
<tr class="separator:a866ba28b5df01a85ca6ead42ba3a57de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f1ccccb145176fef945cc34ca6685f"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a22f1ccccb145176fef945cc34ca6685f">on_call_media_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id)</td></tr>
<tr class="separator:a22f1ccccb145176fef945cc34ca6685f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b298addb1c9864871b334619d99d231"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a0b298addb1c9864871b334619d99d231">on_call_sdp_created</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *rem_sdp)</td></tr>
<tr class="separator:a0b298addb1c9864871b334619d99d231"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90d9b5de7ff50ee50849a5d61fb04ae5"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a90d9b5de7ff50ee50849a5d61fb04ae5">on_stream_precreate</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsua__on__stream__precreate__param.htm">pjsua_on_stream_precreate_param</a> *param)</td></tr>
<tr class="separator:a90d9b5de7ff50ee50849a5d61fb04ae5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebe678d8afa2f14525b695f5e652e4d2"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#aebe678d8afa2f14525b695f5e652e4d2">on_stream_created</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, pjmedia_stream *strm, unsigned stream_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> **p_port)</td></tr>
<tr class="separator:aebe678d8afa2f14525b695f5e652e4d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02e82846874e7740f2bbf964041a307"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#aa02e82846874e7740f2bbf964041a307">on_stream_created2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsua__on__stream__created__param.htm">pjsua_on_stream_created_param</a> *param)</td></tr>
<tr class="separator:aa02e82846874e7740f2bbf964041a307"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09389f2e796d03ee15c92a96b563ea21"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a09389f2e796d03ee15c92a96b563ea21">on_stream_destroyed</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, pjmedia_stream *strm, unsigned stream_idx)</td></tr>
<tr class="separator:a09389f2e796d03ee15c92a96b563ea21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16c678038d11cfa8a99e8595afce7fba"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a16c678038d11cfa8a99e8595afce7fba">on_dtmf_digit</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> digit)</td></tr>
<tr class="separator:a16c678038d11cfa8a99e8595afce7fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab37b30bb12a3d15e78ea3a35ce020b8a"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#ab37b30bb12a3d15e78ea3a35ce020b8a">on_dtmf_digit2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="el" href="structpjsua__dtmf__info.htm">pjsua_dtmf_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td></tr>
<tr class="separator:ab37b30bb12a3d15e78ea3a35ce020b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a2a86b506faefaa79f8e2214e0ddd5c"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a2a2a86b506faefaa79f8e2214e0ddd5c">on_dtmf_event</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="el" href="structpjsua__dtmf__event.htm">pjsua_dtmf_event</a> *event)</td></tr>
<tr class="separator:a2a2a86b506faefaa79f8e2214e0ddd5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c5fad468e7fbee359fb9706aed24cf2"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a2c5fad468e7fbee359fb9706aed24cf2">on_call_transfer_request</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *dst, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code)</td></tr>
<tr class="separator:a2c5fad468e7fbee359fb9706aed24cf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f1ed631e2a0aa300580863e0791b31c"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a6f1ed631e2a0aa300580863e0791b31c">on_call_transfer_request2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *dst, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td></tr>
<tr class="separator:a6f1ed631e2a0aa300580863e0791b31c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf9ebc41181050d3049999a430b5fea8"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#abf9ebc41181050d3049999a430b5fea8">on_call_transfer_status</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> st_code, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> final, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *p_cont)</td></tr>
<tr class="separator:abf9ebc41181050d3049999a430b5fea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc8ebdd12aa6f3a172c102309a75ad0b"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#acc8ebdd12aa6f3a172c102309a75ad0b">on_call_replace_request</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *st_code, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text)</td></tr>
<tr class="separator:acc8ebdd12aa6f3a172c102309a75ad0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6847eec1b3b5c472fd97ca78844b67bb"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a6847eec1b3b5c472fd97ca78844b67bb">on_call_replace_request2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *st_code, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td></tr>
<tr class="separator:a6847eec1b3b5c472fd97ca78844b67bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a430390831b767992e36ab3911f47cd8a"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a430390831b767992e36ab3911f47cd8a">on_call_replaced</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> old_call_id, <a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> new_call_id)</td></tr>
<tr class="separator:a430390831b767992e36ab3911f47cd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a866f9c53b9e6206f55f3d01c3e9946c6"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a866f9c53b9e6206f55f3d01c3e9946c6">on_call_rx_offer</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *offer, void *reserved, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td></tr>
<tr class="separator:a866f9c53b9e6206f55f3d01c3e9946c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2afdabd774f8cabcfc2e92c8262641c"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#ae2afdabd774f8cabcfc2e92c8262641c">on_call_rx_reinvite</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *offer, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, void *reserved, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *async, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td></tr>
<tr class="separator:ae2afdabd774f8cabcfc2e92c8262641c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a784292ddaee68c8602d3ff4f818bbe93"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a784292ddaee68c8602d3ff4f818bbe93">on_call_tx_offer</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, void *reserved, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td></tr>
<tr class="separator:a784292ddaee68c8602d3ff4f818bbe93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6772f875360b7596e02516008be9c709"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a6772f875360b7596e02516008be9c709">on_reg_started</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> renew)</td></tr>
<tr class="separator:a6772f875360b7596e02516008be9c709"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6532bfde6323d4afa9079e451d7c7eb1"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a6532bfde6323d4afa9079e451d7c7eb1">on_reg_started2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__reg__info.htm">pjsua_reg_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td></tr>
<tr class="separator:a6532bfde6323d4afa9079e451d7c7eb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d9107020dd5ab28a039be854ec20f52"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a4d9107020dd5ab28a039be854ec20f52">on_reg_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td></tr>
<tr class="separator:a4d9107020dd5ab28a039be854ec20f52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbdfe850fe6e8fedcc9062026ee20130"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#afbdfe850fe6e8fedcc9062026ee20130">on_reg_state2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__reg__info.htm">pjsua_reg_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td></tr>
<tr class="separator:afbdfe850fe6e8fedcc9062026ee20130"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6388ec7ecda65d3907a86e3616250b89"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a6388ec7ecda65d3907a86e3616250b89">on_incoming_subscribe</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__srv__pres.htm">pjsua_srv_pres</a> *srv_pres, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a> buddy_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *reason, <a class="el" href="structpjsua__msg__data.htm">pjsua_msg_data</a> *msg_data)</td></tr>
<tr class="separator:a6388ec7ecda65d3907a86e3616250b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a698eab9db498c195ff692ba146794826"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a698eab9db498c195ff692ba146794826">on_srv_subscribe_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__srv__pres.htm">pjsua_srv_pres</a> *srv_pres, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *remote_uri, <a class="el" href="group__PJSIP__EVENT__NOT.htm#ga4a6454679f18fe8337a2fc78063010bf">pjsip_evsub_state</a> state, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td></tr>
<tr class="separator:a698eab9db498c195ff692ba146794826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e24d87e82ee2c4c1a68efa3cbf6b902"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a7e24d87e82ee2c4c1a68efa3cbf6b902">on_buddy_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a> buddy_id)</td></tr>
<tr class="separator:a7e24d87e82ee2c4c1a68efa3cbf6b902"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43db3d19fa99eea2be5ee774575be5c3"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a43db3d19fa99eea2be5ee774575be5c3">on_buddy_evsub_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a> buddy_id, <a class="el" href="group__PJSIP__EVENT__NOT.htm#gabef75338a5839ec42984bdf37b54a093">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td></tr>
<tr class="separator:a43db3d19fa99eea2be5ee774575be5c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a147fe934529f1cf13149f4d9f0f6e2"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a1a147fe934529f1cf13149f4d9f0f6e2">on_pager</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *mime_type, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body)</td></tr>
<tr class="separator:a1a147fe934529f1cf13149f4d9f0f6e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1024ba6e4efed1e18f76770f14ee6be"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#ab1024ba6e4efed1e18f76770f14ee6be">on_pager2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *mime_type, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td></tr>
<tr class="separator:ab1024ba6e4efed1e18f76770f14ee6be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a443859e66fac6531e590e8f6aa96ff29"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a443859e66fac6531e590e8f6aa96ff29">on_pager_status</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> status, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *reason)</td></tr>
<tr class="separator:a443859e66fac6531e590e8f6aa96ff29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9878650a5c8517b7cbde93b46346597c"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a9878650a5c8517b7cbde93b46346597c">on_pager_status2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> status, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *reason, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td></tr>
<tr class="separator:a9878650a5c8517b7cbde93b46346597c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1901db446fcfc2ae5415c734351ceed4"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a1901db446fcfc2ae5415c734351ceed4">on_typing</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> is_typing)</td></tr>
<tr class="separator:a1901db446fcfc2ae5415c734351ceed4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a399102eab6eec9b639486a1eb0ef25"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a6a399102eab6eec9b639486a1eb0ef25">on_typing2</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> is_typing, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td></tr>
<tr class="separator:a6a399102eab6eec9b639486a1eb0ef25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3990babfa87f6bcb11d3bb266ef2bc5f"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a3990babfa87f6bcb11d3bb266ef2bc5f">on_nat_detect</a> )(const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjnath/docs/pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/structpj__stun__nat__detect__result.htm">pj_stun_nat_detect_result</a> *res)</td></tr>
<tr class="separator:a3990babfa87f6bcb11d3bb266ef2bc5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af393a63d83f1f7378b3d9786a83bfabc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSIP__ENDPT__TARGET__URI.htm#gaa99c427ca4668e49f1c3f6e25b10516c">pjsip_redirect_op</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#af393a63d83f1f7378b3d9786a83bfabc">on_call_redirected</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="el" href="structpjsip__uri.htm">pjsip_uri</a> *target, const <a class="el" href="structpjsip__event.htm">pjsip_event</a> *e)</td></tr>
<tr class="separator:af393a63d83f1f7378b3d9786a83bfabc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac48200de19e530e41311616a9313e8fa"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#ac48200de19e530e41311616a9313e8fa">on_mwi_state</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="group__PJSIP__EVENT__NOT.htm#gabef75338a5839ec42984bdf37b54a093">pjsip_evsub</a> *evsub)</td></tr>
<tr class="separator:ac48200de19e530e41311616a9313e8fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d7825b23e3473d22824f6f2e987f9aa"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a8d7825b23e3473d22824f6f2e987f9aa">on_mwi_info</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__mwi__info.htm">pjsua_mwi_info</a> *mwi_info)</td></tr>
<tr class="separator:a8d7825b23e3473d22824f6f2e987f9aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae07e5c07136bfa0eb2922703d5d7ec5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSIP__TRANSPORT.htm#ga12bd77cd803206d266cf8e0871f41ed2">pjsip_tp_state_callback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#ae07e5c07136bfa0eb2922703d5d7ec5d">on_transport_state</a></td></tr>
<tr class="separator:ae07e5c07136bfa0eb2922703d5d7ec5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fc32c57bede54fe85e3a8625d9bbefa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA__LIB__BASE.htm#gadab08ca8b5ec9bf462b56a1a73cc747d">pjsua_med_tp_state_cb</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a6fc32c57bede54fe85e3a8625d9bbefa">on_call_media_transport_state</a></td></tr>
<tr class="separator:a6fc32c57bede54fe85e3a8625d9bbefa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a290f0031da6e57b44d00769e06ecc581"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a290f0031da6e57b44d00769e06ecc581">on_ice_transport_error</a> )(<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> index, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjnath/docs/pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga7e21cd8a6d334eb429d766bd03266f36">pj_ice_strans_op</a> op, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, void *param)</td></tr>
<tr class="separator:a290f0031da6e57b44d00769e06ecc581"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad118832e9107075f8897adae4cfa4d37"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#ad118832e9107075f8897adae4cfa4d37">on_snd_dev_operation</a> )(<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> operation)</td></tr>
<tr class="separator:ad118832e9107075f8897adae4cfa4d37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cec589ac35da940467b08bbeb4cd586"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a9cec589ac35da940467b08bbeb4cd586">on_call_media_event</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, unsigned med_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__event.htm">pjmedia_event</a> *event)</td></tr>
<tr class="separator:a9cec589ac35da940467b08bbeb4cd586"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a133b313df30eb24cdcf3852d23e60ce2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__transport.htm">pjmedia_transport</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a133b313df30eb24cdcf3852d23e60ce2">on_create_media_transport</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, unsigned media_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__transport.htm">pjmedia_transport</a> *base_tp, unsigned <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#gae4737d316c3696dc34a85aa1c09dab99">flags</a>)</td></tr>
<tr class="separator:a133b313df30eb24cdcf3852d23e60ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9361df2fc0565052d3536aa736158f44"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a9361df2fc0565052d3536aa736158f44">on_create_media_transport_srtp</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, unsigned media_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__srtp__setting.htm">pjmedia_srtp_setting</a> *srtp_opt)</td></tr>
<tr class="separator:a9361df2fc0565052d3536aa736158f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e9ca05e364e2b6aedc37a77d7924808"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a1e9ca05e364e2b6aedc37a77d7924808">on_acc_find_for_incoming</a> )(const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> *acc_id)</td></tr>
<tr class="separator:a1e9ca05e364e2b6aedc37a77d7924808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a396b9ab08b322165d5063ba9c09a9e7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac203425443f7f9c853628eaf8d917682">pj_stun_resolve_cb</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a396b9ab08b322165d5063ba9c09a9e7c">on_stun_resolution_complete</a></td></tr>
<tr class="separator:a396b9ab08b322165d5063ba9c09a9e7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8547e9298df7bc0e6c208fcaa66a10f7"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a8547e9298df7bc0e6c208fcaa66a10f7">on_ip_change_progress</a> )(<a class="el" href="group__PJSUA__LIB__BASE.htm#ga5e82d9c480c3dd362ccb00532a285c30">pjsua_ip_change_op</a> op, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, const <a class="el" href="unionpjsua__ip__change__op__info.htm">pjsua_ip_change_op_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td></tr>
<tr class="separator:a8547e9298df7bc0e6c208fcaa66a10f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9acf2804b39adadb61582cf7c99c179a"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm#a9acf2804b39adadb61582cf7c99c179a">on_media_event</a> )(<a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__event.htm">pjmedia_event</a> *event)</td></tr>
<tr class="separator:a9acf2804b39adadb61582cf7c99c179a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This structure describes application callback to receive various event notification from PJSUA-API. All of these callbacks are OPTIONAL, although definitely application would want to implement some of the important callbacks (such as <em>on_incoming_call</em>). </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a8029ac58404a39067691a1530a2b585a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8029ac58404a39067691a1530a2b585a">&#9670;&nbsp;</a></span>on_call_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *e)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when call state has changed. Application may then query the call info to get the detail call states by calling <a class="el" href="group__PJSUA__LIB__CALL.htm#ga0cbdd31982d9d77e9e1be4e4b39b1f48">pjsua_call_get_info()</a> function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">e</td><td>Event which causes the call state to change. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad1e853098b7200d625bee109e0044b38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1e853098b7200d625bee109e0044b38">&#9670;&nbsp;</a></span>on_incoming_call</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_incoming_call) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application on incoming call.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account which match the incoming call. </td></tr>
    <tr><td class="paramname">call_id</td><td>The call id that has just been created for the call. </td></tr>
    <tr><td class="paramname">rdata</td><td>The incoming INVITE request. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a866ba28b5df01a85ca6ead42ba3a57de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a866ba28b5df01a85ca6ead42ba3a57de">&#9670;&nbsp;</a></span>on_call_tsx_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_tsx_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *e)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is a general notification callback which is called whenever a transaction within the call has changed state. Application can implement this callback for example to monitor the state of outgoing requests, or to answer unhandled incoming requests (such as INFO) with a final response.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call identification. </td></tr>
    <tr><td class="paramname">tsx</td><td>The transaction which has changed state. </td></tr>
    <tr><td class="paramname">e</td><td>Transaction event that caused the state change. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a22f1ccccb145176fef945cc34ca6685f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f1ccccb145176fef945cc34ca6685f">&#9670;&nbsp;</a></span>on_call_media_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_media_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when media state in the call has changed. Normal application would need to implement this callback, e.g. to connect the call's media to sound device. When ICE is used, this callback will also be called to report ICE negotiation failure. When DTLS-SRTP is used, this callback will also be called to report DTLS negotiation failure.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0b298addb1c9864871b334619d99d231"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b298addb1c9864871b334619d99d231">&#9670;&nbsp;</a></span>on_call_sdp_created</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_sdp_created) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *rem_sdp)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when a call has just created a local SDP (for initial or subsequent SDP offer/answer). Application can implement this callback to modify the SDP, before it is being sent and/or negotiated with remote SDP, for example to apply per account/call basis codecs priority or to add custom/proprietary SDP attributes.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">sdp</td><td>The SDP has just been created. </td></tr>
    <tr><td class="paramname">pool</td><td>The pool instance, application should use this pool to modify the SDP. </td></tr>
    <tr><td class="paramname">rem_sdp</td><td>The remote SDP, will be NULL if local is SDP offerer. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a90d9b5de7ff50ee50849a5d61fb04ae5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90d9b5de7ff50ee50849a5d61fb04ae5">&#9670;&nbsp;</a></span>on_stream_precreate</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_stream_precreate) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsua__on__stream__precreate__param.htm">pjsua_on_stream_precreate_param</a> *param)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when an audio media session is about to be created (as opposed to <a class="el" href="structpjsua__callback.htm#aebe678d8afa2f14525b695f5e652e4d2">on_stream_created()</a> and <a class="el" href="structpjsua__callback.htm#aa02e82846874e7740f2bbf964041a307">on_stream_created2()</a> which are called <em>after</em> the session has been created). The application may change some stream info parameter values, i.e: jb_init, jb_min_pre, jb_max_pre, jb_max, use_ka, rtcp_sdes_bye_disabled, jb_discard_algo (audio), codec_param-&gt;enc_fmt (video).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call identification. </td></tr>
    <tr><td class="paramname">param</td><td>The on stream precreate callback parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aebe678d8afa2f14525b695f5e652e4d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebe678d8afa2f14525b695f5e652e4d2">&#9670;&nbsp;</a></span>on_stream_created</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_stream_created) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, pjmedia_stream *strm, unsigned stream_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> **p_port)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when audio media session is created and before it is registered to the conference bridge. Application may return different audio media port if it has added media processing port to the stream. This media port then will be added to the conference bridge instead.</p>
<p>Note: if implemented, <a class="el" href="structpjsua__callback.htm#aa02e82846874e7740f2bbf964041a307">on_stream_created2()</a> callback will be called instead of this one.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call identification. </td></tr>
    <tr><td class="paramname">strm</td><td>Audio media stream. </td></tr>
    <tr><td class="paramname">stream_idx</td><td>Stream index in the audio media session. </td></tr>
    <tr><td class="paramname">p_port</td><td>On input, it specifies the audio media port of the stream. Application may modify this pointer to point to different media port to be registered to the conference bridge. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa02e82846874e7740f2bbf964041a307"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa02e82846874e7740f2bbf964041a307">&#9670;&nbsp;</a></span>on_stream_created2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_stream_created2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsua__on__stream__created__param.htm">pjsua_on_stream_created_param</a> *param)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when audio media session is created and before it is registered to the conference bridge. Application may return different audio media port if it has added media processing port to the stream. This media port then will be added to the conference bridge instead.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call identification. </td></tr>
    <tr><td class="paramname">param</td><td>The on stream created callback parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a09389f2e796d03ee15c92a96b563ea21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09389f2e796d03ee15c92a96b563ea21">&#9670;&nbsp;</a></span>on_stream_destroyed</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_stream_destroyed) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, pjmedia_stream *strm, unsigned stream_idx)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when audio media session has been unregistered from the conference bridge and about to be destroyed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call identification. </td></tr>
    <tr><td class="paramname">strm</td><td>Audio media stream. </td></tr>
    <tr><td class="paramname">stream_idx</td><td>Stream index in the audio media session. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a16c678038d11cfa8a99e8595afce7fba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16c678038d11cfa8a99e8595afce7fba">&#9670;&nbsp;</a></span>on_dtmf_digit</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_dtmf_digit) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> digit)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application upon incoming DTMF digits using RFC 2833 payload formats. This callback will not be called if app implements <em><a class="el" href="structpjsua__callback.htm#ab37b30bb12a3d15e78ea3a35ce020b8a">on_dtmf_digit2()</a></em> or <em><a class="el" href="structpjsua__callback.htm#a2a2a86b506faefaa79f8e2214e0ddd5c">on_dtmf_event()</a></em>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">digit</td><td>DTMF ASCII digit. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab37b30bb12a3d15e78ea3a35ce020b8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab37b30bb12a3d15e78ea3a35ce020b8a">&#9670;&nbsp;</a></span>on_dtmf_digit2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_dtmf_digit2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="el" href="structpjsua__dtmf__info.htm">pjsua_dtmf_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application upon incoming DTMF digits using the method specified in <em>pjsua_dtmf_method</em>. This callback will not be called if app implements <em><a class="el" href="structpjsua__callback.htm#a2a2a86b506faefaa79f8e2214e0ddd5c">on_dtmf_event()</a></em>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">info</td><td>The DTMF info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2a2a86b506faefaa79f8e2214e0ddd5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a2a86b506faefaa79f8e2214e0ddd5c">&#9670;&nbsp;</a></span>on_dtmf_event</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_dtmf_event) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="el" href="structpjsua__dtmf__event.htm">pjsua_dtmf_event</a> *event)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application upon incoming DTMF digits using the method specified in <em>pjsua_dtmf_method</em>. Includes additional information about events received via RTP.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">event</td><td>The DTMF event. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2c5fad468e7fbee359fb9706aed24cf2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c5fad468e7fbee359fb9706aed24cf2">&#9670;&nbsp;</a></span>on_call_transfer_request</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_transfer_request) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *dst, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application on call being transferred (i.e. REFER is received). Application can decide to accept/reject transfer request by setting the code (default is 202). When this callback is not defined, the default behavior is to accept the transfer. See also <a class="el" href="structpjsua__callback.htm#a6f1ed631e2a0aa300580863e0791b31c">on_call_transfer_request2()</a> callback for the version with <em><a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a></em> in the argument list.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">dst</td><td>The destination where the call will be transferred to. </td></tr>
    <tr><td class="paramname">code</td><td>Status code to be returned for the call transfer request. On input, it contains status code 202. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6f1ed631e2a0aa300580863e0791b31c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f1ed631e2a0aa300580863e0791b31c">&#9670;&nbsp;</a></span>on_call_transfer_request2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_transfer_request2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *dst, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application on call being transferred (i.e. REFER is received). Application can decide to accept/reject transfer request by setting the code (default is 202). When this callback is not defined, the default behavior is to accept the transfer.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">dst</td><td>The destination where the call will be transferred to. </td></tr>
    <tr><td class="paramname">code</td><td>Status code to be returned for the call transfer request. On input, it contains status code 202. </td></tr>
    <tr><td class="paramname">opt</td><td>The current call setting, application can update this setting for the call being transferred. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abf9ebc41181050d3049999a430b5fea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf9ebc41181050d3049999a430b5fea8">&#9670;&nbsp;</a></span>on_call_transfer_status</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_transfer_status) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> st_code, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> final, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *p_cont)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application of the status of previously sent call transfer request. Application can monitor the status of the call transfer request, for example to decide whether to terminate existing call.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call ID. </td></tr>
    <tr><td class="paramname">st_code</td><td>Status progress of the transfer request. </td></tr>
    <tr><td class="paramname">st_text</td><td>Status progress text. </td></tr>
    <tr><td class="paramname">final</td><td>If non-zero, no further notification will be reported. The st_code specified in this callback is the final status. </td></tr>
    <tr><td class="paramname">p_cont</td><td>Initially will be set to non-zero, application can set this to FALSE if it no longer wants to receie further notification (for example, after it hangs up the call). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="acc8ebdd12aa6f3a172c102309a75ad0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc8ebdd12aa6f3a172c102309a75ad0b">&#9670;&nbsp;</a></span>on_call_replace_request</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_replace_request) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *st_code, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application about incoming INVITE with Replaces header. Application may reject the request by setting non-2xx code. See also <a class="el" href="structpjsua__callback.htm#a6847eec1b3b5c472fd97ca78844b67bb">on_call_replace_request2()</a> callback for the version with <em><a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a></em> in the argument list.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call ID to be replaced. </td></tr>
    <tr><td class="paramname">rdata</td><td>The incoming INVITE request to replace the call. </td></tr>
    <tr><td class="paramname">st_code</td><td>Status code to be set by application. Application should only return a final status (200-699). </td></tr>
    <tr><td class="paramname">st_text</td><td>Optional status text to be set by application. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6847eec1b3b5c472fd97ca78844b67bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6847eec1b3b5c472fd97ca78844b67bb">&#9670;&nbsp;</a></span>on_call_replace_request2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_replace_request2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *st_code, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application about incoming INVITE with Replaces header. Application may reject the request by setting non-2xx code.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call ID to be replaced. </td></tr>
    <tr><td class="paramname">rdata</td><td>The incoming INVITE request to replace the call. </td></tr>
    <tr><td class="paramname">st_code</td><td>Status code to be set by application. Application should only return a final status (200-699). </td></tr>
    <tr><td class="paramname">st_text</td><td>Optional status text to be set by application. </td></tr>
    <tr><td class="paramname">opt</td><td>The current call setting, application can update this setting for the call being replaced. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a430390831b767992e36ab3911f47cd8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a430390831b767992e36ab3911f47cd8a">&#9670;&nbsp;</a></span>on_call_replaced</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_replaced) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> old_call_id, <a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> new_call_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application that an existing call has been replaced with a new call. This happens when PJSUA-API receives incoming INVITE request with Replaces header.</p>
<p>After this callback is called, normally PJSUA-API will disconnect <em>old_call_id</em> and establish <em>new_call_id</em>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">old_call_id</td><td>Existing call which to be replaced with the new call. </td></tr>
    <tr><td class="paramname">new_call_id</td><td>The new call. </td></tr>
    <tr><td class="paramname">rdata</td><td>The incoming INVITE with Replaces request. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a866f9c53b9e6206f55f3d01c3e9946c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a866f9c53b9e6206f55f3d01c3e9946c6">&#9670;&nbsp;</a></span>on_call_rx_offer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_rx_offer) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *offer, void *reserved, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when call has received new offer from remote (i.e. re-INVITE/UPDATE with SDP is received, or from the INVITE response in the case that the initial outgoing INVITE has no SDP). Application can decide to accept/reject the offer by setting the code (default is 200). If the offer is accepted, application can update the call setting to be applied in the answer. When this callback is not defined, the default behavior is to accept the offer using current call setting.</p>
<p>Note: this callback may not be called if <em><a class="el" href="structpjsua__callback.htm#ae2afdabd774f8cabcfc2e92c8262641c">on_call_rx_reinvite()</a></em> is implemented.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">offer</td><td>The new offer received. </td></tr>
    <tr><td class="paramname">reserved</td><td>Reserved param, currently not used. </td></tr>
    <tr><td class="paramname">code</td><td>Status code to be returned for answering the offer. On input, it contains status code 200. Currently, valid values are only 200 and 488. </td></tr>
    <tr><td class="paramname">opt</td><td>The current call setting, application can update this setting for answering the offer. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae2afdabd774f8cabcfc2e92c8262641c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2afdabd774f8cabcfc2e92c8262641c">&#9670;&nbsp;</a></span>on_call_rx_reinvite</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_rx_reinvite) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *offer, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, void *reserved, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *async, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when call has received a re-INVITE with offer from the peer. It allows more fine-grained control over the response to a re-INVITE. If application sets async to PJ_TRUE, it can send the reply manually using the function <a class="el" href="group__PJSUA__LIB__CALL.htm#gabf93b4f7f761754ee3391904b1d4f0a2">pjsua_call_answer_with_sdp()</a>. Otherwise, by default the re-INVITE will be answered automatically after the callback returns.</p>
<p>Currently, this callback is only called for re-INVITE with SDP, but app should be prepared to handle the case of re-INVITE without SDP.</p>
<p>Remarks: If manually answering at a later timing, application may need to monitor <a class="el" href="structpjsua__callback.htm#a866ba28b5df01a85ca6ead42ba3a57de">on_call_tsx_state()</a> callback to check whether the re-INVITE is already answered automatically with 487 due to being cancelled.</p>
<p>Note: <a class="el" href="structpjsua__callback.htm#a866f9c53b9e6206f55f3d01c3e9946c6">on_call_rx_offer()</a> will still be called after this callback, but only if async is PJ_FALSE and code is 200.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">offer</td><td>Remote offer. </td></tr>
    <tr><td class="paramname">rdata</td><td>The received re-INVITE request. </td></tr>
    <tr><td class="paramname">reserved</td><td>Reserved param, currently not used. </td></tr>
    <tr><td class="paramname">async</td><td>On input, it is PJ_FALSE. Set to PJ_TRUE if app wants to manually answer the re-INVITE. </td></tr>
    <tr><td class="paramname">code</td><td>Status code to be returned for answering the offer. On input, it contains status code 200. Currently, valid values are only 200 and 488. </td></tr>
    <tr><td class="paramname">opt</td><td>The current call setting, application can update this setting for answering the offer. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a784292ddaee68c8602d3ff4f818bbe93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a784292ddaee68c8602d3ff4f818bbe93">&#9670;&nbsp;</a></span>on_call_tx_offer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_tx_offer) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, void *reserved, <a class="el" href="structpjsua__call__setting.htm">pjsua_call_setting</a> *opt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when call has received INVITE with no SDP offer. Application can update the call setting (e.g: add audio/video), or enable/disable codecs, or update other media session settings from within the callback, however, as mandated by the standard (RFC3261 section 14.2), it must ensure that the update overlaps with the existing media session (in codecs, transports, or other parameters) that require support from the peer, this is to avoid the need for the peer to reject the offer.</p>
<p>When this callback is not defined, the default behavior is to send SDP offer using current active media session (with all enabled codecs on each media type).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call index. </td></tr>
    <tr><td class="paramname">reserved</td><td>Reserved param, currently not used. </td></tr>
    <tr><td class="paramname">opt</td><td>The current call setting, application can update this setting for generating the offer. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6772f875360b7596e02516008be9c709"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6772f875360b7596e02516008be9c709">&#9670;&nbsp;</a></span>on_reg_started</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_reg_started) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> renew)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when registration or unregistration has been initiated. Note that this only notifies the initial registration and unregistration. Once registration session is active, subsequent refresh will not cause this callback to be called.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account ID. </td></tr>
    <tr><td class="paramname">renew</td><td>Non-zero for registration and zero for unregistration. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6532bfde6323d4afa9079e451d7c7eb1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6532bfde6323d4afa9079e451d7c7eb1">&#9670;&nbsp;</a></span>on_reg_started2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_reg_started2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__reg__info.htm">pjsua_reg_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is the alternative version of the <em><a class="el" href="structpjsua__callback.htm#a6772f875360b7596e02516008be9c709">on_reg_started()</a></em> callback with <em><a class="el" href="structpjsua__reg__info.htm">pjsua_reg_info</a></em> argument.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account ID. </td></tr>
    <tr><td class="paramname">info</td><td>The registration info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4d9107020dd5ab28a039be854ec20f52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d9107020dd5ab28a039be854ec20f52">&#9670;&nbsp;</a></span>on_reg_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_reg_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when registration status has changed. Application may then query the account info to get the registration details.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account ID. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afbdfe850fe6e8fedcc9062026ee20130"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbdfe850fe6e8fedcc9062026ee20130">&#9670;&nbsp;</a></span>on_reg_state2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_reg_state2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__reg__info.htm">pjsua_reg_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when registration status has changed. Application may inspect the registration info to get the registration status details.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account ID. </td></tr>
    <tr><td class="paramname">info</td><td>The registration info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6388ec7ecda65d3907a86e3616250b89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6388ec7ecda65d3907a86e3616250b89">&#9670;&nbsp;</a></span>on_incoming_subscribe</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_incoming_subscribe) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__srv__pres.htm">pjsua_srv_pres</a> *srv_pres, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a> buddy_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> *code, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *reason, <a class="el" href="structpjsua__msg__data.htm">pjsua_msg_data</a> *msg_data)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification when incoming SUBSCRIBE request is received. Application may use this callback to authorize the incoming subscribe request (e.g. ask user permission if the request should be granted).</p>
<p>If this callback is not implemented, all incoming presence subscription requests will be accepted.</p>
<p>If this callback is implemented, application has several choices on what to do with the incoming request:</p><ul>
<li>it may reject the request immediately by specifying non-200 class final response in the <em>code</em> argument.</li>
<li>it may immediately accept the request by specifying 200 as the <em>code</em> argument. This is the default value if application doesn't set any value to the <em>code</em> argument. In this case, the library will automatically send NOTIFY request upon returning from this callback.</li>
<li>it may delay the processing of the request, for example to request user permission whether to accept or reject the request. In this case, the application MUST set the <em>code</em> argument to 202, then IMMEDIATELY calls <a class="el" href="group__PJSUA__LIB__BUDDY.htm#ga7771593cc1af675872c3030783d98f0f">pjsua_pres_notify()</a> with state PJSIP_EVSUB_STATE_PENDING and later calls <a class="el" href="group__PJSUA__LIB__BUDDY.htm#ga7771593cc1af675872c3030783d98f0f">pjsua_pres_notify()</a> again to accept or reject the subscription request.</li>
</ul>
<p>Any <em>code</em> other than 200 and 202 will be treated as 200.</p>
<p>Application MUST return from this callback immediately (e.g. it must not block in this callback while waiting for user confirmation).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">srv_pres</td><td>Server presence subscription instance. If application delays the acceptance of the request, it will need to specify this object when calling <a class="el" href="group__PJSUA__LIB__BUDDY.htm#ga7771593cc1af675872c3030783d98f0f">pjsua_pres_notify()</a>. </td></tr>
    <tr><td class="paramname">acc_id</td><td>Account ID most appropriate for this request. </td></tr>
    <tr><td class="paramname">buddy_id</td><td>ID of the buddy matching the sender of the request, if any, or PJSUA_INVALID_ID if no matching buddy is found. </td></tr>
    <tr><td class="paramname">from</td><td>The From URI of the request. </td></tr>
    <tr><td class="paramname">rdata</td><td>The incoming request. </td></tr>
    <tr><td class="paramname">code</td><td>The status code to respond to the request. The default value is 200. Application may set this to other final status code to accept or reject the request. </td></tr>
    <tr><td class="paramname">reason</td><td>The reason phrase to respond to the request. </td></tr>
    <tr><td class="paramname">msg_data</td><td>If the application wants to send additional headers in the response, it can put it in this parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a698eab9db498c195ff692ba146794826"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a698eab9db498c195ff692ba146794826">&#9670;&nbsp;</a></span>on_srv_subscribe_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_srv_subscribe_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__srv__pres.htm">pjsua_srv_pres</a> *srv_pres, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *remote_uri, <a class="el" href="group__PJSIP__EVENT__NOT.htm#ga4a6454679f18fe8337a2fc78063010bf">pjsip_evsub_state</a> state, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification when server side subscription state has changed. This callback is optional as application normally does not need to do anything to maintain server side presence subscription.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account ID. </td></tr>
    <tr><td class="paramname">srv_pres</td><td>Server presence subscription object. </td></tr>
    <tr><td class="paramname">remote_uri</td><td>Remote URI string. </td></tr>
    <tr><td class="paramname">state</td><td>New subscription state. </td></tr>
    <tr><td class="paramname">event</td><td>PJSIP event that triggers the state change. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7e24d87e82ee2c4c1a68efa3cbf6b902"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e24d87e82ee2c4c1a68efa3cbf6b902">&#9670;&nbsp;</a></span>on_buddy_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_buddy_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a> buddy_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when the buddy state has changed. Application may then query the buddy into to get the details.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buddy_id</td><td>The buddy id. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a43db3d19fa99eea2be5ee774575be5c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43db3d19fa99eea2be5ee774575be5c3">&#9670;&nbsp;</a></span>on_buddy_evsub_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_buddy_evsub_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a> buddy_id, <a class="el" href="group__PJSIP__EVENT__NOT.htm#gabef75338a5839ec42984bdf37b54a093">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application when the state of client subscription session associated with a buddy has changed. Application may use this callback to retrieve more detailed information about the state changed event.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buddy_id</td><td>The buddy id. </td></tr>
    <tr><td class="paramname">sub</td><td>Event subscription session. </td></tr>
    <tr><td class="paramname">event</td><td>The event which triggers state change event. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1a147fe934529f1cf13149f4d9f0f6e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a147fe934529f1cf13149f4d9f0f6e2">&#9670;&nbsp;</a></span>on_pager</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_pager) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *mime_type, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application on incoming pager (i.e. MESSAGE request). Argument call_id will be -1 if MESSAGE request is not related to an existing call.</p>
<p>See also <em><a class="el" href="structpjsua__callback.htm#ab1024ba6e4efed1e18f76770f14ee6be">on_pager2()</a></em> callback for the version with <em><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a></em> passed as one of the argument.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Containts the ID of the call where the IM was sent, or PJSUA_INVALID_ID if the IM was sent outside call context. </td></tr>
    <tr><td class="paramname">from</td><td>URI of the sender. </td></tr>
    <tr><td class="paramname">to</td><td>URI of the destination message. </td></tr>
    <tr><td class="paramname">contact</td><td>The Contact URI of the sender, if present. </td></tr>
    <tr><td class="paramname">mime_type</td><td>MIME type of the message. </td></tr>
    <tr><td class="paramname">body</td><td>The message content. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab1024ba6e4efed1e18f76770f14ee6be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1024ba6e4efed1e18f76770f14ee6be">&#9670;&nbsp;</a></span>on_pager2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_pager2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *mime_type, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is the alternative version of the <em><a class="el" href="structpjsua__callback.htm#a1a147fe934529f1cf13149f4d9f0f6e2">on_pager()</a></em> callback with <em><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a></em> argument.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Containts the ID of the call where the IM was sent, or PJSUA_INVALID_ID if the IM was sent outside call context. </td></tr>
    <tr><td class="paramname">from</td><td>URI of the sender. </td></tr>
    <tr><td class="paramname">to</td><td>URI of the destination message. </td></tr>
    <tr><td class="paramname">contact</td><td>The Contact URI of the sender, if present. </td></tr>
    <tr><td class="paramname">mime_type</td><td>MIME type of the message. </td></tr>
    <tr><td class="paramname">body</td><td>The message content. </td></tr>
    <tr><td class="paramname">rdata</td><td>The incoming MESSAGE request. </td></tr>
    <tr><td class="paramname">acc_id</td><td>Account ID most suitable for this message. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a443859e66fac6531e590e8f6aa96ff29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a443859e66fac6531e590e8f6aa96ff29">&#9670;&nbsp;</a></span>on_pager_status</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_pager_status) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> status, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *reason)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application about the delivery status of outgoing pager request. See also <a class="el" href="structpjsua__callback.htm#a9878650a5c8517b7cbde93b46346597c">on_pager_status2()</a> callback for the version with <em><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a></em> in the argument list.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Containts the ID of the call where the IM was sent, or PJSUA_INVALID_ID if the IM was sent outside call context. </td></tr>
    <tr><td class="paramname">to</td><td>Destination URI. </td></tr>
    <tr><td class="paramname">body</td><td>Message body. </td></tr>
    <tr><td class="paramname">user_data</td><td>Arbitrary data that was specified when sending IM message. </td></tr>
    <tr><td class="paramname">status</td><td>Delivery status. </td></tr>
    <tr><td class="paramname">reason</td><td>Delivery status reason. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9878650a5c8517b7cbde93b46346597c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9878650a5c8517b7cbde93b46346597c">&#9670;&nbsp;</a></span>on_pager_status2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_pager_status2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *body, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="el" href="group__PJSIP__MSG__LINE.htm#gaf6d60351ee68ca0c87358db2e59b9376">pjsip_status_code</a> status, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *reason, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application about the delivery status of outgoing pager request.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Containts the ID of the call where the IM was sent, or PJSUA_INVALID_ID if the IM was sent outside call context. </td></tr>
    <tr><td class="paramname">to</td><td>Destination URI. </td></tr>
    <tr><td class="paramname">body</td><td>Message body. </td></tr>
    <tr><td class="paramname">user_data</td><td>Arbitrary data that was specified when sending IM message. </td></tr>
    <tr><td class="paramname">status</td><td>Delivery status. </td></tr>
    <tr><td class="paramname">reason</td><td>Delivery status reason. </td></tr>
    <tr><td class="paramname">tdata</td><td>The original MESSAGE request. </td></tr>
    <tr><td class="paramname">rdata</td><td>The incoming MESSAGE response, or NULL if the message transaction fails because of time out or transport error. </td></tr>
    <tr><td class="paramname">acc_id</td><td>Account ID from this the instant message was send. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1901db446fcfc2ae5415c734351ceed4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1901db446fcfc2ae5415c734351ceed4">&#9670;&nbsp;</a></span>on_typing</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_typing) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> is_typing)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application about typing indication.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Containts the ID of the call where the IM was sent, or PJSUA_INVALID_ID if the IM was sent outside call context. </td></tr>
    <tr><td class="paramname">from</td><td>URI of the sender. </td></tr>
    <tr><td class="paramname">to</td><td>URI of the destination message. </td></tr>
    <tr><td class="paramname">contact</td><td>The Contact URI of the sender, if present. </td></tr>
    <tr><td class="paramname">is_typing</td><td>Non-zero if peer is typing, or zero if peer has stopped typing a message. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6a399102eab6eec9b639486a1eb0ef25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a399102eab6eec9b639486a1eb0ef25">&#9670;&nbsp;</a></span>on_typing2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_typing2) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *from, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *to, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *contact, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> is_typing, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notify application about typing indication.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Containts the ID of the call where the IM was sent, or PJSUA_INVALID_ID if the IM was sent outside call context. </td></tr>
    <tr><td class="paramname">from</td><td>URI of the sender. </td></tr>
    <tr><td class="paramname">to</td><td>URI of the destination message. </td></tr>
    <tr><td class="paramname">contact</td><td>The Contact URI of the sender, if present. </td></tr>
    <tr><td class="paramname">is_typing</td><td>Non-zero if peer is typing, or zero if peer has stopped typing a message. </td></tr>
    <tr><td class="paramname">rdata</td><td>The received request. </td></tr>
    <tr><td class="paramname">acc_id</td><td>Account ID most suitable for this message. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3990babfa87f6bcb11d3bb266ef2bc5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3990babfa87f6bcb11d3bb266ef2bc5f">&#9670;&nbsp;</a></span>on_nat_detect</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_nat_detect) (const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjnath/docs/pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/structpj__stun__nat__detect__result.htm">pj_stun_nat_detect_result</a> *res)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Callback when the library has finished performing NAT type detection.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">res</td><td>NAT detection result. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af393a63d83f1f7378b3d9786a83bfabc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af393a63d83f1f7378b3d9786a83bfabc">&#9670;&nbsp;</a></span>on_call_redirected</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSIP__ENDPT__TARGET__URI.htm#gaa99c427ca4668e49f1c3f6e25b10516c">pjsip_redirect_op</a>(* pjsua_callback::on_call_redirected) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, const <a class="el" href="structpjsip__uri.htm">pjsip_uri</a> *target, const <a class="el" href="structpjsip__event.htm">pjsip_event</a> *e)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback is called when the call is about to resend the INVITE request to the specified target, following the previously received redirection response.</p>
<p>Application may accept the redirection to the specified target, reject this target only and make the session continue to try the next target in the list if such target exists, stop the whole redirection process altogether and cause the session to be disconnected, or defer the decision to ask for user confirmation.</p>
<p>This callback is optional. If this callback is not implemented, the default behavior is to NOT follow the redirection response.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call ID. </td></tr>
    <tr><td class="paramname">target</td><td>The current target to be tried. </td></tr>
    <tr><td class="paramname">e</td><td>The event that caused this callback to be called. This could be the receipt of 3xx response, or 4xx/5xx response received for the INVITE sent to subsequent targets, or NULL if this callback is called from within <a class="el" href="group__PJSUA__LIB__CALL.htm#gae8810b4641c9b293abe408dd324650d5">pjsua_call_process_redirect()</a> context.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Action to be performed for the target. Set this parameter to one of the value below:<ul>
<li>PJSIP_REDIRECT_ACCEPT: immediately accept the redirection. When set, the call will immediately resend INVITE request to the target.</li>
<li>PJSIP_REDIRECT_ACCEPT_REPLACE: immediately accept the redirection and replace the To header with the current target. When set, the call will immediately resend INVITE request to the target.</li>
<li>PJSIP_REDIRECT_REJECT: immediately reject this target. The call will continue retrying with next target if present, or disconnect the call if there is no more target to try.</li>
<li>PJSIP_REDIRECT_STOP: stop the whole redirection process and immediately disconnect the call. The <a class="el" href="structpjsua__callback.htm#a8029ac58404a39067691a1530a2b585a">on_call_state()</a> callback will be called with PJSIP_INV_STATE_DISCONNECTED state immediately after this callback returns.</li>
<li>PJSIP_REDIRECT_PENDING: set to this value if no decision can be made immediately (for example to request confirmation from user). Application then MUST call <a class="el" href="group__PJSUA__LIB__CALL.htm#gae8810b4641c9b293abe408dd324650d5">pjsua_call_process_redirect()</a> to either accept or reject the redirection upon getting user decision. </li>
</ul>
</dd></dl>

</div>
</div>
<a id="ac48200de19e530e41311616a9313e8fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac48200de19e530e41311616a9313e8fa">&#9670;&nbsp;</a></span>on_mwi_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_mwi_state) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="group__PJSIP__EVENT__NOT.htm#gabef75338a5839ec42984bdf37b54a093">pjsip_evsub</a> *evsub)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback is called when message waiting indication subscription state has changed. Application can then query the subscription state by calling <a class="el" href="group__PJSIP__EVENT__NOT.htm#gad692d7729993a1c34a790c7f20f2edf5">pjsip_evsub_get_state()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account ID. </td></tr>
    <tr><td class="paramname">evsub</td><td>The subscription instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8d7825b23e3473d22824f6f2e987f9aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d7825b23e3473d22824f6f2e987f9aa">&#9670;&nbsp;</a></span>on_mwi_info</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_mwi_info) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> acc_id, <a class="el" href="structpjsua__mwi__info.htm">pjsua_mwi_info</a> *mwi_info)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback is called when a NOTIFY request for message summary / message waiting indication is received.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">acc_id</td><td>The account ID. </td></tr>
    <tr><td class="paramname">mwi_info</td><td>Structure containing details of the event, including the received NOTIFY request in the <em>rdata</em> field. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae07e5c07136bfa0eb2922703d5d7ec5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae07e5c07136bfa0eb2922703d5d7ec5d">&#9670;&nbsp;</a></span>on_transport_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSIP__TRANSPORT.htm#ga12bd77cd803206d266cf8e0871f41ed2">pjsip_tp_state_callback</a> pjsua_callback::on_transport_state</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback is called when transport state is changed. See also <a class="el" href="group__PJSIP__TRANSPORT.htm#ga12bd77cd803206d266cf8e0871f41ed2">pjsip_tp_state_callback</a>. </p>

</div>
</div>
<a id="a6fc32c57bede54fe85e3a8625d9bbefa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fc32c57bede54fe85e3a8625d9bbefa">&#9670;&nbsp;</a></span>on_call_media_transport_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA__LIB__BASE.htm#gadab08ca8b5ec9bf462b56a1a73cc747d">pjsua_med_tp_state_cb</a> pjsua_callback::on_call_media_transport_state</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback is called when media transport state is changed. See also <a class="el" href="group__PJSUA__LIB__BASE.htm#gadab08ca8b5ec9bf462b56a1a73cc747d">pjsua_med_tp_state_cb</a>. </p>

</div>
</div>
<a id="a290f0031da6e57b44d00769e06ecc581"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a290f0031da6e57b44d00769e06ecc581">&#9670;&nbsp;</a></span>on_ice_transport_error</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_ice_transport_error) (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> index, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjnath/docs/pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga7e21cd8a6d334eb429d766bd03266f36">pj_ice_strans_op</a> op, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, void *param)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback is called to report error in ICE media transport. Currently it is used to report TURN Refresh error.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>Transport index. </td></tr>
    <tr><td class="paramname">op</td><td>Operation which trigger the failure. </td></tr>
    <tr><td class="paramname">status</td><td>Error status. </td></tr>
    <tr><td class="paramname">param</td><td>Additional info about the event. Currently this will always be set to NULL. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad118832e9107075f8897adae4cfa4d37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad118832e9107075f8897adae4cfa4d37">&#9670;&nbsp;</a></span>on_snd_dev_operation</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pjsua_callback::on_snd_dev_operation) (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> operation)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Callback when the sound device is about to be opened or closed. This callback will be called even when null sound device or no sound device is configured by the application (i.e. the <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga2e6cb631c6ca40d30973cc5ebeaba255">pjsua_set_null_snd_dev()</a> and <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga4b6ffc203b8799f08f072d0921777161">pjsua_set_no_snd_dev()</a> APIs). Application can use the API <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga588e687161fb9db8dff3921e98fb548d">pjsua_get_snd_dev()</a> to get the info about which sound device is going to be opened/closed.</p>
<p>This callback is mostly useful when the application wants to manage the sound device by itself (i.e. with <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga4b6ffc203b8799f08f072d0921777161">pjsua_set_no_snd_dev()</a>), to get notified when it should open or close the sound device.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">operation</td><td>The value will be set to 0 to signal that sound device is about to be closed, and 1 to be opened.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback must return PJ_SUCCESS at the moment. </dd></dl>

</div>
</div>
<a id="a9cec589ac35da940467b08bbeb4cd586"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cec589ac35da940467b08bbeb4cd586">&#9670;&nbsp;</a></span>on_call_media_event</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_call_media_event) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, unsigned med_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__event.htm">pjmedia_event</a> *event)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification about media events such as video notifications. This callback will most likely be called from media threads, thus application must not perform heavy processing in this callback. Especially, application must not destroy the call or media in this callback. If application needs to perform more complex tasks to handle the event, it should post the task to another thread.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>The call id. </td></tr>
    <tr><td class="paramname">med_idx</td><td>The media stream index. </td></tr>
    <tr><td class="paramname">event</td><td>The media event. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a133b313df30eb24cdcf3852d23e60ce2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a133b313df30eb24cdcf3852d23e60ce2">&#9670;&nbsp;</a></span>on_create_media_transport</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__transport.htm">pjmedia_transport</a>*(* pjsua_callback::on_create_media_transport) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, unsigned media_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__transport.htm">pjmedia_transport</a> *base_tp, unsigned <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#gae4737d316c3696dc34a85aa1c09dab99">flags</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback can be used by application to implement custom media transport adapter for the call, or to replace the media transport with something completely new altogether.</p>
<p>This callback is called when a new call is created. The library has created a media transport for the call, and it is provided as the <em>base_tp</em> argument of this callback. Upon returning, the callback must return an instance of media transport to be used by the call.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call ID </td></tr>
    <tr><td class="paramname">media_idx</td><td>The media index in the SDP for which this media transport will be used. </td></tr>
    <tr><td class="paramname">base_tp</td><td>The media transport which otherwise will be used by the call has this callback not been implemented. </td></tr>
    <tr><td class="paramname">flags</td><td>Bitmask from pjsua_create_media_transport_flag.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback must return an instance of media transport to be used by the call. </dd></dl>

</div>
</div>
<a id="a9361df2fc0565052d3536aa736158f44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9361df2fc0565052d3536aa736158f44">&#9670;&nbsp;</a></span>on_create_media_transport_srtp</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_create_media_transport_srtp) (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id, unsigned media_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__srtp__setting.htm">pjmedia_srtp_setting</a> *srtp_opt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Warning: deprecated and may be removed in future release. Application can set SRTP crypto settings (including keys) and keying methods via <a class="el" href="structpjsua__srtp__opt.htm">pjsua_srtp_opt</a> in <a class="el" href="structpjsua__config.htm">pjsua_config</a> and <a class="el" href="structpjsua__acc__config.htm">pjsua_acc_config</a>. See also ticket #2100.</p>
<p>This callback is called before SRTP media transport is created. Application can modify the SRTP setting <em>srtp_opt</em> to specify the cryptos &amp; keys and keying methods which are going to be used. Note that only some fields of <a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__srtp__setting.htm">pjmedia_srtp_setting</a> can be overriden from this callback, i.e: "crypto_count", "crypto", "keying_count", "keying", and "use" (only for initial INVITE), any modification in other fields will be ignored.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">call_id</td><td>Call ID </td></tr>
    <tr><td class="paramname">media_idx</td><td>The media index in the SDP for which this SRTP media transport will be used. </td></tr>
    <tr><td class="paramname">srtp_opt</td><td>The SRTP setting. Application can modify this. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1e9ca05e364e2b6aedc37a77d7924808"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e9ca05e364e2b6aedc37a77d7924808">&#9670;&nbsp;</a></span>on_acc_find_for_incoming</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_acc_find_for_incoming) (const <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a> *acc_id)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback can be used by application to override the account to be used to handle an incoming message. Initially, the account to be used will be calculated automatically by the library. This initial account will be used if application does not implement this callback, or application sets an invalid account upon returning from this callback.</p>
<p>Note that currently the incoming messages requiring account assignment are INVITE, MESSAGE, SUBSCRIBE, and unsolicited NOTIFY. This callback may be called before the callback of the SIP event itself, i.e: incoming call, pager, subscription, or unsolicited-event.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rdata</td><td>The incoming message. </td></tr>
    <tr><td class="paramname">acc_id</td><td>On input, initial account ID calculated automatically by the library. On output, the account ID prefered by application to handle the incoming message. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a396b9ab08b322165d5063ba9c09a9e7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a396b9ab08b322165d5063ba9c09a9e7c">&#9670;&nbsp;</a></span>on_stun_resolution_complete</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac203425443f7f9c853628eaf8d917682">pj_stun_resolve_cb</a> pjsua_callback::on_stun_resolution_complete</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calling <a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init()</a> will initiate an async process to resolve and contact each of the STUN server entries to find which is usable. This callback is called when the process is complete, and can be used by the application to start creating and registering accounts. This way, the accounts can avoid call setup delay caused by pending STUN resolution.</p>
<p>See also <a class="el" href="group__PJSUA__LIB__BASE.htm#gac203425443f7f9c853628eaf8d917682">pj_stun_resolve_cb</a>. </p>

</div>
</div>
<a id="a8547e9298df7bc0e6c208fcaa66a10f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8547e9298df7bc0e6c208fcaa66a10f7">&#9670;&nbsp;</a></span>on_ip_change_progress</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_ip_change_progress) (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga5e82d9c480c3dd362ccb00532a285c30">pjsua_ip_change_op</a> op, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, const <a class="el" href="unionpjsua__ip__change__op__info.htm">pjsua_ip_change_op_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calling <a class="el" href="group__PJSUA__LIB__BASE.htm#gabe33799c158c02c48868f01a6c7fbfa0">pjsua_handle_ip_change()</a> may involve different operation. This callback is called to report the progress of each enabled operation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">op</td><td>The operation. </td></tr>
    <tr><td class="paramname">status</td><td>The status of operation. </td></tr>
    <tr><td class="paramname">info</td><td>The info from the operation </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9acf2804b39adadb61582cf7c99c179a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9acf2804b39adadb61582cf7c99c179a">&#9670;&nbsp;</a></span>on_media_event</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsua_callback::on_media_event) (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjmedia/docs/pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structpjmedia__event.htm">pjmedia_event</a> *event)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification about media events such as video notifications. This callback will most likely be called from media threads, thus application must not perform heavy processing in this callback. If application needs to perform more complex tasks to handle the event, it should post the task to another thread.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>The media event. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>pjsua-lib/pjsua.h</li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
