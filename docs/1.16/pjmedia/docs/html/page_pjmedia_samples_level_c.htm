<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Samples: Reading from WAV File (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Samples: Reading from WAV File </h1>  </div>
</div>
<div class="contents">
<p>This is a very simple example to use the <a class="el" href="group__PJMEDIA__FILE__PLAY.htm">WAV File Player</a>, to directly read the samples from the file.</p>
<p>This file is pjsip-apps/src/samples/level.c</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: level.c 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00034"></a>00034 <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *desc = 
<a name="l00035"></a>00035  <span class="stringliteral">&quot; FILE:                                                                    \n&quot;</span>
<a name="l00036"></a>00036  <span class="stringliteral">&quot;  level.c                                                                 \n&quot;</span>
<a name="l00037"></a>00037  <span class="stringliteral">&quot;                                                                          \n&quot;</span>
<a name="l00038"></a>00038  <span class="stringliteral">&quot; PURPOSE:                                                                 \n&quot;</span>
<a name="l00039"></a>00039  <span class="stringliteral">&quot;  Read PCM WAV file and display the audio level the first 100 frames.     \n&quot;</span>
<a name="l00040"></a>00040  <span class="stringliteral">&quot;  Each frame is assumed to have 160 samples.                              \n&quot;</span>
<a name="l00041"></a>00041  <span class="stringliteral">&quot;                                                                          \n&quot;</span>
<a name="l00042"></a>00042  <span class="stringliteral">&quot; USAGE:                                                                   \n&quot;</span>
<a name="l00043"></a>00043  <span class="stringliteral">&quot;  level file.wav                                                          \n&quot;</span>
<a name="l00044"></a>00044  <span class="stringliteral">&quot;                                                                          \n&quot;</span>
<a name="l00045"></a>00045  <span class="stringliteral">&quot;  The WAV file SHOULD have a 16bit mono samples.                          &quot;</span>;
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="preprocessor">#include &lt;<a class="code" href="pjmedia_8h.htm" title="PJMEDIA main header file.">pjmedia.h</a>&gt;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &lt;pjlib.h&gt;</span>
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">/* For logging purpose. */</span>
<a name="l00053"></a>00053 <span class="preprocessor">#define THIS_FILE   &quot;level.c&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span>
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="comment">/* Util to display the error message for the specified error code  */</span>
<a name="l00057"></a>00057 <span class="keyword">static</span> <span class="keywordtype">int</span> app_perror( <span class="keyword">const</span> <span class="keywordtype">char</span> *sender, <span class="keyword">const</span> <span class="keywordtype">char</span> *title, 
<a name="l00058"></a>00058                        <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)
<a name="l00059"></a>00059 {
<a name="l00060"></a>00060     <span class="keywordtype">char</span> errmsg[PJ_ERR_MSG_SIZE];
<a name="l00061"></a>00061 
<a name="l00062"></a>00062     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>(sender);
<a name="l00063"></a>00063 
<a name="l00064"></a>00064     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__errno.htm#ga7d2616aded0d61924fb31f4fd6ee45c0">pj_strerror</a>(status, errmsg, <span class="keyword">sizeof</span>(errmsg));
<a name="l00065"></a>00065 
<a name="l00066"></a>00066     printf(<span class="stringliteral">&quot;%s: %s [code=%d]\n&quot;</span>, title, errmsg, status);
<a name="l00067"></a>00067     <span class="keywordflow">return</span> 1;
<a name="l00068"></a>00068 }
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 <span class="comment">/*</span>
<a name="l00072"></a>00072 <span class="comment"> * main()</span>
<a name="l00073"></a>00073 <span class="comment"> */</span>
<a name="l00074"></a>00074 <span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
<a name="l00075"></a>00075 {
<a name="l00076"></a>00076     <span class="keyword">enum</span> { NSAMPLES = 640, COUNT=100 };
<a name="l00077"></a>00077     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm">pj_caching_pool</a> cp;
<a name="l00078"></a>00078     <a class="code" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *med_endpt;
<a name="l00079"></a>00079     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool;
<a name="l00080"></a>00080     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *file_port;
<a name="l00081"></a>00081     <span class="keywordtype">int</span> i;
<a name="l00082"></a>00082     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 
<a name="l00085"></a>00085     <span class="comment">/* Verify cmd line arguments. */</span>
<a name="l00086"></a>00086     <span class="keywordflow">if</span> (argc != 2) {
<a name="l00087"></a>00087         puts(<span class="stringliteral">&quot;&quot;</span>);
<a name="l00088"></a>00088         puts(desc);
<a name="l00089"></a>00089         <span class="keywordflow">return</span> 1;
<a name="l00090"></a>00090     }
<a name="l00091"></a>00091 
<a name="l00092"></a>00092     <span class="comment">/* Must init PJLIB first: */</span>
<a name="l00093"></a>00093     status = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga069615152140fa2df009cebc8a36b769">pj_init</a>();
<a name="l00094"></a>00094     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00095"></a>00095 
<a name="l00096"></a>00096     <span class="comment">/* Must create a pool factory before we can allocate any memory. */</span>
<a name="l00097"></a>00097     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>(&amp;cp, &amp;<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL__FACTORY.htm#ga98cf758eafb888f318a8de7f396f47ca">pj_pool_factory_default_policy</a>, 0);
<a name="l00098"></a>00098 
<a name="l00099"></a>00099     <span class="comment">/* </span>
<a name="l00100"></a>00100 <span class="comment">     * Initialize media endpoint.</span>
<a name="l00101"></a>00101 <span class="comment">     * This will implicitly initialize PJMEDIA too.</span>
<a name="l00102"></a>00102 <span class="comment">     */</span>
<a name="l00103"></a>00103     status = <a class="code" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, NULL, 1, &amp;med_endpt);
<a name="l00104"></a>00104     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00105"></a>00105 
<a name="l00106"></a>00106     <span class="comment">/* Create memory pool for our file player */</span>
<a name="l00107"></a>00107     pool = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>( &amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>,     <span class="comment">/* pool factory         */</span>
<a name="l00108"></a>00108                            <span class="stringliteral">&quot;wav&quot;</span>,           <span class="comment">/* pool name.           */</span>
<a name="l00109"></a>00109                            4000,            <span class="comment">/* init size            */</span>
<a name="l00110"></a>00110                            4000,            <span class="comment">/* increment size       */</span>
<a name="l00111"></a>00111                            NULL             <span class="comment">/* callback on error    */</span>
<a name="l00112"></a>00112                            );
<a name="l00113"></a>00113 
<a name="l00114"></a>00114     <span class="comment">/* Create file media port from the WAV file */</span>
<a name="l00115"></a>00115     status = <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga987129692be57281a40c836e8749313f">pjmedia_wav_player_port_create</a>(  pool,     <span class="comment">/* memory pool      */</span>
<a name="l00116"></a>00116                                               argv[1],  <span class="comment">/* file to play     */</span>
<a name="l00117"></a>00117                                               0,        <span class="comment">/* use default ptime*/</span>
<a name="l00118"></a>00118                                               0,        <span class="comment">/* flags            */</span>
<a name="l00119"></a>00119                                               0,        <span class="comment">/* default buffer   */</span>
<a name="l00120"></a>00120                                               &amp;file_port<span class="comment">/* returned port    */</span>
<a name="l00121"></a>00121                                               );
<a name="l00122"></a>00122     <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00123"></a>00123         app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to use WAV file&quot;</span>, status);
<a name="l00124"></a>00124         <span class="keywordflow">return</span> 1;
<a name="l00125"></a>00125     }
<a name="l00126"></a>00126 
<a name="l00127"></a>00127     <span class="keywordflow">if</span> (file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> &gt; NSAMPLES) {
<a name="l00128"></a>00128         app_perror(THIS_FILE, <span class="stringliteral">&quot;WAV clock rate is too big&quot;</span>, PJ_EINVAL);
<a name="l00129"></a>00129         <span class="keywordflow">return</span> 1;
<a name="l00130"></a>00130     }
<a name="l00131"></a>00131 
<a name="l00132"></a>00132     puts(<span class="stringliteral">&quot;Time\tPCMU\tLinear&quot;</span>);
<a name="l00133"></a>00133     puts(<span class="stringliteral">&quot;------------------------&quot;</span>);
<a name="l00134"></a>00134 
<a name="l00135"></a>00135     <span class="keywordflow">for</span> (i=0; i&lt;COUNT; ++i) {
<a name="l00136"></a>00136         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1bc332ac2d70cd1a23adef144571790f">pj_int16_t</a> framebuf[NSAMPLES];
<a name="l00137"></a>00137         <a class="code" href="structpjmedia__frame.htm">pjmedia_frame</a> frm;
<a name="l00138"></a>00138         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gac65eeb4771a6fc34225302fee5bcb7e2">pj_int32_t</a> level32;
<a name="l00139"></a>00139         <span class="keywordtype">unsigned</span> ms;
<a name="l00140"></a>00140         <span class="keywordtype">int</span> level;
<a name="l00141"></a>00141 
<a name="l00142"></a>00142         frm.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = framebuf;
<a name="l00143"></a>00143         frm.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = <span class="keyword">sizeof</span>(framebuf);
<a name="l00144"></a>00144         
<a name="l00145"></a>00145         <a class="code" href="group__PJMEDIA__PORT.htm#gabb664bcbd6c07ac3b0b4793a68c9a757">pjmedia_port_get_frame</a>(file_port, &amp;frm);
<a name="l00146"></a>00146 
<a name="l00147"></a>00147         level32 = <a class="code" href="group__PJMEDIA__SILENCEDET.htm#gaf2f16dcbcce6f9ad437f358e8a42ef02">pjmedia_calc_avg_signal</a>(framebuf, 
<a name="l00148"></a>00148                                           file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a>);
<a name="l00149"></a>00149         level = pjmedia_linear2ulaw(level32) ^ 0xFF;
<a name="l00150"></a>00150 
<a name="l00151"></a>00151         ms = i * 1000 * file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> /
<a name="l00152"></a>00152                         file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a>;
<a name="l00153"></a>00153         printf(<span class="stringliteral">&quot;%03d.%03d\t%7d\t%7d\n&quot;</span>, 
<a name="l00154"></a>00154                 ms/1000, ms%1000, level, level32);
<a name="l00155"></a>00155     }
<a name="l00156"></a>00156     puts(<span class="stringliteral">&quot;&quot;</span>);
<a name="l00157"></a>00157     
<a name="l00158"></a>00158 
<a name="l00159"></a>00159     <span class="comment">/* Destroy file port */</span>
<a name="l00160"></a>00160     status = <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>( file_port );
<a name="l00161"></a>00161     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00162"></a>00162 
<a name="l00163"></a>00163     <span class="comment">/* Release application pool */</span>
<a name="l00164"></a>00164     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release</a>( pool );
<a name="l00165"></a>00165 
<a name="l00166"></a>00166     <span class="comment">/* Destroy media endpoint. */</span>
<a name="l00167"></a>00167     <a class="code" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy</a>( med_endpt );
<a name="l00168"></a>00168 
<a name="l00169"></a>00169     <span class="comment">/* Destroy pool factory */</span>
<a name="l00170"></a>00170     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#ga4c912e7d9e08dae33c2fecea9f1949bc">pj_caching_pool_destroy</a>( &amp;cp );
<a name="l00171"></a>00171 
<a name="l00172"></a>00172     <span class="comment">/* Shutdown PJLIB */</span>
<a name="l00173"></a>00173     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gad42209dcf11f957ed9f1790e30f519cd">pj_shutdown</a>();
<a name="l00174"></a>00174 
<a name="l00175"></a>00175 
<a name="l00176"></a>00176     <span class="comment">/* Done. */</span>
<a name="l00177"></a>00177     <span class="keywordflow">return</span> 0;
<a name="l00178"></a>00178 }
<a name="l00179"></a>00179 
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
