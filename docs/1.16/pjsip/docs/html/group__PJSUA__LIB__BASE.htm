<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJSIP Reference: PJSUA-API Basic API (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>

<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>PJSUA-API Basic API<br/>
<small>
[<a class="el" href="group__PJSUA__LIB.htm">PJSUA API - High Level Softphone API</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>Basic application creation/initialization, logging configuration, etc.  
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__mwi__info.htm">pjsua_mwi_info</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__reg__info.htm">pjsua_reg_info</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__callback.htm">pjsua_callback</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__config.htm">pjsua_config</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__msg__data.htm">pjsua_msg_data</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__resolve__result.htm">pj_stun_resolve_result</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac41e2f15f0fdc3174bbfbe5da3be28fb">PJSUA_INVALID_ID</a>&nbsp;&nbsp;&nbsp;(-1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga9e004584938999b0c094e805a13002fe">PJSUA_ACC_MAX_PROXIES</a>&nbsp;&nbsp;&nbsp;8</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga4bcd5546337e1b90d3f5c0c01a1a5d45">PJSUA_DEFAULT_USE_SRTP</a>&nbsp;&nbsp;&nbsp;<a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/group__PJMEDIA__TRANSPORT__SRTP.htm#gga52f4c561c77ebd7a992feefc77624aceaf19b573266ffd49695cd8a4ac8384b09">PJMEDIA_SRTP_DISABLED</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga6f0d4739693edee4ab05b6c1f30d99af">PJSUA_DEFAULT_SRTP_SECURE_SIGNALING</a>&nbsp;&nbsp;&nbsp;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga70119f7a4c72abf354039283ecac7e83">PJSUA_ADD_ICE_TAGS</a>&nbsp;&nbsp;&nbsp;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gae98e85eb09594bd57357ab758b7599ae">PJSUA_ACQUIRE_CALL_TIMEOUT</a>&nbsp;&nbsp;&nbsp;2000</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad1f797eedcbfafd4117b6f5443a43de2">pjsip_cred_dup</a>&nbsp;&nbsp;&nbsp;pjsip_cred_info_dup</td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac1ee0323b0cc53a373158212c0a30eb2">pj_stun_resolve_cb</a> )(const <a class="el" href="structpj__stun__resolve__result.htm">pj_stun_resolve_result</a> *result)</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac300b9e3b2eb52a993d59217595f7be4">pjsua_create_media_transport_flag</a> { <a class="el" href="group__PJSUA__LIB__BASE.htm#ggac300b9e3b2eb52a993d59217595f7be4a33025ff0fb76690e70b7fc3cb3641ceb">PJSUA_MED_TP_CLOSE_MEMBER</a> =  1
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf352829cc383112c4ce4da58a4d0b37e">pjsua_sip_timer_use</a> { <a class="el" href="group__PJSUA__LIB__BASE.htm#ggaf352829cc383112c4ce4da58a4d0b37ea09c4a257587c997090586f21b74e247f">PJSUA_SIP_TIMER_INACTIVE</a>, 
<a class="el" href="group__PJSUA__LIB__BASE.htm#ggaf352829cc383112c4ce4da58a4d0b37ea59ad155a340cbf54e8a18b605160de04">PJSUA_SIP_TIMER_OPTIONAL</a>, 
<a class="el" href="group__PJSUA__LIB__BASE.htm#ggaf352829cc383112c4ce4da58a4d0b37ea495ce8889f33ebd93e57957b3d1ca6e0">PJSUA_SIP_TIMER_REQUIRED</a>, 
<a class="el" href="group__PJSUA__LIB__BASE.htm#ggaf352829cc383112c4ce4da58a4d0b37ea77a6f622aa35857b56cc9b8099c5b0a3">PJSUA_SIP_TIMER_ALWAYS</a>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga3f9fb347a70f9c51049836fd606883af">pjsua_100rel_use</a> { <a class="el" href="group__PJSUA__LIB__BASE.htm#gga3f9fb347a70f9c51049836fd606883afa16df0d21b150defc3be5dc9fd11e7567">PJSUA_100REL_NOT_USED</a>, 
<a class="el" href="group__PJSUA__LIB__BASE.htm#gga3f9fb347a70f9c51049836fd606883afa3430f88686b97c4722c64e99a0fd7ca0">PJSUA_100REL_MANDATORY</a>, 
<a class="el" href="group__PJSUA__LIB__BASE.htm#gga3f9fb347a70f9c51049836fd606883afa75a2811c09556b635be67f0920a85898">PJSUA_100REL_OPTIONAL</a>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gafbe98339390b11b2e248d9420a2ed499">pjsua_destroy_flag</a> { <a class="el" href="group__PJSUA__LIB__BASE.htm#ggafbe98339390b11b2e248d9420a2ed499a6b2eb1481899082e022534530bee9db2">PJSUA_DESTROY_NO_RX_MSG</a> =  1, 
<a class="el" href="group__PJSUA__LIB__BASE.htm#ggafbe98339390b11b2e248d9420a2ed499a299b2522628f7e9d6a9f94124eadcc28">PJSUA_DESTROY_NO_TX_MSG</a> =  2, 
<a class="el" href="group__PJSUA__LIB__BASE.htm#ggafbe98339390b11b2e248d9420a2ed499af884d2e4c0de1c3711595c89a212a9b3">PJSUA_DESTROY_NO_NETWORK</a>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga9c0ad2b8e775b5ea692c8db4b399846b">pjsua_logging_config_default</a> (<a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *cfg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaad41d40cd8cb3462bdd9f5a331c476c9">pjsua_logging_config_dup</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *dst, const <a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *src)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga473e1af0ea5c99c4412e5b0f7ff73c09">pjsua_config_default</a> (<a class="el" href="structpjsua__config.htm">pjsua_config</a> *cfg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga918c1b4f5cdf1ec607d0fdb9538c16a8">pjsua_config_dup</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjsua__config.htm">pjsua_config</a> *dst, const <a class="el" href="structpjsua__config.htm">pjsua_config</a> *src)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac5d917f5344530d8eb3442450ddccd2d">pjsua_msg_data_init</a> (<a class="el" href="structpjsua__msg__data.htm">pjsua_msg_data</a> *msg_data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga2bb341e9b189b6716d146519f84e0d72">pjsua_create</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init</a> (const <a class="el" href="structpjsua__config.htm">pjsua_config</a> *ua_cfg, const <a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *log_cfg, const <a class="el" href="structpjsua__media__config.htm">pjsua_media_config</a> *media_cfg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga82f9b09d515c56288a2ad11f4fbdae3f">pjsua_start</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga9eb04bbf136ed8d2f528db0a739482db">pjsua_destroy</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga071d2b52e7455f80508afea16cbb7af1">pjsua_destroy2</a> (unsigned <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#gae4737d316c3696dc34a85aa1c09dab99">flags</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga9353166bfa640b62b3f33f752e07dda6">pjsua_handle_events</a> (unsigned msec_timeout)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gab6fda3eb1ff0817460db155ad91fcf60">pjsua_pool_create</a> (const char *name, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> init_size, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> increment)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gab170aa6d3fe1195b7ed21b6afded75e1">pjsua_reconfigure_logging</a> (const <a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad5963734b4bf5ca337d0f70a9861f3d4">pjsua_get_pjsip_endpt</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga76539759eb013ca275c7092df5c3d060">pjsua_get_pjmedia_endpt</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga287942c06e12a470a567bccc090a36e9">pjsua_get_pool_factory</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga486165069204c0d47a565d714638d5bd">pjsua_detect_nat_type</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac7fa60c2699aebe43e8b20aa68a7042f">pjsua_get_nat_type</a> (<a class="elRef" doxygen="pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a> *type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga28de9872f90f7ef1dc4f000066f8bd6d">pjsua_resolve_stun_servers</a> (unsigned count, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> srv[], <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> wait, void *token, <a class="el" href="group__PJSUA__LIB__BASE.htm#gac1ee0323b0cc53a373158212c0a30eb2">pj_stun_resolve_cb</a> cb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga45e753541e4ec870e60d41b49c008ff4">pjsua_cancel_stun_resolution</a> (void *token, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> notify_cb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad6f3f10da98b76dc9d4fde50d923615f">pjsua_verify_sip_url</a> (const char *url)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga69049800d83c9f4518af6bf15ddee62a">pjsua_verify_url</a> (const char *url)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga4b3f7529ece820df563c4b1a4f4a649b">pjsua_schedule_timer</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *entry, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *delay)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#gab3a4cecd850753caf221673319c2f38c">pjsua_cancel_timer</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *entry)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga3a697ba03ae9cd18df552143b770f957">pjsua_perror</a> (const char *sender, const char *title, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga8e4a54271a326cad73969a6fe6ad7548">pjsua_dump</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> detail)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>The base PJSUA API controls PJSUA creation, initialization, and startup, and also provides various auxiliary functions.</p>
<h2><a class="anchor" id="using_pjsua_lib"></a>
Using PJSUA Library</h2>
<h3><a class="anchor" id="creating_pjsua_lib"></a>
Creating PJSUA</h3>
<p>Before anything else, application must create PJSUA by calling <a class="el" href="group__PJSUA__LIB__BASE.htm#ga2bb341e9b189b6716d146519f84e0d72">pjsua_create()</a>. This, among other things, will initialize PJLIB, which is crucial before any PJLIB functions can be called, PJLIB-UTIL, and create a SIP endpoint.</p>
<p>After this function is called, application can create a memory pool (with <a class="el" href="group__PJSUA__LIB__BASE.htm#gab6fda3eb1ff0817460db155ad91fcf60">pjsua_pool_create()</a>) and read configurations from command line or file to build the settings to initialize PJSUA below.</p>
<h3><a class="anchor" id="init_pjsua_lib"></a>
Initializing PJSUA</h3>
<p>After PJSUA is created, application can initialize PJSUA by calling <a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init()</a>. This function takes several optional configuration settings in the argument, if application wants to set them.</p>
<h4><a class="anchor" id="init_pjsua_lib_c_cpp"></a>
PJSUA-LIB Initialization (in C)</h4>
<p>Sample code to initialize PJSUA in C code: </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor"> #include &lt;pjsua-lib/pjsua.h&gt;</span>

<span class="preprocessor"> #define THIS_FILE  __FILE__</span>
<span class="preprocessor"></span>
 <span class="keyword">static</span> <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> app_init(<span class="keywordtype">void</span>)
 {
    <a class="code" href="structpjsua__config.htm">pjsua_config</a>         ua_cfg;
    <a class="code" href="structpjsua__logging__config.htm">pjsua_logging_config</a> log_cfg;
    <a class="code" href="structpjsua__media__config.htm">pjsua_media_config</a>   media_cfg;
    <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;

    <span class="comment">// Must create pjsua before anything else!</span>
    status = <a class="code" href="group__PJSUA__LIB__BASE.htm#ga2bb341e9b189b6716d146519f84e0d72">pjsua_create</a>();
    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
        <a class="code" href="group__PJSUA__LIB__BASE.htm#ga3a697ba03ae9cd18df552143b770f957">pjsua_perror</a>(THIS_FILE, <span class="stringliteral">&quot;Error initializing pjsua&quot;</span>, status);
        <span class="keywordflow">return</span> status;
    }

    <span class="comment">// Initialize configs with default settings.</span>
    <a class="code" href="group__PJSUA__LIB__BASE.htm#ga473e1af0ea5c99c4412e5b0f7ff73c09">pjsua_config_default</a>(&amp;ua_cfg);
    <a class="code" href="group__PJSUA__LIB__BASE.htm#ga9c0ad2b8e775b5ea692c8db4b399846b">pjsua_logging_config_default</a>(&amp;log_cfg);
    <a class="code" href="group__PJSUA__LIB__MEDIA.htm#ga6e52551f2fd68d2d2c8aa1e233579670">pjsua_media_config_default</a>(&amp;media_cfg);

    <span class="comment">// At the very least, application would want to override</span>
    <span class="comment">// the call callbacks in pjsua_config:</span>
    ua_cfg.<a class="code" href="structpjsua__config.htm#a6d1dc16d2a378d2cea6bd6e9a3aa64c5">cb</a>.<a class="code" href="structpjsua__callback.htm#a402dc4b89c409507fa69b54494efef10">on_incoming_call</a> = ...
    ua_cfg.<a class="code" href="structpjsua__config.htm#a6d1dc16d2a378d2cea6bd6e9a3aa64c5">cb</a>.<a class="code" href="structpjsua__callback.htm#a06e6135aeaa81b32fdc66fa603a0546c">on_call_state</a> = ..
    ...

    <span class="comment">// Customize other settings (or initialize them from application specific</span>
    <span class="comment">// configuration file):</span>
    ...

    <span class="comment">// Initialize pjsua</span>
    status = <a class="code" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init</a>(&amp;ua_cfg, &amp;log_cfg, &amp;media_cfg);
    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
          <a class="code" href="group__PJSUA__LIB__BASE.htm#ga3a697ba03ae9cd18df552143b770f957">pjsua_perror</a>(THIS_FILE, <span class="stringliteral">&quot;Error initializing pjsua&quot;</span>, status);
          <span class="keywordflow">return</span> status;
    }
    .
    ...
 }
</pre></div><h3><a class="anchor" id="other_init_pjsua_lib"></a>
Other Initialization</h3>
<p>After PJSUA is initialized with <a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init()</a>, application will normally need/want to perform the following tasks:</p>
<ul>
<li>create SIP transport with <a class="el" href="group__PJSUA__LIB__TRANSPORT.htm#ga1c077d205f7df9fae39a179b2fe47533">pjsua_transport_create()</a>. Application would to call <a class="el" href="group__PJSUA__LIB__TRANSPORT.htm#ga1c077d205f7df9fae39a179b2fe47533">pjsua_transport_create()</a> for each transport types that it wants to support (for example, UDP, TCP, and TLS). Please see <a class="el" href="group__PJSUA__LIB__TRANSPORT.htm">PJSUA-API Signaling Transport</a> section for more info.</li>
<li>create one or more SIP accounts with <a class="el" href="group__PJSUA__LIB__ACC.htm#gad6e01e4e7ac7c8b1d9f629a6189ca2b2">pjsua_acc_add()</a> or <a class="el" href="group__PJSUA__LIB__ACC.htm#ga5133596b711a8df6f40d0fbdb971bcfe">pjsua_acc_add_local()</a>. The SIP account is used for registering with the SIP server, if any. Please see <a class="el" href="group__PJSUA__LIB__ACC.htm">PJSUA-API Accounts Management</a> for more info.</li>
<li>add one or more buddies with <a class="el" href="group__PJSUA__LIB__BUDDY.htm#gad1b82adc1e1cfe921a9dae1204b73388">pjsua_buddy_add()</a>. Please see <a class="el" href="group__PJSUA__LIB__BUDDY.htm">PJSUA-API Buddy, Presence, and Instant Messaging</a> section for more info.</li>
<li>optionally configure the sound device, codec settings, and other media settings. Please see <a class="el" href="group__PJSUA__LIB__MEDIA.htm">PJSUA-API Media Manipulation</a> for more info.</li>
</ul>
<h3><a class="anchor" id="starting_pjsua_lib"></a>
Starting PJSUA</h3>
<p>After all initializations have been done, application must call <a class="el" href="group__PJSUA__LIB__BASE.htm#ga82f9b09d515c56288a2ad11f4fbdae3f">pjsua_start()</a> to start PJSUA. This function will check that all settings have been properly configured, and apply default settings when they haven't, or report error status when it is unable to recover from missing settings.</p>
<p>Most settings can be changed during run-time. For example, application may add, modify, or delete accounts, buddies, or change media settings during run-time.</p>
<h4><a class="anchor" id="starting_pjsua_lib_c"></a>
C Example for Starting PJSUA</h4>
<p>Sample code: </p>
<div class="fragment"><pre class="fragment"> <span class="keyword">static</span> <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> app_run(<span class="keywordtype">void</span>)
 {
    <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;

    <span class="comment">// Start pjsua</span>
    status = <a class="code" href="group__PJSUA__LIB__BASE.htm#ga82f9b09d515c56288a2ad11f4fbdae3f">pjsua_start</a>();
    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
        <a class="code" href="group__PJSUA__LIB__BASE.htm#ga9eb04bbf136ed8d2f528db0a739482db">pjsua_destroy</a>();
        <a class="code" href="group__PJSUA__LIB__BASE.htm#ga3a697ba03ae9cd18df552143b770f957">pjsua_perror</a>(THIS_FILE, <span class="stringliteral">&quot;Error starting pjsua&quot;</span>, status);
        <span class="keywordflow">return</span> status;
    }

    <span class="comment">// Run application loop</span>
    <span class="keywordflow">while</span> (1) {
        <span class="keywordtype">char</span> choice[10];
        
        printf(<span class="stringliteral">&quot;Select menu: &quot;</span>);
        fgets(choice, <span class="keyword">sizeof</span>(choice), stdin);
        ...
    }
 }
</pre></div> <hr/><h2>Define Documentation</h2>
<a class="anchor" id="gac41e2f15f0fdc3174bbfbe5da3be28fb"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::PJSUA_INVALID_ID" ref="gac41e2f15f0fdc3174bbfbe5da3be28fb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_INVALID_ID&nbsp;&nbsp;&nbsp;(-1)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Constant to identify invalid ID for all sorts of IDs. </p>

</div>
</div>
<a class="anchor" id="ga9e004584938999b0c094e805a13002fe"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::PJSUA_ACC_MAX_PROXIES" ref="ga9e004584938999b0c094e805a13002fe" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_ACC_MAX_PROXIES&nbsp;&nbsp;&nbsp;8</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Maximum proxies in account. </p>

</div>
</div>
<a class="anchor" id="ga4bcd5546337e1b90d3f5c0c01a1a5d45"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::PJSUA_DEFAULT_USE_SRTP" ref="ga4bcd5546337e1b90d3f5c0c01a1a5d45" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_DEFAULT_USE_SRTP&nbsp;&nbsp;&nbsp;<a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/group__PJMEDIA__TRANSPORT__SRTP.htm#gga52f4c561c77ebd7a992feefc77624aceaf19b573266ffd49695cd8a4ac8384b09">PJMEDIA_SRTP_DISABLED</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Default value of SRTP mode usage. Valid values are PJMEDIA_SRTP_DISABLED, PJMEDIA_SRTP_OPTIONAL, and PJMEDIA_SRTP_MANDATORY. </p>

</div>
</div>
<a class="anchor" id="ga6f0d4739693edee4ab05b6c1f30d99af"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::PJSUA_DEFAULT_SRTP_SECURE_SIGNALING" ref="ga6f0d4739693edee4ab05b6c1f30d99af" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_DEFAULT_SRTP_SECURE_SIGNALING&nbsp;&nbsp;&nbsp;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Default value of secure signaling requirement for SRTP. Valid values are: 0: SRTP does not require secure signaling 1: SRTP requires secure transport such as TLS 2: SRTP requires secure end-to-end transport (SIPS) </p>

</div>
</div>
<a class="anchor" id="ga70119f7a4c72abf354039283ecac7e83"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::PJSUA_ADD_ICE_TAGS" ref="ga70119f7a4c72abf354039283ecac7e83" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_ADD_ICE_TAGS&nbsp;&nbsp;&nbsp;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Controls whether PJSUA-LIB should add ICE media feature tag parameter (the ";+sip.ice" parameter) to Contact header if ICE is enabled in the config.</p>
<p>Default: 1 </p>

</div>
</div>
<a class="anchor" id="gae98e85eb09594bd57357ab758b7599ae"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::PJSUA_ACQUIRE_CALL_TIMEOUT" ref="gae98e85eb09594bd57357ab758b7599ae" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_ACQUIRE_CALL_TIMEOUT&nbsp;&nbsp;&nbsp;2000</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Timeout value used to acquire mutex lock on a particular call.</p>
<p>Default: 2000 ms </p>

</div>
</div>
<a class="anchor" id="gad1f797eedcbfafd4117b6f5443a43de2"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsip_cred_dup" ref="gad1f797eedcbfafd4117b6f5443a43de2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define pjsip_cred_dup&nbsp;&nbsp;&nbsp;pjsip_cred_info_dup</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The implementation has been moved to sip_auth.h </p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gad4eb99a78c98ddbd83aecf7e933fc684"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_call_id" ref="gad4eb99a78c98ddbd83aecf7e933fc684" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> <a class="el" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Call identification </p>

</div>
</div>
<a class="anchor" id="ga01a78e17d7787f7e0ea5efd240f3e427"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_acc_id" ref="ga01a78e17d7787f7e0ea5efd240f3e427" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> <a class="el" href="group__PJSUA__LIB__BASE.htm#ga01a78e17d7787f7e0ea5efd240f3e427">pjsua_acc_id</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Account identification </p>

</div>
</div>
<a class="anchor" id="ga852998f2b5a6f0ba5fa9da27dfd3eb84"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_buddy_id" ref="ga852998f2b5a6f0ba5fa9da27dfd3eb84" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> <a class="el" href="group__PJSUA__LIB__BASE.htm#ga852998f2b5a6f0ba5fa9da27dfd3eb84">pjsua_buddy_id</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Buddy identification </p>

</div>
</div>
<a class="anchor" id="ga266a56483961431df7a5ebae457b9f3f"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_player_id" ref="ga266a56483961431df7a5ebae457b9f3f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> <a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>File player identification </p>

</div>
</div>
<a class="anchor" id="gad050f73ecac9a0ebbbcfc029ae483118"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_recorder_id" ref="gad050f73ecac9a0ebbbcfc029ae483118" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> <a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>File recorder identification </p>

</div>
</div>
<a class="anchor" id="gaf5d44947e4e62dc31dfde88884534385"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_conf_port_id" ref="gaf5d44947e4e62dc31dfde88884534385" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> <a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Conference port identification </p>

</div>
</div>
<a class="anchor" id="gac1ee0323b0cc53a373158212c0a30eb2"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pj_stun_resolve_cb" ref="gac1ee0323b0cc53a373158212c0a30eb2" args=")(const pj_stun_resolve_result *result)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* <a class="el" href="group__PJSUA__LIB__BASE.htm#gac1ee0323b0cc53a373158212c0a30eb2">pj_stun_resolve_cb</a>)(const <a class="el" href="structpj__stun__resolve__result.htm">pj_stun_resolve_result</a> *result)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Typedef of callback to be registered to <a class="el" href="group__PJSUA__LIB__BASE.htm#ga28de9872f90f7ef1dc4f000066f8bd6d">pjsua_resolve_stun_servers()</a>. </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="gac300b9e3b2eb52a993d59217595f7be4"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_create_media_transport_flag" ref="gac300b9e3b2eb52a993d59217595f7be4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSUA__LIB__BASE.htm#gac300b9e3b2eb52a993d59217595f7be4">pjsua_create_media_transport_flag</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This enumeration specifies the options for custom media transport creation. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggac300b9e3b2eb52a993d59217595f7be4a33025ff0fb76690e70b7fc3cb3641ceb"></a><!-- doxytag: member="PJSUA_MED_TP_CLOSE_MEMBER" ref="ggac300b9e3b2eb52a993d59217595f7be4a33025ff0fb76690e70b7fc3cb3641ceb" args="" -->PJSUA_MED_TP_CLOSE_MEMBER</em>&nbsp;</td><td>
<p>This flag indicates that the media transport must also close its "member" or "child" transport when <a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/group__PJMEDIA__TRANSPORT.htm#ga0114fa7e20cb17c645701b2dbda96452">pjmedia_transport_close()</a> is called. If this flag is not specified, then the media transport must not call <a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/group__PJMEDIA__TRANSPORT.htm#ga0114fa7e20cb17c645701b2dbda96452">pjmedia_transport_close()</a> of its member transport. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf352829cc383112c4ce4da58a4d0b37e"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_sip_timer_use" ref="gaf352829cc383112c4ce4da58a4d0b37e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSUA__LIB__BASE.htm#gaf352829cc383112c4ce4da58a4d0b37e">pjsua_sip_timer_use</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This enumeration specifies the usage of SIP Session Timers extension. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggaf352829cc383112c4ce4da58a4d0b37ea09c4a257587c997090586f21b74e247f"></a><!-- doxytag: member="PJSUA_SIP_TIMER_INACTIVE" ref="ggaf352829cc383112c4ce4da58a4d0b37ea09c4a257587c997090586f21b74e247f" args="" -->PJSUA_SIP_TIMER_INACTIVE</em>&nbsp;</td><td>
<p>When this flag is specified, Session Timers will not be used in any session, except it is explicitly required in the remote request. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaf352829cc383112c4ce4da58a4d0b37ea59ad155a340cbf54e8a18b605160de04"></a><!-- doxytag: member="PJSUA_SIP_TIMER_OPTIONAL" ref="ggaf352829cc383112c4ce4da58a4d0b37ea59ad155a340cbf54e8a18b605160de04" args="" -->PJSUA_SIP_TIMER_OPTIONAL</em>&nbsp;</td><td>
<p>When this flag is specified, Session Timers will be used in all sessions whenever remote supports and uses it. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaf352829cc383112c4ce4da58a4d0b37ea495ce8889f33ebd93e57957b3d1ca6e0"></a><!-- doxytag: member="PJSUA_SIP_TIMER_REQUIRED" ref="ggaf352829cc383112c4ce4da58a4d0b37ea495ce8889f33ebd93e57957b3d1ca6e0" args="" -->PJSUA_SIP_TIMER_REQUIRED</em>&nbsp;</td><td>
<p>When this flag is specified, Session Timers support will be a requirement for the remote to be able to establish a session. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaf352829cc383112c4ce4da58a4d0b37ea77a6f622aa35857b56cc9b8099c5b0a3"></a><!-- doxytag: member="PJSUA_SIP_TIMER_ALWAYS" ref="ggaf352829cc383112c4ce4da58a4d0b37ea77a6f622aa35857b56cc9b8099c5b0a3" args="" -->PJSUA_SIP_TIMER_ALWAYS</em>&nbsp;</td><td>
<p>When this flag is specified, Session Timers will always be used in all sessions, regardless whether remote supports/uses it or not. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3f9fb347a70f9c51049836fd606883af"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_100rel_use" ref="ga3f9fb347a70f9c51049836fd606883af" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSUA__LIB__BASE.htm#ga3f9fb347a70f9c51049836fd606883af">pjsua_100rel_use</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This constants controls the use of 100rel extension. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga3f9fb347a70f9c51049836fd606883afa16df0d21b150defc3be5dc9fd11e7567"></a><!-- doxytag: member="PJSUA_100REL_NOT_USED" ref="gga3f9fb347a70f9c51049836fd606883afa16df0d21b150defc3be5dc9fd11e7567" args="" -->PJSUA_100REL_NOT_USED</em>&nbsp;</td><td>
<p>Not used. For UAC, support for 100rel will be indicated in Supported header so that peer can opt to use it if it wants to. As UAS, this option will NOT cause 100rel to be used even if UAC indicates that it supports this feature. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3f9fb347a70f9c51049836fd606883afa3430f88686b97c4722c64e99a0fd7ca0"></a><!-- doxytag: member="PJSUA_100REL_MANDATORY" ref="gga3f9fb347a70f9c51049836fd606883afa3430f88686b97c4722c64e99a0fd7ca0" args="" -->PJSUA_100REL_MANDATORY</em>&nbsp;</td><td>
<p>Mandatory. UAC will place 100rel in Require header, and UAS will reject incoming calls unless it has 100rel in Supported header. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3f9fb347a70f9c51049836fd606883afa75a2811c09556b635be67f0920a85898"></a><!-- doxytag: member="PJSUA_100REL_OPTIONAL" ref="gga3f9fb347a70f9c51049836fd606883afa75a2811c09556b635be67f0920a85898" args="" -->PJSUA_100REL_OPTIONAL</em>&nbsp;</td><td>
<p>Optional. Similar to PJSUA_100REL_NOT_USED, except that as UAS, this option will cause 100rel to be used if UAC indicates that it supports it. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="gafbe98339390b11b2e248d9420a2ed499"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_destroy_flag" ref="gafbe98339390b11b2e248d9420a2ed499" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSUA__LIB__BASE.htm#gafbe98339390b11b2e248d9420a2ed499">pjsua_destroy_flag</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Flags to be given to <a class="el" href="group__PJSUA__LIB__BASE.htm#ga071d2b52e7455f80508afea16cbb7af1">pjsua_destroy2()</a> </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggafbe98339390b11b2e248d9420a2ed499a6b2eb1481899082e022534530bee9db2"></a><!-- doxytag: member="PJSUA_DESTROY_NO_RX_MSG" ref="ggafbe98339390b11b2e248d9420a2ed499a6b2eb1481899082e022534530bee9db2" args="" -->PJSUA_DESTROY_NO_RX_MSG</em>&nbsp;</td><td>
<p>Allow sending outgoing messages (such as unregistration, event unpublication, BYEs, unsubscription, etc.), but do not wait for responses. This is useful to perform "best effort" clean up without delaying the shutdown process waiting for responses. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggafbe98339390b11b2e248d9420a2ed499a299b2522628f7e9d6a9f94124eadcc28"></a><!-- doxytag: member="PJSUA_DESTROY_NO_TX_MSG" ref="ggafbe98339390b11b2e248d9420a2ed499a299b2522628f7e9d6a9f94124eadcc28" args="" -->PJSUA_DESTROY_NO_TX_MSG</em>&nbsp;</td><td>
<p>If this flag is set, do not send any outgoing messages at all. This flag is useful if application knows that the network which the messages are to be sent on is currently down. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggafbe98339390b11b2e248d9420a2ed499af884d2e4c0de1c3711595c89a212a9b3"></a><!-- doxytag: member="PJSUA_DESTROY_NO_NETWORK" ref="ggafbe98339390b11b2e248d9420a2ed499af884d2e4c0de1c3711595c89a212a9b3" args="" -->PJSUA_DESTROY_NO_NETWORK</em>&nbsp;</td><td>
<p>Do not send or receive messages during destroy. This flag is shorthand for PJSUA_DESTROY_NO_RX_MSG + PJSUA_DESTROY_NO_TX_MSG. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga9c0ad2b8e775b5ea692c8db4b399846b"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_logging_config_default" ref="ga9c0ad2b8e775b5ea692c8db4b399846b" args="(pjsua_logging_config *cfg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_logging_config_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *&nbsp;</td>
          <td class="paramname"> <em>cfg</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Use this function to initialize logging config.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>cfg</em>&nbsp;</td><td>The logging config to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaad41d40cd8cb3462bdd9f5a331c476c9"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_logging_config_dup" ref="gaad41d40cd8cb3462bdd9f5a331c476c9" args="(pj_pool_t *pool, pjsua_logging_config *dst, const pjsua_logging_config *src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_logging_config_dup </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *&nbsp;</td>
          <td class="paramname"> <em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *&nbsp;</td>
          <td class="paramname"> <em>src</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Use this function to duplicate logging config.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to use. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dst</em>&nbsp;</td><td>Destination config. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>Source config. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga473e1af0ea5c99c4412e5b0f7ff73c09"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_config_default" ref="ga473e1af0ea5c99c4412e5b0f7ff73c09" args="(pjsua_config *cfg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_config_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__config.htm">pjsua_config</a> *&nbsp;</td>
          <td class="paramname"> <em>cfg</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Use this function to initialize pjsua config.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>cfg</em>&nbsp;</td><td>pjsua config to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga918c1b4f5cdf1ec607d0fdb9538c16a8"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_config_dup" ref="ga918c1b4f5cdf1ec607d0fdb9538c16a8" args="(pj_pool_t *pool, pjsua_config *dst, const pjsua_config *src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_config_dup </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsua__config.htm">pjsua_config</a> *&nbsp;</td>
          <td class="paramname"> <em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsua__config.htm">pjsua_config</a> *&nbsp;</td>
          <td class="paramname"> <em>src</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Duplicate <a class="el" href="structpjsua__config.htm">pjsua_config</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool to get memory from. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dst</em>&nbsp;</td><td>Destination config. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>src</em>&nbsp;</td><td>Source config. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gac5d917f5344530d8eb3442450ddccd2d"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_msg_data_init" ref="gac5d917f5344530d8eb3442450ddccd2d" args="(pjsua_msg_data *msg_data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_msg_data_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__msg__data.htm">pjsua_msg_data</a> *&nbsp;</td>
          <td class="paramname"> <em>msg_data</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize message data.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>msg_data</em>&nbsp;</td><td>Message data to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2bb341e9b189b6716d146519f84e0d72"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_create" ref="ga2bb341e9b189b6716d146519f84e0d72" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_create </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Instantiate pjsua application. Application must call this function before calling any other functions, to make sure that the underlying libraries are properly initialized. Once this function has returned success, application must call <a class="el" href="group__PJSUA__LIB__BASE.htm#ga9eb04bbf136ed8d2f528db0a739482db">pjsua_destroy()</a> before quitting.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga72ccd5cc7dbf6f26b4ffedc0d9728a2d"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_init" ref="ga72ccd5cc7dbf6f26b4ffedc0d9728a2d" args="(const pjsua_config *ua_cfg, const pjsua_logging_config *log_cfg, const pjsua_media_config *media_cfg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjsua__config.htm">pjsua_config</a> *&nbsp;</td>
          <td class="paramname"> <em>ua_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *&nbsp;</td>
          <td class="paramname"> <em>log_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsua__media__config.htm">pjsua_media_config</a> *&nbsp;</td>
          <td class="paramname"> <em>media_cfg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize pjsua with the specified settings. All the settings are optional, and the default values will be used when the config is not specified.</p>
<p>Note that <a class="el" href="group__PJSUA__LIB__BASE.htm#ga2bb341e9b189b6716d146519f84e0d72">pjsua_create()</a> MUST be called before calling this function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ua_cfg</em>&nbsp;</td><td>User agent configuration. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>log_cfg</em>&nbsp;</td><td>Optional logging configuration. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>media_cfg</em>&nbsp;</td><td>Optional media configuration.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga82f9b09d515c56288a2ad11f4fbdae3f"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_start" ref="ga82f9b09d515c56288a2ad11f4fbdae3f" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_start </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Application is recommended to call this function after all initialization is done, so that the library can do additional checking set up additional</p>
<p>Application may call this function anytime after <a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init()</a>.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9eb04bbf136ed8d2f528db0a739482db"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_destroy" ref="ga9eb04bbf136ed8d2f528db0a739482db" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_destroy </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destroy pjsua. Application is recommended to perform graceful shutdown before calling this function (such as unregister the account from the SIP server, terminate presense subscription, and hangup active calls), however, this function will do all of these if it finds there are active sessions that need to be terminated. This function will approximately block for one second to wait for replies from remote.</p>
<p>Application.may safely call this function more than once if it doesn't keep track of it's state.</p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJSUA__LIB__BASE.htm#ga071d2b52e7455f80508afea16cbb7af1">pjsua_destroy2()</a></dd></dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga071d2b52e7455f80508afea16cbb7af1"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_destroy2" ref="ga071d2b52e7455f80508afea16cbb7af1" args="(unsigned flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_destroy2 </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>flags</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Variant of destroy with additional flags.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Combination of pjsua_destroy_flag enumeration.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9353166bfa640b62b3f33f752e07dda6"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_handle_events" ref="ga9353166bfa640b62b3f33f752e07dda6" args="(unsigned msec_timeout)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pjsua_handle_events </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>msec_timeout</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Poll pjsua for events, and if necessary block the caller thread for the specified maximum interval (in miliseconds).</p>
<p>Application doesn't normally need to call this function if it has configured worker thread (<em>thread_cnt</em> field) in <a class="el" href="structpjsua__config.htm">pjsua_config</a> structure, because polling then will be done by these worker threads instead.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>msec_timeout</em>&nbsp;</td><td>Maximum time to wait, in miliseconds.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of events that have been handled during the poll. Negative value indicates error, and application can retrieve the error as (status = -return_value). </dd></dl>

</div>
</div>
<a class="anchor" id="gab6fda3eb1ff0817460db155ad91fcf60"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_pool_create" ref="gab6fda3eb1ff0817460db155ad91fcf60" args="(const char *name, pj_size_t init_size, pj_size_t increment)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a>* pjsua_pool_create </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>init_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>increment</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create memory pool to be used by the application. Once application finished using the pool, it must be released with <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Optional pool name. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>init_size</em>&nbsp;</td><td>Initial size of the pool. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>increment</em>&nbsp;</td><td>Increment size.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The pool, or NULL when there's no memory. </dd></dl>

</div>
</div>
<a class="anchor" id="gab170aa6d3fe1195b7ed21b6afded75e1"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_reconfigure_logging" ref="gab170aa6d3fe1195b7ed21b6afded75e1" args="(const pjsua_logging_config *c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_reconfigure_logging </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjsua__logging__config.htm">pjsua_logging_config</a> *&nbsp;</td>
          <td class="paramname"> <em>c</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Application can call this function at any time (after <a class="el" href="group__PJSUA__LIB__BASE.htm#ga2bb341e9b189b6716d146519f84e0d72">pjsua_create()</a>, of course) to change logging settings.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>c</em>&nbsp;</td><td>Logging configuration.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gad5963734b4bf5ca337d0f70a9861f3d4"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_get_pjsip_endpt" ref="gad5963734b4bf5ca337d0f70a9861f3d4" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a>* pjsua_get_pjsip_endpt </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Internal function to get SIP endpoint instance of pjsua, which is needed for example to register module, create transports, etc. Only valid after <a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init()</a> is called.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>SIP endpoint instance. </dd></dl>

</div>
</div>
<a class="anchor" id="ga76539759eb013ca275c7092df5c3d060"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_get_pjmedia_endpt" ref="ga76539759eb013ca275c7092df5c3d060" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a>* pjsua_get_pjmedia_endpt </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Internal function to get media endpoint instance. Only valid after <a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init()</a> is called.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Media endpoint instance. </dd></dl>

</div>
</div>
<a class="anchor" id="ga287942c06e12a470a567bccc090a36e9"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_get_pool_factory" ref="ga287942c06e12a470a567bccc090a36e9" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a>* pjsua_get_pool_factory </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Internal function to get PJSUA pool factory. Only valid after <a class="el" href="group__PJSUA__LIB__BASE.htm#ga2bb341e9b189b6716d146519f84e0d72">pjsua_create()</a> is called.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Pool factory currently used by PJSUA. </dd></dl>

</div>
</div>
<a class="anchor" id="ga486165069204c0d47a565d714638d5bd"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_detect_nat_type" ref="ga486165069204c0d47a565d714638d5bd" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_detect_nat_type </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a utility function to detect NAT type in front of this endpoint. Once invoked successfully, this function will complete asynchronously and report the result in <em>on_nat_detect()</em> callback of <a class="el" href="structpjsua__callback.htm">pjsua_callback</a>.</p>
<p>After NAT has been detected and the callback is called, application can get the detected NAT type by calling <a class="el" href="group__PJSUA__LIB__BASE.htm#gac7fa60c2699aebe43e8b20aa68a7042f">pjsua_get_nat_type()</a>. Application can also perform NAT detection by calling <a class="el" href="group__PJSUA__LIB__BASE.htm#ga486165069204c0d47a565d714638d5bd">pjsua_detect_nat_type()</a> again at later time.</p>
<p>Note that STUN must be enabled to run this function successfully.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gac7fa60c2699aebe43e8b20aa68a7042f"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_get_nat_type" ref="gac7fa60c2699aebe43e8b20aa68a7042f" args="(pj_stun_nat_type *type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_get_nat_type </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a> *&nbsp;</td>
          <td class="paramname"> <em>type</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the NAT type as detected by <a class="el" href="group__PJSUA__LIB__BASE.htm#ga486165069204c0d47a565d714638d5bd">pjsua_detect_nat_type()</a> function. This function will only return useful NAT type after <a class="el" href="group__PJSUA__LIB__BASE.htm#ga486165069204c0d47a565d714638d5bd">pjsua_detect_nat_type()</a> has completed successfully and <em>on_nat_detect()</em> callback has been called.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>NAT type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>When detection is in progress, this function will return PJ_EPENDING and <em>type</em> will be set to PJ_STUN_NAT_TYPE_UNKNOWN. After NAT type has been detected successfully, this function will return PJ_SUCCESS and <em>type</em> will be set to the correct value. Other return values indicate error and <em>type</em> will be set to PJ_STUN_NAT_TYPE_ERR_UNKNOWN.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJSUA__LIB__CALL.htm#ga69aebe50835d025961899fe2158cdffc">pjsua_call_get_rem_nat_type()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga28de9872f90f7ef1dc4f000066f8bd6d"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_resolve_stun_servers" ref="ga28de9872f90f7ef1dc4f000066f8bd6d" args="(unsigned count, pj_str_t srv[], pj_bool_t wait, void *token, pj_stun_resolve_cb cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_resolve_stun_servers </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&nbsp;</td>
          <td class="paramname"> <em>srv</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td>
          <td class="paramname"> <em>wait</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gac1ee0323b0cc53a373158212c0a30eb2">pj_stun_resolve_cb</a>&nbsp;</td>
          <td class="paramname"> <em>cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Auxiliary function to resolve and contact each of the STUN server entries (sequentially) to find which is usable. The <a class="el" href="group__PJSUA__LIB__BASE.htm#ga72ccd5cc7dbf6f26b4ffedc0d9728a2d">pjsua_init()</a> must have been called before calling this function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>Number of STUN server entries to try. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>srv</em>&nbsp;</td><td>Array of STUN server entries to try. Please see the <em>stun_srv</em> field in the <a class="el" href="structpjsua__config.htm">pjsua_config</a> documentation about the format of this entry. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>wait</em>&nbsp;</td><td>Specify non-zero to make the function block until it gets the result. In this case, the function will block while the resolution is being done, and the callback will be called before this function returns. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>token</em>&nbsp;</td><td>Arbitrary token to be passed back to application in the callback. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Callback to be called to notify the result of the function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If <em>wait</em> parameter is non-zero, this will return PJ_SUCCESS if one usable STUN server is found. Otherwise it will always return PJ_SUCCESS, and application will be notified about the result in the callback. </dd></dl>

</div>
</div>
<a class="anchor" id="ga45e753541e4ec870e60d41b49c008ff4"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_cancel_stun_resolution" ref="ga45e753541e4ec870e60d41b49c008ff4" args="(void *token, pj_bool_t notify_cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_cancel_stun_resolution </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td>
          <td class="paramname"> <em>notify_cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Cancel pending STUN resolution which match the specified token.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>token</em>&nbsp;</td><td>The token to match. This token was given to <a class="el" href="group__PJSUA__LIB__BASE.htm#ga28de9872f90f7ef1dc4f000066f8bd6d">pjsua_resolve_stun_servers()</a> </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>notify_cb</em>&nbsp;</td><td>Boolean to control whether the callback should be called for cancelled resolutions. When the callback is called, the status in the result will be set as PJ_ECANCELLED.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if there is at least one pending STUN resolution cancelled, or PJ_ENOTFOUND if there is no matching one, or other error. </dd></dl>

</div>
</div>
<a class="anchor" id="gad6f3f10da98b76dc9d4fde50d923615f"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_verify_sip_url" ref="gad6f3f10da98b76dc9d4fde50d923615f" args="(const char *url)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_verify_sip_url </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>url</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a utility function to verify that valid SIP url is given. If the URL is a valid SIP/SIPS scheme, PJ_SUCCESS will be returned.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>url</em>&nbsp;</td><td>The URL, as NULL terminated string.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJSUA__LIB__BASE.htm#ga69049800d83c9f4518af6bf15ddee62a">pjsua_verify_url()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga69049800d83c9f4518af6bf15ddee62a"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_verify_url" ref="ga69049800d83c9f4518af6bf15ddee62a" args="(const char *url)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_verify_url </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>url</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a utility function to verify that valid URI is given. Unlike <a class="el" href="group__PJSUA__LIB__BASE.htm#gad6f3f10da98b76dc9d4fde50d923615f">pjsua_verify_sip_url()</a>, this function will return PJ_SUCCESS if tel: URI is given.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>url</em>&nbsp;</td><td>The URL, as NULL terminated string.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJSUA__LIB__BASE.htm#gad6f3f10da98b76dc9d4fde50d923615f">pjsua_verify_sip_url()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga4b3f7529ece820df563c4b1a4f4a649b"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_schedule_timer" ref="ga4b3f7529ece820df563c4b1a4f4a649b" args="(pj_timer_entry *entry, const pj_time_val *delay)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_schedule_timer </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *&nbsp;</td>
          <td class="paramname"> <em>entry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *&nbsp;</td>
          <td class="paramname"> <em>delay</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Schedule a timer entry. Note that the timer callback may be executed by different thread, depending on whether worker thread is enabled or not.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>entry</em>&nbsp;</td><td>Timer heap entry. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>delay</em>&nbsp;</td><td>The interval to expire.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error code.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJSIP__ENDPT.htm#ga404107233ddfd6924432cf62fd6ef036">pjsip_endpt_schedule_timer()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="gab3a4cecd850753caf221673319c2f38c"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_cancel_timer" ref="gab3a4cecd850753caf221673319c2f38c" args="(pj_timer_entry *entry)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_cancel_timer </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *&nbsp;</td>
          <td class="paramname"> <em>entry</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Cancel the previously scheduled timer.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>entry</em>&nbsp;</td><td>Timer heap entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJSIP__ENDPT.htm#ga7d979a79eca2e162a6a6d756e7608df3">pjsip_endpt_cancel_timer()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga3a697ba03ae9cd18df552143b770f957"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_perror" ref="ga3a697ba03ae9cd18df552143b770f957" args="(const char *sender, const char *title, pj_status_t status)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_perror </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>sender</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>title</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td>
          <td class="paramname"> <em>status</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a utility function to display error message for the specified error code. The error message will be sent to the log.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sender</em>&nbsp;</td><td>The log sender field. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>title</em>&nbsp;</td><td>Message title for the error. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>status</em>&nbsp;</td><td>Status code. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8e4a54271a326cad73969a6fe6ad7548"></a><!-- doxytag: member="pjsua&#45;lib/pjsua.h::pjsua_dump" ref="ga8e4a54271a326cad73969a6fe6ad7548" args="(pj_bool_t detail)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_dump </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td>
          <td class="paramname"> <em>detail</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a utility function to dump the stack states to log, using verbosity level 3.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>detail</em>&nbsp;</td><td>Will print detailed output (such as list of SIP transactions) when non-zero. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
