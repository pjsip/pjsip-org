<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>TCP Transport (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">TCP Transport<div class="ingroups"><a class="el" href="group__PJSIP__CORE.htm">Core SIP Library</a> &raquo; <a class="el" href="group__PJSIP__TRANSPORT.htm">Transport</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>API to create and register TCP transport.The functions below are used to create TCP transport and register the transport to the framework.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__tcp__transport__cfg.htm">pjsip_tcp_transport_cfg</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga5ed9523a062781a42900f9a1088a0f61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#ga5ed9523a062781a42900f9a1088a0f61">pjsip_tcp_transport_cfg_default</a> (<a class="el" href="structpjsip__tcp__transport__cfg.htm">pjsip_tcp_transport_cfg</a> *cfg, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> af)</td></tr>
<tr class="separator:ga5ed9523a062781a42900f9a1088a0f61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c36c000a63c71ea2e01513c4804f925"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#ga5c36c000a63c71ea2e01513c4804f925">pjsip_tcp_transport_start</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *local, unsigned async_cnt, <a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> **p_factory)</td></tr>
<tr class="separator:ga5c36c000a63c71ea2e01513c4804f925"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed1bac1872742045e1048b6ba737a334"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#gaed1bac1872742045e1048b6ba737a334">pjsip_tcp_transport_start2</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *local, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name, unsigned async_cnt, <a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> **p_factory)</td></tr>
<tr class="separator:gaed1bac1872742045e1048b6ba737a334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88cbc6379104165d72aa9e0f687329d3"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#ga88cbc6379104165d72aa9e0f687329d3">pjsip_tcp_transport_start3</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="el" href="structpjsip__tcp__transport__cfg.htm">pjsip_tcp_transport_cfg</a> *cfg, <a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> **p_factory)</td></tr>
<tr class="separator:ga88cbc6379104165d72aa9e0f687329d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeea11265f798310c260d115b6f597eca"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#gaeea11265f798310c260d115b6f597eca">pjsip_tcp_transport_get_socket</a> (<a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *transport)</td></tr>
<tr class="separator:gaeea11265f798310c260d115b6f597eca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd8161298372f69d06dd9df086e890fb"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#gadd8161298372f69d06dd9df086e890fb">pjsip_tcp_transport_lis_start</a> (<a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> *factory, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *local, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name)</td></tr>
<tr class="separator:gadd8161298372f69d06dd9df086e890fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5dd7038e60cad6e3ea545e4d28f1f6c2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#ga5dd7038e60cad6e3ea545e4d28f1f6c2">pjsip_tcp_transport_restart</a> (<a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> *factory, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *local, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name)</td></tr>
<tr class="separator:ga5dd7038e60cad6e3ea545e4d28f1f6c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga5ed9523a062781a42900f9a1088a0f61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5ed9523a062781a42900f9a1088a0f61">&#9670;&nbsp;</a></span>pjsip_tcp_transport_cfg_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_tcp_transport_cfg_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__tcp__transport__cfg.htm">pjsip_tcp_transport_cfg</a> *&#160;</td>
          <td class="paramname"><em>cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>af</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initialize <a class="el" href="structpjsip__tcp__transport__cfg.htm">pjsip_tcp_transport_cfg</a> structure with default values for the specifed address family.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfg</td><td>The structure to initialize. </td></tr>
    <tr><td class="paramname">af</td><td>Address family to be used. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga5c36c000a63c71ea2e01513c4804f925"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5c36c000a63c71ea2e01513c4804f925">&#9670;&nbsp;</a></span>pjsip_tcp_transport_start()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tcp_transport_start </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *&#160;</td>
          <td class="paramname"><em>local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>async_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> **&#160;</td>
          <td class="paramname"><em>p_factory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Register support for SIP TCP transport by creating TCP listener on the specified address and port. This function will create an instance of SIP TCP transport factory and register it to the transport manager.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint. </td></tr>
    <tr><td class="paramname">local</td><td>Optional local address to bind, or specify the address to bind the server socket to. Both IP interface address and port fields are optional. If IP interface address is not specified, socket will be bound to PJ_INADDR_ANY. If port is not specified, socket will be bound to any port selected by the operating system. </td></tr>
    <tr><td class="paramname">async_cnt</td><td>Number of simultaneous asynchronous accept() operations to be supported. It is recommended that the number here corresponds to the number of processors in the system (or the number of SIP worker threads). </td></tr>
    <tr><td class="paramname">p_factory</td><td>Optional pointer to receive the instance of the SIP TCP transport factory just created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS when the transport has been successfully started and registered to transport manager, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaed1bac1872742045e1048b6ba737a334"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed1bac1872742045e1048b6ba737a334">&#9670;&nbsp;</a></span>pjsip_tcp_transport_start2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tcp_transport_start2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *&#160;</td>
          <td class="paramname"><em>local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&#160;</td>
          <td class="paramname"><em>a_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>async_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> **&#160;</td>
          <td class="paramname"><em>p_factory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A newer variant of <a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#ga5c36c000a63c71ea2e01513c4804f925">pjsip_tcp_transport_start()</a>, which allows specifying the published/public address of the TCP transport.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint. </td></tr>
    <tr><td class="paramname">local</td><td>Optional local address to bind, or specify the address to bind the server socket to. Both IP interface address and port fields are optional. If IP interface address is not specified, socket will be bound to PJ_INADDR_ANY. If port is not specified, socket will be bound to any port selected by the operating system. </td></tr>
    <tr><td class="paramname">a_name</td><td>Optional published address, which is the address to be advertised as the address of this SIP transport. If this argument is NULL, then the bound address will be used as the published address. </td></tr>
    <tr><td class="paramname">async_cnt</td><td>Number of simultaneous asynchronous accept() operations to be supported. It is recommended that the number here corresponds to the number of processors in the system (or the number of SIP worker threads). </td></tr>
    <tr><td class="paramname">p_factory</td><td>Optional pointer to receive the instance of the SIP TCP transport factory just created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS when the transport has been successfully started and registered to transport manager, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga88cbc6379104165d72aa9e0f687329d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga88cbc6379104165d72aa9e0f687329d3">&#9670;&nbsp;</a></span>pjsip_tcp_transport_start3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tcp_transport_start3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tcp__transport__cfg.htm">pjsip_tcp_transport_cfg</a> *&#160;</td>
          <td class="paramname"><em>cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> **&#160;</td>
          <td class="paramname"><em>p_factory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Another variant of <a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#ga5c36c000a63c71ea2e01513c4804f925">pjsip_tcp_transport_start()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint. </td></tr>
    <tr><td class="paramname">cfg</td><td>TCP transport settings. Application should initialize this setting with <a class="el" href="group__PJSIP__TRANSPORT__TCP.htm#ga5ed9523a062781a42900f9a1088a0f61">pjsip_tcp_transport_cfg_default()</a>. </td></tr>
    <tr><td class="paramname">p_factory</td><td>Optional pointer to receive the instance of the SIP TCP transport factory just created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS when the transport has been successfully started and registered to transport manager, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaeea11265f798310c260d115b6f597eca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeea11265f798310c260d115b6f597eca">&#9670;&nbsp;</a></span>pjsip_tcp_transport_get_socket()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> pjsip_tcp_transport_get_socket </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *&#160;</td>
          <td class="paramname"><em>transport</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieve the internal socket handle used by the TCP transport. Note that this socket normally is registered to ioqueue, so application needs to take care not to perform operation that disrupts ioqueue operation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">transport</td><td>The TCP transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The socket handle, or PJ_INVALID_SOCKET if no socket is currently being used. </dd></dl>

</div>
</div>
<a id="gadd8161298372f69d06dd9df086e890fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadd8161298372f69d06dd9df086e890fb">&#9670;&nbsp;</a></span>pjsip_tcp_transport_lis_start()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tcp_transport_lis_start </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> *&#160;</td>
          <td class="paramname"><em>factory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *&#160;</td>
          <td class="paramname"><em>local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&#160;</td>
          <td class="paramname"><em>a_name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Start the TCP listener, if the listener is not started yet. This is useful to start the listener manually, if listener was not started when PJSIP_TCP_TRANSPORT_DONT_CREATE_LISTENER is set to 0.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">factory</td><td>The SIP TCP transport factory.</td></tr>
    <tr><td class="paramname">local</td><td>The address where the listener should be bound to. Both IP interface address and port fields are optional. If IP interface address is not specified, socket will be bound to PJ_INADDR_ANY. If port is not specified, socket will be bound to any port selected by the operating system.</td></tr>
    <tr><td class="paramname">a_name</td><td>The published address for the listener. If this argument is NULL, then the bound address will be used as the published address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS when the listener has been successfully started. </dd></dl>

</div>
</div>
<a id="ga5dd7038e60cad6e3ea545e4d28f1f6c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5dd7038e60cad6e3ea545e4d28f1f6c2">&#9670;&nbsp;</a></span>pjsip_tcp_transport_restart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_tcp_transport_restart </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> *&#160;</td>
          <td class="paramname"><em>factory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *&#160;</td>
          <td class="paramname"><em>local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&#160;</td>
          <td class="paramname"><em>a_name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Restart the TCP listener. This will close the listener socket and recreate the socket based on the config used when starting the transport.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">factory</td><td>The SIP TCP transport factory.</td></tr>
    <tr><td class="paramname">local</td><td>The address where the listener should be bound to. Both IP interface address and port fields are optional. If IP interface address is not specified, socket will be bound to PJ_INADDR_ANY. If port is not specified, socket will be bound to any port selected by the operating system.</td></tr>
    <tr><td class="paramname">a_name</td><td>The published address for the listener. If this argument is NULL, then the bound address will be used as the published address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS when the listener has been successfully restarted. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
