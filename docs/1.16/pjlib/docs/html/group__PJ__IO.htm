<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: Input/Output (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#groups">Modules</a>  </div>
  <div class="headertitle">
<h1>Input/Output<br/>
<small>
[<a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>Input/OutputThis section contains API building blocks to perform network I/O and communications. If provides:</p>
<ul>
<li><a class="el" href="group__PJ__SOCK.htm">Socket Abstraction</a> <br/>
 A highly portable socket abstraction, runs on all kind of network APIs such as standard BSD socket, Windows socket, Linux <b>kernel</b> socket, PalmOS networking API, etc. </li>
</ul>
 
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="groups"></a>
Modules</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__ACTIVESOCK.htm">Active socket I/O</a></td></tr>

<p><tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p>Active socket performs active operations on socket. </p>
<br/></td></tr>
</p>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pj__addr__resolve.htm">Network Address Resolution</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__ACCESS.htm">File Access</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm">File I/O</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__IOQUEUE.htm">IOQueue: I/O Event Dispatching with Proactor Pattern</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pj__ip__helper.htm">IP Interface and Routing Helper</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__SOCK.htm">Socket Abstraction</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__SOCK__SELECT.htm">Socket select() API.</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__SSL__SOCK.htm">Secure socket I/O</a></td></tr>

<p><tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p>Secure socket provides security on socket operation using standard security protocols such as SSL and TLS. </p>
<br/></td></tr>
</p>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Input/Output</p>
<p>This section contains API building blocks to perform network I/O and communications. If provides:</p>
<ul>
<li><a class="el" href="group__PJ__SOCK.htm">Socket Abstraction</a> <br/>
 A highly portable socket abstraction, runs on all kind of network APIs such as standard BSD socket, Windows socket, Linux <b>kernel</b> socket, PalmOS networking API, etc. </li>
</ul>
<ul>
<li><a class="el" href="group__pj__addr__resolve.htm">Network Address Resolution</a> <br/>
 Portable address resolution, which implements <a class="el" href="group__pj__addr__resolve.htm#ga7c8264aa7743594d31766679dbae0b88">pj_gethostbyname()</a>.</li>
</ul>
<ul>
<li><a class="el" href="group__PJ__SOCK__SELECT.htm">Socket select() API.</a> <br/>
 A portable <em>select()</em> like API (<a class="el" href="group__PJ__SOCK__SELECT.htm#gac84492169bc8b8fbab6e48f1b9150b2f">pj_sock_select()</a>) which can be implemented with various back-ends.</li>
</ul>
<ul>
<li><a class="el" href="group__PJ__IOQUEUE.htm">IOQueue: I/O Event Dispatching with Proactor Pattern</a> <br/>
 Framework for dispatching network events.</li>
</ul>
<p>For more information see the modules below. </p>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
