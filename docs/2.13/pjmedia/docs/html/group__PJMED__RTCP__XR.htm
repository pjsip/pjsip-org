<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>RTCP Extended Report (XR) - RFC 3611 (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">RTCP Extended Report (XR) - RFC 3611<div class="ingroups"><a class="el" href="group__PJMEDIA__SESSION.htm">Media Sessions</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>RTCP XR extension to RTCP session.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__rb__header.htm">pjmedia_rtcp_xr_rb_header</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__rb__rr__time.htm">pjmedia_rtcp_xr_rb_rr_time</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__rb__dlrr__item.htm">pjmedia_rtcp_xr_rb_dlrr_item</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__rb__dlrr.htm">pjmedia_rtcp_xr_rb_dlrr</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__rb__stats.htm">pjmedia_rtcp_xr_rb_stats</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__rb__voip__mtc.htm">pjmedia_rtcp_xr_rb_voip_mtc</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__pkt.htm">pjmedia_rtcp_xr_pkt</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__stream__stat.htm">pjmedia_rtcp_xr_stream_stat</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__stat.htm">pjmedia_rtcp_xr_stat</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga09c390aca0c57ee96adcd011947c7ffa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#ga09c390aca0c57ee96adcd011947c7ffa">PJMEDIA_RTCP_XR_BUF_SIZE</a></td></tr>
<tr class="separator:ga09c390aca0c57ee96adcd011947c7ffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gac28937533947a2b96c197005f14c3c30"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#gac28937533947a2b96c197005f14c3c30">pjmedia_rtcp_xr_type</a> { <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_LOSS_RLE</b> = (1 &lt;&lt; 0)
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_DUP_RLE</b> = (1 &lt;&lt; 1)
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_RCPT_TIMES</b> = (1 &lt;&lt; 2)
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_RR_TIME</b> = (1 &lt;&lt; 3)
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_DLRR</b> = (1 &lt;&lt; 4)
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_STATS</b> = (1 &lt;&lt; 5)
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_VOIP_METRICS</b> = (1 &lt;&lt; 6)
<br />
 }</td></tr>
<tr class="separator:gac28937533947a2b96c197005f14c3c30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36ab2d2e1caf48a3a420c10ae864e217"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#ga36ab2d2e1caf48a3a420c10ae864e217">pjmedia_rtcp_xr_info</a> { <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_SIGNAL_LVL</b> = 1
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_NOISE_LVL</b> = 2
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_RERL</b> = 3
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_R_FACTOR</b> = 4
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_MOS_LQ</b> = 5
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_MOS_CQ</b> = 6
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_CONF_PLC</b> = 7
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_CONF_JBA</b> = 8
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_CONF_JBR</b> = 9
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_JB_NOM</b> = 10
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_JB_MAX</b> = 11
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_INFO_JB_ABS_MAX</b> = 12
<br />
 }</td></tr>
<tr class="separator:ga36ab2d2e1caf48a3a420c10ae864e217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4fa8e7e553fee2a3608a4c1fb67f3e4e"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#ga4fa8e7e553fee2a3608a4c1fb67f3e4e">pjmedia_rtcp_xr_plc_type</a> { <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_PLC_UNK</b> = 0
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_PLC_DIS</b> = 1
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_PLC_ENH</b> = 2
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_PLC_STD</b> = 3
<br />
 }</td></tr>
<tr class="separator:ga4fa8e7e553fee2a3608a4c1fb67f3e4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0fc1b32f1b8af26cdb291421979fd60e"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#ga0fc1b32f1b8af26cdb291421979fd60e">pjmedia_rtcp_xr_jb_type</a> { <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_JB_UNKNOWN</b> = 0
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_JB_FIXED</b> = 2
, <br />
&#160;&#160;<b>PJMEDIA_RTCP_XR_JB_ADAPTIVE</b> = 3
<br />
 }</td></tr>
<tr class="separator:ga0fc1b32f1b8af26cdb291421979fd60e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gade629046ba9a0297051b199bce749e45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#gade629046ba9a0297051b199bce749e45">pjmedia_rtcp_build_rtcp_xr</a> (<a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *session, unsigned rpt_types, void **rtcp_pkt, int *len)</td></tr>
<tr class="separator:gade629046ba9a0297051b199bce749e45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfd0db4ea950c2bb0484b31563609ab3"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#gacfd0db4ea950c2bb0484b31563609ab3">pjmedia_rtcp_xr_update_info</a> (<a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *session, unsigned info, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gac65eeb4771a6fc34225302fee5bcb7e2">pj_int32_t</a> val)</td></tr>
<tr class="separator:gacfd0db4ea950c2bb0484b31563609ab3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1147e0f9e698ab25fa8f7e4dcbb52c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#gaa1147e0f9e698ab25fa8f7e4dcbb52c4">pjmedia_rtcp_xr_init</a> (<a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *session, struct <a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *r_session, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> gmin, unsigned frames_per_packet)</td></tr>
<tr class="separator:gaa1147e0f9e698ab25fa8f7e4dcbb52c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf0c7b2778fa946a98c403e532c3b2fd1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#gaf0c7b2778fa946a98c403e532c3b2fd1">pjmedia_rtcp_xr_fini</a> (<a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *session)</td></tr>
<tr class="separator:gaf0c7b2778fa946a98c403e532c3b2fd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7032ea5228312a256a4fbda9a087b655"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#ga7032ea5228312a256a4fbda9a087b655">pjmedia_rtcp_xr_rx_rtcp_xr</a> (<a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *session, const void *rtcp_pkt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr class="separator:ga7032ea5228312a256a4fbda9a087b655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e20c7dbea4659caea4bfc08133dc573"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#ga0e20c7dbea4659caea4bfc08133dc573">pjmedia_rtcp_xr_rx_rtp</a> (<a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *session, unsigned seq, int lost, int dup, int discarded, int jitter, int toh, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> toh_ipv4)</td></tr>
<tr class="separator:ga0e20c7dbea4659caea4bfc08133dc573"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc7f7cc23d4c01c0027cb40a59059647"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__XR.htm#gacc7f7cc23d4c01c0027cb40a59059647">pjmedia_rtcp_xr_tx_rtp</a> (<a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *session, unsigned ptsize)</td></tr>
<tr class="separator:gacc7f7cc23d4c01c0027cb40a59059647"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >PJMEDIA implements subsets of RTCP XR specification (RFC 3611) to monitor the quality of the real-time media (audio/video) transmission. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga09c390aca0c57ee96adcd011947c7ffa" name="ga09c390aca0c57ee96adcd011947c7ffa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga09c390aca0c57ee96adcd011947c7ffa">&#9670;&nbsp;</a></span>PJMEDIA_RTCP_XR_BUF_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_RTCP_XR_BUF_SIZE</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">    <span class="keyword">sizeof</span>(<a class="code hl_struct" href="structpjmedia__rtcp__xr__rb__rr__time.htm">pjmedia_rtcp_xr_rb_rr_time</a>) + \</div>
<div class="line">    <span class="keyword">sizeof</span>(<a class="code hl_struct" href="structpjmedia__rtcp__xr__rb__dlrr.htm">pjmedia_rtcp_xr_rb_dlrr</a>) + \</div>
<div class="line">    sizeof(<a class="code hl_struct" href="structpjmedia__rtcp__xr__rb__stats.htm">pjmedia_rtcp_xr_rb_stats</a>) + \</div>
<div class="line">    sizeof(<a class="code hl_struct" href="structpjmedia__rtcp__xr__rb__voip__mtc.htm">pjmedia_rtcp_xr_rb_voip_mtc</a>)</div>
<div class="ttc" id="astructpjmedia__rtcp__xr__rb__dlrr_htm"><div class="ttname"><a href="structpjmedia__rtcp__xr__rb__dlrr.htm">pjmedia_rtcp_xr_rb_dlrr</a></div><div class="ttdef"><b>Definition:</b> rtcp_xr.h:135</div></div>
<div class="ttc" id="astructpjmedia__rtcp__xr__rb__rr__time_htm"><div class="ttname"><a href="structpjmedia__rtcp__xr__rb__rr__time.htm">pjmedia_rtcp_xr_rb_rr_time</a></div><div class="ttdef"><b>Definition:</b> rtcp_xr.h:113</div></div>
<div class="ttc" id="astructpjmedia__rtcp__xr__rb__stats_htm"><div class="ttname"><a href="structpjmedia__rtcp__xr__rb__stats.htm">pjmedia_rtcp_xr_rb_stats</a></div><div class="ttdef"><b>Definition:</b> rtcp_xr.h:145</div></div>
<div class="ttc" id="astructpjmedia__rtcp__xr__rb__voip__mtc_htm"><div class="ttname"><a href="structpjmedia__rtcp__xr__rb__voip__mtc.htm">pjmedia_rtcp_xr_rb_voip_mtc</a></div><div class="ttdef"><b>Definition:</b> rtcp_xr.h:169</div></div>
</div><!-- fragment --><p >Constant of RTCP-XR content size. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gac28937533947a2b96c197005f14c3c30" name="gac28937533947a2b96c197005f14c3c30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac28937533947a2b96c197005f14c3c30">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMED__RTCP__XR.htm#gac28937533947a2b96c197005f14c3c30">pjmedia_rtcp_xr_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumeration of report types of RTCP XR. Useful for user to enable varying combinations of RTCP XR report blocks. </p>

</div>
</div>
<a id="ga36ab2d2e1caf48a3a420c10ae864e217" name="ga36ab2d2e1caf48a3a420c10ae864e217"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga36ab2d2e1caf48a3a420c10ae864e217">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_info</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMED__RTCP__XR.htm#ga36ab2d2e1caf48a3a420c10ae864e217">pjmedia_rtcp_xr_info</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumeration of info need to be updated manually to RTCP XR. Most info could be updated automatically each time RTP received. </p>

</div>
</div>
<a id="ga4fa8e7e553fee2a3608a4c1fb67f3e4e" name="ga4fa8e7e553fee2a3608a4c1fb67f3e4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4fa8e7e553fee2a3608a4c1fb67f3e4e">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_plc_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMED__RTCP__XR.htm#ga4fa8e7e553fee2a3608a4c1fb67f3e4e">pjmedia_rtcp_xr_plc_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumeration of PLC types definitions for RTCP XR report. </p>

</div>
</div>
<a id="ga0fc1b32f1b8af26cdb291421979fd60e" name="ga0fc1b32f1b8af26cdb291421979fd60e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0fc1b32f1b8af26cdb291421979fd60e">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_jb_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMED__RTCP__XR.htm#ga0fc1b32f1b8af26cdb291421979fd60e">pjmedia_rtcp_xr_jb_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumeration of jitter buffer types definitions for RTCP XR report. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gade629046ba9a0297051b199bce749e45" name="gade629046ba9a0297051b199bce749e45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gade629046ba9a0297051b199bce749e45">&#9670;&nbsp;</a></span>pjmedia_rtcp_build_rtcp_xr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_build_rtcp_xr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rpt_types</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>rtcp_pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Build an RTCP XR packet which contains one or more RTCP XR report blocks. There are seven report types as defined in RFC 3611.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>The RTCP XR session. </td></tr>
    <tr><td class="paramname">rpt_types</td><td>Report types to be included in the packet, report types are defined in pjmedia_rtcp_xr_type, set this to zero will make this function build all reports appropriately. </td></tr>
    <tr><td class="paramname">rtcp_pkt</td><td>Upon return, it will contain pointer to the RTCP XR packet. </td></tr>
    <tr><td class="paramname">len</td><td>Upon return, it will indicate the size of the generated RTCP XR packet. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gacfd0db4ea950c2bb0484b31563609ab3" name="gacfd0db4ea950c2bb0484b31563609ab3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacfd0db4ea950c2bb0484b31563609ab3">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_update_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_xr_update_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gac65eeb4771a6fc34225302fee5bcb7e2">pj_int32_t</a>&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Call this function to manually update some info needed by RTCP XR to generate report which could not be populated directly when receiving RTP.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>The RTCP XR session. </td></tr>
    <tr><td class="paramname">info</td><td>Info type to be updated, </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJMED__RTCP__XR.htm#ga36ab2d2e1caf48a3a420c10ae864e217">pjmedia_rtcp_xr_info</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>Value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaa1147e0f9e698ab25fa8f7e4dcbb52c4" name="gaa1147e0f9e698ab25fa8f7e4dcbb52c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa1147e0f9e698ab25fa8f7e4dcbb52c4">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_xr_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&#160;</td>
          <td class="paramname"><em>r_session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>&#160;</td>
          <td class="paramname"><em>gmin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>frames_per_packet</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function is called internally by RTCP session when RTCP XR is enabled to initialize the RTCP XR session.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>RTCP XR session. </td></tr>
    <tr><td class="paramname">r_session</td><td>RTCP session. </td></tr>
    <tr><td class="paramname">gmin</td><td>Gmin value (defined in RFC 3611), set to 0 for default (16). </td></tr>
    <tr><td class="paramname">frames_per_packet</td><td>Number of frames per packet. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaf0c7b2778fa946a98c403e532c3b2fd1" name="gaf0c7b2778fa946a98c403e532c3b2fd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf0c7b2778fa946a98c403e532c3b2fd1">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_fini()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_xr_fini </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *&#160;</td>
          <td class="paramname"><em>session</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function is called internally by RTCP session to destroy the RTCP XR session.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>RTCP XR session. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga7032ea5228312a256a4fbda9a087b655" name="ga7032ea5228312a256a4fbda9a087b655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7032ea5228312a256a4fbda9a087b655">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_rx_rtcp_xr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_xr_rx_rtcp_xr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>rtcp_pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function is called internally by RTCP session when it receives incoming RTCP XR packets.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>RTCP XR session. </td></tr>
    <tr><td class="paramname">rtcp_pkt</td><td>The received RTCP XR packet. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the incoming packet. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga0e20c7dbea4659caea4bfc08133dc573" name="ga0e20c7dbea4659caea4bfc08133dc573"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0e20c7dbea4659caea4bfc08133dc573">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_rx_rtp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_xr_rx_rtp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>seq</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>lost</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>discarded</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>jitter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>toh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>toh_ipv4</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function is called internally by RTCP session whenever an RTP packet is received or lost to let the RTCP XR session update its statistics. Data passed to this function is a result of analyzation by RTCP and the jitter buffer. Whenever some info is available, the value should be zero or more (no negative info), otherwise if info is not available the info should be -1 so no update will be done for this info in the RTCP XR session.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>RTCP XR session. </td></tr>
    <tr><td class="paramname">seq</td><td>Sequence number of RTP packet. </td></tr>
    <tr><td class="paramname">lost</td><td>Info if this packet is lost. </td></tr>
    <tr><td class="paramname">dup</td><td>Info if this packet is a duplication. </td></tr>
    <tr><td class="paramname">discarded</td><td>Info if this packet is discarded (not because of duplication). </td></tr>
    <tr><td class="paramname">jitter</td><td>Info jitter of this packet. </td></tr>
    <tr><td class="paramname">toh</td><td>Info Time To Live or Hops Limit of this packet. </td></tr>
    <tr><td class="paramname">toh_ipv4</td><td>Set PJ_TRUE if packet is transported over IPv4. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gacc7f7cc23d4c01c0027cb40a59059647" name="gacc7f7cc23d4c01c0027cb40a59059647"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacc7f7cc23d4c01c0027cb40a59059647">&#9670;&nbsp;</a></span>pjmedia_rtcp_xr_tx_rtp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_xr_tx_rtp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__xr__session.htm">pjmedia_rtcp_xr_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>ptsize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function is called internally by RTCP session whenever an RTP packet is sent to let the RTCP XR session do its internal calculations.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>RTCP XR session. </td></tr>
    <tr><td class="paramname">ptsize</td><td>Size of RTP payload being sent. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>.</p>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
