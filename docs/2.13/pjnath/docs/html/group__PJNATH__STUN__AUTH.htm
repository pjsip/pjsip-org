<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>STUN Authentication (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">STUN Authentication<div class="ingroups"><a class="el" href="group__PJNATH.htm">NAT Traversal Helper Library</a> &raquo; <a class="el" href="group__PJNATH__STUN.htm">STUN: Session Traversal Utilities for NAT</a> &raquo; <a class="el" href="group__PJNATH__STUN__BASE.htm">Base STUN objects</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>STUN authentication helper.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__req__cred__info.htm">pj_stun_req_cred_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga2b5c95ba6bb32358c11dc2c613f641b0"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#ga2b5c95ba6bb32358c11dc2c613f641b0">pj_stun_auth_type</a> { <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#gga2b5c95ba6bb32358c11dc2c613f641b0a5c788ea84fbb14332e35afb2ed839cf9">PJ_STUN_AUTH_NONE</a> = 0
, <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#gga2b5c95ba6bb32358c11dc2c613f641b0a7a9828b8632e3d4ae18ab9da54d1c234">PJ_STUN_AUTH_SHORT_TERM</a> = 1
, <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#gga2b5c95ba6bb32358c11dc2c613f641b0af956886ba37dd8c63e382a0718aa5247">PJ_STUN_AUTH_LONG_TERM</a> = 2
<br />
 }</td></tr>
<tr class="separator:ga2b5c95ba6bb32358c11dc2c613f641b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cb1133fc704a99147e9e5f0ddf35aa0"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#ga1cb1133fc704a99147e9e5f0ddf35aa0">pj_stun_auth_cred_type</a> { <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#gga1cb1133fc704a99147e9e5f0ddf35aa0aa9a8a104d5f97636778fce3e205b3cb6">PJ_STUN_AUTH_CRED_STATIC</a>
, <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#gga1cb1133fc704a99147e9e5f0ddf35aa0af749ce642bcbd44369d6f43af7f88315">PJ_STUN_AUTH_CRED_DYNAMIC</a>
<br />
 }</td></tr>
<tr class="separator:ga1cb1133fc704a99147e9e5f0ddf35aa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab91bef4d8bf966ccd2a48da636206c28"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a> { <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#ggab91bef4d8bf966ccd2a48da636206c28af960b65c6b553f433308ab46fe78bc33">PJ_STUN_PASSWD_PLAIN</a> = 0
, <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#ggab91bef4d8bf966ccd2a48da636206c28abc51efc77eb3b3e2a558b30cdd9e90ae">PJ_STUN_PASSWD_HASHED</a> = 1
<br />
 }</td></tr>
<tr class="separator:gab91bef4d8bf966ccd2a48da636206c28"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gacdda3c9cb9a257152228b0e5e4737c8e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#gacdda3c9cb9a257152228b0e5e4737c8e">pj_stun_auth_cred_dup</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *dst, const <a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *src)</td></tr>
<tr class="separator:gacdda3c9cb9a257152228b0e5e4737c8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6627e23dea196ac0c3ff5e4135b89ae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#gae6627e23dea196ac0c3ff5e4135b89ae">pj_stun_req_cred_info_dup</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpj__stun__req__cred__info.htm">pj_stun_req_cred_info</a> *dst, const <a class="el" href="structpj__stun__req__cred__info.htm">pj_stun_req_cred_info</a> *src)</td></tr>
<tr class="separator:gae6627e23dea196ac0c3ff5e4135b89ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9438d242e00241587d3389155f0db8a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#ga9438d242e00241587d3389155f0db8a4">pj_stun_create_key</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *key, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *realm, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *username, <a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a> data_type, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *data)</td></tr>
<tr class="separator:ga9438d242e00241587d3389155f0db8a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8d300fc619ce7063915270f1c33f37e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#gab8d300fc619ce7063915270f1c33f37e">pj_stun_authenticate_request</a> (const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, <a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *cred, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpj__stun__req__cred__info.htm">pj_stun_req_cred_info</a> *info, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **p_response)</td></tr>
<tr class="separator:gab8d300fc619ce7063915270f1c33f37e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee822579112dcbb7d9057aac7b56f3d2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#gaee822579112dcbb7d9057aac7b56f3d2">pj_stun_auth_valid_for_msg</a> (const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg)</td></tr>
<tr class="separator:gaee822579112dcbb7d9057aac7b56f3d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11c17969134bdb4d2a3aa77e3d1f6e6b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__AUTH.htm#ga11c17969134bdb4d2a3aa77e3d1f6e6b">pj_stun_authenticate_response</a> (const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *key)</td></tr>
<tr class="separator:ga11c17969134bdb4d2a3aa77e3d1f6e6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga1cb1133fc704a99147e9e5f0ddf35aa0" name="ga1cb1133fc704a99147e9e5f0ddf35aa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1cb1133fc704a99147e9e5f0ddf35aa0">&#9670;&nbsp;</a></span>pj_stun_auth_cred_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__AUTH.htm#ga1cb1133fc704a99147e9e5f0ddf35aa0">pj_stun_auth_cred_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Type of authentication data in the credential. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga1cb1133fc704a99147e9e5f0ddf35aa0aa9a8a104d5f97636778fce3e205b3cb6" name="gga1cb1133fc704a99147e9e5f0ddf35aa0aa9a8a104d5f97636778fce3e205b3cb6"></a>PJ_STUN_AUTH_CRED_STATIC&#160;</td><td class="fielddoc"><p >The credential data contains a static credential to be matched against the credential in the message. A static credential can be used as both client side or server side authentication. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga1cb1133fc704a99147e9e5f0ddf35aa0af749ce642bcbd44369d6f43af7f88315" name="gga1cb1133fc704a99147e9e5f0ddf35aa0af749ce642bcbd44369d6f43af7f88315"></a>PJ_STUN_AUTH_CRED_DYNAMIC&#160;</td><td class="fielddoc"><p >The credential data contains callbacks to be called to verify the credential in the message. A dynamic credential is suitable when performing server side authentication where server does not know in advance the identity of the user requesting authentication. </p>
</td></tr>
</table>

</div>
</div>
<a id="ga2b5c95ba6bb32358c11dc2c613f641b0" name="ga2b5c95ba6bb32358c11dc2c613f641b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b5c95ba6bb32358c11dc2c613f641b0">&#9670;&nbsp;</a></span>pj_stun_auth_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__AUTH.htm#ga2b5c95ba6bb32358c11dc2c613f641b0">pj_stun_auth_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Type of authentication. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga2b5c95ba6bb32358c11dc2c613f641b0a5c788ea84fbb14332e35afb2ed839cf9" name="gga2b5c95ba6bb32358c11dc2c613f641b0a5c788ea84fbb14332e35afb2ed839cf9"></a>PJ_STUN_AUTH_NONE&#160;</td><td class="fielddoc"><p >No authentication. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga2b5c95ba6bb32358c11dc2c613f641b0a7a9828b8632e3d4ae18ab9da54d1c234" name="gga2b5c95ba6bb32358c11dc2c613f641b0a7a9828b8632e3d4ae18ab9da54d1c234"></a>PJ_STUN_AUTH_SHORT_TERM&#160;</td><td class="fielddoc"><p >Authentication using short term credential. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga2b5c95ba6bb32358c11dc2c613f641b0af956886ba37dd8c63e382a0718aa5247" name="gga2b5c95ba6bb32358c11dc2c613f641b0af956886ba37dd8c63e382a0718aa5247"></a>PJ_STUN_AUTH_LONG_TERM&#160;</td><td class="fielddoc"><p >Authentication using long term credential. </p>
</td></tr>
</table>

</div>
</div>
<a id="gab91bef4d8bf966ccd2a48da636206c28" name="gab91bef4d8bf966ccd2a48da636206c28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab91bef4d8bf966ccd2a48da636206c28">&#9670;&nbsp;</a></span>pj_stun_passwd_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Type of encoding applied to the password stored in the credential. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggab91bef4d8bf966ccd2a48da636206c28af960b65c6b553f433308ab46fe78bc33" name="ggab91bef4d8bf966ccd2a48da636206c28af960b65c6b553f433308ab46fe78bc33"></a>PJ_STUN_PASSWD_PLAIN&#160;</td><td class="fielddoc"><p >Plain text password. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggab91bef4d8bf966ccd2a48da636206c28abc51efc77eb3b3e2a558b30cdd9e90ae" name="ggab91bef4d8bf966ccd2a48da636206c28abc51efc77eb3b3e2a558b30cdd9e90ae"></a>PJ_STUN_PASSWD_HASHED&#160;</td><td class="fielddoc"><p >Hashed password, valid for long term credential only. The hash value of the password is calculated as MD5(USERNAME ":" REALM ":" PASSWD) with all quotes removed from the username and realm values. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gacdda3c9cb9a257152228b0e5e4737c8e" name="gacdda3c9cb9a257152228b0e5e4737c8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacdda3c9cb9a257152228b0e5e4737c8e">&#9670;&nbsp;</a></span>pj_stun_auth_cred_dup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_stun_auth_cred_dup </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Duplicate authentication credential.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to be used to allocate memory. </td></tr>
    <tr><td class="paramname">dst</td><td>Destination credential. </td></tr>
    <tr><td class="paramname">src</td><td>Source credential. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaee822579112dcbb7d9057aac7b56f3d2" name="gaee822579112dcbb7d9057aac7b56f3d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaee822579112dcbb7d9057aac7b56f3d2">&#9670;&nbsp;</a></span>pj_stun_auth_valid_for_msg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_stun_auth_valid_for_msg </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Determine if STUN message can be authenticated. Some STUN error responses cannot be authenticated since they cannot contain STUN MESSAGE-INTEGRITY attribute. STUN Indication messages also cannot be authenticated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The STUN message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Non-zero if the STUN message can be authenticated. </dd></dl>

</div>
</div>
<a id="gab8d300fc619ce7063915270f1c33f37e" name="gab8d300fc619ce7063915270f1c33f37e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab8d300fc619ce7063915270f1c33f37e">&#9670;&nbsp;</a></span>pj_stun_authenticate_request()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_authenticate_request </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *&#160;</td>
          <td class="paramname"><em>pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>pkt_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__auth__cred.htm">pj_stun_auth_cred</a> *&#160;</td>
          <td class="paramname"><em>cred</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__req__cred__info.htm">pj_stun_req_cred_info</a> *&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **&#160;</td>
          <td class="paramname"><em>p_response</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Verify credential in the STUN request. Note that before calling this function, application must have checked that the message contains PJ_STUN_ATTR_MESSAGE_INTEGRITY attribute by calling <a class="el" href="group__PJNATH__STUN__MSG.htm#ga3b304107d7590666b6bd0d318248edc8">pj_stun_msg_find_attr()</a> function, because this function will reject the message with 401 error if it doesn't contain PJ_STUN_ATTR_MESSAGE_INTEGRITY attribute.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pkt</td><td>The original packet which has been parsed into the message. This packet MUST NOT have been modified after the parsing. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>The length of the packet. </td></tr>
    <tr><td class="paramname">msg</td><td>The parsed message to be verified. </td></tr>
    <tr><td class="paramname">cred</td><td>Pointer to credential to be used to authenticate the message. </td></tr>
    <tr><td class="paramname">pool</td><td>If response is to be created, then memory will be allocated from this pool. </td></tr>
    <tr><td class="paramname">info</td><td>Optional pointer to receive authentication information found in the request and the credential that is used to authenticate the request. </td></tr>
    <tr><td class="paramname">p_response</td><td>Optional pointer to receive the response message then the credential in the request fails to authenticate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if credential is verified successfully. If the verification fails and <em>p_response</em> is not NULL, an appropriate response will be returned in <em>p_response</em>. </dd></dl>

</div>
</div>
<a id="ga11c17969134bdb4d2a3aa77e3d1f6e6b" name="ga11c17969134bdb4d2a3aa77e3d1f6e6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11c17969134bdb4d2a3aa77e3d1f6e6b">&#9670;&nbsp;</a></span>pj_stun_authenticate_response()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_authenticate_response </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *&#160;</td>
          <td class="paramname"><em>pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>pkt_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Verify credential in the STUN response. Note that before calling this function, application must have checked that the message contains PJ_STUN_ATTR_MESSAGE_INTEGRITY attribute by calling <a class="el" href="group__PJNATH__STUN__MSG.htm#ga3b304107d7590666b6bd0d318248edc8">pj_stun_msg_find_attr()</a> function, because otherwise this function will report authentication failure.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pkt</td><td>The original packet which has been parsed into the message. This packet MUST NOT have been modified after the parsing. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>The length of the packet. </td></tr>
    <tr><td class="paramname">msg</td><td>The parsed message to be verified. </td></tr>
    <tr><td class="paramname">key</td><td>Authentication key to calculate MESSAGE-INTEGRITY value. Application can create this key by using <a class="el" href="group__PJNATH__STUN__AUTH.htm#ga9438d242e00241587d3389155f0db8a4">pj_stun_create_key()</a> function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if credential is verified successfully. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>.</p>

</div>
</div>
<a id="ga9438d242e00241587d3389155f0db8a4" name="ga9438d242e00241587d3389155f0db8a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9438d242e00241587d3389155f0db8a4">&#9670;&nbsp;</a></span>pj_stun_create_key()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_stun_create_key </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>realm</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>username</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a>&#160;</td>
          <td class="paramname"><em>data_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create authentication key to be used for encoding the message with MESSAGE-INTEGRITY. If short term credential is used (i.e. the realm argument is NULL or empty), the key will be copied from the password. If long term credential is used, the key will be calculated from the MD5 hash of the realm, username, and password.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory for the key. </td></tr>
    <tr><td class="paramname">key</td><td>String to receive the key. </td></tr>
    <tr><td class="paramname">realm</td><td>The realm of the credential, if long term credential is to be used. If short term credential is wanted, application can put NULL or empty string here. </td></tr>
    <tr><td class="paramname">username</td><td>The username. </td></tr>
    <tr><td class="paramname">data_type</td><td>Password encoding. </td></tr>
    <tr><td class="paramname">data</td><td>The password. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gae6627e23dea196ac0c3ff5e4135b89ae" name="gae6627e23dea196ac0c3ff5e4135b89ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae6627e23dea196ac0c3ff5e4135b89ae">&#9670;&nbsp;</a></span>pj_stun_req_cred_info_dup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_stun_req_cred_info_dup </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__req__cred__info.htm">pj_stun_req_cred_info</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__req__cred__info.htm">pj_stun_req_cred_info</a> *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Duplicate request credential.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to be used to allocate memory. </td></tr>
    <tr><td class="paramname">dst</td><td>Destination credential. </td></tr>
    <tr><td class="paramname">src</td><td>Source credential. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
