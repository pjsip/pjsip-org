<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: pjmedia_codec_op Struct Reference (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="functions.htm"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<h1>pjmedia_codec_op Struct Reference<br/>
<small>
[<a class="el" href="group__PJMEDIA__CODEC.htm">Codec Framework</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<!-- doxytag: class="pjmedia_codec_op" --><table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#a3b6748a3101a34f1d47b1235beacbd8a">init</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#a7deff7cdb43d9f565e0aee1adbcfdeb7">open</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#a2ddd57354087797777c1425533a3f570">close</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#a287180caa77d4b0a82c7ae87284b0ff2">modify</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, const <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#a51907e6b79cc595f28a2b46bb26b7d24">parse</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, void *pkt, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pkt_size, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__timestamp.htm">pj_timestamp</a> *timestamp, unsigned *frame_cnt, <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> frames[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#a51417db9a266ef980d7480000a1edf4f">encode</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, const struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *input, unsigned out_size, struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *output)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#afce45b38865973f70bff7ad8edd7d88e">decode</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, const struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *input, unsigned out_size, struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *output)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__codec__op.htm#a97e514fca6a4055632feb619e556054f">recover</a> )(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, unsigned out_size, struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *output)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This structure describes codec operations. Each codec MUST implement all of these functions. </p>
<hr/><h2>Field Documentation</h2>
<a class="anchor" id="a3b6748a3101a34f1d47b1235beacbd8a"></a><!-- doxytag: member="pjmedia_codec_op::init" ref="a3b6748a3101a34f1d47b1235beacbd8a" args=")(pjmedia_codec *codec, pj_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#a3b6748a3101a34f1d47b1235beacbd8a">pjmedia_codec_op::init</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize codec using the specified attribute.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to use when the codec needs to allocate some memory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="a7deff7cdb43d9f565e0aee1adbcfdeb7"></a><!-- doxytag: member="pjmedia_codec_op::open" ref="a7deff7cdb43d9f565e0aee1adbcfdeb7" args=")(pjmedia_codec *codec, pjmedia_codec_param *param)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#a7deff7cdb43d9f565e0aee1adbcfdeb7">pjmedia_codec_op::open</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Open the codec and initialize with the specified parameter. Upon successful initialization, the codec may modify the parameter and fills in the unspecified values (such as enc_ptime, when encoder ptime is different than decoder ptime).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>param</em>&nbsp;</td><td>Codec initialization parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="a2ddd57354087797777c1425533a3f570"></a><!-- doxytag: member="pjmedia_codec_op::close" ref="a2ddd57354087797777c1425533a3f570" args=")(pjmedia_codec *codec)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#a2ddd57354087797777c1425533a3f570">pjmedia_codec_op::close</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Close and shutdown codec, releasing all resources allocated by this codec, if any.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="a287180caa77d4b0a82c7ae87284b0ff2"></a><!-- doxytag: member="pjmedia_codec_op::modify" ref="a287180caa77d4b0a82c7ae87284b0ff2" args=")(pjmedia_codec *codec, const pjmedia_codec_param *param)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#a287180caa77d4b0a82c7ae87284b0ff2">pjmedia_codec_op::modify</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, const <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Modify the codec parameter after the codec is open. Note that not all codec parameters can be modified during run-time. When the parameter cannot be changed, this function will return non-PJ_SUCCESS, and the original parameters will not be changed.</p>
<p>Application can expect changing trivial codec settings such as changing VAD setting to succeed.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>param</em>&nbsp;</td><td>The new codec parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="a51907e6b79cc595f28a2b46bb26b7d24"></a><!-- doxytag: member="pjmedia_codec_op::parse" ref="a51907e6b79cc595f28a2b46bb26b7d24" args=")(pjmedia_codec *codec, void *pkt, pj_size_t pkt_size, const pj_timestamp *timestamp, unsigned *frame_cnt, pjmedia_frame frames[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#a51907e6b79cc595f28a2b46bb26b7d24">pjmedia_codec_op::parse</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, void *pkt, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pkt_size, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__timestamp.htm">pj_timestamp</a> *timestamp, unsigned *frame_cnt, <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> frames[])</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Instruct the codec to inspect the specified payload/packet and split the packet into individual base frames. Each output frames will have ptime that is equal to basic frame ptime (i.e. the value of info.frm_ptime in <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a>).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pkt</em>&nbsp;</td><td>The input packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pkt_size</em>&nbsp;</td><td>Size of the packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>timestamp</em>&nbsp;</td><td>The timestamp of the first sample in the packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>frame_cnt</em>&nbsp;</td><td>On input, specifies the maximum number of frames in the array. On output, the codec must fill with number of frames detected in the packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>frames</em>&nbsp;</td><td>On output, specifies the frames that have been detected in the packet.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="a51417db9a266ef980d7480000a1edf4f"></a><!-- doxytag: member="pjmedia_codec_op::encode" ref="a51417db9a266ef980d7480000a1edf4f" args=")(pjmedia_codec *codec, const struct pjmedia_frame *input, unsigned out_size, struct pjmedia_frame *output)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#a51417db9a266ef980d7480000a1edf4f">pjmedia_codec_op::encode</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, const struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *input, unsigned out_size, struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *output)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Instruct the codec to encode the specified input frame. The input PCM samples MUST have ptime that is multiplication of base frame ptime (i.e. the value of info.frm_ptime in <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a>).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>input</em>&nbsp;</td><td>The input frame. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>out_size</em>&nbsp;</td><td>The length of buffer in the output frame. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>output</em>&nbsp;</td><td>The output frame.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success; </dd></dl>

</div>
</div>
<a class="anchor" id="afce45b38865973f70bff7ad8edd7d88e"></a><!-- doxytag: member="pjmedia_codec_op::decode" ref="afce45b38865973f70bff7ad8edd7d88e" args=")(pjmedia_codec *codec, const struct pjmedia_frame *input, unsigned out_size, struct pjmedia_frame *output)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#afce45b38865973f70bff7ad8edd7d88e">pjmedia_codec_op::decode</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, const struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *input, unsigned out_size, struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *output)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Instruct the codec to decode the specified input frame. The input frame MUST have ptime that is exactly equal to base frame ptime (i.e. the value of info.frm_ptime in <a class="el" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a>). Application can achieve this by parsing the packet into base frames before decoding each frame.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>input</em>&nbsp;</td><td>The input frame. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>out_size</em>&nbsp;</td><td>The length of buffer in the output frame. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>output</em>&nbsp;</td><td>The output frame.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success; </dd></dl>

</div>
</div>
<a class="anchor" id="a97e514fca6a4055632feb619e556054f"></a><!-- doxytag: member="pjmedia_codec_op::recover" ref="a97e514fca6a4055632feb619e556054f" args=")(pjmedia_codec *codec, unsigned out_size, struct pjmedia_frame *output)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* <a class="el" href="structpjmedia__codec__op.htm#a97e514fca6a4055632feb619e556054f">pjmedia_codec_op::recover</a>)(<a class="el" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="el" href="structcodec.htm">codec</a>, unsigned out_size, struct <a class="el" href="structpjmedia__frame.htm">pjmedia_frame</a> *output)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Instruct the codec to recover a missing frame.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>codec</em>&nbsp;</td><td>The codec instance. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>out_size</em>&nbsp;</td><td>The length of buffer in the output frame. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>output</em>&nbsp;</td><td>The output frame where generated signal will be placed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success; </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="codec_8h.htm">codec.h</a></li>
</ul>
</div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
