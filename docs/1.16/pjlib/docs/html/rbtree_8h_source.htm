<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: rbtree.h Source File (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>rbtree.h</h1>  </div>
</div>
<div class="contents">
<a href="rbtree_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: rbtree.h 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef __PJ_RBTREE_H__</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define __PJ_RBTREE_H__</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="types_8h.htm" title="Declaration of basic types and utility.">pj/types.h</a>&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <a class="code" href="group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a>
<a name="l00031"></a>00031 
<a name="l00043"></a><a class="code" href="group__PJ__RBTREE.htm#gabc60f4c3d6f75c0c757d840bfff405a8">00043</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__PJ__RBTREE.htm#gabc60f4c3d6f75c0c757d840bfff405a8">pj_rbcolor_t</a>
<a name="l00044"></a>00044 {
<a name="l00045"></a>00045     PJ_RBCOLOR_BLACK,
<a name="l00046"></a>00046     PJ_RBCOLOR_RED
<a name="l00047"></a>00047 } pj_rbcolor_t;
<a name="l00048"></a>00048 
<a name="l00052"></a><a class="code" href="structpj__rbtree__node.htm">00052</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> 
<a name="l00053"></a>00053 {
<a name="l00055"></a><a class="code" href="structpj__rbtree__node.htm#a7b84f78c705b6b62c9ca1b830e48658b">00055</a>     <span class="keyword">struct </span><a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *<a class="code" href="structpj__rbtree__node.htm#a7b84f78c705b6b62c9ca1b830e48658b">parent</a>, *left, *right;
<a name="l00056"></a>00056 
<a name="l00058"></a><a class="code" href="structpj__rbtree__node.htm#a355299c20bb933d66dee83c82e3577ff">00058</a>     <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="structpj__rbtree__node.htm#a355299c20bb933d66dee83c82e3577ff">key</a>;
<a name="l00059"></a>00059 
<a name="l00061"></a><a class="code" href="structpj__rbtree__node.htm#ab07011274b77f30b7fa1f70fe24784bf">00061</a>     <span class="keywordtype">void</span> *<a class="code" href="structpj__rbtree__node.htm#ab07011274b77f30b7fa1f70fe24784bf">user_data</a>;
<a name="l00062"></a>00062 
<a name="l00064"></a><a class="code" href="structpj__rbtree__node.htm#a723611f3207e0036d2ba719facc39d09">00064</a>     <a class="code" href="group__PJ__RBTREE.htm#gabc60f4c3d6f75c0c757d840bfff405a8">pj_rbcolor_t</a> <a class="code" href="structpj__rbtree__node.htm#a723611f3207e0036d2ba719facc39d09">color</a>;
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 } <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a>;
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 
<a name="l00076"></a><a class="code" href="group__PJ__RBTREE.htm#ga2988a623a3092152646614050871e75f">00076</a> <span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="group__PJ__RBTREE.htm#ga2988a623a3092152646614050871e75f">pj_rbtree_comp</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *key1, <span class="keyword">const</span> <span class="keywordtype">void</span> *key2);
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 
<a name="l00087"></a><a class="code" href="structpj__rbtree.htm">00087</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__rbtree.htm">pj_rbtree</a>
<a name="l00088"></a>00088 {
<a name="l00089"></a><a class="code" href="structpj__rbtree.htm#af684e5fd112dbfbd947d30dc99b89217">00089</a>     <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> <a class="code" href="structpj__rbtree.htm#af684e5fd112dbfbd947d30dc99b89217">null_node</a>;   
<a name="l00090"></a><a class="code" href="structpj__rbtree.htm#a0967520872e48a290363a385c5f83662">00090</a>     <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *<a class="code" href="structpj__rbtree.htm#a0967520872e48a290363a385c5f83662">null</a>;       
<a name="l00091"></a><a class="code" href="structpj__rbtree.htm#aa34b5278cbbdada762ab2504d00b4983">00091</a>     <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *<a class="code" href="structpj__rbtree.htm#aa34b5278cbbdada762ab2504d00b4983">root</a>;       
<a name="l00092"></a><a class="code" href="structpj__rbtree.htm#a686ea1f3afdb6837e201ab37c1ea6105">00092</a>     <span class="keywordtype">unsigned</span> <a class="code" href="structpj__rbtree.htm#a686ea1f3afdb6837e201ab37c1ea6105">size</a>;              
<a name="l00093"></a><a class="code" href="structpj__rbtree.htm#a79b714c3d1f703a3c6097fae7946bf18">00093</a>     <a class="code" href="group__PJ__RBTREE.htm#ga2988a623a3092152646614050871e75f">pj_rbtree_comp</a> *<a class="code" href="structpj__rbtree.htm#a79b714c3d1f703a3c6097fae7946bf18">comp</a>;       
<a name="l00094"></a>00094 } <a class="code" href="structpj__rbtree.htm">pj_rbtree</a>;
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 
<a name="l00100"></a><a class="code" href="group__PJ__RBTREE.htm#ga486cbda8689f731265731ee8544eb216">00100</a> <span class="preprocessor">#define PJ_RBTREE_NODE_SIZE         (sizeof(pj_rbtree_node))</span>
<a name="l00101"></a>00101 <span class="preprocessor"></span>
<a name="l00102"></a>00102 
<a name="l00106"></a><a class="code" href="group__PJ__RBTREE.htm#gabb70e4245995a56ccd8209fdd58db13f">00106</a> <span class="preprocessor">#define PJ_RBTREE_SIZE              (sizeof(pj_rbtree))</span>
<a name="l00107"></a>00107 <span class="preprocessor"></span>
<a name="l00108"></a>00108 
<a name="l00114"></a>00114 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__RBTREE.htm#ga395aeb318d85e277ffc2fcde99b9c158">pj_rbtree_init</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree, <a class="code" href="group__PJ__RBTREE.htm#ga2988a623a3092152646614050871e75f">pj_rbtree_comp</a> *comp);
<a name="l00115"></a>00115 
<a name="l00123"></a>00123 PJ_DECL(<a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a>*) <a class="code" href="group__PJ__RBTREE.htm#gaa6a2a6629600d6565019b204f2794120">pj_rbtree_first</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree );
<a name="l00124"></a>00124 
<a name="l00132"></a>00132 PJ_DECL(<a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a>*) <a class="code" href="group__PJ__RBTREE.htm#gadbe04630482028d3f1b35c33979317d1">pj_rbtree_last</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree );
<a name="l00133"></a>00133 
<a name="l00141"></a>00141 PJ_DECL(<a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a>*) <a class="code" href="group__PJ__RBTREE.htm#ga91da811545a41a5b9584eb5dc3e365b4">pj_rbtree_next</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree, 
<a name="l00142"></a>00142                                          <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *node );
<a name="l00143"></a>00143 
<a name="l00151"></a>00151 PJ_DECL(<a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a>*) <a class="code" href="group__PJ__RBTREE.htm#ga82bc968b5321a5d48e2ff87f0f949f5c">pj_rbtree_prev</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree, 
<a name="l00152"></a>00152                                          <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *node );
<a name="l00153"></a>00153 
<a name="l00162"></a>00162 PJ_DECL(<span class="keywordtype">int</span>) <a class="code" href="group__PJ__RBTREE.htm#ga1d391aef907c48aa90b02e3b661493d3">pj_rbtree_insert</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree, 
<a name="l00163"></a>00163                                <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *node );
<a name="l00164"></a>00164 
<a name="l00172"></a>00172 PJ_DECL(<a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a>*) <a class="code" href="group__PJ__RBTREE.htm#gaa0590a8bd993076442c5156d6a8e0d2d">pj_rbtree_find</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree,
<a name="l00173"></a>00173                                          const <span class="keywordtype">void</span> *key );
<a name="l00174"></a>00174 
<a name="l00181"></a>00181 PJ_DECL(<a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a>*) <a class="code" href="group__PJ__RBTREE.htm#gabce76bb85b946871ebacb40b2d24cfa7">pj_rbtree_erase</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree,
<a name="l00182"></a>00182                                           <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *node );
<a name="l00183"></a>00183 
<a name="l00190"></a>00190 PJ_DECL(<span class="keywordtype">unsigned</span>) <a class="code" href="group__PJ__RBTREE.htm#ga9f6cd9fb8a1830bdd72fa6e84b568dc9">pj_rbtree_max_height</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree,
<a name="l00191"></a>00191                                         <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *node );
<a name="l00192"></a>00192 
<a name="l00199"></a>00199 PJ_DECL(<span class="keywordtype">unsigned</span>) <a class="code" href="group__PJ__RBTREE.htm#ga021ffcb2a6950685be5078c2daa266d0">pj_rbtree_min_height</a>( <a class="code" href="structpj__rbtree.htm">pj_rbtree</a> *tree,
<a name="l00200"></a>00200                                         <a class="code" href="structpj__rbtree__node.htm">pj_rbtree_node</a> *node );
<a name="l00201"></a>00201 
<a name="l00202"></a>00202 
<a name="l00207"></a>00207 <a class="code" href="group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>
<a name="l00208"></a>00208 
<a name="l00209"></a>00209 <span class="preprocessor">#endif  </span><span class="comment">/* __PJ_RBTREE_H__ */</span>
<a name="l00210"></a>00210 
</pre></div></div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
