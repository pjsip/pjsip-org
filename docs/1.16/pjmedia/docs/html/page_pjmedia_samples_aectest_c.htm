<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Samples: AEC Test (aectest.c) (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Samples: AEC Test (aectest.c) </h1>  </div>
</div>
<div class="contents">
<p>Play a file to speaker, run AEC, and record the microphone input to see if echo is coming.</p>
<p>This file is pjsip-apps/src/samples/aectest.c</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: aectest.c 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;<a class="code" href="pjmedia_8h.htm" title="PJMEDIA main header file.">pjmedia.h</a>&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;pjlib-util.h&gt;</span> <span class="comment">/* pj_getopt */</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;pjlib.h&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="preprocessor">#define THIS_FILE   &quot;aectest.c&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="preprocessor">#define PTIME       20</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">#define TAIL_LENGTH 200</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *desc = 
<a name="l00041"></a>00041 <span class="stringliteral">&quot; FILE                                                              \n&quot;</span>
<a name="l00042"></a>00042 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00043"></a>00043 <span class="stringliteral">&quot;  aectest.c                                                        \n&quot;</span>
<a name="l00044"></a>00044 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00045"></a>00045 <span class="stringliteral">&quot; PURPOSE                                                           \n&quot;</span>
<a name="l00046"></a>00046 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00047"></a>00047 <span class="stringliteral">&quot;  Test the AEC effectiveness.                                      \n&quot;</span>
<a name="l00048"></a>00048 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00049"></a>00049 <span class="stringliteral">&quot; USAGE                                                             \n&quot;</span>
<a name="l00050"></a>00050 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00051"></a>00051 <span class="stringliteral">&quot;  aectest [options] &lt;PLAY.WAV&gt; &lt;REC.WAV&gt; &lt;OUTPUT.WAV&gt;              \n&quot;</span>
<a name="l00052"></a>00052 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00053"></a>00053 <span class="stringliteral">&quot;  &lt;PLAY.WAV&gt;   is the signal played to the speaker.                \n&quot;</span>
<a name="l00054"></a>00054 <span class="stringliteral">&quot;  &lt;REC.WAV&gt;    is the signal captured from the microphone.         \n&quot;</span>
<a name="l00055"></a>00055 <span class="stringliteral">&quot;  &lt;OUTPUT.WAV&gt; is the output file to store the test result         \n&quot;</span>
<a name="l00056"></a>00056 <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00057"></a>00057 <span class="stringliteral">&quot; options:\n&quot;</span>
<a name="l00058"></a>00058 <span class="stringliteral">&quot;  -d  The delay between playback and capture in ms, at least 25 ms.\n&quot;</span>
<a name="l00059"></a>00059 <span class="stringliteral">&quot;      Default is 25 ms. See note below.                            \n&quot;</span>
<a name="l00060"></a>00060 <span class="stringliteral">&quot;  -l  Set the echo tail length in ms. Default is 200 ms            \n&quot;</span>
<a name="l00061"></a>00061 <span class="stringliteral">&quot;  -r  Set repeat count (default=1)                                 \n&quot;</span>
<a name="l00062"></a>00062 <span class="stringliteral">&quot;  -a  Algorithm: 0=default, 1=speex, 3=echo suppress               \n&quot;</span>
<a name="l00063"></a>00063 <span class="stringliteral">&quot;  -i  Interactive                                                  \n&quot;</span>
<a name="l00064"></a>00064 <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00065"></a>00065 <span class="stringliteral">&quot; Note that for the AEC internal buffering mechanism, it is required\n&quot;</span>
<a name="l00066"></a>00066 <span class="stringliteral">&quot; that the echoed signal (in REC.WAV) is delayed from the           \n&quot;</span>
<a name="l00067"></a>00067 <span class="stringliteral">&quot; corresponding reference signal (in PLAY.WAV) at least as much as  \n&quot;</span>
<a name="l00068"></a>00068 <span class="stringliteral">&quot; frame time + PJMEDIA_WSOLA_DELAY_MSEC. In this application, frame \n&quot;</span>
<a name="l00069"></a>00069 <span class="stringliteral">&quot; time is 20 ms and default PJMEDIA_WSOLA_DELAY_MSEC is 5 ms, hence \n&quot;</span>
<a name="l00070"></a>00070 <span class="stringliteral">&quot; 25 ms delay is the minimum value.                                 \n&quot;</span>;
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 <span class="comment">/* </span>
<a name="l00073"></a>00073 <span class="comment"> * Sample session:</span>
<a name="l00074"></a>00074 <span class="comment"> *</span>
<a name="l00075"></a>00075 <span class="comment"> * -d 100 -a 1 ../bin/orig8.wav ../bin/echo8.wav ../bin/result8.wav </span>
<a name="l00076"></a>00076 <span class="comment"> */</span>
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="keyword">static</span> <span class="keywordtype">void</span> app_perror(<span class="keyword">const</span> <span class="keywordtype">char</span> *sender, <span class="keyword">const</span> <span class="keywordtype">char</span> *title, <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> st)
<a name="l00079"></a>00079 {
<a name="l00080"></a>00080     <span class="keywordtype">char</span> errmsg[PJ_ERR_MSG_SIZE];
<a name="l00081"></a>00081 
<a name="l00082"></a>00082     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__errno.htm#ga7d2616aded0d61924fb31f4fd6ee45c0">pj_strerror</a>(st, errmsg, <span class="keyword">sizeof</span>(errmsg));
<a name="l00083"></a>00083     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(sender, <span class="stringliteral">&quot;%s: %s&quot;</span>, title, errmsg));
<a name="l00084"></a>00084 }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 <span class="comment">/*</span>
<a name="l00088"></a>00088 <span class="comment"> * main()</span>
<a name="l00089"></a>00089 <span class="comment"> */</span>
<a name="l00090"></a>00090 <span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
<a name="l00091"></a>00091 {
<a name="l00092"></a>00092     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm">pj_caching_pool</a> cp;
<a name="l00093"></a>00093     <a class="code" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *med_endpt;
<a name="l00094"></a>00094     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a>     *pool;
<a name="l00095"></a>00095     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a>  *wav_play;
<a name="l00096"></a>00096     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a>  *wav_rec;
<a name="l00097"></a>00097     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a>  *wav_out;
<a name="l00098"></a>00098     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00099"></a>00099     <a class="code" href="group__PJMEDIA__Echo__Cancel.htm#gac706b0f94ce48220364fcd65e9c983e0">pjmedia_echo_state</a> *ec;
<a name="l00100"></a>00100     <a class="code" href="structpjmedia__frame.htm">pjmedia_frame</a> play_frame, rec_frame;
<a name="l00101"></a>00101     <span class="keywordtype">unsigned</span> opt = 0;
<a name="l00102"></a>00102     <span class="keywordtype">unsigned</span> latency_ms = 25;
<a name="l00103"></a>00103     <span class="keywordtype">unsigned</span> tail_ms = TAIL_LENGTH;
<a name="l00104"></a>00104     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__timestamp.htm">pj_timestamp</a> t0, t1;
<a name="l00105"></a>00105     <span class="keywordtype">int</span> i, repeat=1, interactive=0, c;
<a name="l00106"></a>00106 
<a name="l00107"></a>00107     <a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga352f0d582d0afbf08306b92dbb5e357d">pj_optind</a> = 0;
<a name="l00108"></a>00108     <span class="keywordflow">while</span> ((c=<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga4b0616c67077cdc496c1bb963c414970">pj_getopt</a>(argc, argv, <span class="stringliteral">&quot;d:l:a:r:i&quot;</span>)) !=-1) {
<a name="l00109"></a>00109         <span class="keywordflow">switch</span> (c) {
<a name="l00110"></a>00110         <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>:
<a name="l00111"></a>00111             latency_ms = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00112"></a>00112             <span class="keywordflow">if</span> (latency_ms &lt; 25) {
<a name="l00113"></a>00113                 puts(<span class="stringliteral">&quot;Invalid delay&quot;</span>);
<a name="l00114"></a>00114                 puts(desc);
<a name="l00115"></a>00115             }
<a name="l00116"></a>00116             <span class="keywordflow">break</span>;
<a name="l00117"></a>00117         <span class="keywordflow">case</span> <span class="charliteral">&#39;l&#39;</span>:
<a name="l00118"></a>00118             tail_ms = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00119"></a>00119             <span class="keywordflow">break</span>;
<a name="l00120"></a>00120         <span class="keywordflow">case</span> <span class="charliteral">&#39;a&#39;</span>:
<a name="l00121"></a>00121             {
<a name="l00122"></a>00122                 <span class="keywordtype">int</span> alg = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00123"></a>00123                 <span class="keywordflow">switch</span> (alg) {
<a name="l00124"></a>00124                 <span class="keywordflow">case</span> 0:
<a name="l00125"></a>00125                     opt = 0;
<a name="l00126"></a>00126                 <span class="keywordflow">case</span> 1:
<a name="l00127"></a>00127                     opt = PJMEDIA_ECHO_SPEEX;
<a name="l00128"></a>00128                     <span class="keywordflow">break</span>;
<a name="l00129"></a>00129                 <span class="keywordflow">case</span> 3:
<a name="l00130"></a>00130                     opt = PJMEDIA_ECHO_SIMPLE;
<a name="l00131"></a>00131                     <span class="keywordflow">break</span>;
<a name="l00132"></a>00132                 <span class="keywordflow">default</span>:
<a name="l00133"></a>00133                     puts(<span class="stringliteral">&quot;Invalid algorithm&quot;</span>);
<a name="l00134"></a>00134                     puts(desc);
<a name="l00135"></a>00135                     <span class="keywordflow">return</span> 1;
<a name="l00136"></a>00136                 }
<a name="l00137"></a>00137             }
<a name="l00138"></a>00138             <span class="keywordflow">break</span>;
<a name="l00139"></a>00139         <span class="keywordflow">case</span> <span class="charliteral">&#39;r&#39;</span>:
<a name="l00140"></a>00140             repeat = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00141"></a>00141             <span class="keywordflow">if</span> (repeat &lt; 1) {
<a name="l00142"></a>00142                 puts(<span class="stringliteral">&quot;Invalid repeat count&quot;</span>);
<a name="l00143"></a>00143                 puts(desc);
<a name="l00144"></a>00144                 <span class="keywordflow">return</span> 1;
<a name="l00145"></a>00145             }
<a name="l00146"></a>00146             <span class="keywordflow">break</span>;
<a name="l00147"></a>00147         <span class="keywordflow">case</span> <span class="charliteral">&#39;i&#39;</span>:
<a name="l00148"></a>00148             interactive = 1;
<a name="l00149"></a>00149             <span class="keywordflow">break</span>;
<a name="l00150"></a>00150         }
<a name="l00151"></a>00151     }
<a name="l00152"></a>00152 
<a name="l00153"></a>00153     <span class="keywordflow">if</span> (argc - <a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga352f0d582d0afbf08306b92dbb5e357d">pj_optind</a> != 3) {
<a name="l00154"></a>00154         puts(<span class="stringliteral">&quot;Error: missing argument(s)&quot;</span>);
<a name="l00155"></a>00155         puts(desc);
<a name="l00156"></a>00156         <span class="keywordflow">return</span> 1;
<a name="l00157"></a>00157     }
<a name="l00158"></a>00158 
<a name="l00159"></a>00159     <span class="comment">/* Must init PJLIB first: */</span>
<a name="l00160"></a>00160     status = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga069615152140fa2df009cebc8a36b769">pj_init</a>();
<a name="l00161"></a>00161     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00162"></a>00162 
<a name="l00163"></a>00163     <span class="comment">/* Must create a pool factory before we can allocate any memory. */</span>
<a name="l00164"></a>00164     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>(&amp;cp, &amp;<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL__FACTORY.htm#ga98cf758eafb888f318a8de7f396f47ca">pj_pool_factory_default_policy</a>, 0);
<a name="l00165"></a>00165 
<a name="l00166"></a>00166     <span class="comment">/* </span>
<a name="l00167"></a>00167 <span class="comment">     * Initialize media endpoint.</span>
<a name="l00168"></a>00168 <span class="comment">     * This will implicitly initialize PJMEDIA too.</span>
<a name="l00169"></a>00169 <span class="comment">     */</span>
<a name="l00170"></a>00170     status = <a class="code" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, NULL, 1, &amp;med_endpt);
<a name="l00171"></a>00171     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00172"></a>00172 
<a name="l00173"></a>00173     <span class="comment">/* Create memory pool for our file player */</span>
<a name="l00174"></a>00174     pool = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>( &amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>,     <span class="comment">/* pool factory         */</span>
<a name="l00175"></a>00175                            <span class="stringliteral">&quot;wav&quot;</span>,           <span class="comment">/* pool name.           */</span>
<a name="l00176"></a>00176                            4000,            <span class="comment">/* init size            */</span>
<a name="l00177"></a>00177                            4000,            <span class="comment">/* increment size       */</span>
<a name="l00178"></a>00178                            NULL             <span class="comment">/* callback on error    */</span>
<a name="l00179"></a>00179                            );
<a name="l00180"></a>00180 
<a name="l00181"></a>00181     <span class="comment">/* Open wav_play */</span>
<a name="l00182"></a>00182     status = <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga987129692be57281a40c836e8749313f">pjmedia_wav_player_port_create</a>(pool, argv[<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga352f0d582d0afbf08306b92dbb5e357d">pj_optind</a>], PTIME, 
<a name="l00183"></a>00183                                             <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#gga090e1b63247b254576a9b20a53bb4568aec9c00b3a775a1b34f1c41ff12bae159">PJMEDIA_FILE_NO_LOOP</a>, 0, 
<a name="l00184"></a>00184                                             &amp;wav_play);
<a name="l00185"></a>00185     <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00186"></a>00186         app_perror(THIS_FILE, <span class="stringliteral">&quot;Error opening playback WAV file&quot;</span>, status);
<a name="l00187"></a>00187         <span class="keywordflow">return</span> 1;
<a name="l00188"></a>00188     }
<a name="l00189"></a>00189     
<a name="l00190"></a>00190     <span class="comment">/* Open recorded wav */</span>
<a name="l00191"></a>00191     status = <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga987129692be57281a40c836e8749313f">pjmedia_wav_player_port_create</a>(pool, argv[<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga352f0d582d0afbf08306b92dbb5e357d">pj_optind</a>+1], PTIME, 
<a name="l00192"></a>00192                                             <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#gga090e1b63247b254576a9b20a53bb4568aec9c00b3a775a1b34f1c41ff12bae159">PJMEDIA_FILE_NO_LOOP</a>, 0, 
<a name="l00193"></a>00193                                             &amp;wav_rec);
<a name="l00194"></a>00194     <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00195"></a>00195         app_perror(THIS_FILE, <span class="stringliteral">&quot;Error opening recorded WAV file&quot;</span>, status);
<a name="l00196"></a>00196         <span class="keywordflow">return</span> 1;
<a name="l00197"></a>00197     }
<a name="l00198"></a>00198 
<a name="l00199"></a>00199     <span class="comment">/* play and rec WAVs must have the same clock rate */</span>
<a name="l00200"></a>00200     <span class="keywordflow">if</span> (wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a> != wav_rec-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a>) {
<a name="l00201"></a>00201         puts(<span class="stringliteral">&quot;Error: clock rate mismatch in the WAV files&quot;</span>);
<a name="l00202"></a>00202         <span class="keywordflow">return</span> 1;
<a name="l00203"></a>00203     }
<a name="l00204"></a>00204 
<a name="l00205"></a>00205     <span class="comment">/* .. and channel count */</span>
<a name="l00206"></a>00206     <span class="keywordflow">if</span> (wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a> != wav_rec-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a>) {
<a name="l00207"></a>00207         puts(<span class="stringliteral">&quot;Error: clock rate mismatch in the WAV files&quot;</span>);
<a name="l00208"></a>00208         <span class="keywordflow">return</span> 1;
<a name="l00209"></a>00209     }
<a name="l00210"></a>00210 
<a name="l00211"></a>00211     <span class="comment">/* Create output wav */</span>
<a name="l00212"></a>00212     status = <a class="code" href="group__PJMEDIA__FILE__REC.htm#ga899268674e9657e8033738bca29621a2">pjmedia_wav_writer_port_create</a>(pool, argv[<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga352f0d582d0afbf08306b92dbb5e357d">pj_optind</a>+2],
<a name="l00213"></a>00213                                             wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a>,
<a name="l00214"></a>00214                                             wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a>,
<a name="l00215"></a>00215                                             wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a>,
<a name="l00216"></a>00216                                             wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a604c79a6c2a4afd930abd1323e8e8d31">bits_per_sample</a>,
<a name="l00217"></a>00217                                             0, 0, &amp;wav_out);
<a name="l00218"></a>00218     <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00219"></a>00219         app_perror(THIS_FILE, <span class="stringliteral">&quot;Error opening output WAV file&quot;</span>, status);
<a name="l00220"></a>00220         <span class="keywordflow">return</span> 1;
<a name="l00221"></a>00221     }
<a name="l00222"></a>00222 
<a name="l00223"></a>00223     <span class="comment">/* Create echo canceller */</span>
<a name="l00224"></a>00224     status = <a class="code" href="group__PJMEDIA__Echo__Cancel.htm#ga0a456fe70e930f3ae6b2b798562708cf">pjmedia_echo_create2</a>(pool, wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a>,
<a name="l00225"></a>00225                                   wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a>,
<a name="l00226"></a>00226                                   wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a>,
<a name="l00227"></a>00227                                   tail_ms, latency_ms,
<a name="l00228"></a>00228                                   opt, &amp;ec);
<a name="l00229"></a>00229     <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00230"></a>00230         app_perror(THIS_FILE, <span class="stringliteral">&quot;Error creating EC&quot;</span>, status);
<a name="l00231"></a>00231         <span class="keywordflow">return</span> 1;
<a name="l00232"></a>00232     }
<a name="l00233"></a>00233 
<a name="l00234"></a>00234 
<a name="l00235"></a>00235     <span class="comment">/* Processing loop */</span>
<a name="l00236"></a>00236     play_frame.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#ga865b3702766960869d1c58429e213cf4">pj_pool_alloc</a>(pool, wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a>&lt;&lt;1);
<a name="l00237"></a>00237     rec_frame.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#ga865b3702766960869d1c58429e213cf4">pj_pool_alloc</a>(pool, wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a>&lt;&lt;1);
<a name="l00238"></a>00238     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__TIMESTAMP.htm#gaa419b8448d1cb55db85aeac2e86fe11c">pj_get_timestamp</a>(&amp;t0);
<a name="l00239"></a>00239     <span class="keywordflow">for</span> (i=0; i &lt; repeat; ++i) {
<a name="l00240"></a>00240         <span class="keywordflow">for</span> (;;) {
<a name="l00241"></a>00241             play_frame.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> &lt;&lt; 1;
<a name="l00242"></a>00242             status = <a class="code" href="group__PJMEDIA__PORT.htm#gabb664bcbd6c07ac3b0b4793a68c9a757">pjmedia_port_get_frame</a>(wav_play, &amp;play_frame);
<a name="l00243"></a>00243             <span class="keywordflow">if</span> (status != PJ_SUCCESS)
<a name="l00244"></a>00244                 <span class="keywordflow">break</span>;
<a name="l00245"></a>00245 
<a name="l00246"></a>00246             status = <a class="code" href="group__PJMEDIA__Echo__Cancel.htm#ga7608226d38a27fdad940450e5b6ea5d3">pjmedia_echo_playback</a>(ec, (<span class="keywordtype">short</span>*)play_frame.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a>);
<a name="l00247"></a>00247 
<a name="l00248"></a>00248             rec_frame.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = wav_play-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> &lt;&lt; 1;
<a name="l00249"></a>00249             status = <a class="code" href="group__PJMEDIA__PORT.htm#gabb664bcbd6c07ac3b0b4793a68c9a757">pjmedia_port_get_frame</a>(wav_rec, &amp;rec_frame);
<a name="l00250"></a>00250             <span class="keywordflow">if</span> (status != PJ_SUCCESS)
<a name="l00251"></a>00251                 <span class="keywordflow">break</span>;
<a name="l00252"></a>00252 
<a name="l00253"></a>00253             status = <a class="code" href="group__PJMEDIA__Echo__Cancel.htm#ga464dcd241b4f71e3d09cdcb204fd2a6f">pjmedia_echo_capture</a>(ec, (<span class="keywordtype">short</span>*)rec_frame.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a>, 0);
<a name="l00254"></a>00254 
<a name="l00255"></a>00255             <span class="comment">//status = pjmedia_echo_cancel(ec, (short*)rec_frame.buf, </span>
<a name="l00256"></a>00256             <span class="comment">//                       (short*)play_frame.buf, 0, NULL);</span>
<a name="l00257"></a>00257 
<a name="l00258"></a>00258             <a class="code" href="group__PJMEDIA__PORT.htm#ga8f5f75da0c30cac7770805472bbfa9d7">pjmedia_port_put_frame</a>(wav_out, &amp;rec_frame);
<a name="l00259"></a>00259         }
<a name="l00260"></a>00260 
<a name="l00261"></a>00261         <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga8f7bfe06452722e745baa0ed79586e20">pjmedia_wav_player_port_set_pos</a>(wav_play, 0);
<a name="l00262"></a>00262         <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga8f7bfe06452722e745baa0ed79586e20">pjmedia_wav_player_port_set_pos</a>(wav_rec, 0);
<a name="l00263"></a>00263     }
<a name="l00264"></a>00264     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__TIMESTAMP.htm#gaa419b8448d1cb55db85aeac2e86fe11c">pj_get_timestamp</a>(&amp;t1);
<a name="l00265"></a>00265 
<a name="l00266"></a>00266     i = <a class="code" href="group__PJMEDIA__FILE__REC.htm#ga3b082dd005f5f05586433d5ce1c52883">pjmedia_wav_writer_port_get_pos</a>(wav_out) / <span class="keyword">sizeof</span>(pj_int16_t) * 1000 / 
<a name="l00267"></a>00267         (wav_out-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a> * wav_out-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a>);
<a name="l00268"></a>00268     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;Processed %3d.%03ds audio&quot;</span>,
<a name="l00269"></a>00269               i / 1000, i % 1000));
<a name="l00270"></a>00270     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;Completed in %u msec\n&quot;</span>, <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__TIMESTAMP.htm#ga2e09f4da6b04d417e1acd11b477ed6a2">pj_elapsed_msec</a>(&amp;t0, &amp;t1)));
<a name="l00271"></a>00271 
<a name="l00272"></a>00272     <span class="comment">/* Destroy file port(s) */</span>
<a name="l00273"></a>00273     status = <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>( wav_play );
<a name="l00274"></a>00274     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00275"></a>00275     status = <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>( wav_rec );
<a name="l00276"></a>00276     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00277"></a>00277     status = <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>( wav_out );
<a name="l00278"></a>00278     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00279"></a>00279 
<a name="l00280"></a>00280     <span class="comment">/* Destroy ec */</span>
<a name="l00281"></a>00281     <a class="code" href="group__PJMEDIA__Echo__Cancel.htm#ga41462cd5b4d358fd8aaed2dc1a5f7d5e">pjmedia_echo_destroy</a>(ec);
<a name="l00282"></a>00282 
<a name="l00283"></a>00283     <span class="comment">/* Release application pool */</span>
<a name="l00284"></a>00284     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release</a>( pool );
<a name="l00285"></a>00285 
<a name="l00286"></a>00286     <span class="comment">/* Destroy media endpoint. */</span>
<a name="l00287"></a>00287     <a class="code" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy</a>( med_endpt );
<a name="l00288"></a>00288 
<a name="l00289"></a>00289     <span class="comment">/* Destroy pool factory */</span>
<a name="l00290"></a>00290     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#ga4c912e7d9e08dae33c2fecea9f1949bc">pj_caching_pool_destroy</a>( &amp;cp );
<a name="l00291"></a>00291 
<a name="l00292"></a>00292     <span class="comment">/* Shutdown PJLIB */</span>
<a name="l00293"></a>00293     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gad42209dcf11f957ed9f1790e30f519cd">pj_shutdown</a>();
<a name="l00294"></a>00294 
<a name="l00295"></a>00295     <span class="keywordflow">if</span> (interactive) {
<a name="l00296"></a>00296         <span class="keywordtype">char</span> s[10], *dummy;
<a name="l00297"></a>00297         puts(<span class="stringliteral">&quot;ENTER to quit&quot;</span>);
<a name="l00298"></a>00298         dummy = fgets(s, <span class="keyword">sizeof</span>(s), stdin);
<a name="l00299"></a>00299     }
<a name="l00300"></a>00300 
<a name="l00301"></a>00301     <span class="comment">/* Done. */</span>
<a name="l00302"></a>00302     <span class="keywordflow">return</span> 0;
<a name="l00303"></a>00303 }
<a name="l00304"></a>00304 
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
