<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: pool.h Source File (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>pool.h</h1>  </div>
</div>
<div class="contents">
<a href="pool_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: pool.h 4395 2013-02-27 12:07:30Z ming $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;<a class="code" href="list_8h.htm" title="Linked List data structure.">pj/list.h</a>&gt;</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">/* See if we use pool&#39;s alternate API.</span>
<a name="l00024"></a>00024 <span class="comment"> * The alternate API is used e.g. to implement pool debugging.</span>
<a name="l00025"></a>00025 <span class="comment"> */</span>
<a name="l00026"></a>00026 <span class="preprocessor">#if PJ_HAS_POOL_ALT_API</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#  include &lt;pj/pool_alt.h&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#endif</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#ifndef __PJ_POOL_H__</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span><span class="preprocessor">#define __PJ_POOL_H__</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span>
<a name="l00039"></a>00039 <a class="code" href="group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a>
<a name="l00040"></a>00040 
<a name="l00294"></a><a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">00294</a> <span class="keyword">typedef</span> <span class="keywordtype">void</span> <a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a>(<a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00295"></a>00295 
<a name="l00300"></a><a class="code" href="structpj__pool__block.htm">00300</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__pool__block.htm">pj_pool_block</a>
<a name="l00301"></a>00301 {
<a name="l00302"></a><a class="code" href="structpj__pool__block.htm#a8f44768d2927a5e19ff6fcb81c79e2f1">00302</a>     <a class="code" href="group__PJ__LIST.htm#ga18f1e5604efeff83af34401b2c447d0a">PJ_DECL_LIST_MEMBER</a>(<span class="keyword">struct</span> <a class="code" href="structpj__pool__block.htm">pj_pool_block</a>);  
<a name="l00303"></a><a class="code" href="structpj__pool__block.htm#a814206215b64082a2d13f7215c1ad717">00303</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>    *<a class="code" href="structpj__pool__block.htm#a814206215b64082a2d13f7215c1ad717">buf</a>;                      
<a name="l00304"></a><a class="code" href="structpj__pool__block.htm#aed125417f9c29a2aa1f3fe6759c6c949">00304</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>    *<a class="code" href="structpj__pool__block.htm#aed125417f9c29a2aa1f3fe6759c6c949">cur</a>;                      
<a name="l00305"></a><a class="code" href="structpj__pool__block.htm#a511670ecd0baf35a6279d95a7bb6d490">00305</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>    *<a class="code" href="structpj__pool__block.htm#a511670ecd0baf35a6279d95a7bb6d490">end</a>;                      
<a name="l00306"></a>00306 } <a class="code" href="structpj__pool__block.htm">pj_pool_block</a>;
<a name="l00307"></a>00307 
<a name="l00308"></a>00308 
<a name="l00313"></a><a class="code" href="structpj__pool__t.htm">00313</a> <span class="keyword">struct </span><a class="code" href="structpj__pool__t.htm">pj_pool_t</a>
<a name="l00314"></a>00314 {
<a name="l00315"></a><a class="code" href="structpj__pool__t.htm#af6c83faf6b00be2f0c6da3a613a04cce">00315</a>     <a class="code" href="group__PJ__LIST.htm#ga18f1e5604efeff83af34401b2c447d0a">PJ_DECL_LIST_MEMBER</a>(<span class="keyword">struct</span> <a class="code" href="structpj__pool__t.htm">pj_pool_t</a>);  
<a name="l00318"></a><a class="code" href="structpj__pool__t.htm#a866a364102fe051f54703ef50f1c41e7">00318</a>     <span class="keywordtype">char</span>            <a class="code" href="structpj__pool__t.htm#a866a364102fe051f54703ef50f1c41e7">obj_name</a>[PJ_MAX_OBJ_NAME];
<a name="l00319"></a>00319 
<a name="l00321"></a><a class="code" href="structpj__pool__t.htm#a0bb68a11ead13d8a58808fa2ae9ba382">00321</a>     <a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a> *<a class="code" href="structpj__pool__t.htm#a0bb68a11ead13d8a58808fa2ae9ba382">factory</a>;
<a name="l00322"></a>00322 
<a name="l00324"></a><a class="code" href="structpj__pool__t.htm#a7770b203723a43c956becbd53f50c4c5">00324</a>     <span class="keywordtype">void</span>            *<a class="code" href="structpj__pool__t.htm#a7770b203723a43c956becbd53f50c4c5">factory_data</a>;
<a name="l00325"></a>00325 
<a name="l00327"></a><a class="code" href="structpj__pool__t.htm#a741910b55f58bb5e70322ade631c5672">00327</a>     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>       <a class="code" href="structpj__pool__t.htm#a741910b55f58bb5e70322ade631c5672">capacity</a>;
<a name="l00328"></a>00328 
<a name="l00330"></a><a class="code" href="structpj__pool__t.htm#a7ac9c09c7ff0dcb4e870b1aa530d61f6">00330</a>     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>       <a class="code" href="structpj__pool__t.htm#a7ac9c09c7ff0dcb4e870b1aa530d61f6">increment_size</a>;
<a name="l00331"></a>00331 
<a name="l00333"></a><a class="code" href="structpj__pool__t.htm#acb88c660d42b4a233636f1e1b0ad231e">00333</a>     <a class="code" href="structpj__pool__block.htm">pj_pool_block</a>   <a class="code" href="structpj__pool__t.htm#acb88c660d42b4a233636f1e1b0ad231e">block_list</a>;
<a name="l00334"></a>00334 
<a name="l00336"></a><a class="code" href="structpj__pool__t.htm#ab5bdcb8a9ce85e95f7533447d799be75">00336</a>     <a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> *<a class="code" href="structpj__pool__t.htm#ab5bdcb8a9ce85e95f7533447d799be75">callback</a>;
<a name="l00337"></a>00337 
<a name="l00338"></a>00338 };
<a name="l00339"></a>00339 
<a name="l00340"></a>00340 
<a name="l00344"></a><a class="code" href="group__PJ__POOL.htm#ga1c2e8be344e0e510145d5888636538be">00344</a> <span class="preprocessor">#define PJ_POOL_SIZE            (sizeof(struct pj_pool_t))</span>
<a name="l00345"></a>00345 <span class="preprocessor"></span>
<a name="l00349"></a>00349 <span class="preprocessor">#ifndef PJ_POOL_ALIGNMENT</span>
<a name="l00350"></a><a class="code" href="group__PJ__POOL.htm#ga83e2da94131c06db0b620d4fc65c6abb">00350</a> <span class="preprocessor"></span><span class="preprocessor">#   define PJ_POOL_ALIGNMENT    4</span>
<a name="l00351"></a>00351 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00352"></a>00352 <span class="preprocessor"></span>
<a name="l00380"></a>00380 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(<a class="code" href="structpj__pool__t.htm">pj_pool_t</a>*) <a class="code" href="group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>(<a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, 
<a name="l00381"></a>00381                                     const <span class="keywordtype">char</span> *name,
<a name="l00382"></a>00382                                     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> initial_size, 
<a name="l00383"></a>00383                                     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> increment_size,
<a name="l00384"></a>00384                                     <a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> *callback);
<a name="l00385"></a>00385 
<a name="l00391"></a>00391 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool );
<a name="l00392"></a>00392 
<a name="l00400"></a>00400 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(const <span class="keywordtype">char</span> *) <a class="code" href="group__PJ__POOL.htm#gabdba41c449585e8fa029d3196c713560">pj_pool_getobjname</a>( const <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool );
<a name="l00401"></a>00401 
<a name="l00411"></a>00411 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__POOL.htm#ga8bfe679642e35ec7f1f6704f55a1610c">pj_pool_reset</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool );
<a name="l00412"></a>00412 
<a name="l00413"></a>00413 
<a name="l00424"></a>00424 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(<a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>) <a class="code" href="group__PJ__POOL.htm#ga5442c928338775d194cc57c3fb7652a2">pj_pool_get_capacity</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool );
<a name="l00425"></a>00425 
<a name="l00433"></a>00433 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(<a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>) <a class="code" href="group__PJ__POOL.htm#ga235684dba5b7eb06e2fe9a68a84acfb1">pj_pool_get_used_size</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool );
<a name="l00434"></a>00434 
<a name="l00447"></a>00447 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(<span class="keywordtype">void</span>*) <a class="code" href="group__PJ__POOL.htm#ga865b3702766960869d1c58429e213cf4">pj_pool_alloc</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00448"></a>00448 
<a name="l00460"></a>00460 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(<span class="keywordtype">void</span>*) <a class="code" href="group__PJ__POOL.htm#gadbfad2994a9bf4a86ce81f5726d4502c">pj_pool_calloc</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> count, 
<a name="l00461"></a>00461                                 <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> elem);
<a name="l00462"></a>00462 
<a name="l00463"></a>00463 
<a name="l00474"></a><a class="code" href="group__PJ__POOL.htm#ga4ecb4c956f18e49b20308ffd075b0b40">00474</a> <a class="code" href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>(<span class="keywordtype">void</span>*) <a class="code" href="group__PJ__POOL.htm#ga4ecb4c956f18e49b20308ffd075b0b40">pj_pool_zalloc</a>(<a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)
<a name="l00475"></a>00475 {
<a name="l00476"></a>00476     <span class="keywordflow">return</span> <a class="code" href="group__PJ__POOL.htm#gadbfad2994a9bf4a86ce81f5726d4502c">pj_pool_calloc</a>(pool, 1, size);
<a name="l00477"></a>00477 }
<a name="l00478"></a>00478 
<a name="l00479"></a>00479 
<a name="l00491"></a><a class="code" href="group__PJ__POOL.htm#ga6763322fc7956e3c1aac87cb250f8b86">00491</a> <span class="preprocessor">#define PJ_POOL_ALLOC_T(pool,type) \</span>
<a name="l00492"></a>00492 <span class="preprocessor">            ((type*)pj_pool_alloc(pool, sizeof(type)))</span>
<a name="l00493"></a>00493 <span class="preprocessor"></span>
<a name="l00505"></a><a class="code" href="group__PJ__POOL.htm#ga405d1dbb6728b1d1bd90ddadb9342b27">00505</a> <span class="preprocessor">#define PJ_POOL_ZALLOC_T(pool,type) \</span>
<a name="l00506"></a>00506 <span class="preprocessor">            ((type*)pj_pool_zalloc(pool, sizeof(type)))</span>
<a name="l00507"></a>00507 <span class="preprocessor"></span>
<a name="l00508"></a>00508 <span class="comment">/*</span>
<a name="l00509"></a>00509 <span class="comment"> * Internal functions</span>
<a name="l00510"></a>00510 <span class="comment"> */</span>
<a name="l00511"></a>00511 <a class="code" href="group__pj__config.htm#ga73e8d006fcb35f1d9eed107c93be3de6">PJ_IDECL</a>(<span class="keywordtype">void</span>*) pj_pool_alloc_from_block(<a class="code" href="structpj__pool__block.htm">pj_pool_block</a> *block, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00512"></a>00512 PJ_DECL(<span class="keywordtype">void</span>*) pj_pool_allocate_find(<a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00513"></a>00513 
<a name="l00514"></a>00514 
<a name="l00515"></a>00515         
<a name="l00520"></a>00520 <span class="comment">/* **************************************************************************/</span>
<a name="l00569"></a>00569 <span class="comment">/* We unfortunately don&#39;t have support for factory policy options as now,</span>
<a name="l00570"></a>00570 <span class="comment">   so we keep this commented at the moment.</span>
<a name="l00571"></a>00571 <span class="comment">enum PJ_POOL_FACTORY_OPTION</span>
<a name="l00572"></a>00572 <span class="comment">{</span>
<a name="l00573"></a>00573 <span class="comment">    PJ_POOL_FACTORY_SERIALIZE = 1</span>
<a name="l00574"></a>00574 <span class="comment">};</span>
<a name="l00575"></a>00575 <span class="comment">*/</span>
<a name="l00576"></a>00576 
<a name="l00580"></a><a class="code" href="structpj__pool__factory__policy.htm">00580</a> typedef struct <a class="code" href="structpj__pool__factory__policy.htm">pj_pool_factory_policy</a>
<a name="l00581"></a>00581 {
<a name="l00591"></a><a class="code" href="structpj__pool__factory__policy.htm#a395356ab6e6415e59bbf5918fc3979e1">00591</a>     <span class="keywordtype">void</span>* (*block_alloc)(<a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00592"></a>00592 
<a name="l00600"></a><a class="code" href="structpj__pool__factory__policy.htm#a5d5d9564d71bf75b9d33d4a08534cb9d">00600</a>     void (*block_free)(<a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, <span class="keywordtype">void</span> *mem, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00601"></a>00601 
<a name="l00605"></a><a class="code" href="structpj__pool__factory__policy.htm#a899ada3e06f71cee62b0a6216162ef44">00605</a>     <a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> *callback;
<a name="l00606"></a>00606 
<a name="l00610"></a><a class="code" href="structpj__pool__factory__policy.htm#a6f1c48a73e2db012717ace46581cd999">00610</a>     <span class="keywordtype">unsigned</span> flags;
<a name="l00611"></a>00611 
<a name="l00612"></a>00612 } <a class="code" href="structpj__pool__factory__policy.htm">pj_pool_factory_policy</a>;
<a name="l00613"></a>00613 
<a name="l00621"></a><a class="code" href="group__PJ__POOL__FACTORY.htm#ga1e63ea214df265fa5f145e2837552a45">00621</a> PJ_DECL_DATA(<span class="keywordtype">int</span>) <a class="code" href="group__PJ__POOL__FACTORY.htm#ga1e63ea214df265fa5f145e2837552a45">PJ_NO_MEMORY_EXCEPTION</a>;
<a name="l00622"></a>00622 
<a name="l00626"></a>00626 PJ_DECL(<span class="keywordtype">int</span>) <a class="code" href="group__PJ__POOL__FACTORY.htm#gac5d07e3f819942fb881a9f8b777fd0b1">pj_NO_MEMORY_EXCEPTION</a>(<span class="keywordtype">void</span>);
<a name="l00627"></a>00627 
<a name="l00637"></a><a class="code" href="group__PJ__POOL__FACTORY.htm#ga98cf758eafb888f318a8de7f396f47ca">00637</a> PJ_DECL_DATA(<a class="code" href="structpj__pool__factory__policy.htm">pj_pool_factory_policy</a>) <a class="code" href="group__PJ__POOL__FACTORY.htm#ga98cf758eafb888f318a8de7f396f47ca">pj_pool_factory_default_policy</a>;
<a name="l00638"></a>00638 
<a name="l00639"></a>00639 
<a name="l00645"></a>00645 PJ_DECL(const <a class="code" href="structpj__pool__factory__policy.htm">pj_pool_factory_policy</a>*) <a class="code" href="group__PJ__POOL__FACTORY.htm#gafda24706943d2771cc93549afeb04b5c">pj_pool_factory_get_default_policy</a>(<span class="keywordtype">void</span>);
<a name="l00646"></a>00646 
<a name="l00647"></a>00647 
<a name="l00651"></a><a class="code" href="structpj__pool__factory.htm">00651</a> struct <a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a>
<a name="l00652"></a>00652 {
<a name="l00656"></a><a class="code" href="structpj__pool__factory.htm#a767d5e5bd2bf77fa6d10ef79b34e8e29">00656</a>     <a class="code" href="structpj__pool__factory__policy.htm">pj_pool_factory_policy</a> policy;
<a name="l00657"></a>00657 
<a name="l00682"></a><a class="code" href="structpj__pool__factory.htm#a40b56aed69ae485cd954649fe6ad3648">00682</a>     <a class="code" href="structpj__pool__t.htm">pj_pool_t</a>*  (*create_pool)( pj_pool_factory *factory,
<a name="l00683"></a>00683                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l00684"></a>00684                                 <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> initial_size, 
<a name="l00685"></a>00685                                 <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> increment_size,
<a name="l00686"></a>00686                                 <a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> *callback);
<a name="l00687"></a>00687 
<a name="l00694"></a><a class="code" href="structpj__pool__factory.htm#aa0129e28377d50ff9cf950b5215d003b">00694</a>     void (*release_pool)( pj_pool_factory *factory, <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool );
<a name="l00695"></a>00695 
<a name="l00701"></a><a class="code" href="structpj__pool__factory.htm#ac21dccb7cf8df7bcd730c84c09f48f21">00701</a>     void (*dump_status)( pj_pool_factory *factory, <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> detail );
<a name="l00702"></a>00702 
<a name="l00715"></a><a class="code" href="structpj__pool__factory.htm#ae4cdbe472198f8d3f18243115ad2079c">00715</a>     <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> (*on_block_alloc)(pj_pool_factory *factory, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00716"></a>00716 
<a name="l00726"></a><a class="code" href="structpj__pool__factory.htm#acf615aa07dacd92c907084d480f76a65">00726</a>     void (*on_block_free)(pj_pool_factory *factory, <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size);
<a name="l00727"></a>00727 
<a name="l00728"></a>00728 };
<a name="l00729"></a>00729 
<a name="l00739"></a>00739 PJ_DECL(<a class="code" href="structpj__pool__t.htm">pj_pool_t</a>*) <a class="code" href="group__PJ__POOL__FACTORY.htm#ga1abb2de436e6d4c7db3bcc13b8ce967e">pj_pool_create_int</a>( <a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, 
<a name="l00740"></a>00740                                         const <span class="keywordtype">char</span> *name,
<a name="l00741"></a>00741                                         <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> initial_size, 
<a name="l00742"></a>00742                                         <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> increment_size,
<a name="l00743"></a>00743                                         <a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> *callback);
<a name="l00744"></a>00744 
<a name="l00752"></a>00752 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__POOL__FACTORY.htm#gaf3038a0811c30b68619747334244078f">pj_pool_init_int</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool, 
<a name="l00753"></a>00753                                 const <span class="keywordtype">char</span> *name,
<a name="l00754"></a>00754                                 <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> increment_size,
<a name="l00755"></a>00755                                 <a class="code" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> *callback);
<a name="l00756"></a>00756 
<a name="l00761"></a>00761 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__POOL__FACTORY.htm#gad9581731588a21cdf4461493829f6b29">pj_pool_destroy_int</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool );
<a name="l00762"></a>00762 
<a name="l00763"></a>00763 
<a name="l00769"></a><a class="code" href="group__PJ__POOL__FACTORY.htm#gac01712a96e2e33528f6b4e0c44c229b5">00769</a> <a class="code" href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__POOL__FACTORY.htm#gac01712a96e2e33528f6b4e0c44c229b5">pj_pool_factory_dump</a>( <a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a> *pf,
<a name="l00770"></a>00770                                       <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> detail )
<a name="l00771"></a>00771 {
<a name="l00772"></a>00772     (*pf-&gt;dump_status)(pf, detail);
<a name="l00773"></a>00773 }
<a name="l00774"></a>00774 
<a name="l00779"></a>00779 <span class="comment">/* **************************************************************************/</span>
<a name="l00780"></a>00780 
<a name="l00800"></a><a class="code" href="group__PJ__CACHING__POOL.htm#gaab4b67d443e59e3da94eef050d3771e3">00800</a> <span class="preprocessor">#define PJ_CACHING_POOL_ARRAY_SIZE      16</span>
<a name="l00801"></a>00801 <span class="preprocessor"></span>
<a name="l00808"></a><a class="code" href="structpj__caching__pool.htm">00808</a> <span class="keyword">struct </span><a class="code" href="structpj__caching__pool.htm">pj_caching_pool</a> 
<a name="l00809"></a>00809 {
<a name="l00811"></a><a class="code" href="structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">00811</a>     <a class="code" href="structpj__pool__factory.htm">pj_pool_factory</a> <a class="code" href="structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>;
<a name="l00812"></a>00812 
<a name="l00819"></a><a class="code" href="structpj__caching__pool.htm#ab37c22934a74c2a323a60a1d63c2faf2">00819</a>     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>       <a class="code" href="structpj__caching__pool.htm#ab37c22934a74c2a323a60a1d63c2faf2">capacity</a>;
<a name="l00820"></a>00820 
<a name="l00826"></a><a class="code" href="structpj__caching__pool.htm#a6e8ae839188eee356cbc0cdbbcd71a62">00826</a>     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>       <a class="code" href="structpj__caching__pool.htm#a6e8ae839188eee356cbc0cdbbcd71a62">max_capacity</a>;
<a name="l00827"></a>00827 
<a name="l00833"></a><a class="code" href="structpj__caching__pool.htm#af478fd77c170b604c87337adca02607a">00833</a>     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>       <a class="code" href="structpj__caching__pool.htm#af478fd77c170b604c87337adca02607a">used_count</a>;
<a name="l00834"></a>00834 
<a name="l00838"></a><a class="code" href="structpj__caching__pool.htm#a765d23af5664d99404ead10f295c0b74">00838</a>     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>       <a class="code" href="structpj__caching__pool.htm#a765d23af5664d99404ead10f295c0b74">used_size</a>;
<a name="l00839"></a>00839 
<a name="l00844"></a><a class="code" href="structpj__caching__pool.htm#a35969ade75058f069f8f89a9365083ed">00844</a>     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>       <a class="code" href="structpj__caching__pool.htm#a35969ade75058f069f8f89a9365083ed">peak_used_size</a>;
<a name="l00845"></a>00845 
<a name="l00849"></a><a class="code" href="structpj__caching__pool.htm#ae2e6f8fd12b1ea85041548181b20486c">00849</a>     <a class="code" href="structpj__list.htm">pj_list</a>         <a class="code" href="structpj__caching__pool.htm#ae2e6f8fd12b1ea85041548181b20486c">free_list</a>[PJ_CACHING_POOL_ARRAY_SIZE];
<a name="l00850"></a>00850 
<a name="l00854"></a><a class="code" href="structpj__caching__pool.htm#a7d6fa4949f2afdfd90358874a0bfdb66">00854</a>     <a class="code" href="structpj__list.htm">pj_list</a>         <a class="code" href="structpj__caching__pool.htm#a7d6fa4949f2afdfd90358874a0bfdb66">used_list</a>;
<a name="l00855"></a>00855 
<a name="l00859"></a><a class="code" href="structpj__caching__pool.htm#a0ca0a37e2d42e12c8133e13d29643955">00859</a>     <span class="keywordtype">char</span>            <a class="code" href="structpj__caching__pool.htm#a0ca0a37e2d42e12c8133e13d29643955">pool_buf</a>[256 * (<span class="keyword">sizeof</span>(long) / 4)];
<a name="l00860"></a>00860 
<a name="l00864"></a><a class="code" href="structpj__caching__pool.htm#a8c52deb4260066621787a70a55f88b3a">00864</a>     <a class="code" href="group__PJ__BASIC.htm#ga3dc49084043901d31c7b12e5afc9fb2f">pj_lock_t</a>      *<a class="code" href="structpj__caching__pool.htm#a8c52deb4260066621787a70a55f88b3a">lock</a>;
<a name="l00865"></a>00865 };
<a name="l00866"></a>00866 
<a name="l00867"></a>00867 
<a name="l00868"></a>00868 
<a name="l00880"></a>00880 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>( <a class="code" href="structpj__caching__pool.htm">pj_caching_pool</a> *ch_pool, 
<a name="l00881"></a>00881                                     const <a class="code" href="structpj__pool__factory__policy.htm">pj_pool_factory_policy</a> *policy,
<a name="l00882"></a>00882                                     <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> max_capacity);
<a name="l00883"></a>00883 
<a name="l00884"></a>00884 
<a name="l00890"></a>00890 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__CACHING__POOL.htm#ga4c912e7d9e08dae33c2fecea9f1949bc">pj_caching_pool_destroy</a>( <a class="code" href="structpj__caching__pool.htm">pj_caching_pool</a> *ch_pool );
<a name="l00891"></a>00891 
<a name="l00896"></a>00896 <span class="preprocessor">#  if PJ_FUNCTIONS_ARE_INLINED</span>
<a name="l00897"></a>00897 <span class="preprocessor"></span><span class="preprocessor">#    include &quot;pool_i.h&quot;</span>
<a name="l00898"></a>00898 <span class="preprocessor">#  endif</span>
<a name="l00899"></a>00899 <span class="preprocessor"></span>
<a name="l00900"></a>00900 <a class="code" href="group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>
<a name="l00901"></a>00901     
<a name="l00902"></a>00902 <span class="preprocessor">#endif  </span><span class="comment">/* __PJ_POOL_H__ */</span>
<a name="l00903"></a>00903 
</pre></div></div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
