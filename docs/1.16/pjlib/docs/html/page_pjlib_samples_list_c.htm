<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: Example: List Manipulation (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Example: List Manipulation </h1>  </div>
</div>
<div class="contents">
<p>Below is sample program to demonstrate how to manipulate linked list.</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: list.c 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 <span class="preprocessor">#include &lt;<a class="code" href="list_8h.htm" title="Linked List data structure.">pj/list.h</a>&gt;</span>
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;<a class="code" href="assert_8h.htm" title="Assertion macro pj_assert().">pj/assert.h</a>&gt;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;<a class="code" href="log_8h.htm" title="Logging Utility.">pj/log.h</a>&gt;</span>
<a name="l00023"></a>00023 
<a name="l00032"></a>00032 <span class="keyword">struct </span><a class="code" href="structmy__node.htm">my_node</a>
<a name="l00033"></a>00033 {
<a name="l00034"></a>00034     <span class="comment">// This must be the first member declared in the struct!</span>
<a name="l00035"></a>00035     <a class="code" href="group__PJ__LIST.htm#ga18f1e5604efeff83af34401b2c447d0a">PJ_DECL_LIST_MEMBER</a>(<span class="keyword">struct</span> <a class="code" href="structmy__node.htm">my_node</a>);
<a name="l00036"></a>00036     <span class="keywordtype">int</span> value;
<a name="l00037"></a>00037 };
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="keywordtype">int</span> main()
<a name="l00041"></a>00041 {
<a name="l00042"></a>00042     <span class="keyword">struct </span><a class="code" href="structmy__node.htm">my_node</a> nodes[10];
<a name="l00043"></a>00043     <span class="keyword">struct </span><a class="code" href="structmy__node.htm">my_node</a> list;
<a name="l00044"></a>00044     <span class="keyword">struct </span><a class="code" href="structmy__node.htm">my_node</a> *it;
<a name="l00045"></a>00045     <span class="keywordtype">int</span> i;
<a name="l00046"></a>00046     
<a name="l00047"></a>00047     <span class="comment">// Initialize the list as empty.</span>
<a name="l00048"></a>00048     <a class="code" href="group__PJ__LIST.htm#ga0f39ad164f2124e6d42d1c2e7a5926dc">pj_list_init</a>(&amp;list);
<a name="l00049"></a>00049     
<a name="l00050"></a>00050     <span class="comment">// Insert nodes.</span>
<a name="l00051"></a>00051     <span class="keywordflow">for</span> (i=0; i&lt;10; ++i) {
<a name="l00052"></a>00052         nodes[i].value = i;
<a name="l00053"></a>00053         <a class="code" href="group__PJ__LIST.htm#gace71471e1fecac2cef8416c144925176">pj_list_insert_before</a>(&amp;list, &amp;nodes[i]);
<a name="l00054"></a>00054     }
<a name="l00055"></a>00055     
<a name="l00056"></a>00056     <span class="comment">// Iterate list nodes.</span>
<a name="l00057"></a>00057     it = list.<a class="code" href="structmy__node.htm#ad017bc9879e48dfb94f7ff4c1daab8cc">next</a>;
<a name="l00058"></a>00058     <span class="keywordflow">while</span> (it != &amp;list) {
<a name="l00059"></a>00059         <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(<span class="stringliteral">&quot;list&quot;</span>, <span class="stringliteral">&quot;value = %d&quot;</span>, it-&gt;value));
<a name="l00060"></a>00060         it = it-&gt;<a class="code" href="structmy__node.htm#ad017bc9879e48dfb94f7ff4c1daab8cc">next</a>;
<a name="l00061"></a>00061     }
<a name="l00062"></a>00062     
<a name="l00063"></a>00063     <span class="comment">// Erase all nodes.</span>
<a name="l00064"></a>00064     <span class="keywordflow">for</span> (i=0; i&lt;10; ++i) {
<a name="l00065"></a>00065         <a class="code" href="group__PJ__LIST.htm#ga2781509d8fc3708b88f897482bf85207">pj_list_erase</a>(&amp;nodes[i]);
<a name="l00066"></a>00066     }
<a name="l00067"></a>00067     
<a name="l00068"></a>00068     <span class="comment">// List must be empty by now.</span>
<a name="l00069"></a>00069     <a class="code" href="group__pj__assert.htm#ga981d47a5e9d7e9655473244839f0f5d3">pj_assert</a>( <a class="code" href="group__PJ__LIST.htm#ga73af60d46c342d0f4f837fffcd327ded">pj_list_empty</a>(&amp;list) );
<a name="l00070"></a>00070     
<a name="l00071"></a>00071     <span class="keywordflow">return</span> 0;
<a name="l00072"></a>00072 };
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
