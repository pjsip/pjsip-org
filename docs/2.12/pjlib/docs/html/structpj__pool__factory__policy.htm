<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj_pool_factory_policy Struct Reference (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">pj_pool_factory_policy Struct Reference<div class="ingroups"><a class="el" href="group__PJ__POOL__GROUP.htm">Fast Memory Pool</a> &raquo; <a class="el" href="group__PJ__POOL__FACTORY.htm">Pool Factory and Policy</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a395356ab6e6415e59bbf5918fc3979e1"><td class="memItemLeft" align="right" valign="top">void *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__pool__factory__policy.htm#a395356ab6e6415e59bbf5918fc3979e1">block_alloc</a> )(<a class="el" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, <a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr class="separator:a395356ab6e6415e59bbf5918fc3979e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5d9564d71bf75b9d33d4a08534cb9d"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__pool__factory__policy.htm#a5d5d9564d71bf75b9d33d4a08534cb9d">block_free</a> )(<a class="el" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, void *mem, <a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr class="separator:a5d5d9564d71bf75b9d33d4a08534cb9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a899ada3e06f71cee62b0a6216162ef44"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__pool__factory__policy.htm#a899ada3e06f71cee62b0a6216162ef44">callback</a></td></tr>
<tr class="separator:a899ada3e06f71cee62b0a6216162ef44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f1c48a73e2db012717ace46581cd999"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__pool__factory__policy.htm#a6f1c48a73e2db012717ace46581cd999">flags</a></td></tr>
<tr class="separator:a6f1c48a73e2db012717ace46581cd999"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This structure declares pool factory interface. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a395356ab6e6415e59bbf5918fc3979e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a395356ab6e6415e59bbf5918fc3979e1">&#9670;&nbsp;</a></span>block_alloc</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void *(* pj_pool_factory_policy::block_alloc)(<a class="el" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, <a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allocate memory block (for use by pool). This function is called by memory pool to allocate memory block.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">factory</td><td>Pool factory. </td></tr>
    <tr><td class="paramname">size</td><td>The size of memory block to allocate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Memory block. </dd></dl>

</div>
</div>
<a id="a5d5d9564d71bf75b9d33d4a08534cb9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d5d9564d71bf75b9d33d4a08534cb9d">&#9670;&nbsp;</a></span>block_free</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_pool_factory_policy::block_free)(<a class="el" href="structpj__pool__factory.htm">pj_pool_factory</a> *factory, void *mem, <a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Free memory block.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">factory</td><td>Pool factory. </td></tr>
    <tr><td class="paramname">mem</td><td>Memory block previously allocated by <a class="el" href="structpj__pool__factory__policy.htm#a395356ab6e6415e59bbf5918fc3979e1">block_alloc()</a>. </td></tr>
    <tr><td class="paramname">size</td><td>The size of memory block. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a899ada3e06f71cee62b0a6216162ef44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a899ada3e06f71cee62b0a6216162ef44">&#9670;&nbsp;</a></span>callback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__POOL.htm#gabffd362d92627d62c4498b7efe0ae62a">pj_pool_callback</a> * pj_pool_factory_policy::callback</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Default callback to be called when memory allocation fails. </p>

</div>
</div>
<a id="a6f1c48a73e2db012717ace46581cd999"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f1c48a73e2db012717ace46581cd999">&#9670;&nbsp;</a></span>flags</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj_pool_factory_policy::flags</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Option flags. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li><a class="el" href="pool_8h_source.htm">pool.h</a></li>
<li><a class="el" href="pool__alt_8h_source.htm">pool_alt.h</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
