<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>RTP Session and Encapsulation (RFC 3550) (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">RTP Session and Encapsulation (RFC 3550)<div class="ingroups"><a class="el" href="group__PJMEDIA__SESSION.htm">Media Sessions</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>RTP format and session management.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__ext__hdr.htm">pjmedia_rtp_ext_hdr</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__dec__hdr.htm">pjmedia_rtp_dec_hdr</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__dtmf__event.htm">pjmedia_rtp_dtmf_event</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__seq__session.htm">pjmedia_rtp_seq_session</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__status.htm">pjmedia_rtp_status</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtp__session__setting.htm">pjmedia_rtp_session_setting</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga430a789018d85366506e33887b7c0b95"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#ga430a789018d85366506e33887b7c0b95">PJMEDIA_RTP_DTMF_EVENT_END_MASK</a>&#160;&#160;&#160;0x80</td></tr>
<tr class="separator:ga430a789018d85366506e33887b7c0b95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3abb514be3751ed8cc3aa07f0e00f7b1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#ga3abb514be3751ed8cc3aa07f0e00f7b1">PJMEDIA_RTP_DTMF_EVENT_VOLUME_MASK</a>&#160;&#160;&#160;0x3F</td></tr>
<tr class="separator:ga3abb514be3751ed8cc3aa07f0e00f7b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac5fc46bc1de6eb2620c2a28d20578c77"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#gac5fc46bc1de6eb2620c2a28d20578c77">pjmedia_rtp_session_init</a> (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *ses, int default_pt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> sender_ssrc)</td></tr>
<tr class="separator:gac5fc46bc1de6eb2620c2a28d20578c77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa239546773e58d3d78fc52c1a838c9be"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#gaa239546773e58d3d78fc52c1a838c9be">pjmedia_rtp_session_init2</a> (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *ses, <a class="el" href="structpjmedia__rtp__session__setting.htm">pjmedia_rtp_session_setting</a> settings)</td></tr>
<tr class="separator:gaa239546773e58d3d78fc52c1a838c9be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7052667cdb593ec24c95b98a46227ce2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#ga7052667cdb593ec24c95b98a46227ce2">pjmedia_rtp_encode_rtp</a> (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *ses, int pt, int m, int payload_len, int ts_len, const void **rtphdr, int *hdrlen)</td></tr>
<tr class="separator:ga7052667cdb593ec24c95b98a46227ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa82e024f28c4796159d3d9bbe9c93ec"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#gaaa82e024f28c4796159d3d9bbe9c93ec">pjmedia_rtp_decode_rtp</a> (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *ses, const void *pkt, int pkt_len, const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> **hdr, const void **payload, unsigned *payloadlen)</td></tr>
<tr class="separator:gaaa82e024f28c4796159d3d9bbe9c93ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2aa573f28ee77dc1de1d528e55a79841"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#ga2aa573f28ee77dc1de1d528e55a79841">pjmedia_rtp_decode_rtp2</a> (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *ses, const void *pkt, int pkt_len, const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> **hdr, <a class="el" href="structpjmedia__rtp__dec__hdr.htm">pjmedia_rtp_dec_hdr</a> *dec_hdr, const void **payload, unsigned *payloadlen)</td></tr>
<tr class="separator:ga2aa573f28ee77dc1de1d528e55a79841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d9b33a67b04a25c38d625131809247f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#ga9d9b33a67b04a25c38d625131809247f">pjmedia_rtp_session_update</a> (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *ses, const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> *hdr, <a class="el" href="structpjmedia__rtp__status.htm">pjmedia_rtp_status</a> *seq_st)</td></tr>
<tr class="separator:ga9d9b33a67b04a25c38d625131809247f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d121faab7a6a62a721eb73890e91e2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#ga3d121faab7a6a62a721eb73890e91e2b">pjmedia_rtp_session_update2</a> (<a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *ses, const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> *hdr, <a class="el" href="structpjmedia__rtp__status.htm">pjmedia_rtp_status</a> *seq_st, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> check_pt)</td></tr>
<tr class="separator:ga3d121faab7a6a62a721eb73890e91e2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa4d7f3c6fac7225fe3486799c86973b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#gaa4d7f3c6fac7225fe3486799c86973b8">pjmedia_rtp_seq_init</a> (<a class="el" href="structpjmedia__rtp__seq__session.htm">pjmedia_rtp_seq_session</a> *seq_ctrl, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga47506d8dde1056c5c96d62f0df6ddf28">pj_uint16_t</a> seq)</td></tr>
<tr class="separator:gaa4d7f3c6fac7225fe3486799c86973b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfe1ac80080d9381ec9b9b319632c35d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTP.htm#gacfe1ac80080d9381ec9b9b319632c35d">pjmedia_rtp_seq_update</a> (<a class="el" href="structpjmedia__rtp__seq__session.htm">pjmedia_rtp_seq_session</a> *seq_ctrl, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga47506d8dde1056c5c96d62f0df6ddf28">pj_uint16_t</a> seq, <a class="el" href="structpjmedia__rtp__status.htm">pjmedia_rtp_status</a> *seq_status)</td></tr>
<tr class="separator:gacfe1ac80080d9381ec9b9b319632c35d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >The RTP module is designed to be dependent only to PJLIB, it does not depend on any other parts of PJMEDIA library. The RTP module does not even depend on any transports (sockets), to promote even more use, such as in DSP development (where transport may be handled by different processor).</p>
<p >An RTCP implementation is available, in separate module. Please see <a class="el" href="group__PJMED__RTCP.htm">RTCP Session and Encapsulation (RFC 3550)</a>.</p>
<p >The functions that are provided by this module:</p><ul>
<li>creating RTP header for each outgoing packet.</li>
<li>decoding RTP packet into RTP header and payload.</li>
<li>provide simple RTP session management (sequence number, etc.)</li>
</ul>
<p >The RTP module does not use any dynamic memory at all.</p>
<h1><a class="anchor" id="P1"></a>
How to Use the RTP Module</h1>
<p >First application must call <a class="el" href="group__PJMED__RTP.htm#gac5fc46bc1de6eb2620c2a28d20578c77">pjmedia_rtp_session_init()</a> to initialize the RTP session.</p>
<p >When application wants to send RTP packet, it needs to call <a class="el" href="group__PJMED__RTP.htm#ga7052667cdb593ec24c95b98a46227ce2">pjmedia_rtp_encode_rtp()</a> to build the RTP header. Note that this WILL NOT build the complete RTP packet, but instead only the header. Application can then either concatenate the header with the payload, or send the two fragments (the header and the payload) using scatter-gather transport API (e.g. <em>sendv()</em>).</p>
<p >When application receives an RTP packet, first it should call <a class="el" href="group__PJMED__RTP.htm#gaaa82e024f28c4796159d3d9bbe9c93ec">pjmedia_rtp_decode_rtp</a> to decode RTP header and payload, then it should call <a class="el" href="group__PJMED__RTP.htm#ga9d9b33a67b04a25c38d625131809247f">pjmedia_rtp_session_update</a> to check whether we can process the RTP payload, and to let the RTP session updates its internal status. The decode function is guaranteed to point the payload to the correct position regardless of any options present in the RTP packet. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga430a789018d85366506e33887b7c0b95" name="ga430a789018d85366506e33887b7c0b95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga430a789018d85366506e33887b7c0b95">&#9670;&nbsp;</a></span>PJMEDIA_RTP_DTMF_EVENT_END_MASK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_RTP_DTMF_EVENT_END_MASK&#160;&#160;&#160;0x80</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Mask for the E ("End") bit of telephony-events payload.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="structpjmedia__rtp__dtmf__event.htm">pjmedia_rtp_dtmf_event</a> </dd></dl>

</div>
</div>
<a id="ga3abb514be3751ed8cc3aa07f0e00f7b1" name="ga3abb514be3751ed8cc3aa07f0e00f7b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3abb514be3751ed8cc3aa07f0e00f7b1">&#9670;&nbsp;</a></span>PJMEDIA_RTP_DTMF_EVENT_VOLUME_MASK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_RTP_DTMF_EVENT_VOLUME_MASK&#160;&#160;&#160;0x3F</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Mask for the Volume field of telephony-events payload.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="structpjmedia__rtp__dtmf__event.htm">pjmedia_rtp_dtmf_event</a> </dd></dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gac5fc46bc1de6eb2620c2a28d20578c77" name="gac5fc46bc1de6eb2620c2a28d20578c77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac5fc46bc1de6eb2620c2a28d20578c77">&#9670;&nbsp;</a></span>pjmedia_rtp_session_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtp_session_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *&#160;</td>
          <td class="paramname"><em>ses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>default_pt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>sender_ssrc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function will initialize the RTP session according to given parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ses</td><td>The session. </td></tr>
    <tr><td class="paramname">default_pt</td><td>Default payload type. </td></tr>
    <tr><td class="paramname">sender_ssrc</td><td>SSRC used for outgoing packets, in host byte order.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="gaa239546773e58d3d78fc52c1a838c9be" name="gaa239546773e58d3d78fc52c1a838c9be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa239546773e58d3d78fc52c1a838c9be">&#9670;&nbsp;</a></span>pjmedia_rtp_session_init2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtp_session_init2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *&#160;</td>
          <td class="paramname"><em>ses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session__setting.htm">pjmedia_rtp_session_setting</a>&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function will initialize the RTP session according to given parameters defined in RTP session settings.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ses</td><td>The session. </td></tr>
    <tr><td class="paramname">settings</td><td>RTP session settings.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="ga7052667cdb593ec24c95b98a46227ce2" name="ga7052667cdb593ec24c95b98a46227ce2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7052667cdb593ec24c95b98a46227ce2">&#9670;&nbsp;</a></span>pjmedia_rtp_encode_rtp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtp_encode_rtp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *&#160;</td>
          <td class="paramname"><em>ses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>payload_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ts_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void **&#160;</td>
          <td class="paramname"><em>rtphdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>hdrlen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create the RTP header based on arguments and current state of the RTP session.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ses</td><td>The session. </td></tr>
    <tr><td class="paramname">pt</td><td>Payload type. </td></tr>
    <tr><td class="paramname">m</td><td>Marker flag. </td></tr>
    <tr><td class="paramname">payload_len</td><td>Payload length in bytes. </td></tr>
    <tr><td class="paramname">ts_len</td><td>Timestamp length. </td></tr>
    <tr><td class="paramname">rtphdr</td><td>Upon return will point to RTP packet header. </td></tr>
    <tr><td class="paramname">hdrlen</td><td>Upon return will indicate the size of RTP packet header</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="gaaa82e024f28c4796159d3d9bbe9c93ec" name="gaaa82e024f28c4796159d3d9bbe9c93ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaa82e024f28c4796159d3d9bbe9c93ec">&#9670;&nbsp;</a></span>pjmedia_rtp_decode_rtp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtp_decode_rtp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *&#160;</td>
          <td class="paramname"><em>ses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pkt_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> **&#160;</td>
          <td class="paramname"><em>hdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void **&#160;</td>
          <td class="paramname"><em>payload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>payloadlen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function decodes incoming packet into RTP header and payload. The decode function is guaranteed to point the payload to the correct position regardless of any options present in the RTP packet.</p>
<p >Note that this function does not modify the returned RTP header to host byte order.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ses</td><td>The session. </td></tr>
    <tr><td class="paramname">pkt</td><td>The received RTP packet. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>The length of the packet. </td></tr>
    <tr><td class="paramname">hdr</td><td>Upon return will point to the location of the RTP header inside the packet. Note that the RTP header will be given back as is, meaning that the fields will be in network byte order. </td></tr>
    <tr><td class="paramname">payload</td><td>Upon return will point to the location of the payload inside the packet. </td></tr>
    <tr><td class="paramname">payloadlen</td><td>Upon return will indicate the size of the payload.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="ga2aa573f28ee77dc1de1d528e55a79841" name="ga2aa573f28ee77dc1de1d528e55a79841"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2aa573f28ee77dc1de1d528e55a79841">&#9670;&nbsp;</a></span>pjmedia_rtp_decode_rtp2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtp_decode_rtp2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *&#160;</td>
          <td class="paramname"><em>ses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pkt_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> **&#160;</td>
          <td class="paramname"><em>hdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__dec__hdr.htm">pjmedia_rtp_dec_hdr</a> *&#160;</td>
          <td class="paramname"><em>dec_hdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void **&#160;</td>
          <td class="paramname"><em>payload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>payloadlen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This function decodes incoming packet into RTP header and payload. The decode function is guaranteed to point the payload to the correct position regardless of any options present in the RTP packet.</p>
<p >Note that this function does not modify the returned RTP header to host byte order.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ses</td><td>The session. </td></tr>
    <tr><td class="paramname">pkt</td><td>The received RTP packet. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>The length of the packet. </td></tr>
    <tr><td class="paramname">hdr</td><td>Upon return will point to the location of the RTP header inside the packet. Note that the RTP header will be given back as is, meaning that the fields will be in network byte order. </td></tr>
    <tr><td class="paramname">dec_hdr</td><td>Upon return will point to the location of the additional RTP header inside the packet, if any. </td></tr>
    <tr><td class="paramname">payload</td><td>Upon return will point to the location of the payload inside the packet. </td></tr>
    <tr><td class="paramname">payloadlen</td><td>Upon return will indicate the size of the payload.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if successfull. </dd></dl>

</div>
</div>
<a id="ga9d9b33a67b04a25c38d625131809247f" name="ga9d9b33a67b04a25c38d625131809247f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9d9b33a67b04a25c38d625131809247f">&#9670;&nbsp;</a></span>pjmedia_rtp_session_update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtp_session_update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *&#160;</td>
          <td class="paramname"><em>ses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> *&#160;</td>
          <td class="paramname"><em>hdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__status.htm">pjmedia_rtp_status</a> *&#160;</td>
          <td class="paramname"><em>seq_st</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Call this function everytime an RTP packet is received to check whether the packet can be received and to let the RTP session performs its internal calculations.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ses</td><td>The session. </td></tr>
    <tr><td class="paramname">hdr</td><td>The RTP header of the incoming packet. The header must be given with fields in network byte order. </td></tr>
    <tr><td class="paramname">seq_st</td><td>Optional structure to receive the status of the RTP packet processing. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga3d121faab7a6a62a721eb73890e91e2b" name="ga3d121faab7a6a62a721eb73890e91e2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d121faab7a6a62a721eb73890e91e2b">&#9670;&nbsp;</a></span>pjmedia_rtp_session_update2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtp_session_update2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__session.htm">pjmedia_rtp_session</a> *&#160;</td>
          <td class="paramname"><em>ses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtp__hdr.htm">pjmedia_rtp_hdr</a> *&#160;</td>
          <td class="paramname"><em>hdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__status.htm">pjmedia_rtp_status</a> *&#160;</td>
          <td class="paramname"><em>seq_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>check_pt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Call this function everytime an RTP packet is received to check whether the packet can be received and to let the RTP session performs its internal calculations.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ses</td><td>The session. </td></tr>
    <tr><td class="paramname">hdr</td><td>The RTP header of the incoming packet. The header must be given with fields in network byte order. </td></tr>
    <tr><td class="paramname">seq_st</td><td>Optional structure to receive the status of the RTP packet processing. </td></tr>
    <tr><td class="paramname">check_pt</td><td>Flag to indicate whether payload type needs to be validate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJMED__RTP.htm#ga9d9b33a67b04a25c38d625131809247f">pjmedia_rtp_session_update()</a> </dd></dl>

</div>
</div>
<a id="gaa4d7f3c6fac7225fe3486799c86973b8" name="gaa4d7f3c6fac7225fe3486799c86973b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa4d7f3c6fac7225fe3486799c86973b8">&#9670;&nbsp;</a></span>pjmedia_rtp_seq_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtp_seq_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__seq__session.htm">pjmedia_rtp_seq_session</a> *&#160;</td>
          <td class="paramname"><em>seq_ctrl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga47506d8dde1056c5c96d62f0df6ddf28">pj_uint16_t</a>&#160;</td>
          <td class="paramname"><em>seq</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Internal function for creating sequence number control, shared by RTCP implementation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">seq_ctrl</td><td>The sequence control instance. </td></tr>
    <tr><td class="paramname">seq</td><td>Sequence number to initialize. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gacfe1ac80080d9381ec9b9b319632c35d" name="gacfe1ac80080d9381ec9b9b319632c35d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacfe1ac80080d9381ec9b9b319632c35d">&#9670;&nbsp;</a></span>pjmedia_rtp_seq_update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtp_seq_update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__seq__session.htm">pjmedia_rtp_seq_session</a> *&#160;</td>
          <td class="paramname"><em>seq_ctrl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga47506d8dde1056c5c96d62f0df6ddf28">pj_uint16_t</a>&#160;</td>
          <td class="paramname"><em>seq</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtp__status.htm">pjmedia_rtp_status</a> *&#160;</td>
          <td class="paramname"><em>seq_status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Internal function update sequence control, shared by RTCP implementation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">seq_ctrl</td><td>The sequence control instance. </td></tr>
    <tr><td class="paramname">seq</td><td>Sequence number to update. </td></tr>
    <tr><td class="paramname">seq_status</td><td>Optional structure to receive additional information about the packet. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>.</p>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
