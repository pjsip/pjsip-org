<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB-UTIL Reference: pj_http_req_callback Struct Reference (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB-UTIL Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="functions.htm"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<h1>pj_http_req_callback Struct Reference<br/>
<small>
[<a class="el" href="group__PJ__HTTP__CLIENT.htm">Simple HTTP Client</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<!-- doxytag: class="pj_http_req_callback" --><table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#a9e0bae753a84a1a442b462f6b78a7cfb">on_response</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#a7baf34d0d0e718c605365d560de0fb56">on_send_data</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void **data, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#a48379ed6e63ac74f5c0efcee4984964d">on_data_read</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void *data, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__http__req__callback.htm#aa87d66e9521087449d46e29f7e0c0753">on_complete</a> )(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This structure describes the callbacks to be called by the HTTP request. </p>
<hr/><h2>Field Documentation</h2>
<a class="anchor" id="aa87d66e9521087449d46e29f7e0c0753"></a><!-- doxytag: member="pj_http_req_callback::on_complete" ref="aa87d66e9521087449d46e29f7e0c0753" args=")(pj_http_req *http_req, pj_status_t status, const pj_http_resp *resp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* <a class="el" href="structpj__http__req__callback.htm#aa87d66e9521087449d46e29f7e0c0753">pj_http_req_callback::on_complete</a>)(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This callback is called when the HTTP request is completed. If the callback <a class="el" href="structpj__http__req__callback.htm#a48379ed6e63ac74f5c0efcee4984964d">on_data_read()</a> is specified, the variable response-&gt;data will be set to NULL, otherwise it will contain the complete data. Response data is allocated from pj_http_req's internal memory pool so the data remain valid as long as pj_http_req is not destroyed and application does not start a new request.</p>
<p>If no longer required, application may choose to destroy pj_http_req immediately by calling <a class="el" href="group__PJ__HTTP__CLIENT.htm#gaa5cadef93141e4b115df881bbded8c8e">pj_http_req_destroy()</a> inside the callback.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>http_req</em>&nbsp;</td><td>The http request. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>status</em>&nbsp;</td><td>The status of the request operation. PJ_SUCCESS if the operation completed successfully (connection-wise). To check the server's status-code response to the HTTP request, application should check resp-&gt;status_code instead. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>resp</em>&nbsp;</td><td>The response of the corresponding request. If the status argument is non-PJ_SUCCESS, this argument will be set to NULL. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a48379ed6e63ac74f5c0efcee4984964d"></a><!-- doxytag: member="pj_http_req_callback::on_data_read" ref="a48379ed6e63ac74f5c0efcee4984964d" args=")(pj_http_req *http_req, void *data, pj_size_t size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* <a class="el" href="structpj__http__req__callback.htm#a48379ed6e63ac74f5c0efcee4984964d">pj_http_req_callback::on_data_read</a>)(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void *data, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This callback is called when a segment of response body data arrives. If this callback is specified (i.e. not NULL), the <a class="el" href="structpj__http__req__callback.htm#aa87d66e9521087449d46e29f7e0c0753">on_complete()</a> callback will be called with zero-length data (within the response parameter), hence the application must store and manage its own data buffer, otherwise the <a class="el" href="structpj__http__req__callback.htm#aa87d66e9521087449d46e29f7e0c0753">on_complete()</a> callback will be called with the response parameter containing the complete data.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>http_req</em>&nbsp;</td><td>The http request. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>The buffer containing the data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The length of data in the buffer. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e0bae753a84a1a442b462f6b78a7cfb"></a><!-- doxytag: member="pj_http_req_callback::on_response" ref="a9e0bae753a84a1a442b462f6b78a7cfb" args=")(pj_http_req *http_req, const pj_http_resp *resp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* <a class="el" href="structpj__http__req__callback.htm#a9e0bae753a84a1a442b462f6b78a7cfb">pj_http_req_callback::on_response</a>)(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, const <a class="el" href="structpj__http__resp.htm">pj_http_resp</a> *resp)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This callback is called when a complete HTTP response header is received.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>http_req</em>&nbsp;</td><td>The http request. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>resp</em>&nbsp;</td><td>The response of the request. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7baf34d0d0e718c605365d560de0fb56"></a><!-- doxytag: member="pj_http_req_callback::on_send_data" ref="a7baf34d0d0e718c605365d560de0fb56" args=")(pj_http_req *http_req, void **data, pj_size_t *size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* <a class="el" href="structpj__http__req__callback.htm#a7baf34d0d0e718c605365d560de0fb56">pj_http_req_callback::on_send_data</a>)(<a class="el" href="group__PJ__HTTP__CLIENT.htm#gacab73cd00b4bd1bb4bf76d17f6721d2c">pj_http_req</a> *http_req, void **data, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *size)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This callback is called when the HTTP request is ready to send its request body. Application may wish to use this callback if it wishes to load the data at a later time or if it does not wish to load the whole data into memory. In order for this callback to be called, application MUST set http_req_param.total_size to a value greater than 0.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>http_req</em>&nbsp;</td><td>The http request. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>Pointer to the data that will be sent. Application must set the pointer to the current data chunk/segment to be sent. Data must remain valid until the next <a class="el" href="structpj__http__req__callback.htm#a7baf34d0d0e718c605365d560de0fb56">on_send_data()</a> callback or for the last segment, until it is sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>Pointer to the data size that will be sent. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="http__client_8h_source.htm">http_client.h</a></li>
</ul>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB-UTIL Open Source, small footprint, and portable asynchronous/caching DNS resolver, text scanner, STUN client, and XML library<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
