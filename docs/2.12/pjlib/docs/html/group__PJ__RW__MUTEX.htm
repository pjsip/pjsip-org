<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Reader/Writer Mutex (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Reader/Writer Mutex<div class="ingroups"><a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a> &raquo; <a class="el" href="group__PJ__SYS__INFO.htm">System Information</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga59560ebca18c28a833835fd5044e0f31"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a></td></tr>
<tr class="separator:ga59560ebca18c28a833835fd5044e0f31"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga22d92a5e5af8058b6145fc748b6b1866"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__RW__MUTEX.htm#ga22d92a5e5af8058b6145fc748b6b1866">pj_rwmutex_create</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, <a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> **mutex)</td></tr>
<tr class="separator:ga22d92a5e5af8058b6145fc748b6b1866"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada97e7b00ebd581a1149be04bc2ecc24"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__RW__MUTEX.htm#gada97e7b00ebd581a1149be04bc2ecc24">pj_rwmutex_lock_read</a> (<a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *mutex)</td></tr>
<tr class="separator:gada97e7b00ebd581a1149be04bc2ecc24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d9d5f5c3b74905d8ae13915e89f3b9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__RW__MUTEX.htm#ga6d9d5f5c3b74905d8ae13915e89f3b9a">pj_rwmutex_lock_write</a> (<a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *mutex)</td></tr>
<tr class="separator:ga6d9d5f5c3b74905d8ae13915e89f3b9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5550ebfc73e4199a045786d03c35b94"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__RW__MUTEX.htm#gaf5550ebfc73e4199a045786d03c35b94">pj_rwmutex_unlock_read</a> (<a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *mutex)</td></tr>
<tr class="separator:gaf5550ebfc73e4199a045786d03c35b94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd8888199072ee58e43b5d9fca45e6d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__RW__MUTEX.htm#gafd8888199072ee58e43b5d9fca45e6d0">pj_rwmutex_unlock_write</a> (<a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *mutex)</td></tr>
<tr class="separator:gafd8888199072ee58e43b5d9fca45e6d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01997ab8dcbcf4e260ba403f2c19c7ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__RW__MUTEX.htm#ga01997ab8dcbcf4e260ba403f2c19c7ca">pj_rwmutex_destroy</a> (<a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *mutex)</td></tr>
<tr class="separator:ga01997ab8dcbcf4e260ba403f2c19c7ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Reader/writer mutex is a classic synchronization object where multiple readers can acquire the mutex, but only a single writer can acquire the mutex. </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga59560ebca18c28a833835fd5044e0f31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga59560ebca18c28a833835fd5044e0f31">&#9670;&nbsp;</a></span>pj_rwmutex_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> <a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Opaque declaration for reader/writer mutex. Reader/writer mutex is a classic synchronization object where multiple readers can acquire the mutex, but only a single writer can acquire the mutex. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga22d92a5e5af8058b6145fc748b6b1866"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga22d92a5e5af8058b6145fc748b6b1866">&#9670;&nbsp;</a></span>pj_rwmutex_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_rwmutex_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> **&#160;</td>
          <td class="paramname"><em>mutex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create reader/writer mutex.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory for the mutex. </td></tr>
    <tr><td class="paramname">name</td><td>Name to be assigned to the mutex. </td></tr>
    <tr><td class="paramname">mutex</td><td>Pointer to receive the newly created mutex.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="ga01997ab8dcbcf4e260ba403f2c19c7ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga01997ab8dcbcf4e260ba403f2c19c7ca">&#9670;&nbsp;</a></span>pj_rwmutex_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_rwmutex_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroy reader/writer mutex.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="gada97e7b00ebd581a1149be04bc2ecc24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gada97e7b00ebd581a1149be04bc2ecc24">&#9670;&nbsp;</a></span>pj_rwmutex_lock_read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_rwmutex_lock_read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Lock the mutex for reading.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="ga6d9d5f5c3b74905d8ae13915e89f3b9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d9d5f5c3b74905d8ae13915e89f3b9a">&#9670;&nbsp;</a></span>pj_rwmutex_lock_write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_rwmutex_lock_write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Lock the mutex for writing.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="gaf5550ebfc73e4199a045786d03c35b94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf5550ebfc73e4199a045786d03c35b94">&#9670;&nbsp;</a></span>pj_rwmutex_unlock_read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_rwmutex_unlock_read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Release read lock.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="gafd8888199072ee58e43b5d9fca45e6d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd8888199072ee58e43b5d9fca45e6d0">&#9670;&nbsp;</a></span>pj_rwmutex_unlock_write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_rwmutex_unlock_write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__RW__MUTEX.htm#ga59560ebca18c28a833835fd5044e0f31">pj_rwmutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Release write lock.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
