<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj::UaConfig Struct Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacepj.htm">pj</a></li><li class="navelem"><a class="el" href="structpj_1_1UaConfig.htm">UaConfig</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">pj::UaConfig Struct Reference<div class="ingroups"><a class="el" href="group__PJSUA2__Ref.htm">pjsua2 API Reference</a> &raquo; <a class="el" href="group__PJSUA2__UA.htm">Endpoint</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;endpoint.hpp&gt;</code></p>
<div class="dynheader">
Inheritance diagram for pj::UaConfig:</div>
<div class="dyncontent">
 <div class="center">
  <img src="structpj_1_1UaConfig.png" usemap="#pj::UaConfig_map" alt=""/>
  <map id="pj::UaConfig_map" name="pj::UaConfig_map">
<area href="classpj_1_1PersistentObject.htm" alt="pj::PersistentObject" shape="rect" coords="0,0,120,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad38027905fe4062725a5384ce75e1bbf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#ad38027905fe4062725a5384ce75e1bbf">UaConfig</a> ()</td></tr>
<tr class="separator:ad38027905fe4062725a5384ce75e1bbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10bbf5ceae769390823fb90c3fc3498a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a10bbf5ceae769390823fb90c3fc3498a">fromPj</a> (const <a class="el" href="structpjsua__config.htm">pjsua_config</a> &amp;ua_cfg)</td></tr>
<tr class="separator:a10bbf5ceae769390823fb90c3fc3498a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a489bac266c0dae26ddacea28ff852b89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsua__config.htm">pjsua_config</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a489bac266c0dae26ddacea28ff852b89">toPj</a> () const</td></tr>
<tr class="separator:a489bac266c0dae26ddacea28ff852b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63d3b3d6e332a3ce13d511b9fe983b4c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a63d3b3d6e332a3ce13d511b9fe983b4c">readObject</a> (const <a class="el" href="classpj_1_1ContainerNode.htm">ContainerNode</a> &amp;node)  throw (Error)</td></tr>
<tr class="separator:a63d3b3d6e332a3ce13d511b9fe983b4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa161cf8f91eb0728bb9312d5c4ff909a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#aa161cf8f91eb0728bb9312d5c4ff909a">writeObject</a> (<a class="el" href="classpj_1_1ContainerNode.htm">ContainerNode</a> &amp;node) const  throw (Error)</td></tr>
<tr class="separator:aa161cf8f91eb0728bb9312d5c4ff909a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpj_1_1PersistentObject"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classpj_1_1PersistentObject')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classpj_1_1PersistentObject.htm">pj::PersistentObject</a></td></tr>
<tr class="memitem:a7aba17d977a1494980b5f44919906ff8 inherit pub_methods_classpj_1_1PersistentObject"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1PersistentObject.htm#a7aba17d977a1494980b5f44919906ff8">~PersistentObject</a> ()</td></tr>
<tr class="separator:a7aba17d977a1494980b5f44919906ff8 inherit pub_methods_classpj_1_1PersistentObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4045acc06b18451d20f500c836e251a4 inherit pub_methods_classpj_1_1PersistentObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1PersistentObject.htm#a4045acc06b18451d20f500c836e251a4">readObject</a> (const <a class="el" href="classpj_1_1ContainerNode.htm">ContainerNode</a> &amp;node)=0  throw (Error)</td></tr>
<tr class="separator:a4045acc06b18451d20f500c836e251a4 inherit pub_methods_classpj_1_1PersistentObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a281d9f631bdf976416b65ff95caf90dd inherit pub_methods_classpj_1_1PersistentObject"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1PersistentObject.htm#a281d9f631bdf976416b65ff95caf90dd">writeObject</a> (<a class="el" href="classpj_1_1ContainerNode.htm">ContainerNode</a> &amp;node) const =0  throw (Error)</td></tr>
<tr class="separator:a281d9f631bdf976416b65ff95caf90dd inherit pub_methods_classpj_1_1PersistentObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:abd1f7fbc4fca0751c1b2f38461ee868a"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#abd1f7fbc4fca0751c1b2f38461ee868a">maxCalls</a></td></tr>
<tr class="separator:abd1f7fbc4fca0751c1b2f38461ee868a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79b36cd03a05a8e27a9f435e6031018f"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a79b36cd03a05a8e27a9f435e6031018f">threadCnt</a></td></tr>
<tr class="separator:a79b36cd03a05a8e27a9f435e6031018f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4417de9e8b564b0a2ced7daf25876b9b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a4417de9e8b564b0a2ced7daf25876b9b">mainThreadOnly</a></td></tr>
<tr class="separator:a4417de9e8b564b0a2ced7daf25876b9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a412356b1b4434458cc91db71ddf1869c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a412356b1b4434458cc91db71ddf1869c">nameserver</a></td></tr>
<tr class="separator:a412356b1b4434458cc91db71ddf1869c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3d13504651f3235bfacad16e90e0963"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#aa3d13504651f3235bfacad16e90e0963">outboundProxies</a></td></tr>
<tr class="separator:aa3d13504651f3235bfacad16e90e0963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96a256b89a1e59b071fbe643c6e6fc9b"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a96a256b89a1e59b071fbe643c6e6fc9b">userAgent</a></td></tr>
<tr class="separator:a96a256b89a1e59b071fbe643c6e6fc9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4e5bb31dcb0782cba00771f04444df6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#ad4e5bb31dcb0782cba00771f04444df6">stunServer</a></td></tr>
<tr class="separator:ad4e5bb31dcb0782cba00771f04444df6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8bc0ba998f33b0ca17c4abf8d047a0e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#ac8bc0ba998f33b0ca17c4abf8d047a0e">stunTryIpv6</a></td></tr>
<tr class="separator:ac8bc0ba998f33b0ca17c4abf8d047a0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb2c8fa16fb51cd6c291025f0242c8e5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#afb2c8fa16fb51cd6c291025f0242c8e5">stunIgnoreFailure</a></td></tr>
<tr class="separator:afb2c8fa16fb51cd6c291025f0242c8e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeb7aa06e10c8bb46a7e8674bc988592"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#abeb7aa06e10c8bb46a7e8674bc988592">natTypeInSdp</a></td></tr>
<tr class="separator:abeb7aa06e10c8bb46a7e8674bc988592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99efe69c13d70157b06b4e645266647e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a99efe69c13d70157b06b4e645266647e">mwiUnsolicitedEnabled</a></td></tr>
<tr class="separator:a99efe69c13d70157b06b4e645266647e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b393741223ff1311c27a54551c0d6d0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#a4b393741223ff1311c27a54551c0d6d0">enableUpnp</a></td></tr>
<tr class="separator:a4b393741223ff1311c27a54551c0d6d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac160847f5443c407686f71d683209810"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj_1_1UaConfig.htm#ac160847f5443c407686f71d683209810">upnpIfName</a></td></tr>
<tr class="separator:ac160847f5443c407686f71d683209810"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >SIP User Agent related settings. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad38027905fe4062725a5384ce75e1bbf" name="ad38027905fe4062725a5384ce75e1bbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad38027905fe4062725a5384ce75e1bbf">&#9670;&nbsp;</a></span>UaConfig()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj::UaConfig::UaConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Default constructor to initialize with default values. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a10bbf5ceae769390823fb90c3fc3498a" name="a10bbf5ceae769390823fb90c3fc3498a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10bbf5ceae769390823fb90c3fc3498a">&#9670;&nbsp;</a></span>fromPj()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::UaConfig::fromPj </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjsua__config.htm">pjsua_config</a> &amp;&#160;</td>
          <td class="paramname"><em>ua_cfg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Construct from <a class="el" href="structpjsua__config.htm">pjsua_config</a>. </p>

</div>
</div>
<a id="a489bac266c0dae26ddacea28ff852b89" name="a489bac266c0dae26ddacea28ff852b89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a489bac266c0dae26ddacea28ff852b89">&#9670;&nbsp;</a></span>toPj()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsua__config.htm">pjsua_config</a> pj::UaConfig::toPj </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Export to <a class="el" href="structpjsua__config.htm">pjsua_config</a> </p>

</div>
</div>
<a id="a63d3b3d6e332a3ce13d511b9fe983b4c" name="a63d3b3d6e332a3ce13d511b9fe983b4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63d3b3d6e332a3ce13d511b9fe983b4c">&#9670;&nbsp;</a></span>readObject()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::UaConfig::readObject </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classpj_1_1ContainerNode.htm">ContainerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >Read this object from a container.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>Container to write values from. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classpj_1_1PersistentObject.htm#a4045acc06b18451d20f500c836e251a4">pj::PersistentObject</a>.</p>

</div>
</div>
<a id="aa161cf8f91eb0728bb9312d5c4ff909a" name="aa161cf8f91eb0728bb9312d5c4ff909a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa161cf8f91eb0728bb9312d5c4ff909a">&#9670;&nbsp;</a></span>writeObject()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::UaConfig::writeObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classpj_1_1ContainerNode.htm">ContainerNode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >Write this object to a container.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>Container to write values to. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classpj_1_1PersistentObject.htm#a281d9f631bdf976416b65ff95caf90dd">pj::PersistentObject</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="abd1f7fbc4fca0751c1b2f38461ee868a" name="abd1f7fbc4fca0751c1b2f38461ee868a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd1f7fbc4fca0751c1b2f38461ee868a">&#9670;&nbsp;</a></span>maxCalls</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj::UaConfig::maxCalls</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Maximum calls to support (default: 4). The value specified here must be smaller than the compile time maximum settings PJSUA_MAX_CALLS, which by default is 32. To increase this limit, the library must be recompiled with new PJSUA_MAX_CALLS value. </p>

</div>
</div>
<a id="a79b36cd03a05a8e27a9f435e6031018f" name="a79b36cd03a05a8e27a9f435e6031018f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79b36cd03a05a8e27a9f435e6031018f">&#9670;&nbsp;</a></span>threadCnt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj::UaConfig::threadCnt</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Number of worker threads. Normally application will want to have at least one worker thread, unless when it wants to poll the library periodically, which in this case the worker thread can be set to zero. </p>

</div>
</div>
<a id="a4417de9e8b564b0a2ced7daf25876b9b" name="a4417de9e8b564b0a2ced7daf25876b9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4417de9e8b564b0a2ced7daf25876b9b">&#9670;&nbsp;</a></span>mainThreadOnly</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::UaConfig::mainThreadOnly</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >When this flag is non-zero, all callbacks that come from thread other than main thread will be posted to the main thread and to be executed by <a class="el" href="classpj_1_1Endpoint.htm#ade134bcab9fdbef563236237034ec3ec">Endpoint::libHandleEvents()</a> function. This includes the logging callback. Note that this will only work if threadCnt is set to zero and <a class="el" href="classpj_1_1Endpoint.htm#ade134bcab9fdbef563236237034ec3ec">Endpoint::libHandleEvents()</a> is performed by main thread. By default, the main thread is set from the thread that invoke <a class="el" href="classpj_1_1Endpoint.htm#ab6eb3cbb1f98485b9fc353104009eb75">Endpoint::libCreate()</a></p>
<p >Default: false </p>

</div>
</div>
<a id="a412356b1b4434458cc91db71ddf1869c" name="a412356b1b4434458cc91db71ddf1869c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a412356b1b4434458cc91db71ddf1869c">&#9670;&nbsp;</a></span>nameserver</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> pj::UaConfig::nameserver</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Array of nameservers to be used by the SIP resolver subsystem. The order of the name server specifies the priority (first name server will be used first, unless it is not reachable). </p>

</div>
</div>
<a id="aa3d13504651f3235bfacad16e90e0963" name="aa3d13504651f3235bfacad16e90e0963"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3d13504651f3235bfacad16e90e0963">&#9670;&nbsp;</a></span>outboundProxies</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> pj::UaConfig::outboundProxies</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Specify the URL of outbound proxies to visit for all outgoing requests. The outbound proxies will be used for all accounts, and it will be used to build the route set for outgoing requests. The final route set for outgoing requests will consists of the outbound proxies and the proxy configured in the account. </p>

</div>
</div>
<a id="a96a256b89a1e59b071fbe643c6e6fc9b" name="a96a256b89a1e59b071fbe643c6e6fc9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96a256b89a1e59b071fbe643c6e6fc9b">&#9670;&nbsp;</a></span>userAgent</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string pj::UaConfig::userAgent</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Optional user agent string (default empty). If it's empty, no User-Agent header will be sent with outgoing requests. </p>

</div>
</div>
<a id="ad4e5bb31dcb0782cba00771f04444df6" name="ad4e5bb31dcb0782cba00771f04444df6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4e5bb31dcb0782cba00771f04444df6">&#9670;&nbsp;</a></span>stunServer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> pj::UaConfig::stunServer</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Array of STUN servers to try. The library will try to resolve and contact each of the STUN server entry until it finds one that is usable. Each entry may be a domain name, host name, IP address, and it may contain an optional port number. For example:</p><ul>
<li>"pjsip.org" (domain name)</li>
<li>"sip.pjsip.org" (host name)</li>
<li>"pjsip.org:33478" (domain name and a non-standard port number)</li>
<li>"10.0.0.1:3478" (IP address and port number)</li>
</ul>
<p >When nameserver is configured in the <em><a class="el" href="structpjsua__config.htm#aaa8b86c6c733b8e80450a4d3b569f26c">pjsua_config.nameserver</a></em> field, if entry is not an IP address, it will be resolved with DNS SRV resolution first, and it will fallback to use DNS A resolution if this fails. Port number may be specified even if the entry is a domain name, in case the DNS SRV resolution should fallback to a non-standard port.</p>
<p >When nameserver is not configured, entries will be resolved with <a class="elRef" href="../../../pjlib/docs/html/group__pj__addr__resolve.htm#ga7c8264aa7743594d31766679dbae0b88">pj_gethostbyname()</a> if it's not an IP address. Port number may be specified if the server is not listening in standard STUN port. </p>

</div>
</div>
<a id="ac8bc0ba998f33b0ca17c4abf8d047a0e" name="ac8bc0ba998f33b0ca17c4abf8d047a0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8bc0ba998f33b0ca17c4abf8d047a0e">&#9670;&nbsp;</a></span>stunTryIpv6</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::UaConfig::stunTryIpv6</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This specifies if the library should try to do an IPv6 resolution of the STUN servers if the IPv4 resolution fails. It can be useful in an IPv6-only environment, including on NAT64.</p>
<p >Default: FALSE </p>

</div>
</div>
<a id="afb2c8fa16fb51cd6c291025f0242c8e5" name="afb2c8fa16fb51cd6c291025f0242c8e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb2c8fa16fb51cd6c291025f0242c8e5">&#9670;&nbsp;</a></span>stunIgnoreFailure</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::UaConfig::stunIgnoreFailure</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This specifies if the library startup should ignore failure with the STUN servers. If this is set to PJ_FALSE, the library will refuse to start if it fails to resolve or contact any of the STUN servers.</p>
<p >Default: TRUE </p>

</div>
</div>
<a id="abeb7aa06e10c8bb46a7e8674bc988592" name="abeb7aa06e10c8bb46a7e8674bc988592"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abeb7aa06e10c8bb46a7e8674bc988592">&#9670;&nbsp;</a></span>natTypeInSdp</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int pj::UaConfig::natTypeInSdp</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Support for adding and parsing NAT type in the SDP to assist troubleshooting. The valid values are:</p><ul>
<li>0: no information will be added in SDP, and parsing is disabled.</li>
<li>1: only the NAT type number is added.</li>
<li>2: add both NAT type number and name.</li>
</ul>
<p >Default: 1 </p>

</div>
</div>
<a id="a99efe69c13d70157b06b4e645266647e" name="a99efe69c13d70157b06b4e645266647e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99efe69c13d70157b06b4e645266647e">&#9670;&nbsp;</a></span>mwiUnsolicitedEnabled</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::UaConfig::mwiUnsolicitedEnabled</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Handle unsolicited NOTIFY requests containing message waiting indication (MWI) info. Unsolicited MWI is incoming NOTIFY requests which are not requested by client with SUBSCRIBE request.</p>
<p >If this is enabled, the library will respond 200/OK to the NOTIFY request and forward the request to Endpoint::onMwiInfo() callback.</p>
<p >See also <a class="el" href="structpj_1_1AccountMwiConfig.htm#a099b471627add3c1c146c0d408b049be">AccountMwiConfig.enabled</a>.</p>
<p >Default: PJ_TRUE </p>

</div>
</div>
<a id="a4b393741223ff1311c27a54551c0d6d0" name="a4b393741223ff1311c27a54551c0d6d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b393741223ff1311c27a54551c0d6d0">&#9670;&nbsp;</a></span>enableUpnp</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::UaConfig::enableUpnp</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Specify whether to enable UPnP.</p>
<p >Note that this setting can be further customized in account configuration (<a class="el" href="structpjsua__acc__config.htm">pjsua_acc_config</a>).</p>
<p >Default: FALSE </p>

</div>
</div>
<a id="ac160847f5443c407686f71d683209810" name="ac160847f5443c407686f71d683209810"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac160847f5443c407686f71d683209810">&#9670;&nbsp;</a></span>upnpIfName</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string pj::UaConfig::upnpIfName</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Specify which interface to use for UPnP. If empty, UPnP will use the first suitable interface found.</p>
<p >Note that this setting is only applicable if UPnP is enabled.</p>
<p >Default: empty string </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="endpoint_8hpp.htm">endpoint.hpp</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
