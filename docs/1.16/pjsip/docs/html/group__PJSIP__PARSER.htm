<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJSIP Reference: Parser (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>

<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<h1>Parser<br/>
<small>
[<a class="el" href="group__PJSIP__MSG.htm">Messaging Elements</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>Message and message elements parsing.  
</p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__parser__err__report.htm">pjsip_parser_err_report</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__parse__ctx.htm">pjsip_parse_ctx</a></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *(&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga5874197e0e6a87ec1fbea81d5a60b501">pjsip_parse_hdr_func</a> )(<a class="el" href="structpjsip__parse__ctx.htm">pjsip_parse_ctx</a> *context)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void *(&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga7c434b8e0187962851a25a94c0f59890">pjsip_parse_uri_func</a> )(<a class="elRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/structpj__scanner.htm">pj_scanner</a> *scanner, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> parse_params)</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="group__PJSIP__PARSER.htm#ggaaf105ae5beaca1dee30ae54530691fceade71a575a3017d1f482d53722d727876">PJSIP_PARSE_URI_AS_NAMEADDR</a> =  1, 
<a class="el" href="group__PJSIP__PARSER.htm#ggaaf105ae5beaca1dee30ae54530691fcea623ba2dd90c210c9ce51c63d3775f8a9">PJSIP_PARSE_URI_IN_FROM_TO_HDR</a> =  2
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga7d57912df8d262a56b4ca38b1563df4a">pjsip_register_hdr_parser</a> (const char *hname, const char *hshortname, <a class="el" href="group__PJSIP__PARSER.htm#ga5874197e0e6a87ec1fbea81d5a60b501">pjsip_parse_hdr_func</a> *fptr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga220e21523d8e90096d0eb0ad1c13b0e1">pjsip_unregister_hdr_parser</a> (const char *hname, const char *hshortname, <a class="el" href="group__PJSIP__PARSER.htm#ga5874197e0e6a87ec1fbea81d5a60b501">pjsip_parse_hdr_func</a> *fptr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga794c4b0fd54c3b0764e6b1804b2e20a0">pjsip_register_uri_parser</a> (char *scheme, <a class="el" href="group__PJSIP__PARSER.htm#ga7c434b8e0187962851a25a94c0f59890">pjsip_parse_uri_func</a> *func)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga34b7935ecbfb4e9150036fa1185e7cbe">pjsip_unregister_uri_parser</a> (const char *scheme, <a class="el" href="group__PJSIP__PARSER.htm#ga7c434b8e0187962851a25a94c0f59890">pjsip_parse_uri_func</a> *func)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__uri.htm">pjsip_uri</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga48e697c139eb3dfe08fef35fb4823470">pjsip_parse_uri</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, unsigned <a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structapp__t_1_1options.htm">options</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga8a1c2c6e75d1108fe3556569679d0c7b">pjsip_parse_status_line</a> (char *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__status__line.htm">pjsip_status_line</a> *status_line)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#gae10c44d2c9e07b58697d4e04bbfb9a8d">pjsip_parse_msg</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__parser__err__report.htm">pjsip_parser_err_report</a> *err_list)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga2e6bbaefe98290dbcafd22cc469eb042">pjsip_parse_rdata</a> (char *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga54a6d5a104cdefd15fd701cee2776b03">pjsip_find_msg</a> (const char *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> is_datagram, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *msg_size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga0613f27975383160562e187a31dddddf">pjsip_parse_hdr</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *hname, char *line, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *parsed_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga2b4d7521a5db5953dd7b37454c0dd188">pjsip_parse_headers</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *input, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size, <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *hlist, unsigned <a class="elRef" doxygen="pjmedia.tag:../../../pjmedia/docs/html/" href="../../../pjmedia/docs/html/structapp__t_1_1options.htm">options</a>)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__PARSER.htm#ga40a8a73b9d71f533cbac3077bdfec002">PJSIP_SYN_ERR_EXCEPTION</a></td></tr>
</table>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="ga5874197e0e6a87ec1fbea81d5a60b501"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_hdr_func" ref="ga5874197e0e6a87ec1fbea81d5a60b501" args=")(pjsip_parse_ctx *context)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a>*( <a class="el" href="group__PJSIP__PARSER.htm#ga5874197e0e6a87ec1fbea81d5a60b501">pjsip_parse_hdr_func</a>)(<a class="el" href="structpjsip__parse__ctx.htm">pjsip_parse_ctx</a> *context)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Type of function to parse header. The parsing function must follow these specification:</p>
<ul>
<li>It must not modify the input text.</li>
<li>The hname and HCOLON has been parsed prior to invoking the handler.</li>
<li>It returns the header instance on success.</li>
<li>For error reporting, it must throw PJSIP_SYN_ERR_EXCEPTION exception instead of just returning NULL. When exception is thrown, the return value is ignored.</li>
<li>It must read the header separator after finished reading the header body. The separator types are described below, and if they don't exist, exception must be thrown. Header separator can be a:<ul>
<li>newline, such as when the header is part of a SIP message.</li>
<li>ampersand, such as when the header is part of an URI.</li>
<li>for the last header, these separator is optional since parsing can be terminated when seeing EOF. </li>
</ul>
</li>
</ul>

</div>
</div>
<a class="anchor" id="ga7c434b8e0187962851a25a94c0f59890"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_uri_func" ref="ga7c434b8e0187962851a25a94c0f59890" args=")(pj_scanner *scanner, pj_pool_t *pool, pj_bool_t parse_params)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void*( <a class="el" href="group__PJSIP__PARSER.htm#ga7c434b8e0187962851a25a94c0f59890">pjsip_parse_uri_func</a>)(<a class="elRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/structpj__scanner.htm">pj_scanner</a> *scanner, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> parse_params)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Type of function to parse URI scheme. Most of the specification of header parser handler (pjsip_parse_hdr_func) also applies here (except the separator part). </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="gaaf105ae5beaca1dee30ae54530691fce"></a><!-- doxytag: member="sip_parser.h::@16" ref="gaaf105ae5beaca1dee30ae54530691fce" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>URI Parsing options. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggaaf105ae5beaca1dee30ae54530691fceade71a575a3017d1f482d53722d727876"></a><!-- doxytag: member="PJSIP_PARSE_URI_AS_NAMEADDR" ref="ggaaf105ae5beaca1dee30ae54530691fceade71a575a3017d1f482d53722d727876" args="" -->PJSIP_PARSE_URI_AS_NAMEADDR</em>&nbsp;</td><td>
<p>If this option is specified, function <a class="el" href="group__PJSIP__PARSER.htm#ga48e697c139eb3dfe08fef35fb4823470">pjsip_parse_uri</a> will return the URI object as <a class="el" href="structpjsip__name__addr.htm">pjsip_name_addr</a> instead of the corresponding URI object. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaf105ae5beaca1dee30ae54530691fcea623ba2dd90c210c9ce51c63d3775f8a9"></a><!-- doxytag: member="PJSIP_PARSE_URI_IN_FROM_TO_HDR" ref="ggaaf105ae5beaca1dee30ae54530691fcea623ba2dd90c210c9ce51c63d3775f8a9" args="" -->PJSIP_PARSE_URI_IN_FROM_TO_HDR</em>&nbsp;</td><td>
<p>If this option is specified, function <a class="el" href="group__PJSIP__PARSER.htm#ga48e697c139eb3dfe08fef35fb4823470">pjsip_parse_uri</a> and other internal functions that this function calls will parse URI according to convention for parsing From/To/Contact header. For example, when the URI is not enclosed in brackets ("&lt;" and "&gt;"), all parameters are treated as header parameters (not URI parameters). </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga7d57912df8d262a56b4ca38b1563df4a"></a><!-- doxytag: member="sip_parser.h::pjsip_register_hdr_parser" ref="ga7d57912df8d262a56b4ca38b1563df4a" args="(const char *hname, const char *hshortname, pjsip_parse_hdr_func *fptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_register_hdr_parser </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>hshortname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#ga5874197e0e6a87ec1fbea81d5a60b501">pjsip_parse_hdr_func</a> *&nbsp;</td>
          <td class="paramname"> <em>fptr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Register header parser handler. The parser handler MUST follow the specification of header parser handler function. New registration overwrites previous registration with the same name.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hname</em>&nbsp;</td><td>The header name. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>hshortname</em>&nbsp;</td><td>The short header name or NULL. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fptr</em>&nbsp;</td><td>The pointer to function to parser the header.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if success, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga220e21523d8e90096d0eb0ad1c13b0e1"></a><!-- doxytag: member="sip_parser.h::pjsip_unregister_hdr_parser" ref="ga220e21523d8e90096d0eb0ad1c13b0e1" args="(const char *hname, const char *hshortname, pjsip_parse_hdr_func *fptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_unregister_hdr_parser </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>hshortname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#ga5874197e0e6a87ec1fbea81d5a60b501">pjsip_parse_hdr_func</a> *&nbsp;</td>
          <td class="paramname"> <em>fptr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Unregister previously registered header parser handler. All the arguments MUST exactly equal to the value specified upon registration of the handler.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hname</em>&nbsp;</td><td>The header name registered. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>hshortname</em>&nbsp;</td><td>The short header name registered, or NULL. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fptr</em>&nbsp;</td><td>Previously registered function to parse the header.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if unregistration was successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="ga794c4b0fd54c3b0764e6b1804b2e20a0"></a><!-- doxytag: member="sip_parser.h::pjsip_register_uri_parser" ref="ga794c4b0fd54c3b0764e6b1804b2e20a0" args="(char *scheme, pjsip_parse_uri_func *func)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_register_uri_parser </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>scheme</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#ga7c434b8e0187962851a25a94c0f59890">pjsip_parse_uri_func</a> *&nbsp;</td>
          <td class="paramname"> <em>func</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Register URI scheme parser handler.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>scheme</em>&nbsp;</td><td>The URI scheme registered. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>func</em>&nbsp;</td><td>The URI parser function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga34b7935ecbfb4e9150036fa1185e7cbe"></a><!-- doxytag: member="sip_parser.h::pjsip_unregister_uri_parser" ref="ga34b7935ecbfb4e9150036fa1185e7cbe" args="(const char *scheme, pjsip_parse_uri_func *func)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_unregister_uri_parser </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>scheme</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__PARSER.htm#ga7c434b8e0187962851a25a94c0f59890">pjsip_parse_uri_func</a> *&nbsp;</td>
          <td class="paramname"> <em>func</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Unregister URI scheme parser handler. All the arguments MUST exactly equal to the value specified upon registration of the handler.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>scheme</em>&nbsp;</td><td>The URI scheme as registered previously. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>func</em>&nbsp;</td><td>The function handler as registered previously.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if the registration was successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="ga48e697c139eb3dfe08fef35fb4823470"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_uri" ref="ga48e697c139eb3dfe08fef35fb4823470" args="(pj_pool_t *pool, char *buf, pj_size_t size, unsigned options)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__uri.htm">pjsip_uri</a>* pjsip_parse_uri </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>options</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse an URI in the input and return the correct instance of URI.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool to get memory allocations. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The input buffer, which MUST be NULL terminated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The length of the string (not counting NULL terminator). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>options</em>&nbsp;</td><td>If no options are given (value is zero), the object returned is dependent on the syntax of the URI, eg. basic SIP URL, TEL URL, or name address. If option PJSIP_PARSE_URI_AS_NAMEADDR is given, then the returned object is always name address object, with the relevant URI object contained in the name address object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The URI or NULL when failed. No exception is thrown by this function (or any public parser functions). </dd></dl>

</div>
</div>
<a class="anchor" id="ga8a1c2c6e75d1108fe3556569679d0c7b"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_status_line" ref="ga8a1c2c6e75d1108fe3556569679d0c7b" args="(char *buf, pj_size_t size, pjsip_status_line *status_line)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_parse_status_line </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__status__line.htm">pjsip_status_line</a> *&nbsp;</td>
          <td class="paramname"> <em>status_line</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse SIP status line.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>Text buffer to parse, which MUST be NULL terminated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The size of the buffer, excluding the NULL character. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>status_line</em>&nbsp;</td><td>Structure to receive the parsed elements.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if a status line is parsed successfully. </dd></dl>

</div>
</div>
<a class="anchor" id="gae10c44d2c9e07b58697d4e04bbfb9a8d"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_msg" ref="gae10c44d2c9e07b58697d4e04bbfb9a8d" args="(pj_pool_t *pool, char *buf, pj_size_t size, pjsip_parser_err_report *err_list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a>* pjsip_parse_msg </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__parser__err__report.htm">pjsip_parser_err_report</a> *&nbsp;</td>
          <td class="paramname"> <em>err_list</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse a packet buffer and build a full SIP message from the packet. This function parses all parts of the message, including request/status line, all headers, and the message body. The message body however is only treated as a text block, ie. the function will not try to parse the content of the body.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool to allocate memory. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The input buffer, which MUST be NULL terminated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The length of the string (not counting NULL terminator). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>err_list</em>&nbsp;</td><td>If this parameter is not NULL, then the parser will put error messages during parsing in this list.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The message or NULL when failed. No exception is thrown by this function (or any public parser functions). </dd></dl>

</div>
</div>
<a class="anchor" id="ga2e6bbaefe98290dbcafd22cc469eb042"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_rdata" ref="ga2e6bbaefe98290dbcafd22cc469eb042" args="(char *buf, pj_size_t size, pjsip_rx_data *rdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__msg.htm">pjsip_msg</a>* pjsip_parse_rdata </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&nbsp;</td>
          <td class="paramname"> <em>rdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse a packet buffer and build a rdata. The resulting message will be stored in <code>msg</code> field in the <code>rdata</code>. This behaves pretty much like <a class="el" href="group__PJSIP__PARSER.htm#gae10c44d2c9e07b58697d4e04bbfb9a8d">pjsip_parse_msg()</a>, except that it will also initialize the header fields in the <code>rdata</code>.</p>
<p>This function is normally called by the transport layer.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The input buffer, which MUST be NULL terminated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The length of the string (not counting NULL terminator). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rdata</em>&nbsp;</td><td>The receive data buffer to store the message and its elements.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The message inside the rdata if successfull, or NULL. </dd></dl>

</div>
</div>
<a class="anchor" id="ga54a6d5a104cdefd15fd701cee2776b03"></a><!-- doxytag: member="sip_parser.h::pjsip_find_msg" ref="ga54a6d5a104cdefd15fd701cee2776b03" args="(const char *buf, pj_size_t size, pj_bool_t is_datagram, pj_size_t *msg_size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_find_msg </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&nbsp;</td>
          <td class="paramname"> <em>is_datagram</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&nbsp;</td>
          <td class="paramname"> <em>msg_size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check incoming packet to see if a (probably) valid SIP message has been received.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The input buffer, which must be NULL terminated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The buffer size. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>is_datagram</em>&nbsp;</td><td>Put non-zero if transport is datagram oriented. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>msg_size</em>&nbsp;</td><td>[out] If message is valid, this parameter will contain the size of the SIP message (including body, if any).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if a message is found, or an error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0613f27975383160562e187a31dddddf"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_hdr" ref="ga0613f27975383160562e187a31dddddf" args="(pj_pool_t *pool, const pj_str_t *hname, char *line, pj_size_t size, int *parsed_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* pjsip_parse_hdr </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> *&nbsp;</td>
          <td class="paramname"> <em>parsed_len</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse the content of a header and return the header instance. This function parses the content of a header (ie. part after colon) according to the expected name, and will return the correct instance of header.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to allocate memory for the header. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>hname</em>&nbsp;</td><td>Header name which is used to find the correct function to parse the header. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>line</em>&nbsp;</td><td>Header content, which must be NULL terminated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The length of the string (not counting NULL terminator, if any). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>parsed_len</em>&nbsp;</td><td>If the value is not NULL, then upon return the function will fill the pointer with the length of the string that has been parsed. This is usefull for two purposes, one is when the string may contain more than one header lines, and two when an error happen the value can pinpoint the location of the error in the buffer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The instance of the header if parsing was successful, or otherwise a NULL pointer will be returned. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2b4d7521a5db5953dd7b37454c0dd188"></a><!-- doxytag: member="sip_parser.h::pjsip_parse_headers" ref="ga2b4d7521a5db5953dd7b37454c0dd188" args="(pj_pool_t *pool, char *input, pj_size_t size, pjsip_hdr *hlist, unsigned options)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_parse_headers </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *&nbsp;</td>
          <td class="paramname"> <em>hlist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>options</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse header line(s). Multiple headers can be parsed by this function. When there are multiple headers, the headers MUST be separated by either a newline (as in SIP message) or ampersand mark (as in URI). This separator is optional for the last header.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>input</em>&nbsp;</td><td>The input text to parse, which must be NULL terminated. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The text length. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>hlist</em>&nbsp;</td><td>The header list to store the parsed headers. This list must have been initialized before calling this function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>options</em>&nbsp;</td><td>Specify 1 here to make parsing stop when error is encountered when parsing the header. Otherwise the error is silently ignored and parsing resumes to the next line. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if successfull, or -1 if error is encountered. Upon error, the <em>hlist</em> argument MAY contain successfully parsed headers. </dd></dl>

</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="ga40a8a73b9d71f533cbac3077bdfec002"></a><!-- doxytag: member="sip_parser.h::PJSIP_SYN_ERR_EXCEPTION" ref="ga40a8a73b9d71f533cbac3077bdfec002" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> <a class="el" href="group__PJSIP__PARSER.htm#ga40a8a73b9d71f533cbac3077bdfec002">PJSIP_SYN_ERR_EXCEPTION</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parser syntax error exception value. </p>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
