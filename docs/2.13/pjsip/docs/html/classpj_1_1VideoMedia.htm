<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj::VideoMedia Class Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacepj.htm">pj</a></li><li class="navelem"><a class="el" href="classpj_1_1VideoMedia.htm">VideoMedia</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle"><div class="title">pj::VideoMedia Class Reference<div class="ingroups"><a class="el" href="group__PJSUA2__Ref.htm">pjsua2 API Reference</a> &raquo; <a class="el" href="group__PJSUA2__MED.htm">Media</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;media.hpp&gt;</code></p>
<div class="dynheader">
Inheritance diagram for pj::VideoMedia:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classpj_1_1VideoMedia.png" usemap="#pj::VideoMedia_map" alt=""/>
  <map id="pj::VideoMedia_map" name="pj::VideoMedia_map">
<area href="classpj_1_1Media.htm" alt="pj::Media" shape="rect" coords="0,0,96,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af148d7b7afbbaf5bf739e51ffdbfe46f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj_1_1VidConfPortInfo.htm">VidConfPortInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#af148d7b7afbbaf5bf739e51ffdbfe46f">getPortInfo</a> () const  throw (Error)</td></tr>
<tr class="separator:af148d7b7afbbaf5bf739e51ffdbfe46f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eeec3ee54347c6efc94619e143dd002"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a0eeec3ee54347c6efc94619e143dd002">getPortId</a> () const</td></tr>
<tr class="separator:a0eeec3ee54347c6efc94619e143dd002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3f6ffb3202e6cfe8b8255e87f4dbc33"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#ad3f6ffb3202e6cfe8b8255e87f4dbc33">startTransmit</a> (const <a class="el" href="classpj_1_1VideoMedia.htm">VideoMedia</a> &amp;sink, const <a class="el" href="structpj_1_1VideoMediaTransmitParam.htm">VideoMediaTransmitParam</a> &amp;param) const  throw (Error)</td></tr>
<tr class="separator:ad3f6ffb3202e6cfe8b8255e87f4dbc33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae92e98c3677ee5c3dd2305714bd2793a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#ae92e98c3677ee5c3dd2305714bd2793a">stopTransmit</a> (const <a class="el" href="classpj_1_1VideoMedia.htm">VideoMedia</a> &amp;sink) const  throw (Error)</td></tr>
<tr class="separator:ae92e98c3677ee5c3dd2305714bd2793a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52b05bf97ab38c6c4548dad1272f3854"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a52b05bf97ab38c6c4548dad1272f3854">update</a> () const  throw (Error)</td></tr>
<tr class="separator:a52b05bf97ab38c6c4548dad1272f3854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70c6ad322fbebf31dfb48f0f27e0b3df"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a70c6ad322fbebf31dfb48f0f27e0b3df">VideoMedia</a> ()</td></tr>
<tr class="separator:a70c6ad322fbebf31dfb48f0f27e0b3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d089e26a50357922e26aa4dd1c42f46"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a6d089e26a50357922e26aa4dd1c42f46">~VideoMedia</a> ()</td></tr>
<tr class="separator:a6d089e26a50357922e26aa4dd1c42f46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpj_1_1Media"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classpj_1_1Media')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classpj_1_1Media.htm">pj::Media</a></td></tr>
<tr class="memitem:adfd0fc9150679ad14cc1e8fde8635f6b inherit pub_methods_classpj_1_1Media"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Media.htm#adfd0fc9150679ad14cc1e8fde8635f6b">~Media</a> ()</td></tr>
<tr class="separator:adfd0fc9150679ad14cc1e8fde8635f6b inherit pub_methods_classpj_1_1Media"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cad0cc7f003cd48c818f6025d10d514 inherit pub_methods_classpj_1_1Media"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__TYPES.htm#ga90c297eda05c19355635cecb9e7d9323">pjmedia_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Media.htm#a0cad0cc7f003cd48c818f6025d10d514">getType</a> () const</td></tr>
<tr class="separator:a0cad0cc7f003cd48c818f6025d10d514 inherit pub_methods_classpj_1_1Media"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a254e57833da23ca3061a78a021201e3e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="structpj_1_1VidConfPortInfo.htm">VidConfPortInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a254e57833da23ca3061a78a021201e3e">getPortInfoFromId</a> (int port_id)  throw (Error)</td></tr>
<tr class="separator:a254e57833da23ca3061a78a021201e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a708a4b455bb3813a4e015b76fc200d4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a708a4b455bb3813a4e015b76fc200d4b">registerMediaPort</a> (<a class="el" href="group__PJSUA2__MED.htm#gaae8a1276b7bf130aa2e1969f9ec1e150">MediaPort</a> port, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool)  throw (Error)</td></tr>
<tr class="separator:a708a4b455bb3813a4e015b76fc200d4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3510bae9457d01148b82ec71ddabbc38"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a3510bae9457d01148b82ec71ddabbc38">unregisterMediaPort</a> ()</td></tr>
<tr class="separator:a3510bae9457d01148b82ec71ddabbc38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpj_1_1Media"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classpj_1_1Media')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classpj_1_1Media.htm">pj::Media</a></td></tr>
<tr class="memitem:a3d3155407213b989382a4ffc031f336d inherit pro_methods_classpj_1_1Media"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Media.htm#a3d3155407213b989382a4ffc031f336d">Media</a> (<a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__TYPES.htm#ga90c297eda05c19355635cecb9e7d9323">pjmedia_type</a> med_type)</td></tr>
<tr class="separator:a3d3155407213b989382a4ffc031f336d inherit pro_methods_classpj_1_1Media"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a4976e5998070b05a0b4a4abb6299d123"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1VideoMedia.htm#a4976e5998070b05a0b4a4abb6299d123">id</a></td></tr>
<tr class="separator:a4976e5998070b05a0b4a4abb6299d123"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >Video <a class="el" href="classpj_1_1Media.htm">Media</a>. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a70c6ad322fbebf31dfb48f0f27e0b3df" name="a70c6ad322fbebf31dfb48f0f27e0b3df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70c6ad322fbebf31dfb48f0f27e0b3df">&#9670;&nbsp;</a></span>VideoMedia()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj::VideoMedia::VideoMedia </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Default Constructor.</p>
<p >Normally application will not create <a class="el" href="classpj_1_1VideoMedia.htm">VideoMedia</a> object directly, but it instantiates a <a class="el" href="classpj_1_1VideoMedia.htm">VideoMedia</a> derived class. This is set as public because some STL vector implementations require it. </p>

</div>
</div>
<a id="a6d089e26a50357922e26aa4dd1c42f46" name="a6d089e26a50357922e26aa4dd1c42f46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d089e26a50357922e26aa4dd1c42f46">&#9670;&nbsp;</a></span>~VideoMedia()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual pj::VideoMedia::~VideoMedia </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >Virtual Destructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af148d7b7afbbaf5bf739e51ffdbfe46f" name="af148d7b7afbbaf5bf739e51ffdbfe46f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af148d7b7afbbaf5bf739e51ffdbfe46f">&#9670;&nbsp;</a></span>getPortInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj_1_1VidConfPortInfo.htm">VidConfPortInfo</a> pj::VideoMedia::getPortInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get information about the specified conference port. </p>

</div>
</div>
<a id="a0eeec3ee54347c6efc94619e143dd002" name="a0eeec3ee54347c6efc94619e143dd002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0eeec3ee54347c6efc94619e143dd002">&#9670;&nbsp;</a></span>getPortId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int pj::VideoMedia::getPortId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get port Id. </p>

</div>
</div>
<a id="a254e57833da23ca3061a78a021201e3e" name="a254e57833da23ca3061a78a021201e3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a254e57833da23ca3061a78a021201e3e">&#9670;&nbsp;</a></span>getPortInfoFromId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="structpj_1_1VidConfPortInfo.htm">VidConfPortInfo</a> pj::VideoMedia::getPortInfoFromId </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>port_id</em></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >Get information from specific port id. </p>

</div>
</div>
<a id="ad3f6ffb3202e6cfe8b8255e87f4dbc33" name="ad3f6ffb3202e6cfe8b8255e87f4dbc33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3f6ffb3202e6cfe8b8255e87f4dbc33">&#9670;&nbsp;</a></span>startTransmit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::VideoMedia::startTransmit </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classpj_1_1VideoMedia.htm">VideoMedia</a> &amp;&#160;</td>
          <td class="paramname"><em>sink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj_1_1VideoMediaTransmitParam.htm">VideoMediaTransmitParam</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Establish unidirectional media flow to sink. This media port will act as a source, and it may transmit to multiple destinations/sink. And if multiple sources are transmitting to the same sink, the media will be mixed together. Source and sink may refer to the same <a class="el" href="classpj_1_1Media.htm">Media</a>, effectively looping the media.</p>
<p >If bidirectional media flow is desired, application needs to call this method twice, with the second one called from the opposite source media.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sink</td><td>The destination <a class="el" href="classpj_1_1Media.htm">Media</a>. </td></tr>
    <tr><td class="paramname">param</td><td>The parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae92e98c3677ee5c3dd2305714bd2793a" name="ae92e98c3677ee5c3dd2305714bd2793a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae92e98c3677ee5c3dd2305714bd2793a">&#9670;&nbsp;</a></span>stopTransmit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::VideoMedia::stopTransmit </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classpj_1_1VideoMedia.htm">VideoMedia</a> &amp;&#160;</td>
          <td class="paramname"><em>sink</em></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Stop media flow to destination/sink port.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sink</td><td>The destination media. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a52b05bf97ab38c6c4548dad1272f3854" name="a52b05bf97ab38c6c4548dad1272f3854"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52b05bf97ab38c6c4548dad1272f3854">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::VideoMedia::update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Update or refresh port states from video port info. Some port may change its port info in the middle of a session, for example when a video stream decoder learns that incoming video size or frame rate has changed, video conference needs to be informed to update its internal states. </p>

</div>
</div>
<a id="a708a4b455bb3813a4e015b76fc200d4b" name="a708a4b455bb3813a4e015b76fc200d4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a708a4b455bb3813a4e015b76fc200d4b">&#9670;&nbsp;</a></span>registerMediaPort()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pj::VideoMedia::registerMediaPort </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__MED.htm#gaae8a1276b7bf130aa2e1969f9ec1e150">MediaPort</a>&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"><a class="el" href="structpj_1_1Error.htm">Error</a></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >This method needs to be called by descendants of this class to register the media port created to the conference bridge and <a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a>'s media list.</p>
<p >param port The media port to be registered to the conference bridge. param pool The memory pool. </p>

</div>
</div>
<a id="a3510bae9457d01148b82ec71ddabbc38" name="a3510bae9457d01148b82ec71ddabbc38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3510bae9457d01148b82ec71ddabbc38">&#9670;&nbsp;</a></span>unregisterMediaPort()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pj::VideoMedia::unregisterMediaPort </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >This method needs to be called by descendants of this class to remove the media port from the conference bridge and <a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a>'s media list. Descendant should only call this method if it has registered the media with the previous call to <a class="el" href="classpj_1_1VideoMedia.htm#a708a4b455bb3813a4e015b76fc200d4b">registerMediaPort()</a>. </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a4976e5998070b05a0b4a4abb6299d123" name="a4976e5998070b05a0b4a4abb6299d123"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4976e5998070b05a0b4a4abb6299d123">&#9670;&nbsp;</a></span>id</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int pj::VideoMedia::id</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >Conference port Id. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="media_8hpp.htm">media.hpp</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
