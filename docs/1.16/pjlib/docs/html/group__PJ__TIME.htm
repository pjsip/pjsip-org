<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: Time Data Type and Manipulation. (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>Time Data Type and Manipulation.<br/>
<small>
[<a class="el" href="group__PJ__SYS__INFO.htm">System Information</a>,&nbsp;<a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a>,&nbsp;<a class="el" href="group__PJ__MISC.htm">Miscelaneous</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__time__val.htm">pj_time_val</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__parsed__time.htm">pj_parsed_time</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#gad015d440803cb8f62ff73878f35badaa">PJ_TIME_VAL_MSEC</a>(t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#gabe181b183828aae6bc56c1cf4b593d59">PJ_TIME_VAL_EQ</a>(t1, t2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#ga35e5759df29f9d5a5792ba6fb03e7a94">PJ_TIME_VAL_GT</a>(t1, t2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#gafe6b8b7461c59a2c9d1dbecd11a53d48">PJ_TIME_VAL_GTE</a>(t1, t2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#ga9dd4507187780ed1e83a10176dc845b8">PJ_TIME_VAL_LT</a>(t1, t2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#ga33a03349659e92074f1d39a137047385">PJ_TIME_VAL_LTE</a>(t1, t2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#ga4eb53e12a590f9f09172602e21e9911f">PJ_TIME_VAL_ADD</a>(t1, t2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#gaec98fc019fc44b5a6f6b0b9137bcf272">PJ_TIME_VAL_SUB</a>(t1, t2)</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a> (<a class="el" href="structpj__time__val.htm">pj_time_val</a> *tv)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#gad82b73b1187d98baba15328a90b8cf2e">pj_time_decode</a> (const <a class="el" href="structpj__time__val.htm">pj_time_val</a> *tv, <a class="el" href="structpj__parsed__time.htm">pj_parsed_time</a> *pt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#ga9682b2d610cdfe677ecc99c8855d7571">pj_time_encode</a> (const <a class="el" href="structpj__parsed__time.htm">pj_parsed_time</a> *pt, <a class="el" href="structpj__time__val.htm">pj_time_val</a> *tv)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#gaaf154b2b53313f2c59cb9de63aa98bad">pj_time_local_to_gmt</a> (<a class="el" href="structpj__time__val.htm">pj_time_val</a> *tv)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#gab276b8c102f4f164f227224e252ff665">pj_time_gmt_to_local</a> (<a class="el" href="structpj__time__val.htm">pj_time_val</a> *tv)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__TIME.htm#ga0b28411e03320ad6bb5f3316125b461c">pj_time_val_normalize</a> (<a class="el" href="structpj__time__val.htm">pj_time_val</a> *t)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This module provides API for manipulating time.</p>
<h2><a class="anchor" id="pj_time_examples_sec"></a>
Examples</h2>
<p>For examples, please see:</p>
<ul>
<li><a class="el" href="page_pjlib_sleep_test.htm">Test: Sleep, Time, and Timestamp</a> </li>
</ul>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga4eb53e12a590f9f09172602e21e9911f"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_ADD" ref="ga4eb53e12a590f9f09172602e21e9911f" args="(t1, t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_ADD</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t2</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Add <em>t2</em> to <em>t1</em> and store the result in <em>t1</em>. Effectively</p>
<p>this macro will expand as: (<em>t1</em> += <em>t2</em>). </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The time value to add. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The time value to be added to <em>t1</em>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gabe181b183828aae6bc56c1cf4b593d59"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_EQ" ref="gabe181b183828aae6bc56c1cf4b593d59" args="(t1, t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_EQ</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t2</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This macro will check if <em>t1</em> is equal to <em>t2</em>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The first time value to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The second time value to compare. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero if both time values are equal. </dd></dl>

</div>
</div>
<a class="anchor" id="ga35e5759df29f9d5a5792ba6fb03e7a94"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_GT" ref="ga35e5759df29f9d5a5792ba6fb03e7a94" args="(t1, t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_GT</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t2</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This macro will check if <em>t1</em> is greater than <em>t2</em> </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The first time value to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The second time value to compare. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero if t1 is greater than t2. </dd></dl>

</div>
</div>
<a class="anchor" id="gafe6b8b7461c59a2c9d1dbecd11a53d48"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_GTE" ref="gafe6b8b7461c59a2c9d1dbecd11a53d48" args="(t1, t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_GTE</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t2</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This macro will check if <em>t1</em> is greater than or equal to <em>t2</em> </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The first time value to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The second time value to compare. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero if t1 is greater than or equal to t2. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9dd4507187780ed1e83a10176dc845b8"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_LT" ref="ga9dd4507187780ed1e83a10176dc845b8" args="(t1, t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_LT</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t2</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This macro will check if <em>t1</em> is less than <em>t2</em> </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The first time value to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The second time value to compare. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero if t1 is less than t2. </dd></dl>

</div>
</div>
<a class="anchor" id="ga33a03349659e92074f1d39a137047385"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_LTE" ref="ga33a03349659e92074f1d39a137047385" args="(t1, t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_LTE</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t2</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This macro will check if <em>t1</em> is less than or equal to <em>t2</em>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The first time value to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The second time value to compare. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero if t1 is less than or equal to t2. </dd></dl>

</div>
</div>
<a class="anchor" id="gad015d440803cb8f62ff73878f35badaa"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_MSEC" ref="gad015d440803cb8f62ff73878f35badaa" args="(t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_MSEC</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t</td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the total time value in miliseconds. This is the same as multiplying the second part with 1000 and then add the miliseconds part to the result.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>The time value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Total time in miliseconds. </dd></dl>

</div>
</div>
<a class="anchor" id="gaec98fc019fc44b5a6f6b0b9137bcf272"></a><!-- doxytag: member="types.h::PJ_TIME_VAL_SUB" ref="gaec98fc019fc44b5a6f6b0b9137bcf272" args="(t1, t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_TIME_VAL_SUB</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">t2</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Substract <em>t2</em> from <em>t1</em> and store the result in <em>t1</em>. Effectively this macro will expand as (<em>t1</em> -= <em>t2</em>).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The time value to subsctract. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The time value to be substracted from <em>t1</em>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga0806df13f40d3153061f399ed86be856"></a><!-- doxytag: member="os.h::pj_gettimeofday" ref="ga0806df13f40d3153061f399ed86be856" args="(pj_time_val *tv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_gettimeofday </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__time__val.htm">pj_time_val</a> *&nbsp;</td>
          <td class="paramname"> <em>tv</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get current time of day in local representation.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tv</em>&nbsp;</td><td>Variable to store the result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="gad82b73b1187d98baba15328a90b8cf2e"></a><!-- doxytag: member="os.h::pj_time_decode" ref="gad82b73b1187d98baba15328a90b8cf2e" args="(const pj_time_val *tv, pj_parsed_time *pt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_time_decode </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__time__val.htm">pj_time_val</a> *&nbsp;</td>
          <td class="paramname"> <em>tv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__parsed__time.htm">pj_parsed_time</a> *&nbsp;</td>
          <td class="paramname"> <em>pt</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse time value into date/time representation.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tv</em>&nbsp;</td><td>The time. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pt</em>&nbsp;</td><td>Variable to store the date time result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9682b2d610cdfe677ecc99c8855d7571"></a><!-- doxytag: member="os.h::pj_time_encode" ref="ga9682b2d610cdfe677ecc99c8855d7571" args="(const pj_parsed_time *pt, pj_time_val *tv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_time_encode </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__parsed__time.htm">pj_parsed_time</a> *&nbsp;</td>
          <td class="paramname"> <em>pt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__time__val.htm">pj_time_val</a> *&nbsp;</td>
          <td class="paramname"> <em>tv</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Encode date/time to time value.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pt</em>&nbsp;</td><td>The date/time. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tv</em>&nbsp;</td><td>Variable to store time value result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="gab276b8c102f4f164f227224e252ff665"></a><!-- doxytag: member="os.h::pj_time_gmt_to_local" ref="gab276b8c102f4f164f227224e252ff665" args="(pj_time_val *tv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_time_gmt_to_local </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__time__val.htm">pj_time_val</a> *&nbsp;</td>
          <td class="paramname"> <em>tv</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convert GMT to local time.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tv</em>&nbsp;</td><td>Time to convert.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="gaaf154b2b53313f2c59cb9de63aa98bad"></a><!-- doxytag: member="os.h::pj_time_local_to_gmt" ref="gaaf154b2b53313f2c59cb9de63aa98bad" args="(pj_time_val *tv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_time_local_to_gmt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__time__val.htm">pj_time_val</a> *&nbsp;</td>
          <td class="paramname"> <em>tv</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convert local time to GMT.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>tv</em>&nbsp;</td><td>Time to convert.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>zero if successfull. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0b28411e03320ad6bb5f3316125b461c"></a><!-- doxytag: member="types.h::pj_time_val_normalize" ref="ga0b28411e03320ad6bb5f3316125b461c" args="(pj_time_val *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_time_val_normalize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__time__val.htm">pj_time_val</a> *&nbsp;</td>
          <td class="paramname"> <em>t</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Normalize the value in time value. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t</em>&nbsp;</td><td>Time value to be normalized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
