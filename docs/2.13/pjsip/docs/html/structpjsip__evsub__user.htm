<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pjsip_evsub_user Struct Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">pjsip_evsub_user Struct Reference<div class="ingroups"><a class="el" href="group__PJSIP__SIMPLE.htm">Event and Presence Framework</a> &raquo; <a class="el" href="group__PJSIP__EVENT__NOT.htm">SIP Event Notification (RFC 3265) Module</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;evsub.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a22174dd29aa8574b424cf6696f3ba91f"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__evsub__user.htm#a22174dd29aa8574b424cf6696f3ba91f">on_evsub_state</a> )(<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td></tr>
<tr class="separator:a22174dd29aa8574b424cf6696f3ba91f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38b8334716192c016d3718b1caf25fe3"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__evsub__user.htm#a38b8334716192c016d3718b1caf25fe3">on_tsx_state</a> )(<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td></tr>
<tr class="separator:a38b8334716192c016d3718b1caf25fe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d30ee9f284ebd88c51d59b25f2b8c9"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__evsub__user.htm#aa6d30ee9f284ebd88c51d59b25f2b8c9">on_rx_refresh</a> )(<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, int *p_st_code, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> **p_st_text, <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *res_hdr, <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **p_body)</td></tr>
<tr class="separator:aa6d30ee9f284ebd88c51d59b25f2b8c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa142b9d152f490b619aad9315f4b04fa"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__evsub__user.htm#aa142b9d152f490b619aad9315f4b04fa">on_rx_notify</a> )(<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, int *p_st_code, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> **p_st_text, <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *res_hdr, <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **p_body)</td></tr>
<tr class="separator:aa142b9d152f490b619aad9315f4b04fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e359a4d8fe93ff2f085ba8e37365d22"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__evsub__user.htm#a1e359a4d8fe93ff2f085ba8e37365d22">on_client_refresh</a> )(<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub)</td></tr>
<tr class="separator:a1e359a4d8fe93ff2f085ba8e37365d22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8c74a71e141c66e9ea26081e24797cf"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__evsub__user.htm#ac8c74a71e141c66e9ea26081e24797cf">on_server_timeout</a> )(<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub)</td></tr>
<tr class="separator:ac8c74a71e141c66e9ea26081e24797cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >This structure describes callback that is registered by application or package to receive notifications about subscription events.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="structpjsip__evsub__user.htm">pjsip_evsub_user</a> </dd></dl>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a22174dd29aa8574b424cf6696f3ba91f" name="a22174dd29aa8574b424cf6696f3ba91f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22174dd29aa8574b424cf6696f3ba91f">&#9670;&nbsp;</a></span>on_evsub_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsip_evsub_user::on_evsub_state) (<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when subscription state has changed. Application MUST be prepared to receive NULL event and events with type other than PJSIP_EVENT_TSX_STATE</p>
<p >This callback is OPTIONAL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sub</td><td>The subscription instance. </td></tr>
    <tr><td class="paramname">event</td><td>The event that has caused the state to change, which may be NULL or may have type other than PJSIP_EVENT_TSX_STATE. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a38b8334716192c016d3718b1caf25fe3" name="a38b8334716192c016d3718b1caf25fe3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38b8334716192c016d3718b1caf25fe3">&#9670;&nbsp;</a></span>on_tsx_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsip_evsub_user::on_tsx_state) (<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *event)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when transaction state has changed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sub</td><td>The subscription instance. </td></tr>
    <tr><td class="paramname">tsx</td><td>Transaction. </td></tr>
    <tr><td class="paramname">event</td><td>The event. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa6d30ee9f284ebd88c51d59b25f2b8c9" name="aa6d30ee9f284ebd88c51d59b25f2b8c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6d30ee9f284ebd88c51d59b25f2b8c9">&#9670;&nbsp;</a></span>on_rx_refresh</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsip_evsub_user::on_rx_refresh) (<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, int *p_st_code, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> **p_st_text, <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *res_hdr, <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **p_body)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when incoming SUBSCRIBE (or any method that establishes the subscription in the first place) is received. It allows application to specify what response should be sent to remote, along with additional headers and message body to be put in the response.</p>
<p >This callback is only applicable and required for UAS.</p>
<p >Upon receiving this callback, implementation MUST send NOTIFY request. The suggested behavior is to call <a class="el" href="group__PJSIP__EVENT__NOT.htm#ga981bc5f30ffa5311f12d559ca76eb4f0">pjsip_evsub_current_notify()</a>, since this function takes care about unsubscription request and calculates the appropriate expiration interval.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sub</td><td>The subscription instance. </td></tr>
    <tr><td class="paramname">rdata</td><td>The received SUBSCRIBE request. </td></tr>
    <tr><td class="paramname">p_st_code</td><td>Application MUST set the value of this argument with final status code (200-699) upon returning from the callback. Only applicable for refresh request. For unsubscription, the library will always reply with 200. </td></tr>
    <tr><td class="paramname">p_st_text</td><td>Custom status text, if any. </td></tr>
    <tr><td class="paramname">res_hdr</td><td>Upon return, application can put additional headers to be sent in the response in this list. </td></tr>
    <tr><td class="paramname">p_body</td><td>Application MAY specify message body to be sent in the response. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa142b9d152f490b619aad9315f4b04fa" name="aa142b9d152f490b619aad9315f4b04fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa142b9d152f490b619aad9315f4b04fa">&#9670;&nbsp;</a></span>on_rx_notify</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsip_evsub_user::on_rx_notify) (<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, int *p_st_code, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> **p_st_text, <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *res_hdr, <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **p_body)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when client/subscriber received incoming NOTIFY request. It allows the application to specify what response should be sent to remote, along with additional headers and message body to be put in the response.</p>
<p >This callback is OPTIONAL. When it is not implemented, the default behavior is to respond incoming NOTIFY request with 200 (OK).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sub</td><td>The subscription instance. </td></tr>
    <tr><td class="paramname">rdata</td><td>The received NOTIFY request. </td></tr>
    <tr><td class="paramname">p_st_code</td><td>Application MUST set the value of this argument with final status code (200-699) upon returning from the callback. </td></tr>
    <tr><td class="paramname">p_st_text</td><td>Custom status text, if any. </td></tr>
    <tr><td class="paramname">res_hdr</td><td>Upon return, application can put additional headers to be sent in the response in this list. </td></tr>
    <tr><td class="paramname">p_body</td><td>Application MAY specify message body to be sent in the response. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1e359a4d8fe93ff2f085ba8e37365d22" name="a1e359a4d8fe93ff2f085ba8e37365d22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e359a4d8fe93ff2f085ba8e37365d22">&#9670;&nbsp;</a></span>on_client_refresh</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsip_evsub_user::on_client_refresh) (<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when it is time for the client to refresh the subscription.</p>
<p >This callback is OPTIONAL when PJSIP package such as presence or refer is used; the event package will refresh subscription by sending SUBSCRIBE with the interval set to current/last interval.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sub</td><td>The subscription instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac8c74a71e141c66e9ea26081e24797cf" name="ac8c74a71e141c66e9ea26081e24797cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8c74a71e141c66e9ea26081e24797cf">&#9670;&nbsp;</a></span>on_server_timeout</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pjsip_evsub_user::on_server_timeout) (<a class="el" href="group__PJSIP__EVENT__NOT.htm#gae4f79b76ea80e7cb44e228abedc2556d">pjsip_evsub</a> *sub)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called when server doesn't receive subscription refresh after the specified subscription interval.</p>
<p >This callback is OPTIONAL when PJSIP package such as presence or refer is used; the event package send NOTIFY to terminate the subscription. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="evsub_8h.htm">evsub.h</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
