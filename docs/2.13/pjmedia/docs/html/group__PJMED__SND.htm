<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Portable Sound Hardware Abstraction (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Portable Sound Hardware Abstraction<div class="ingroups"><a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a> &raquo; <a class="el" href="group__PJMEDIA__PORT__CLOCK.htm">Clock/Timing</a> &raquo; <a class="el" href="group__PJMED__SND__PORT.htm">Sound Device Port</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>PJMEDIA abstraction for sound device hardware.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__snd__dev__info.htm">pjmedia_snd_dev_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__snd__stream__info.htm">pjmedia_snd_stream_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga2b88ad3225cbea29454f5bb263269bb2"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a></td></tr>
<tr class="separator:ga2b88ad3225cbea29454f5bb263269bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6ace801b73e12a7bbae0be7766674b5"><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#gae6ace801b73e12a7bbae0be7766674b5">pjmedia_snd_play_cb</a>) (void *user_data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> timestamp, void *output, unsigned size)</td></tr>
<tr class="separator:gae6ace801b73e12a7bbae0be7766674b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ac740d0d790b2c5157daf4954d0d745"><td class="memItemLeft" align="right" valign="top">typedef <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga0ac740d0d790b2c5157daf4954d0d745">pjmedia_snd_rec_cb</a>) (void *user_data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> timestamp, void *input, unsigned size)</td></tr>
<tr class="separator:ga0ac740d0d790b2c5157daf4954d0d745"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaa0f17ad051a752833f882c4f656fbd86"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#gaa0f17ad051a752833f882c4f656fbd86">pjmedia_snd_init</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *factory)</td></tr>
<tr class="separator:gaa0f17ad051a752833f882c4f656fbd86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10a014ababfde404b5476081b3cdbf6b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga10a014ababfde404b5476081b3cdbf6b">pjmedia_snd_get_dev_count</a> (void)</td></tr>
<tr class="separator:ga10a014ababfde404b5476081b3cdbf6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab27e2cad6af1f220bbed47fc484f728a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structpjmedia__snd__dev__info.htm">pjmedia_snd_dev_info</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#gab27e2cad6af1f220bbed47fc484f728a">pjmedia_snd_get_dev_info</a> (unsigned index)</td></tr>
<tr class="separator:gab27e2cad6af1f220bbed47fc484f728a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf484ae796db308d5a1e441403f4ca721"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#gaf484ae796db308d5a1e441403f4ca721">pjmedia_snd_set_latency</a> (unsigned input_latency, unsigned output_latency)</td></tr>
<tr class="separator:gaf484ae796db308d5a1e441403f4ca721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9f21fee2a982949d0f5377fa848e218"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#gad9f21fee2a982949d0f5377fa848e218">pjmedia_snd_open</a> (int rec_id, int play_id, unsigned clock_rate, unsigned channel_count, unsigned samples_per_frame, unsigned bits_per_sample, <a class="el" href="group__PJMED__SND.htm#ga0ac740d0d790b2c5157daf4954d0d745">pjmedia_snd_rec_cb</a> rec_cb, <a class="el" href="group__PJMED__SND.htm#gae6ace801b73e12a7bbae0be7766674b5">pjmedia_snd_play_cb</a> play_cb, void *user_data, <a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> **p_snd_strm)</td></tr>
<tr class="separator:gad9f21fee2a982949d0f5377fa848e218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga517651276a7898fe0ec57b31d3b4b28d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga517651276a7898fe0ec57b31d3b4b28d">pjmedia_snd_open_rec</a> (int index, unsigned clock_rate, unsigned channel_count, unsigned samples_per_frame, unsigned bits_per_sample, <a class="el" href="group__PJMED__SND.htm#ga0ac740d0d790b2c5157daf4954d0d745">pjmedia_snd_rec_cb</a> rec_cb, void *user_data, <a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> **p_snd_strm)</td></tr>
<tr class="separator:ga517651276a7898fe0ec57b31d3b4b28d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42f90112fc22f4de85a956a72f183165"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga42f90112fc22f4de85a956a72f183165">pjmedia_snd_open_player</a> (int index, unsigned clock_rate, unsigned channel_count, unsigned samples_per_frame, unsigned bits_per_sample, <a class="el" href="group__PJMED__SND.htm#gae6ace801b73e12a7bbae0be7766674b5">pjmedia_snd_play_cb</a> play_cb, void *user_data, <a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> **p_snd_strm)</td></tr>
<tr class="separator:ga42f90112fc22f4de85a956a72f183165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2632eb52807041431d4a0ee83cd2a62"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#gad2632eb52807041431d4a0ee83cd2a62">pjmedia_snd_stream_get_info</a> (<a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *strm, <a class="el" href="structpjmedia__snd__stream__info.htm">pjmedia_snd_stream_info</a> *pi)</td></tr>
<tr class="separator:gad2632eb52807041431d4a0ee83cd2a62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1d52df10ec0edf973f67242e966ccc2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#gaa1d52df10ec0edf973f67242e966ccc2">pjmedia_snd_stream_start</a> (<a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr class="separator:gaa1d52df10ec0edf973f67242e966ccc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8cbcfab060e9d07c84326e82a005f8e8"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga8cbcfab060e9d07c84326e82a005f8e8">pjmedia_snd_stream_stop</a> (<a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr class="separator:ga8cbcfab060e9d07c84326e82a005f8e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga93c08fa641a888b94819f87c11438026"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga93c08fa641a888b94819f87c11438026">pjmedia_snd_stream_close</a> (<a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *<a class="el" href="structstream.htm">stream</a>)</td></tr>
<tr class="separator:ga93c08fa641a888b94819f87c11438026"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72dc95b57682eabae85f4f86fb0dc6d8"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__SND.htm#ga72dc95b57682eabae85f4f86fb0dc6d8">pjmedia_snd_deinit</a> (void)</td></tr>
<tr class="separator:ga72dc95b57682eabae85f4f86fb0dc6d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p ><b>Warning: this sound device API has been deprecated and replaced by PJMEDIA Audio Device API. Please see <a href="http://trac.pjsip.org/repos/wiki/Audio_Dev_API">http://trac.pjsip.org/repos/wiki/Audio_Dev_API</a> for more information.</b></p>
<p >This section describes lower level abstraction for sound device hardware. Application normally uses the higher layer <a class="el" href="group__PJMED__SND__PORT.htm">Sound Device Port</a> abstraction since it works seamlessly with <a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a>.</p>
<p >The sound hardware abstraction basically runs <b>asychronously</b>, and application must register callbacks to be called to receive/ supply audio frames from/to the sound hardware.</p>
<p >A full duplex sound stream (created with <a class="el" href="group__PJMED__SND.htm#gad9f21fee2a982949d0f5377fa848e218">pjmedia_snd_open()</a>) requires application to supply two callbacks:</p><ul>
<li><b><code>rec_cb</code></b> callback to be called when it has finished capturing one media frame, and</li>
<li><b><code>play_cb</code></b> callback to be called when it needs media frame to be played to the sound playback hardware.</li>
</ul>
<p >Half duplex sound stream (created with <a class="el" href="group__PJMED__SND.htm#ga517651276a7898fe0ec57b31d3b4b28d">pjmedia_snd_open_rec()</a> or <a class="el" href="group__PJMED__SND.htm#ga42f90112fc22f4de85a956a72f183165">pjmedia_snd_open_player()</a>) will only need one of the callback to be specified.</p>
<p >After sound stream is created, application need to call <a class="el" href="group__PJMED__SND.htm#gaa1d52df10ec0edf973f67242e966ccc2">pjmedia_snd_stream_start()</a> to start capturing/playing back media frames from/to the sound device. </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga2b88ad3225cbea29454f5bb263269bb2" name="ga2b88ad3225cbea29454f5bb263269bb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b88ad3225cbea29454f5bb263269bb2">&#9670;&nbsp;</a></span>pjmedia_snd_stream</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> <a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Opaque declaration for pjmedia_snd_stream. </p>

</div>
</div>
<a id="gae6ace801b73e12a7bbae0be7766674b5" name="gae6ace801b73e12a7bbae0be7766674b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae6ace801b73e12a7bbae0be7766674b5">&#9670;&nbsp;</a></span>pjmedia_snd_play_cb</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pjmedia_snd_play_cb) (void *user_data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> timestamp, void *output, unsigned size)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called by player stream when it needs additional data to be played by the device. Application must fill in the whole of output buffer with sound samples.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">user_data</td><td>User data associated with the stream. </td></tr>
    <tr><td class="paramname">timestamp</td><td>Timestamp, in samples. </td></tr>
    <tr><td class="paramname">output</td><td>Buffer to be filled out by application. </td></tr>
    <tr><td class="paramname">size</td><td>The size requested in bytes, which will be equal to the size of one whole packet.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Non-zero to stop the stream. </dd></dl>

</div>
</div>
<a id="ga0ac740d0d790b2c5157daf4954d0d745" name="ga0ac740d0d790b2c5157daf4954d0d745"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0ac740d0d790b2c5157daf4954d0d745">&#9670;&nbsp;</a></span>pjmedia_snd_rec_cb</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pjmedia_snd_rec_cb) (void *user_data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> timestamp, void *input, unsigned size)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called by recorder stream when it has captured the whole packet worth of audio samples.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">user_data</td><td>User data associated with the stream. </td></tr>
    <tr><td class="paramname">timestamp</td><td>Timestamp, in samples. </td></tr>
    <tr><td class="paramname">input</td><td>Buffer containing the captured audio samples. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the data in the buffer, in bytes.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Non-zero to stop the stream. </dd></dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaa0f17ad051a752833f882c4f656fbd86" name="gaa0f17ad051a752833f882c4f656fbd86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa0f17ad051a752833f882c4f656fbd86">&#9670;&nbsp;</a></span>pjmedia_snd_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_init </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *&#160;</td>
          <td class="paramname"><em>factory</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Init the sound library.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">factory</td><td>The sound factory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Zero on success. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, and <a class="el" href="group__PJMEDIA__AUDIODEV__SUBSYSTEM__API.htm#gaa66ec5427ffc9ede38c4902d165f1c91">pjmedia_aud_subsys_init()</a>.</p>

</div>
</div>
<a id="ga10a014ababfde404b5476081b3cdbf6b" name="ga10a014ababfde404b5476081b3cdbf6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga10a014ababfde404b5476081b3cdbf6b">&#9670;&nbsp;</a></span>pjmedia_snd_get_dev_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int pjmedia_snd_get_dev_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the number of devices detected by the library.</p>
<dl class="section return"><dt>Returns</dt><dd>Number of devices. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, and <a class="el" href="group__PJMEDIA__AUDIODEV__API.htm#gadb1b8058a1e0c4721b3781a1c92b15d8">pjmedia_aud_dev_count()</a>.</p>

</div>
</div>
<a id="gab27e2cad6af1f220bbed47fc484f728a" name="gab27e2cad6af1f220bbed47fc484f728a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab27e2cad6af1f220bbed47fc484f728a">&#9670;&nbsp;</a></span>pjmedia_snd_get_dev_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structpjmedia__snd__dev__info.htm">pjmedia_snd_dev_info</a> * pjmedia_snd_get_dev_info </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get device info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the device, which should be in the range from zero to <a class="el" href="group__PJMED__SND.htm#ga10a014ababfde404b5476081b3cdbf6b">pjmedia_snd_get_dev_count</a> - 1. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaf484ae796db308d5a1e441403f4ca721" name="gaf484ae796db308d5a1e441403f4ca721"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf484ae796db308d5a1e441403f4ca721">&#9670;&nbsp;</a></span>pjmedia_snd_set_latency()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_set_latency </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>input_latency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>output_latency</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set sound device latency, this function must be called before sound device opened, or otherwise default latency setting will be used, </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJMEDIA__CONFIG.htm#ga7ce7c7b237189708cbfa7faa1a16004a">PJMEDIA_SND_DEFAULT_REC_LATENCY</a> &amp; <a class="el" href="group__PJMEDIA__CONFIG.htm#gad17d383f8f62754be9282c6522772010">PJMEDIA_SND_DEFAULT_PLAY_LATENCY</a>.</dd></dl>
<p>Choosing latency value is not straightforward, it should accomodate both minimum latency and stability. Lower latency tends to cause sound device less reliable (producing audio dropouts) on CPU load disturbance. Moreover, the best latency setting may vary based on many aspects, e.g: sound card, CPU, OS, kernel, etc.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">input_latency</td><td>The latency of input device, in ms, set to 0 for default PJMEDIA_SND_DEFAULT_REC_LATENCY. </td></tr>
    <tr><td class="paramname">output_latency</td><td>The latency of output device, in ms, set to 0 for default PJMEDIA_SND_DEFAULT_PLAY_LATENCY.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gad9f21fee2a982949d0f5377fa848e218" name="gad9f21fee2a982949d0f5377fa848e218"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad9f21fee2a982949d0f5377fa848e218">&#9670;&nbsp;</a></span>pjmedia_snd_open()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_open </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>play_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>samples_per_frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bits_per_sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga0ac740d0d790b2c5157daf4954d0d745">pjmedia_snd_rec_cb</a>&#160;</td>
          <td class="paramname"><em>rec_cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#gae6ace801b73e12a7bbae0be7766674b5">pjmedia_snd_play_cb</a>&#160;</td>
          <td class="paramname"><em>play_cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> **&#160;</td>
          <td class="paramname"><em>p_snd_strm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create sound stream for both capturing audio and audio playback, from the same device. This is the recommended way to create simultaneous recorder and player streams (instead of creating separate capture and playback streams), because it works on backends that does not allow a device to be opened more than once.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rec_id</td><td>Device index for recorder/capture stream, or -1 to use the first capable device. </td></tr>
    <tr><td class="paramname">play_id</td><td>Device index for playback stream, or -1 to use the first capable device. </td></tr>
    <tr><td class="paramname">clock_rate</td><td>Sound device's clock rate to set. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Set number of channels, 1 for mono, or 2 for stereo. The channel count determines the format of the frame. </td></tr>
    <tr><td class="paramname">samples_per_frame</td><td>Number of samples per frame. </td></tr>
    <tr><td class="paramname">bits_per_sample</td><td>Set the number of bits per sample. The normal value for this parameter is 16 bits per sample. </td></tr>
    <tr><td class="paramname">rec_cb</td><td>Callback to handle captured audio samples. </td></tr>
    <tr><td class="paramname">play_cb</td><td>Callback to be called when the sound player needs more audio samples to play. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be associated with the stream. </td></tr>
    <tr><td class="paramname">p_snd_strm</td><td>Pointer to receive the stream instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga517651276a7898fe0ec57b31d3b4b28d" name="ga517651276a7898fe0ec57b31d3b4b28d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga517651276a7898fe0ec57b31d3b4b28d">&#9670;&nbsp;</a></span>pjmedia_snd_open_rec()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_open_rec </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>samples_per_frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bits_per_sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga0ac740d0d790b2c5157daf4954d0d745">pjmedia_snd_rec_cb</a>&#160;</td>
          <td class="paramname"><em>rec_cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> **&#160;</td>
          <td class="paramname"><em>p_snd_strm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a unidirectional audio stream for capturing audio samples from the sound device.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>Device index, or -1 to let the library choose the first available device. </td></tr>
    <tr><td class="paramname">clock_rate</td><td>Sound device's clock rate to set. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Set number of channels, 1 for mono, or 2 for stereo. The channel count determines the format of the frame. </td></tr>
    <tr><td class="paramname">samples_per_frame</td><td>Number of samples per frame. </td></tr>
    <tr><td class="paramname">bits_per_sample</td><td>Set the number of bits per sample. The normal value for this parameter is 16 bits per sample. </td></tr>
    <tr><td class="paramname">rec_cb</td><td>Callback to handle captured audio samples. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be associated with the stream. </td></tr>
    <tr><td class="paramname">p_snd_strm</td><td>Pointer to receive the stream instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga42f90112fc22f4de85a956a72f183165" name="ga42f90112fc22f4de85a956a72f183165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga42f90112fc22f4de85a956a72f183165">&#9670;&nbsp;</a></span>pjmedia_snd_open_player()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_open_player </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>samples_per_frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bits_per_sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#gae6ace801b73e12a7bbae0be7766674b5">pjmedia_snd_play_cb</a>&#160;</td>
          <td class="paramname"><em>play_cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> **&#160;</td>
          <td class="paramname"><em>p_snd_strm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a unidirectional audio stream for playing audio samples to the sound device.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>Device index, or -1 to let the library choose the first available device. </td></tr>
    <tr><td class="paramname">clock_rate</td><td>Sound device's clock rate to set. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Set number of channels, 1 for mono, or 2 for stereo. The channel count determines the format of the frame. </td></tr>
    <tr><td class="paramname">samples_per_frame</td><td>Number of samples per frame. </td></tr>
    <tr><td class="paramname">bits_per_sample</td><td>Set the number of bits per sample. The normal value for this parameter is 16 bits per sample. </td></tr>
    <tr><td class="paramname">play_cb</td><td>Callback to be called when the sound player needs more audio samples to play. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be associated with the stream. </td></tr>
    <tr><td class="paramname">p_snd_strm</td><td>Pointer to receive the stream instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gad2632eb52807041431d4a0ee83cd2a62" name="gad2632eb52807041431d4a0ee83cd2a62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad2632eb52807041431d4a0ee83cd2a62">&#9670;&nbsp;</a></span>pjmedia_snd_stream_get_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_stream_get_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *&#160;</td>
          <td class="paramname"><em>strm</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__snd__stream__info.htm">pjmedia_snd_stream_info</a> *&#160;</td>
          <td class="paramname"><em>pi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get information about live stream.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">strm</td><td>The stream to be queried. </td></tr>
    <tr><td class="paramname">pi</td><td>Pointer to stream information to be filled up with information about the stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaa1d52df10ec0edf973f67242e966ccc2" name="gaa1d52df10ec0edf973f67242e966ccc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa1d52df10ec0edf973f67242e966ccc2">&#9670;&nbsp;</a></span>pjmedia_snd_stream_start()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_stream_start </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Start the stream.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The recorder or player stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Zero on success. </dd></dl>

</div>
</div>
<a id="ga8cbcfab060e9d07c84326e82a005f8e8" name="ga8cbcfab060e9d07c84326e82a005f8e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8cbcfab060e9d07c84326e82a005f8e8">&#9670;&nbsp;</a></span>pjmedia_snd_stream_stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_stream_stop </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Stop the stream.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The recorder or player stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Zero on success. </dd></dl>

</div>
</div>
<a id="ga93c08fa641a888b94819f87c11438026" name="ga93c08fa641a888b94819f87c11438026"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga93c08fa641a888b94819f87c11438026">&#9670;&nbsp;</a></span>pjmedia_snd_stream_close()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_stream_close </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMED__SND.htm#ga2b88ad3225cbea29454f5bb263269bb2">pjmedia_snd_stream</a> *&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destroy the stream.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The recorder of player stream.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Zero on success. </dd></dl>

</div>
</div>
<a id="ga72dc95b57682eabae85f4f86fb0dc6d8" name="ga72dc95b57682eabae85f4f86fb0dc6d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga72dc95b57682eabae85f4f86fb0dc6d8">&#9670;&nbsp;</a></span>pjmedia_snd_deinit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_snd_deinit </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Deinitialize sound library.</p>
<dl class="section return"><dt>Returns</dt><dd>Zero on success. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, and <a class="el" href="group__PJMEDIA__AUDIODEV__SUBSYSTEM__API.htm#ga385d198c8d30dc0142970d9a84de10cf">pjmedia_aud_subsys_shutdown()</a>.</p>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
