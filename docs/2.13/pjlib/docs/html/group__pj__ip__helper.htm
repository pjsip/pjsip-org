<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>IP Interface and Routing Helper (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">IP Interface and Routing Helper<div class="ingroups"><a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a> &raquo; <a class="el" href="group__PJ__IO.htm">Input/Output</a></div></div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionpj__ip__route__entry.htm">pj_ip_route_entry</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__enum__ip__option.htm">pj_enum_ip_option</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga888e22f667d0751ec4b7ea96864e5e15"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pj__ip__helper.htm#ga888e22f667d0751ec4b7ea96864e5e15">pj_enum_ip_option_default</a> (<a class="el" href="structpj__enum__ip__option.htm">pj_enum_ip_option</a> *opt)</td></tr>
<tr class="separator:ga888e22f667d0751ec4b7ea96864e5e15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab983d56df83721c32feeb2fe0d394e69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pj__ip__helper.htm#gab983d56df83721c32feeb2fe0d394e69">pj_enum_ip_interface</a> (int af, unsigned *count, <a class="el" href="unionpj__sockaddr.htm">pj_sockaddr</a> ifs[])</td></tr>
<tr class="separator:gab983d56df83721c32feeb2fe0d394e69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1817fbcdeea03ee9f7f32397da6a3d66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pj__ip__helper.htm#ga1817fbcdeea03ee9f7f32397da6a3d66">pj_enum_ip_interface2</a> (const <a class="el" href="structpj__enum__ip__option.htm">pj_enum_ip_option</a> *opt, unsigned *count, <a class="el" href="unionpj__sockaddr.htm">pj_sockaddr</a> ifs[])</td></tr>
<tr class="separator:ga1817fbcdeea03ee9f7f32397da6a3d66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fcefb4820b347e057a213206d0225a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pj__ip__helper.htm#ga1fcefb4820b347e057a213206d0225a1">pj_enum_ip_route</a> (unsigned *count, <a class="el" href="unionpj__ip__route__entry.htm">pj_ip_route_entry</a> routes[])</td></tr>
<tr class="separator:ga1fcefb4820b347e057a213206d0225a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >This module provides functions to query local host's IP interface and routing table. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gab983d56df83721c32feeb2fe0d394e69" name="gab983d56df83721c32feeb2fe0d394e69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab983d56df83721c32feeb2fe0d394e69">&#9670;&nbsp;</a></span>pj_enum_ip_interface()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_enum_ip_interface </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>af</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="unionpj__sockaddr.htm">pj_sockaddr</a>&#160;</td>
          <td class="paramname"><em>ifs</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumerate the local IP interfaces currently active in the host.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">af</td><td>Family of the address to be retrieved. Application may specify <a class="el" href="group__PJ__SOCK.htm#ga70ea77cd531607c6c3ce586d6fbd007d">pj_AF_UNSPEC()</a> to retrieve all addresses, or <a class="el" href="group__PJ__SOCK.htm#ga8ea303b95fe973432a361e47e0459086">pj_AF_INET()</a> or <a class="el" href="group__PJ__SOCK.htm#ga60a867be35581f776aa88156505309de">pj_AF_INET6()</a> to retrieve interfaces with specific address family. </td></tr>
    <tr><td class="paramname">count</td><td>On input, specify the number of entries. On output, it will be filled with the actual number of entries. </td></tr>
    <tr><td class="paramname">ifs</td><td>Array of socket addresses, which address part will be filled with the interface address. The address family part will be initialized with the address family of the IP address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga1817fbcdeea03ee9f7f32397da6a3d66" name="ga1817fbcdeea03ee9f7f32397da6a3d66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1817fbcdeea03ee9f7f32397da6a3d66">&#9670;&nbsp;</a></span>pj_enum_ip_interface2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_enum_ip_interface2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__enum__ip__option.htm">pj_enum_ip_option</a> *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="unionpj__sockaddr.htm">pj_sockaddr</a>&#160;</td>
          <td class="paramname"><em>ifs</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumerate the local IP interfaces currently active in the host with capability to filter DEPRECATED IPv6 addresses (currently only for Linux).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">opt</td><td>The option, default option will be used if NULL. </td></tr>
    <tr><td class="paramname">count</td><td>On input, specify the number of entries. On output, it will be filled with the actual number of entries. </td></tr>
    <tr><td class="paramname">ifs</td><td>Array of socket (with flags) addresses, which address part will be filled with the interface address. The address family part will be initialized with the address family of the IP address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga888e22f667d0751ec4b7ea96864e5e15" name="ga888e22f667d0751ec4b7ea96864e5e15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga888e22f667d0751ec4b7ea96864e5e15">&#9670;&nbsp;</a></span>pj_enum_ip_option_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_enum_ip_option_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__enum__ip__option.htm">pj_enum_ip_option</a> *&#160;</td>
          <td class="paramname"><em>opt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get default values of IP enumeration option.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">opt</td><td>The IP enumeration option. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="group__PJ__PSTR.htm#gafa92001573289c87313c660146369fa3">pj_bzero()</a>.</p>

</div>
</div>
<a id="ga1fcefb4820b347e057a213206d0225a1" name="ga1fcefb4820b347e057a213206d0225a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1fcefb4820b347e057a213206d0225a1">&#9670;&nbsp;</a></span>pj_enum_ip_route()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_enum_ip_route </td>
          <td>(</td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="unionpj__ip__route__entry.htm">pj_ip_route_entry</a>&#160;</td>
          <td class="paramname"><em>routes</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumerate the IP routing table for this host.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>On input, specify the number of routes entries. On output, it will be filled with the actual number of route entries. </td></tr>
    <tr><td class="paramname">routes</td><td>Array of IP routing entries.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
