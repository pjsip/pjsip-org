<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: Socket Quality of Service (QoS) API: TOS, DSCP, WMM, IEEE 802.1p (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>Socket Quality of Service (QoS) API: TOS, DSCP, WMM, IEEE 802.1p<br/>
<small>
[<a class="el" href="group__PJ__SOCK.htm">Socket Abstraction</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__qos__params.htm">pj_qos_params</a></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> { <br/>
&nbsp;&nbsp;<a class="el" href="group__socket__qos.htm#gga4f58251c0dc2198596d12b3238672f0ba4e0e87e6227cc37dd1d5be85b561fb9f">PJ_QOS_TYPE_BEST_EFFORT</a>, 
<a class="el" href="group__socket__qos.htm#gga4f58251c0dc2198596d12b3238672f0bab99b03550e8ff2c7a980e5af7817ec4a">PJ_QOS_TYPE_BACKGROUND</a>, 
<a class="el" href="group__socket__qos.htm#gga4f58251c0dc2198596d12b3238672f0ba527f557a8eb142dccd70d3252a4671c1">PJ_QOS_TYPE_VIDEO</a>, 
<a class="el" href="group__socket__qos.htm#gga4f58251c0dc2198596d12b3238672f0ba52512fb8a4502a4285c15cec73c2c9c5">PJ_QOS_TYPE_VOICE</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__socket__qos.htm#gga4f58251c0dc2198596d12b3238672f0ba37d4728b7bc76ddffc8058c2a0d2c194">PJ_QOS_TYPE_CONTROL</a>
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga4d0db66d154907ce3f14861e32e8dd9c">pj_qos_flag</a> { <a class="el" href="group__socket__qos.htm#gga4d0db66d154907ce3f14861e32e8dd9ca8da78bd7d18b812abc3fdbed9ec25f84">PJ_QOS_PARAM_HAS_DSCP</a> =  1, 
<a class="el" href="group__socket__qos.htm#gga4d0db66d154907ce3f14861e32e8dd9ca4e189d389ae34ab2158fbb4a78cc89e7">PJ_QOS_PARAM_HAS_SO_PRIO</a> =  2, 
<a class="el" href="group__socket__qos.htm#gga4d0db66d154907ce3f14861e32e8dd9cacf55c12e276157198419af3804249214">PJ_QOS_PARAM_HAS_WMM</a> =  4
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga5b193634aacb36ea4cecdfbb191a5e35">pj_qos_wmm_prio</a> { <a class="el" href="group__socket__qos.htm#gga5b193634aacb36ea4cecdfbb191a5e35a8217e8f5cf5cfef5e77d66c7e9a892e2">PJ_QOS_WMM_PRIO_BULK_EFFORT</a>, 
<a class="el" href="group__socket__qos.htm#gga5b193634aacb36ea4cecdfbb191a5e35a22a10dc8d94808dfc058289a9e737a7d">PJ_QOS_WMM_PRIO_BULK</a>, 
<a class="el" href="group__socket__qos.htm#gga5b193634aacb36ea4cecdfbb191a5e35acd47de889d3db63a5a544be5c1a36519">PJ_QOS_WMM_PRIO_VIDEO</a>, 
<a class="el" href="group__socket__qos.htm#gga5b193634aacb36ea4cecdfbb191a5e35aebb877b20940f38d08427841370af7d6">PJ_QOS_WMM_PRIO_VOICE</a>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga945d52a16562c6b2227eca67e92bd8d5">pj_sock_set_qos_type</a> (<a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, <a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga9f82de7f16f37b28048888d1c530cb4b">pj_sock_get_qos_type</a> (<a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, <a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> *p_type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga94d3210fb331ef38fe44c61d15af5ab8">pj_sock_apply_qos</a> (<a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, <a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> qos_type, <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *qos_params, unsigned log_level, const char *log_sender, const char *sock_name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#gadbfe233355bf536b85ef39203d842715">pj_sock_apply_qos2</a> (<a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, <a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> qos_type, const <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *qos_params, unsigned log_level, const char *log_sender, const char *sock_name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga39806928528bea998c63dabaa8e49dae">pj_qos_get_params</a> (<a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> type, <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *p_param)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga83afe232544803b490d6f72d6014eb8d">pj_qos_get_type</a> (const <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *param, <a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> *p_type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga1b6564954817fb3a29634225d06696b3">pj_sock_set_qos_params</a> (<a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *param)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__socket__qos.htm#ga9a73470cb567158ba254d2206c7accc0">pj_sock_get_qos_params</a> (<a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *p_param)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<h2><a class="anchor" id="intro"></a>
QoS Technologies</h2>
<p>QoS settings are available for both Layer 2 and 3 of TCP/IP protocols:</p>
<h3><a class="anchor" id="intro_ieee8021p"></a>
Layer 2: IEEE 802.1p for Ethernet</h3>
<p>IEEE 802.1p tagging will mark frames sent by a host for prioritized delivery using a 3-bit Priority field in the virtual local area network (VLAN) header of the Ethernet frame. The VLAN header is placed inside the Ethernet header, between the Source Address field and either the Length field (for an IEEE 802.3 frame) or the EtherType field (for an Ethernet II frame).</p>
<h3><a class="anchor" id="intro_wmm"></a>
Layer 2: WMM</h3>
<p>At the Network Interface layer for IEEE 802.11 wireless, the Wi-Fi Alliance certification for Wi-Fi Multimedia (WMM) defines four access categories for prioritizing network traffic. These access categories are (in order of highest to lowest priority) voice, video, best-effort, and background. Host support for WMM prioritization requires that both wireless network adapters and their drivers support WMM. Wireless access points (APs) must have WMM enabled.</p>
<h3><a class="anchor" id="intro_dscp"></a>
Layer 3: DSCP</h3>
<p>At the Internet layer, you can use Differentiated Services/Diffserv and set the value of the Differentiated Services Code Point (DSCP) in the IP header. As defined in RFC 2474, the DSCP value is the high-order 6 bits of the IP version 4 (IPv4) TOS field and the IP version 6 (IPv6) Traffic Class field.</p>
<h3><a class="anchor" id="intro_other"></a>
Layer 3: Other</h3>
<p>Other mechanisms exist (such as RSVP, IntServ) but this will not be implemented.</p>
<h2><a class="anchor" id="availability"></a>
QoS Availability</h2>
<h3><a class="anchor" id="linux"></a>
Linux</h3>
<p>DSCP is available via IP TOS option.</p>
<p>Ethernet 802.1p tagging is done by setting setsockopt(SO_PRIORITY) option of the socket, then with the set_egress_map option of the vconfig utility to convert this to set vlan-qos field of the packet.</p>
<p>WMM is not known to be available.</p>
<h3><a class="anchor" id="windows"></a>
Windows and Windows Mobile</h3>
<p>(It's a mess!)</p>
<p>DSCP is settable with setsockopt() on Windows 2000 or older, but Windows would silently ignore this call on WinXP or later, unless administrator modifies the registry. On Windows 2000, Windows XP, and Windows Server 2003, GQoS (Generic QoS) API is the standard API, but this API may not be supported in the future. On Vista and Windows 7, the is a new QoS2 API, also known as Quality Windows Audio-Video Experience (qWAVE).</p>
<p>IEEE 802.1p tagging is available via Traffic Control (TC) API, available on Windows XP SP2, but this needs administrator access. For Vista and later, it's in qWAVE.</p>
<p>WMM is available for mobile platforms on Windows Mobile 6 platform and Windows Embedded CE 6, via setsockopt(IP_DSCP_TRAFFIC_TYPE). qWAVE supports this as well.</p>
<h3><a class="anchor" id="symbian"></a>
Symbian S60 3rd Ed</h3>
<p>Both DSCP and WMM is supported via RSocket::SetOpt() with will set both Layer 2 and Layer 3 QoS settings accordingly. Internally, PJLIB sets the DSCP field of the socket, and based on certain DSCP values mapping, Symbian will set the WMM tag accordingly.</p>
<h2><a class="anchor" id="api"></a>
PJLIB's QoS API Abstraction</h2>
<p>Based on the above, the following API is implemented.</p>
<p>Declare the following "standard" traffic types.</p>
<div class="fragment"><pre class="fragment">     <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a>
     {
        PJ_QOS_TYPE_BEST_EFFORT,
        PJ_QOS_TYPE_BACKGROUND,
        PJ_QOS_TYPE_VIDEO,
        PJ_QOS_TYPE_VOICE,
        <a class="code" href="group__socket__qos.htm#gga4f58251c0dc2198596d12b3238672f0ba37d4728b7bc76ddffc8058c2a0d2c194">PJ_QOS_TYPE_CONTROL</a>
     } pj_qos_type;
</pre></div><p>The traffic classes above will determine how the Layer 2 and 3 QoS settings will be used. The standard mapping between the classes above to the corresponding Layer 2 and 3 settings are as follows:</p>
<div class="fragment"><pre class="fragment">    =================================================================
    PJLIB Traffic Type  IP DSCP         WMM                 802.1p
    -----------------------------------------------------------------
    BEST_EFFORT         0x00            BE (Bulk Effort)        0
    BACKGROUND          0x08            BK (Bulk)               2
    VIDEO               0x28            VI (Video)              5
    VOICE               0x30            VO (Voice)              6
    CONTROL             0x38            VO (Voice)              7
    =================================================================
</pre></div><p>There are two sets of API provided to manipulate the QoS parameters.</p>
<h3><a class="anchor" id="portable_api"></a>
Portable API</h3>
<p>The first set of API is:</p>
<div class="fragment"><pre class="fragment">     <span class="comment">// Set QoS parameters</span>
     PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__socket__qos.htm#ga945d52a16562c6b2227eca67e92bd8d5">pj_sock_set_qos_type</a>(<a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock,
                                               <a class="code" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> val);

     <span class="comment">// Get QoS parameters</span>
     PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__socket__qos.htm#ga9f82de7f16f37b28048888d1c530cb4b">pj_sock_get_qos_type</a>(<a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock,
                                               <a class="code" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> *p_val);
</pre></div><p>The API will set the traffic type according to the DSCP class, for both Layer 2 and Layer 3 QoS settings, where it's available. If any of the layer QoS setting is not settable, the API will silently ignore it. If both layers are not setable, the API will return error.</p>
<p>The API above is the recommended use of QoS, since it is the most portable across all platforms.</p>
<h3><a class="anchor" id="detail_api"></a>
Fine Grained Control API</h3>
<p>The second set of API is intended for application that wants to fine tune the QoS parameters.</p>
<p>The Layer 2 and 3 QoS parameters are stored in <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> structure:</p>
<div class="fragment"><pre class="fragment">     <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__socket__qos.htm#ga4d0db66d154907ce3f14861e32e8dd9c">pj_qos_flag</a>
     {
        <a class="code" href="group__socket__qos.htm#gga4d0db66d154907ce3f14861e32e8dd9ca8da78bd7d18b812abc3fdbed9ec25f84">PJ_QOS_PARAM_HAS_DSCP</a> = 1,
        <a class="code" href="group__socket__qos.htm#gga4d0db66d154907ce3f14861e32e8dd9ca4e189d389ae34ab2158fbb4a78cc89e7">PJ_QOS_PARAM_HAS_SO_PRIO</a> = 2,
        <a class="code" href="group__socket__qos.htm#gga4d0db66d154907ce3f14861e32e8dd9cacf55c12e276157198419af3804249214">PJ_QOS_PARAM_HAS_WMM</a> = 4
     } pj_qos_flag;

     <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__socket__qos.htm#ga5b193634aacb36ea4cecdfbb191a5e35">pj_qos_wmm_prio</a>
     {
        PJ_QOS_WMM_PRIO_BULK_EFFORT,
        PJ_QOS_WMM_PRIO_BULK,
        PJ_QOS_WMM_PRIO_VIDEO,
        <a class="code" href="group__socket__qos.htm#gga5b193634aacb36ea4cecdfbb191a5e35aebb877b20940f38d08427841370af7d6">PJ_QOS_WMM_PRIO_VOICE</a>
     } pj_qos_wmm_prio;

     <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__qos__params.htm">pj_qos_params</a>
     {
        <a class="code" href="group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>      flags;    <span class="comment">// Determines which values to </span>
                                  <span class="comment">// set, bitmask of pj_qos_flag</span>
        <a class="code" href="group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>      <a class="code" href="structpj__qos__params.htm#afa7a796d83d188894d207ebba951e425">dscp_val</a>; <span class="comment">// The 6 bits DSCP value to set</span>
        <a class="code" href="group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>      <a class="code" href="structpj__qos__params.htm#ad193fa6884468d7dc98d83e40e8778df">so_prio</a>;  <span class="comment">// SO_PRIORITY value</span>
        <a class="code" href="group__socket__qos.htm#ga5b193634aacb36ea4cecdfbb191a5e35">pj_qos_wmm_prio</a> <a class="code" href="structpj__qos__params.htm#acc61069870c76b2ac0d7ea817a5d3742">wmm_prio</a>; <span class="comment">// WMM priority value</span>
     } <a class="code" href="structpj__qos__params.htm">pj_qos_params</a>;
</pre></div><p>The second set of API with more fine-grained control over the parameters are:</p>
<div class="fragment"><pre class="fragment">     <span class="comment">// Retrieve QoS params for the specified traffic type</span>
     PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__socket__qos.htm#ga39806928528bea998c63dabaa8e49dae">pj_qos_get_params</a>(<a class="code" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> type, 
                                            <a class="code" href="structpj__qos__params.htm">pj_qos_params</a> *p);

     <span class="comment">// Set QoS parameters to the socket</span>
     PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__socket__qos.htm#ga1b6564954817fb3a29634225d06696b3">pj_sock_set_qos_params</a>(<a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock,
                                                 const <a class="code" href="structpj__qos__params.htm">pj_qos_params</a> *p);

     <span class="comment">// Get QoS parameters from the socket</span>
     PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__socket__qos.htm#ga9a73470cb567158ba254d2206c7accc0">pj_sock_get_qos_params</a>(<a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock,
                                                 <a class="code" href="structpj__qos__params.htm">pj_qos_params</a> *p);
</pre></div><p>Important:</p>
<p>The pj_sock_set/get_qos_params() APIs are not portable, and it's probably only going to be implemented on Linux. Application should always try to use <a class="el" href="group__socket__qos.htm#ga945d52a16562c6b2227eca67e92bd8d5">pj_sock_set_qos_type()</a> instead. </p>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga4d0db66d154907ce3f14861e32e8dd9c"></a><!-- doxytag: member="sock_qos.h::pj_qos_flag" ref="ga4d0db66d154907ce3f14861e32e8dd9c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__socket__qos.htm#ga4d0db66d154907ce3f14861e32e8dd9c">pj_qos_flag</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Bitmask flag to indicate which QoS layer setting is set in the <em>flags</em> field of the <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> structure. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga4d0db66d154907ce3f14861e32e8dd9ca8da78bd7d18b812abc3fdbed9ec25f84"></a><!-- doxytag: member="PJ_QOS_PARAM_HAS_DSCP" ref="gga4d0db66d154907ce3f14861e32e8dd9ca8da78bd7d18b812abc3fdbed9ec25f84" args="" -->PJ_QOS_PARAM_HAS_DSCP</em>&nbsp;</td><td>
<p>DSCP field is set. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d0db66d154907ce3f14861e32e8dd9ca4e189d389ae34ab2158fbb4a78cc89e7"></a><!-- doxytag: member="PJ_QOS_PARAM_HAS_SO_PRIO" ref="gga4d0db66d154907ce3f14861e32e8dd9ca4e189d389ae34ab2158fbb4a78cc89e7" args="" -->PJ_QOS_PARAM_HAS_SO_PRIO</em>&nbsp;</td><td>
<p>Socket SO_PRIORITY </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4d0db66d154907ce3f14861e32e8dd9cacf55c12e276157198419af3804249214"></a><!-- doxytag: member="PJ_QOS_PARAM_HAS_WMM" ref="gga4d0db66d154907ce3f14861e32e8dd9cacf55c12e276157198419af3804249214" args="" -->PJ_QOS_PARAM_HAS_WMM</em>&nbsp;</td><td>
<p>WMM field is set. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga4f58251c0dc2198596d12b3238672f0b"></a><!-- doxytag: member="sock_qos.h::pj_qos_type" ref="ga4f58251c0dc2198596d12b3238672f0b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>High level traffic classification. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga4f58251c0dc2198596d12b3238672f0ba4e0e87e6227cc37dd1d5be85b561fb9f"></a><!-- doxytag: member="PJ_QOS_TYPE_BEST_EFFORT" ref="gga4f58251c0dc2198596d12b3238672f0ba4e0e87e6227cc37dd1d5be85b561fb9f" args="" -->PJ_QOS_TYPE_BEST_EFFORT</em>&nbsp;</td><td>
<p>Best effort traffic (default value). Any QoS function calls with specifying this value are effectively no-op </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4f58251c0dc2198596d12b3238672f0bab99b03550e8ff2c7a980e5af7817ec4a"></a><!-- doxytag: member="PJ_QOS_TYPE_BACKGROUND" ref="gga4f58251c0dc2198596d12b3238672f0bab99b03550e8ff2c7a980e5af7817ec4a" args="" -->PJ_QOS_TYPE_BACKGROUND</em>&nbsp;</td><td>
<p>Background traffic. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4f58251c0dc2198596d12b3238672f0ba527f557a8eb142dccd70d3252a4671c1"></a><!-- doxytag: member="PJ_QOS_TYPE_VIDEO" ref="gga4f58251c0dc2198596d12b3238672f0ba527f557a8eb142dccd70d3252a4671c1" args="" -->PJ_QOS_TYPE_VIDEO</em>&nbsp;</td><td>
<p>Video traffic. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4f58251c0dc2198596d12b3238672f0ba52512fb8a4502a4285c15cec73c2c9c5"></a><!-- doxytag: member="PJ_QOS_TYPE_VOICE" ref="gga4f58251c0dc2198596d12b3238672f0ba52512fb8a4502a4285c15cec73c2c9c5" args="" -->PJ_QOS_TYPE_VOICE</em>&nbsp;</td><td>
<p>Voice traffic. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga4f58251c0dc2198596d12b3238672f0ba37d4728b7bc76ddffc8058c2a0d2c194"></a><!-- doxytag: member="PJ_QOS_TYPE_CONTROL" ref="gga4f58251c0dc2198596d12b3238672f0ba37d4728b7bc76ddffc8058c2a0d2c194" args="" -->PJ_QOS_TYPE_CONTROL</em>&nbsp;</td><td>
<p>Control traffic. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5b193634aacb36ea4cecdfbb191a5e35"></a><!-- doxytag: member="sock_qos.h::pj_qos_wmm_prio" ref="ga5b193634aacb36ea4cecdfbb191a5e35" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__socket__qos.htm#ga5b193634aacb36ea4cecdfbb191a5e35">pj_qos_wmm_prio</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Standard WMM priorities. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga5b193634aacb36ea4cecdfbb191a5e35a8217e8f5cf5cfef5e77d66c7e9a892e2"></a><!-- doxytag: member="PJ_QOS_WMM_PRIO_BULK_EFFORT" ref="gga5b193634aacb36ea4cecdfbb191a5e35a8217e8f5cf5cfef5e77d66c7e9a892e2" args="" -->PJ_QOS_WMM_PRIO_BULK_EFFORT</em>&nbsp;</td><td>
<p>Bulk effort priority </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5b193634aacb36ea4cecdfbb191a5e35a22a10dc8d94808dfc058289a9e737a7d"></a><!-- doxytag: member="PJ_QOS_WMM_PRIO_BULK" ref="gga5b193634aacb36ea4cecdfbb191a5e35a22a10dc8d94808dfc058289a9e737a7d" args="" -->PJ_QOS_WMM_PRIO_BULK</em>&nbsp;</td><td>
<p>Bulk priority. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5b193634aacb36ea4cecdfbb191a5e35acd47de889d3db63a5a544be5c1a36519"></a><!-- doxytag: member="PJ_QOS_WMM_PRIO_VIDEO" ref="gga5b193634aacb36ea4cecdfbb191a5e35acd47de889d3db63a5a544be5c1a36519" args="" -->PJ_QOS_WMM_PRIO_VIDEO</em>&nbsp;</td><td>
<p>Video priority </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5b193634aacb36ea4cecdfbb191a5e35aebb877b20940f38d08427841370af7d6"></a><!-- doxytag: member="PJ_QOS_WMM_PRIO_VOICE" ref="gga5b193634aacb36ea4cecdfbb191a5e35aebb877b20940f38d08427841370af7d6" args="" -->PJ_QOS_WMM_PRIO_VOICE</em>&nbsp;</td><td>
<p>Voice priority </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga39806928528bea998c63dabaa8e49dae"></a><!-- doxytag: member="sock_qos.h::pj_qos_get_params" ref="ga39806928528bea998c63dabaa8e49dae" args="(pj_qos_type type, pj_qos_params *p_param)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_qos_get_params </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a>&nbsp;</td>
          <td class="paramname"> <em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *&nbsp;</td>
          <td class="paramname"> <em>p_param</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieve the standard mapping of QoS params for the specified traffic type.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>The traffic type from which the QoS parameters are to be retrieved. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_param</em>&nbsp;</td><td>Pointer to receive the QoS parameters.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga83afe232544803b490d6f72d6014eb8d"></a><!-- doxytag: member="sock_qos.h::pj_qos_get_type" ref="ga83afe232544803b490d6f72d6014eb8d" args="(const pj_qos_params *param, pj_qos_type *p_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_qos_get_type </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *&nbsp;</td>
          <td class="paramname"> <em>param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> *&nbsp;</td>
          <td class="paramname"> <em>p_type</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieve the traffic type that matches the specified QoS parameters. If no exact matching is found, this function will return an approximation of the closest matching traffic type for the specified QoS parameters.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>param</em>&nbsp;</td><td>Structure containing QoS parameters to map into "standard" traffic types. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_type</em>&nbsp;</td><td>Pointer to receive the traffic type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga94d3210fb331ef38fe44c61d15af5ab8"></a><!-- doxytag: member="sock_qos.h::pj_sock_apply_qos" ref="ga94d3210fb331ef38fe44c61d15af5ab8" args="(pj_sock_t sock, pj_qos_type qos_type, pj_qos_params *qos_params, unsigned log_level, const char *log_sender, const char *sock_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_sock_apply_qos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a>&nbsp;</td>
          <td class="paramname"> <em>qos_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *&nbsp;</td>
          <td class="paramname"> <em>qos_params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>log_sender</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>sock_name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a convenience function to apply QoS to the socket, and print error logging if the operations failed. Both QoS traffic type and the low level QoS parameters can be applied with this function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>The socket handle. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>qos_type</em>&nbsp;</td><td>QoS traffic type. The QoS traffic type will be applied only if the value is not PJ_QOS_TYPE_BEST_EFFORT, </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>qos_params</em>&nbsp;</td><td>Optional low-level QoS parameters. This will be applied only if this argument is not NULL and the flags inside the structure is non-zero. Upon return, the flags will indicate which parameters have been applied successfully. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>log_level</em>&nbsp;</td><td>This function will print to log at this level upon encountering errors. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>log_sender</em>&nbsp;</td><td>Optional sender name in the log. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sock_name</em>&nbsp;</td><td>Optional name to help identify the socket in the log.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if at least Layer 2 or Layer 3 setting is successfully set. If both Layer 2 and Layer 3 settings can't be set, this function will return error.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__socket__qos.htm#gadbfe233355bf536b85ef39203d842715">pj_sock_apply_qos2()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="gadbfe233355bf536b85ef39203d842715"></a><!-- doxytag: member="sock_qos.h::pj_sock_apply_qos2" ref="gadbfe233355bf536b85ef39203d842715" args="(pj_sock_t sock, pj_qos_type qos_type, const pj_qos_params *qos_params, unsigned log_level, const char *log_sender, const char *sock_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_sock_apply_qos2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a>&nbsp;</td>
          <td class="paramname"> <em>qos_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *&nbsp;</td>
          <td class="paramname"> <em>qos_params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>log_sender</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>sock_name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Variant of <a class="el" href="group__socket__qos.htm#ga94d3210fb331ef38fe44c61d15af5ab8">pj_sock_apply_qos()</a> where the <em>qos_params</em> parameter is const.</p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__socket__qos.htm#ga94d3210fb331ef38fe44c61d15af5ab8">pj_sock_apply_qos()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga9a73470cb567158ba254d2206c7accc0"></a><!-- doxytag: member="sock_qos.h::pj_sock_get_qos_params" ref="ga9a73470cb567158ba254d2206c7accc0" args="(pj_sock_t sock, pj_qos_params *p_param)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_sock_get_qos_params </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *&nbsp;</td>
          <td class="paramname"> <em>p_param</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a low level API to get QoS parameters from the socket.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>The socket. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_param</em>&nbsp;</td><td>Pointer to receive the parameters. Upon returning successfully, the <em>flags</em> field of this structure will be initialized with the appropriate bitmask to indicate which fields have been successfully retrieved.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9f82de7f16f37b28048888d1c530cb4b"></a><!-- doxytag: member="sock_qos.h::pj_sock_get_qos_type" ref="ga9f82de7f16f37b28048888d1c530cb4b" args="(pj_sock_t sock, pj_qos_type *p_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_sock_get_qos_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a> *&nbsp;</td>
          <td class="paramname"> <em>p_type</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is the high level and portable API to get the traffic type that has been set on the socket. On occasions where the Layer 2 or Layer 3 settings were modified by using low level API, this function may return approximation of the closest QoS type that matches the settings.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>The socket. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_type</em>&nbsp;</td><td>Pointer to receive the traffic type of the socket.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if traffic type for the socket can be obtained or approximated.. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1b6564954817fb3a29634225d06696b3"></a><!-- doxytag: member="sock_qos.h::pj_sock_set_qos_params" ref="ga1b6564954817fb3a29634225d06696b3" args="(pj_sock_t sock, pj_qos_params *param)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_sock_set_qos_params </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__qos__params.htm">pj_qos_params</a> *&nbsp;</td>
          <td class="paramname"> <em>param</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is a low level API to set QoS parameters to the socket.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>The socket. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>param</em>&nbsp;</td><td>Structure containing QoS parameters to be applied to the socket. Upon return, the <em>flags</em> field of this structure will be set with bitmask value indicating which QoS settings have successfully been applied to the socket.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if at least one field setting has been successfully set. If no setting can't be set, this function will return error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga945d52a16562c6b2227eca67e92bd8d5"></a><!-- doxytag: member="sock_qos.h::pj_sock_set_qos_type" ref="ga945d52a16562c6b2227eca67e92bd8d5" args="(pj_sock_t sock, pj_qos_type type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_sock_set_qos_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__socket__qos.htm#ga4f58251c0dc2198596d12b3238672f0b">pj_qos_type</a>&nbsp;</td>
          <td class="paramname"> <em>type</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This is the high level and portable API to enable QoS on the specified socket, by setting the traffic type to the specified parameter.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>The socket. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>Traffic type to be set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if at least Layer 2 or Layer 3 setting is successfully set. If both Layer 2 and Layer 3 settings can't be set, this function will return error. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
