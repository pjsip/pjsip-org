<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>math.h Source File (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="dir_a41808d13090960107c9b4b68bb17277.htm">nn</a></li><li class="navelem"><a class="el" href="dir_c58a63bf0e68ac4f6ee4c60c23169af3.htm">projects</a></li><li class="navelem"><a class="el" href="dir_9873c0fb87ace038656b125f05ce4166.htm">pjproject</a></li><li class="navelem"><a class="el" href="dir_1a00d2ad184d3096bddd32f4b6fe54a7.htm">pjlib</a></li><li class="navelem"><a class="el" href="dir_079a3bb85c11898a43abc7d9be1eee82.htm">include</a></li><li class="navelem"><a class="el" href="dir_3b5af66b70930d68b0910af32434a224.htm">pj</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">math.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="math_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* $Id$ */</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * along with this program; if not, write to the Free Software</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef __PJ_MATH_H__</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#define __PJ_MATH_H__</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="string_8h.htm">pj/string.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;pj/compat/high_precision.h&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<a class="code" href="group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="group__pj__math.htm#ga814ddb5f676502bc1f9befd55553c56c">   48</a></span>&#160;<span class="preprocessor">#define PJ_PI               3.14159265358979323846      </span><span class="comment">/* pi       */</span><span class="preprocessor"></span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#define PJ_1_PI             0.318309886183790671538     </span><span class="comment">/* 1/pi     */</span><span class="preprocessor"></span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="group__pj__math.htm#gaa7b07dd46330ab0b48df24d65fb7f66d">   54</a></span>&#160;<span class="preprocessor">#define PJ_ABS(x)       ((x) &gt;  0 ? (x) : -(x))</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#define PJ_MAX(x, y)    ((x) &gt; (y)? (x) : (y))</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#define PJ_MIN(x, y)    ((x) &lt; (y)? (x) : (y))</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structpj__math__stat.htm">   61</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__math__stat.htm">pj_math_stat</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">int</span>              n;         <span class="comment">/* number of samples    */</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">int</span>              max;       <span class="comment">/* maximum value        */</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">int</span>              min;       <span class="comment">/* minimum value        */</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">int</span>              last;      <span class="comment">/* last value           */</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">int</span>              mean;      <span class="comment">/* mean                 */</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">/* Private members */</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#if PJ_HAS_FLOATING_POINT</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">float</span>            fmean_;    <span class="comment">/* mean(floating point) */</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">int</span>              mean_res_; <span class="comment">/* mean residu          */</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    pj_highprec_t    m2_;       <span class="comment">/* variance * n         */</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;} <a class="code" href="structpj__math__stat.htm">pj_math_stat</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="group__pj__math.htm#gaadcb593adf282a5997a36c88ace41d58">   85</a></span>&#160;<a class="code" href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>(<span class="keywordtype">unsigned</span>) <a class="code" href="group__pj__math.htm#gaadcb593adf282a5997a36c88ace41d58">pj_isqrt</a>(<span class="keywordtype">unsigned</span> i)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">unsigned</span> res = 1, prev;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    </div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">/* Rough guess, calculate half bit of input */</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    prev = i &gt;&gt; 2;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">while</span> (prev) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        prev &gt;&gt;= 2;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        res &lt;&lt;= 1;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">/* Babilonian method */</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">do</span> {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        prev = res;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        res = (prev + i/prev) &gt;&gt; 1;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    } <span class="keywordflow">while</span> ((prev+res)&gt;&gt;1 != res);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="group__pj__math.htm#gaa8a95eefaca81c25e82d2f806c9839d0">  110</a></span>&#160;<a class="code" href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>(<span class="keywordtype">void</span>) <a class="code" href="group__pj__math.htm#gaa8a95eefaca81c25e82d2f806c9839d0">pj_math_stat_init</a>(<a class="code" href="structpj__math__stat.htm">pj_math_stat</a> *stat)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="group__PJ__PSTR.htm#gafa92001573289c87313c660146369fa3">pj_bzero</a>(stat, <span class="keyword">sizeof</span>(<a class="code" href="structpj__math__stat.htm">pj_math_stat</a>));</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="group__pj__math.htm#ga526941d79980b6eeb036d8e24c6f0612">  121</a></span>&#160;<a class="code" href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>(<span class="keywordtype">void</span>) <a class="code" href="group__pj__math.htm#ga526941d79980b6eeb036d8e24c6f0612">pj_math_stat_update</a>(<a class="code" href="structpj__math__stat.htm">pj_math_stat</a> *stat, <span class="keywordtype">int</span> val)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#if PJ_HAS_FLOATING_POINT</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">float</span>            delta;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">int</span>              delta;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    stat-&gt;last = val;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    </div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">if</span> (stat-&gt;n++) {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">if</span> (stat-&gt;min &gt; val)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            stat-&gt;min = val;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">if</span> (stat-&gt;max &lt; val)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            stat-&gt;max = val;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        stat-&gt;min = stat-&gt;max = val;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">#if PJ_HAS_FLOATING_POINT</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    delta = val - stat-&gt;fmean_;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    stat-&gt;fmean_ += delta/stat-&gt;n;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    </div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">/* Return mean value with &#39;rounding&#39; */</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    stat-&gt;mean = (<a class="code" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>) (stat-&gt;fmean_ + 0.5);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    stat-&gt;m2_ += (<a class="code" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>)(delta * (val-stat-&gt;fmean_));</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    delta = val - stat-&gt;mean;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    stat-&gt;mean += delta/stat-&gt;n;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    stat-&gt;mean_res_ += delta % stat-&gt;n;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">if</span> (stat-&gt;mean_res_ &gt;= stat-&gt;n) {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        ++stat-&gt;mean;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        stat-&gt;mean_res_ -= stat-&gt;n;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (stat-&gt;mean_res_ &lt;= -stat-&gt;n) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        --stat-&gt;mean;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        stat-&gt;mean_res_ += stat-&gt;n;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    stat-&gt;m2_ += delta * (val-stat-&gt;mean);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="group__pj__math.htm#gababaa62bc96c00c48310e7aa4dc3481d">  171</a></span>&#160;<a class="code" href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>(<span class="keywordtype">unsigned</span>) <a class="code" href="group__pj__math.htm#gababaa62bc96c00c48310e7aa4dc3481d">pj_math_stat_get_stddev</a>(<span class="keyword">const</span> <a class="code" href="structpj__math__stat.htm">pj_math_stat</a> *stat)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span> (stat-&gt;n == 0) <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">return</span> (<a class="code" href="group__pj__math.htm#gaadcb593adf282a5997a36c88ace41d58">pj_isqrt</a>((<span class="keywordtype">unsigned</span>)(stat-&gt;m2_/stat-&gt;n)));</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="group__pj__math.htm#ga6a7d2418cf24b3e5f7d9e451b7a320e0">  186</a></span>&#160;<a class="code" href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>(<span class="keywordtype">void</span>) <a class="code" href="group__pj__math.htm#ga6a7d2418cf24b3e5f7d9e451b7a320e0">pj_math_stat_set_stddev</a>(<a class="code" href="structpj__math__stat.htm">pj_math_stat</a> *stat, <span class="keywordtype">unsigned</span> dev)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span> (stat-&gt;n == 0) </div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        stat-&gt;n = 1;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    stat-&gt;m2_ = dev*dev*stat-&gt;n;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<a class="code" href="group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __PJ_MATH_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="structpj__math__stat_htm"><div class="ttname"><a href="structpj__math__stat.htm">pj_math_stat</a></div><div class="ttdef"><b>Definition:</b> math.h:61</div></div>
<div class="ttc" id="group__pj__math_htm_gababaa62bc96c00c48310e7aa4dc3481d"><div class="ttname"><a href="group__pj__math.htm#gababaa62bc96c00c48310e7aa4dc3481d">pj_math_stat_get_stddev</a></div><div class="ttdeci">unsigned pj_math_stat_get_stddev(const pj_math_stat *stat)</div><div class="ttdef"><b>Definition:</b> math.h:171</div></div>
<div class="ttc" id="string_8h_htm"><div class="ttname"><a href="string_8h.htm">string.h</a></div><div class="ttdoc">PJLIB String Operations. </div></div>
<div class="ttc" id="group__pj__math_htm_ga526941d79980b6eeb036d8e24c6f0612"><div class="ttname"><a href="group__pj__math.htm#ga526941d79980b6eeb036d8e24c6f0612">pj_math_stat_update</a></div><div class="ttdeci">void pj_math_stat_update(pj_math_stat *stat, int val)</div><div class="ttdef"><b>Definition:</b> math.h:121</div></div>
<div class="ttc" id="group__pj__config_htm_gac961f7d199eeed7666ab3ec2442c1b00"><div class="ttname"><a href="group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a></div><div class="ttdeci">#define PJ_END_DECL</div><div class="ttdef"><b>Definition:</b> config.h:1281</div></div>
<div class="ttc" id="group__pj__math_htm_gaa8a95eefaca81c25e82d2f806c9839d0"><div class="ttname"><a href="group__pj__math.htm#gaa8a95eefaca81c25e82d2f806c9839d0">pj_math_stat_init</a></div><div class="ttdeci">void pj_math_stat_init(pj_math_stat *stat)</div><div class="ttdef"><b>Definition:</b> math.h:110</div></div>
<div class="ttc" id="group__pj__math_htm_gaadcb593adf282a5997a36c88ace41d58"><div class="ttname"><a href="group__pj__math.htm#gaadcb593adf282a5997a36c88ace41d58">pj_isqrt</a></div><div class="ttdeci">unsigned pj_isqrt(unsigned i)</div><div class="ttdef"><b>Definition:</b> math.h:85</div></div>
<div class="ttc" id="group__pj__config_htm_ga288f0f20eddba864219d6d9b3cd006e1"><div class="ttname"><a href="group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a></div><div class="ttdeci">#define PJ_BEGIN_DECL</div><div class="ttdef"><b>Definition:</b> config.h:1280</div></div>
<div class="ttc" id="group__pj__config_htm_gac928151ecd64bc26385f2725100b559c"><div class="ttname"><a href="group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a></div><div class="ttdeci">#define PJ_INLINE(type)</div><div class="ttdef"><b>Definition:</b> config.h:1174</div></div>
<div class="ttc" id="group__PJ__PSTR_htm_gafa92001573289c87313c660146369fa3"><div class="ttname"><a href="group__PJ__PSTR.htm#gafa92001573289c87313c660146369fa3">pj_bzero</a></div><div class="ttdeci">void pj_bzero(void *dst, pj_size_t size)</div><div class="ttdef"><b>Definition:</b> string.h:763</div></div>
<div class="ttc" id="group__pj__math_htm_ga6a7d2418cf24b3e5f7d9e451b7a320e0"><div class="ttname"><a href="group__pj__math.htm#ga6a7d2418cf24b3e5f7d9e451b7a320e0">pj_math_stat_set_stddev</a></div><div class="ttdeci">void pj_math_stat_set_stddev(pj_math_stat *stat, unsigned dev)</div><div class="ttdef"><b>Definition:</b> math.h:186</div></div>
<div class="ttc" id="group__PJ__THREAD_htm_gab600dc33a20a0f36550a4538506d020e"><div class="ttname"><a href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a></div><div class="ttdeci">typedef int(PJ_THREAD_FUNC pj_thread_proc)(void *)</div></div>
</div><!-- fragment --></div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
