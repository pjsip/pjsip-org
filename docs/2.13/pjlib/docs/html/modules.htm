<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Modules (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">Modules</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock">Here is a list of all modules:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span><span onclick="javascript:toggleLevel(4);">4</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_0_" class="arrow" onclick="toggleFolder('0_')">&#9660;</span><a class="el" href="group__pj__config.htm" target="_self">Build Configuration</a></td><td class="desc"></td></tr>
<tr id="row_0_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__pj__dll__target.htm" target="_self">Building Dynamic Link Libraries (DLL/DSO)</a></td><td class="desc"></td></tr>
<tr id="row_1_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_1_" class="arrow" onclick="toggleFolder('1_')">&#9660;</span><a class="el" href="group__pj__errno.htm" target="_self">Error Subsystem</a></td><td class="desc"></td></tr>
<tr id="row_1_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__pj__errnum.htm" target="_self">PJLIB&#39;s Own Error Codes</a></td><td class="desc"></td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_2_" class="arrow" onclick="toggleFolder('2_')">&#9660;</span><a class="el" href="group__PJ__DS.htm" target="_self">Data Structure.</a></td><td class="desc"></td></tr>
<tr id="row_2_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__ARRAY.htm" target="_self">Array helper.</a></td><td class="desc"></td></tr>
<tr id="row_2_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__GUID.htm" target="_self">Globally Unique Identifier</a></td><td class="desc"></td></tr>
<tr id="row_2_2_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__HASH.htm" target="_self">Hash Table</a></td><td class="desc"></td></tr>
<tr id="row_2_3_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__LIST.htm" target="_self">Linked List</a></td><td class="desc"></td></tr>
<tr id="row_2_4_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__RBTREE.htm" target="_self">Red/Black Balanced Tree</a></td><td class="desc">Red/Black tree is the variant of balanced tree, where the search, insert, and delete operation is <b>guaranteed</b> to take at most <em>O( lg(n) )</em> </td></tr>
<tr id="row_2_5_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__PSTR.htm" target="_self">String Operations</a></td><td class="desc"></td></tr>
<tr id="row_2_6_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__BASIC.htm" target="_self">Basic Data Types and Library Functionality.</a></td><td class="desc"></td></tr>
<tr id="row_3_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_3_" class="arrow" onclick="toggleFolder('3_')">&#9660;</span><a class="el" href="group__PJ__MISC.htm" target="_self">Miscelaneous</a></td><td class="desc"></td></tr>
<tr id="row_3_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__pj__assert.htm" target="_self">Assertion Macro</a></td><td class="desc"></td></tr>
<tr id="row_3_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__pj__ctype.htm" target="_self">ctype - Character Type</a></td><td class="desc"></td></tr>
<tr id="row_3_2_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__EXCEPT.htm" target="_self">Exception Handling</a></td><td class="desc"></td></tr>
<tr id="row_3_3_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__LOG.htm" target="_self">Logging Facility</a></td><td class="desc"></td></tr>
<tr id="row_3_4_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__pj__math.htm" target="_self">Mathematics and Statistics</a></td><td class="desc"></td></tr>
<tr id="row_3_5_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__RAND.htm" target="_self">Random Number Generator</a></td><td class="desc"></td></tr>
<tr id="row_3_6_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__TIMER.htm" target="_self">Timer Heap Management.</a></td><td class="desc">The timer scheduling implementation here is based on ACE library's ACE_Timer_Heap, with only little modification to suit our library's style (I even left most of the comments in the original source) </td></tr>
<tr id="row_3_7_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__UNICODE.htm" target="_self">Unicode Support</a></td><td class="desc"></td></tr>
<tr id="row_3_8_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__TIME.htm" target="_self">Time Data Type and Manipulation.</a></td><td class="desc"></td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_4_" class="arrow" onclick="toggleFolder('4_')">&#9660;</span><a class="el" href="group__PJ__OS.htm" target="_self">Operating System Dependent Functionality.</a></td><td class="desc"></td></tr>
<tr id="row_4_0_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_4_0_" class="arrow" onclick="toggleFolder('4_0_')">&#9660;</span><a class="el" href="group__PJ__IO.htm" target="_self">Input/Output</a></td><td class="desc">Input/Output </td></tr>
<tr id="row_4_0_0_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__ACTIVESOCK.htm" target="_self">Active socket I/O</a></td><td class="desc">Active socket performs active operations on socket </td></tr>
<tr id="row_4_0_1_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__pj__addr__resolve.htm" target="_self">Network Address Resolution</a></td><td class="desc"></td></tr>
<tr id="row_4_0_2_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__FILE__ACCESS.htm" target="_self">File Access</a></td><td class="desc"></td></tr>
<tr id="row_4_0_3_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__FILE__IO.htm" target="_self">File I/O</a></td><td class="desc"></td></tr>
<tr id="row_4_0_4_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__IOQUEUE.htm" target="_self">IOQueue: I/O Event Dispatching with Proactor Pattern</a></td><td class="desc"></td></tr>
<tr id="row_4_0_5_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__pj__ip__helper.htm" target="_self">IP Interface and Routing Helper</a></td><td class="desc"></td></tr>
<tr id="row_4_0_6_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_4_0_6_" class="arrow" onclick="toggleFolder('4_0_6_')">&#9660;</span><a class="el" href="group__PJ__SOCK.htm" target="_self">Socket Abstraction</a></td><td class="desc"></td></tr>
<tr id="row_4_0_6_0_"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><a class="el" href="group__socket__qos.htm" target="_self">Socket Quality of Service (QoS) API: TOS, DSCP, WMM, IEEE 802.1p</a></td><td class="desc"></td></tr>
<tr id="row_4_0_7_" class="even"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__SOCK__SELECT.htm" target="_self">Socket select() API.</a></td><td class="desc"></td></tr>
<tr id="row_4_0_8_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__SSL__SOCK.htm" target="_self">Secure socket I/O</a></td><td class="desc">Secure socket provides security on socket operation using standard security protocols such as SSL and TLS </td></tr>
<tr id="row_4_1_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_4_1_" class="arrow" onclick="toggleFolder('4_1_')">&#9660;</span><a class="el" href="group__PJ__LOCK.htm" target="_self">Lock Objects</a></td><td class="desc"></td></tr>
<tr id="row_4_1_0_"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__GRP__LOCK.htm" target="_self">Group Lock</a></td><td class="desc"></td></tr>
<tr id="row_4_2_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__SYS__INFO.htm" target="_self">System Information</a></td><td class="desc"></td></tr>
<tr id="row_4_3_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__THREAD.htm" target="_self">Threads</a></td><td class="desc"></td></tr>
<tr id="row_4_4_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__SYMBIAN__OS.htm" target="_self">Symbian OS Specific</a></td><td class="desc"></td></tr>
<tr id="row_4_5_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__TLS.htm" target="_self">Thread Local Storage.</a></td><td class="desc"></td></tr>
<tr id="row_4_6_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__ATOMIC.htm" target="_self">Atomic Variables</a></td><td class="desc"></td></tr>
<tr id="row_4_7_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__MUTEX.htm" target="_self">Mutexes.</a></td><td class="desc"></td></tr>
<tr id="row_4_8_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__RW__MUTEX.htm" target="_self">Reader/Writer Mutex</a></td><td class="desc"></td></tr>
<tr id="row_4_9_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__CRIT__SEC.htm" target="_self">Critical sections.</a></td><td class="desc"></td></tr>
<tr id="row_4_10_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__SEM.htm" target="_self">Semaphores.</a></td><td class="desc"></td></tr>
<tr id="row_4_11_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__EVENT.htm" target="_self">Event Object.</a></td><td class="desc"></td></tr>
<tr id="row_4_12_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__TIMESTAMP.htm" target="_self">High Resolution Timestamp</a></td><td class="desc"></td></tr>
<tr id="row_4_13_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__APP__OS.htm" target="_self">Application execution</a></td><td class="desc"></td></tr>
<tr id="row_4_14_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__TIME.htm" target="_self">Time Data Type and Manipulation.</a></td><td class="desc"></td></tr>
<tr id="row_5_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_5_" class="arrow" onclick="toggleFolder('5_')">&#9660;</span><a class="el" href="group__PJ__POOL__GROUP.htm" target="_self">Fast Memory Pool</a></td><td class="desc">Memory pools allow dynamic memory allocation comparable to malloc or the new in operator C++. Those implementations are not desirable for very high performance applications or real-time systems, because of the performance bottlenecks and it suffers from fragmentation issue </td></tr>
<tr id="row_5_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__POOL.htm" target="_self">Memory Pool Object</a></td><td class="desc">The memory pool is an opaque object created by pool factory. Application uses this object to request a memory chunk, by calling <a class="el" href="group__PJ__POOL.htm#ga14798f6ba0d0858e4f36cc8a4904bbd9">pj_pool_alloc()</a>, <a class="el" href="group__PJ__POOL.htm#ga4b3004c6b9b742351dcc951bb610ddfb">pj_pool_calloc()</a>, or <a class="el" href="group__PJ__POOL.htm#ga5bedca9c6066f4e1a7254cbb70b4afcc">pj_pool_zalloc()</a>. When the application has finished using the pool, it must call <a class="el" href="group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release()</a> to free all the chunks previously allocated and release the pool back to the factory </td></tr>
<tr id="row_5_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__POOL__FACTORY.htm" target="_self">Pool Factory and Policy</a></td><td class="desc">A pool object must be created through a factory. A factory not only provides generic interface functions to create and release pool, but also provides strategy to manage the life time of pools. One sample implementation, <em><a class="el" href="structpj__caching__pool.htm">pj_caching_pool</a></em>, can be set to keep the pools released by application for future use as long as the total memory is below the limit </td></tr>
<tr id="row_5_2_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__CACHING__POOL.htm" target="_self">Caching Pool Factory</a></td><td class="desc">Caching pool is one sample implementation of pool factory where the factory can reuse memory to create a pool. Application defines what the maximum memory the factory can hold, and when a pool is released the factory decides whether to destroy the pool or to keep it for future use. If the total amount of memory in the internal cache is still within the limit, the factory will keep the pool in the internal cache, otherwise the pool will be destroyed, thus releasing the memory back to the system </td></tr>
<tr id="row_5_3_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><a class="el" href="group__PJ__POOL__BUFFER.htm" target="_self">Stack/Buffer Based Memory Pool Allocator</a></td><td class="desc">Stack/buffer based pool </td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
