<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Mutexes. (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Mutexes.<div class="ingroups"><a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a> &raquo; <a class="el" href="group__PJ__SYS__INFO.htm">System Information</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga68e3b826414e91fae87d6dbbd0de1a10"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga68e3b826414e91fae87d6dbbd0de1a10">pj_mutex_type_e</a> { <b>PJ_MUTEX_DEFAULT</b>, 
<b>PJ_MUTEX_SIMPLE</b>, 
<b>PJ_MUTEX_RECURSE</b>
 }</td></tr>
<tr class="separator:ga68e3b826414e91fae87d6dbbd0de1a10"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga1a5c058548d6b82189f80e07318e06d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga1a5c058548d6b82189f80e07318e06d1">pj_mutex_create</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, <a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> type, <a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **mutex)</td></tr>
<tr class="separator:ga1a5c058548d6b82189f80e07318e06d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5517cba6f6e3225076986998b5d4b59"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gaf5517cba6f6e3225076986998b5d4b59">pj_mutex_create_simple</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, <a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **mutex)</td></tr>
<tr class="separator:gaf5517cba6f6e3225076986998b5d4b59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4022a1375412b1e610c54a8bbfb31199"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga4022a1375412b1e610c54a8bbfb31199">pj_mutex_create_recursive</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, <a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **mutex)</td></tr>
<tr class="separator:ga4022a1375412b1e610c54a8bbfb31199"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab117022a6c2041b6be1f436ef9480619"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gab117022a6c2041b6be1f436ef9480619">pj_mutex_lock</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr class="separator:gab117022a6c2041b6be1f436ef9480619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1b7fd8fda31c55a7ef7dd9af1663314f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#ga1b7fd8fda31c55a7ef7dd9af1663314f">pj_mutex_unlock</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr class="separator:ga1b7fd8fda31c55a7ef7dd9af1663314f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac86b4b78edd55f75585bcc57f4ecd8d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gac86b4b78edd55f75585bcc57f4ecd8d4">pj_mutex_trylock</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr class="separator:gac86b4b78edd55f75585bcc57f4ecd8d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe7fdf5e3c16ef97b25919230c04f9bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gabe7fdf5e3c16ef97b25919230c04f9bd">pj_mutex_destroy</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr class="separator:gabe7fdf5e3c16ef97b25919230c04f9bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf767a306e88a21308ddf136edf10089e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__MUTEX.htm#gaf767a306e88a21308ddf136edf10089e">pj_mutex_is_locked</a> (<a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *mutex)</td></tr>
<tr class="separator:gaf767a306e88a21308ddf136edf10089e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Mutex manipulation. Alternatively, application can use higher abstraction for lock objects, which provides uniform API for all kinds of lock mechanisms, including mutex. See <a class="el" href="group__PJ__LOCK.htm">Lock Objects</a> for more information. </p>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga68e3b826414e91fae87d6dbbd0de1a10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga68e3b826414e91fae87d6dbbd0de1a10">&#9670;&nbsp;</a></span>pj_mutex_type_e</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJ__MUTEX.htm#ga68e3b826414e91fae87d6dbbd0de1a10">pj_mutex_type_e</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Mutex types:</p><ul>
<li>PJ_MUTEX_DEFAULT: default mutex type, which is system dependent.</li>
<li>PJ_MUTEX_SIMPLE: non-recursive mutex.</li>
<li>PJ_MUTEX_RECURSE: recursive mutex. </li>
</ul>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga1a5c058548d6b82189f80e07318e06d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1a5c058548d6b82189f80e07318e06d1">&#9670;&nbsp;</a></span>pj_mutex_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **&#160;</td>
          <td class="paramname"><em>mutex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create mutex of the specified type.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool. </td></tr>
    <tr><td class="paramname">name</td><td>Name to be associated with the mutex (for debugging). </td></tr>
    <tr><td class="paramname">type</td><td>The type of the mutex, of type <a class="el" href="group__PJ__MUTEX.htm#ga68e3b826414e91fae87d6dbbd0de1a10">pj_mutex_type_e</a>. </td></tr>
    <tr><td class="paramname">mutex</td><td>Pointer to hold the returned mutex instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="ga4022a1375412b1e610c54a8bbfb31199"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4022a1375412b1e610c54a8bbfb31199">&#9670;&nbsp;</a></span>pj_mutex_create_recursive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_create_recursive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **&#160;</td>
          <td class="paramname"><em>mutex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create recursive mutex. This function is a simple wrapper for <a class="el" href="group__PJ__MUTEX.htm#ga1a5c058548d6b82189f80e07318e06d1">pj_mutex_create</a> to create recursive mutex.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool. </td></tr>
    <tr><td class="paramname">name</td><td>Mutex name. </td></tr>
    <tr><td class="paramname">mutex</td><td>Pointer to hold the returned mutex instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="gaf5517cba6f6e3225076986998b5d4b59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf5517cba6f6e3225076986998b5d4b59">&#9670;&nbsp;</a></span>pj_mutex_create_simple()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_create_simple </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> **&#160;</td>
          <td class="paramname"><em>mutex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create simple, non-recursive mutex. This function is a simple wrapper for <a class="el" href="group__PJ__MUTEX.htm#ga1a5c058548d6b82189f80e07318e06d1">pj_mutex_create</a> to create non-recursive mutex.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool. </td></tr>
    <tr><td class="paramname">name</td><td>Mutex name. </td></tr>
    <tr><td class="paramname">mutex</td><td>Pointer to hold the returned mutex instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="gabe7fdf5e3c16ef97b25919230c04f9bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabe7fdf5e3c16ef97b25919230c04f9bd">&#9670;&nbsp;</a></span>pj_mutex_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroy mutex.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>Te mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="gaf767a306e88a21308ddf136edf10089e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf767a306e88a21308ddf136edf10089e">&#9670;&nbsp;</a></span>pj_mutex_is_locked()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pj_mutex_is_locked </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determine whether calling thread is owning the mutex (only available when PJ_DEBUG is set). </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Non-zero if yes. </dd></dl>

</div>
</div>
<a id="gab117022a6c2041b6be1f436ef9480619"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab117022a6c2041b6be1f436ef9480619">&#9670;&nbsp;</a></span>pj_mutex_lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_lock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Acquire mutex lock.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
<a id="gac86b4b78edd55f75585bcc57f4ecd8d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac86b4b78edd55f75585bcc57f4ecd8d4">&#9670;&nbsp;</a></span>pj_mutex_trylock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_trylock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Try to acquire mutex lock.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code if the lock couldn't be acquired. </dd></dl>

</div>
</div>
<a id="ga1b7fd8fda31c55a7ef7dd9af1663314f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1b7fd8fda31c55a7ef7dd9af1663314f">&#9670;&nbsp;</a></span>pj_mutex_unlock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_mutex_unlock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3be6fc992f9dc152a784273906f26228">pj_mutex_t</a> *&#160;</td>
          <td class="paramname"><em>mutex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Release mutex lock.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mutex</td><td>The mutex. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
