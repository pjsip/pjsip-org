<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJNATH Reference: pj_stun_sock_cb Struct Reference (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="functions.htm"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<h1>pj_stun_sock_cb Struct Reference<br/>
<small>
[<a class="el" href="group__PJNATH__STUN__SOCK.htm">STUN-aware socket transport</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<!-- doxytag: class="pj_stun_sock_cb" --><table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__sock__cb.htm#a663e1e797036811b2af847f712b6b0ce">on_rx_data</a> )(<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, void *pkt, unsigned pkt_len, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned addr_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__sock__cb.htm#a18381e075021d5bab9733b452f9401a6">on_data_sent</a> )(<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structsend__key.htm">send_key</a>, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> sent)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__sock__cb.htm#a273b59b9da60a629bf1362e29e592033">on_status</a> )(<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, <a class="el" href="group__PJNATH__STUN__SOCK.htm#gae063dc49f90e760f150785b67407341b">pj_stun_sock_op</a> op, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This structure contains callbacks that will be called by the STUN transport to notify application about various events. </p>
<hr/><h2>Field Documentation</h2>
<a class="anchor" id="a18381e075021d5bab9733b452f9401a6"></a><!-- doxytag: member="pj_stun_sock_cb::on_data_sent" ref="a18381e075021d5bab9733b452f9401a6" args=")(pj_stun_sock *stun_sock, pj_ioqueue_op_key_t *send_key, pj_ssize_t sent)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(* <a class="el" href="structpj__stun__sock__cb.htm#a18381e075021d5bab9733b452f9401a6">pj_stun_sock_cb::on_data_sent</a>)(<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structsend__key.htm">send_key</a>, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> sent)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Notifification when asynchronous send operation has completed.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stun_sock</em>&nbsp;</td><td>The STUN transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structsend__key.htm">send_key</a></em>&nbsp;</td><td>The send operation key that was given in <a class="el" href="group__PJNATH__STUN__SOCK.htm#ga7b1ad63c5e8a8f0fa5667d2eb3b9e81a">pj_stun_sock_sendto()</a>. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sent</em>&nbsp;</td><td>If value is positive non-zero it indicates the number of data sent. When the value is negative, it contains the error code which can be retrieved by negating the value (i.e. status=-sent).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Application should normally return PJ_TRUE to let the STUN transport continue its operation. However it must return PJ_FALSE if it has destroyed the STUN transport in this callback. </dd></dl>

</div>
</div>
<a class="anchor" id="a663e1e797036811b2af847f712b6b0ce"></a><!-- doxytag: member="pj_stun_sock_cb::on_rx_data" ref="a663e1e797036811b2af847f712b6b0ce" args=")(pj_stun_sock *stun_sock, void *pkt, unsigned pkt_len, const pj_sockaddr_t *src_addr, unsigned addr_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(* <a class="el" href="structpj__stun__sock__cb.htm#a663e1e797036811b2af847f712b6b0ce">pj_stun_sock_cb::on_rx_data</a>)(<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, void *pkt, unsigned pkt_len, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Notification when incoming packet has been received.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stun_sock</em>&nbsp;</td><td>The STUN transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>The packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data_len</em>&nbsp;</td><td>Length of the packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>src_addr</em>&nbsp;</td><td>The source address of the packet. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>addr_len</em>&nbsp;</td><td>The length of the source address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Application should normally return PJ_TRUE to let the STUN transport continue its operation. However it must return PJ_FALSE if it has destroyed the STUN transport in this callback. </dd></dl>

</div>
</div>
<a class="anchor" id="a273b59b9da60a629bf1362e29e592033"></a><!-- doxytag: member="pj_stun_sock_cb::on_status" ref="a273b59b9da60a629bf1362e29e592033" args=")(pj_stun_sock *stun_sock, pj_stun_sock_op op, pj_status_t status)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(* <a class="el" href="structpj__stun__sock__cb.htm#a273b59b9da60a629bf1362e29e592033">pj_stun_sock_cb::on_status</a>)(<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, <a class="el" href="group__PJNATH__STUN__SOCK.htm#gae063dc49f90e760f150785b67407341b">pj_stun_sock_op</a> op, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Notification when the status of the STUN transport has changed. This callback may be called for the following conditions:</p>
<ul>
<li>the first time the publicly mapped address has been resolved from the STUN server, this callback will be called with <em>op</em> argument set to PJ_STUN_SOCK_BINDING_OP <em>status</em> argument set to PJ_SUCCESS.</li>
<li>anytime when the transport has detected that the publicly mapped address has changed, this callback will be called with <em>op</em> argument set to PJ_STUN_SOCK_KEEP_ALIVE_OP and <em>status</em> argument set to PJ_SUCCESS. On this case and the case above, application will get the resolved public address in the <a class="el" href="structpj__stun__sock__info.htm">pj_stun_sock_info</a> structure.</li>
<li>for any terminal error (such as STUN time-out, DNS resolution failure, or keep-alive failure), this callback will be called with the <em>status</em> argument set to non-PJ_SUCCESS.</li>
</ul>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stun_sock</em>&nbsp;</td><td>The STUN transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>op</em>&nbsp;</td><td>The operation that triggers the callback. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>status</em>&nbsp;</td><td>The status.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Must return PJ_FALSE if it has destroyed the STUN transport in this callback. Application should normally destroy the socket and return PJ_FALSE upon encountering terminal error, otherwise it should return PJ_TRUE to let the STUN socket operation continues. </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="stun__sock_8h_source.htm">stun_sock.h</a></li>
</ul>
</div>
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
