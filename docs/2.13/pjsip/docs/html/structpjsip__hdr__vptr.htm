<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pjsip_hdr_vptr Struct Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">pjsip_hdr_vptr Struct Reference<div class="ingroups"><a class="el" href="group__PJSIP__CORE.htm">Core SIP Library</a> &raquo; <a class="el" href="group__PJSIP__MSG.htm">Messaging Elements</a> &raquo; <a class="el" href="group__PJSIP__MSG__HDR.htm">Header Fields</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;sip_msg.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:ab01564e390cde2d214ba0bd048051cc5"><td class="memItemLeft" align="right" valign="top">void *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__hdr__vptr.htm#ab01564e390cde2d214ba0bd048051cc5">clone</a> )(<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const void *hdr)</td></tr>
<tr class="separator:ab01564e390cde2d214ba0bd048051cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0dd88261d4e7bb51bbc957d92e515da"><td class="memItemLeft" align="right" valign="top">void *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__hdr__vptr.htm#ac0dd88261d4e7bb51bbc957d92e515da">shallow_clone</a> )(<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const void *hdr)</td></tr>
<tr class="separator:ac0dd88261d4e7bb51bbc957d92e515da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad492b22b01f4b219fc4bfe7d8d20ccca"><td class="memItemLeft" align="right" valign="top">int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__hdr__vptr.htm#ad492b22b01f4b219fc4bfe7d8d20ccca">print_on</a> )(void *hdr, char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> len)</td></tr>
<tr class="separator:ad492b22b01f4b219fc4bfe7d8d20ccca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >This structure provides the pointer to basic functions that are needed for generic header operations. All header fields will have pointer to this structure, so that they can be manipulated uniformly. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="ab01564e390cde2d214ba0bd048051cc5" name="ab01564e390cde2d214ba0bd048051cc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab01564e390cde2d214ba0bd048051cc5">&#9670;&nbsp;</a></span>clone</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void *(* pjsip_hdr_vptr::clone) (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const void *hdr)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Function to clone the header.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Memory pool to allocate the new header. </td></tr>
    <tr><td class="paramname">hdr</td><td>Header to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new instance of the header. </dd></dl>

</div>
</div>
<a id="ac0dd88261d4e7bb51bbc957d92e515da" name="ac0dd88261d4e7bb51bbc957d92e515da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0dd88261d4e7bb51bbc957d92e515da">&#9670;&nbsp;</a></span>shallow_clone</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void *(* pjsip_hdr_vptr::shallow_clone) (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const void *hdr)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Pointer to function to shallow clone the header. Shallow cloning will just make a memory copy of the original header, thus all pointers in original header will be kept intact. Because the function does not need to perform deep copy, the operation should be faster, but the application must make sure that the original header is still valid throughout the lifetime of new header.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Memory pool to allocate the new header. </td></tr>
    <tr><td class="paramname">hdr</td><td>The header to clone. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad492b22b01f4b219fc4bfe7d8d20ccca" name="ad492b22b01f4b219fc4bfe7d8d20ccca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad492b22b01f4b219fc4bfe7d8d20ccca">&#9670;&nbsp;</a></span>print_on</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int(* pjsip_hdr_vptr::print_on) (void *hdr, char *buf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Pointer to function to print the header to the specified buffer. Returns the length of string written, or -1 if the remaining buffer is not enough to hold the header.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">hdr</td><td>The header to print. </td></tr>
    <tr><td class="paramname">buf</td><td>The buffer. </td></tr>
    <tr><td class="paramname">len</td><td>The size of the buffer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The size copied to buffer, or -1 if there's not enough space. </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="sip__msg_8h.htm">sip_msg.h</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
