<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Endpoint (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Endpoint<div class="ingroups"><a class="el" href="group__PJSIP__CORE.htm">Core SIP Library</a> &raquo; <a class="el" href="group__PJSIP__CORE__CORE.htm">At the Very Core</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>The master, owner of all objects.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__process__rdata__param.htm">pjsip_process_rdata_param</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga2e3472c35a7c7308411bac5894b38410"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga2e3472c35a7c7308411bac5894b38410">pjsip_endpt_exit_callback</a>) (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:ga2e3472c35a7c7308411bac5894b38410"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaf264125f3592f83d0dce3bccf2bd5916"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gaf264125f3592f83d0dce3bccf2bd5916">pjsip_endpt_create</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *pf, const char *name, <a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> **endpt)</td></tr>
<tr class="separator:gaf264125f3592f83d0dce3bccf2bd5916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0739d42024587fc86866dd9b24b9dc17"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga0739d42024587fc86866dd9b24b9dc17">pjsip_endpt_destroy</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:ga0739d42024587fc86866dd9b24b9dc17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41d153b13f58dc6a38ea0d0f99c9e872"><td class="memItemLeft" align="right" valign="top">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga41d153b13f58dc6a38ea0d0f99c9e872">pjsip_endpt_name</a> (const <a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:ga41d153b13f58dc6a38ea0d0f99c9e872"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2fc6fbb56b269712776f22d02edb2f6c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga2fc6fbb56b269712776f22d02edb2f6c">pjsip_endpt_handle_events</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *max_timeout)</td></tr>
<tr class="separator:ga2fc6fbb56b269712776f22d02edb2f6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e04c78e14bca71bb090a08dad930806"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga3e04c78e14bca71bb090a08dad930806">pjsip_endpt_handle_events2</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *max_timeout, unsigned *count)</td></tr>
<tr class="separator:ga3e04c78e14bca71bb090a08dad930806"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga404107233ddfd6924432cf62fd6ef036"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga404107233ddfd6924432cf62fd6ef036">pjsip_endpt_schedule_timer</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *entry, const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *delay)</td></tr>
<tr class="separator:ga404107233ddfd6924432cf62fd6ef036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga78c9191bb5ebb35f57be3cd61e82b2f2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga78c9191bb5ebb35f57be3cd61e82b2f2">pjsip_endpt_schedule_timer_w_grp_lock</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *entry, const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *delay, int id_val, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:ga78c9191bb5ebb35f57be3cd61e82b2f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d979a79eca2e162a6a6d756e7608df3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga7d979a79eca2e162a6a6d756e7608df3">pjsip_endpt_cancel_timer</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *entry)</td></tr>
<tr class="separator:ga7d979a79eca2e162a6a6d756e7608df3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa06aaba374446162889a2cbd88fdf669"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gaec8852c90e22c6868c83d44dcbdecb8a">pj_timer_heap_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gaa06aaba374446162889a2cbd88fdf669">pjsip_endpt_get_timer_heap</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:gaa06aaba374446162889a2cbd88fdf669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1322fd2f38ecbf723e3e7e78632fe140"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__module.htm">pjsip_module</a> *module)</td></tr>
<tr class="separator:ga1322fd2f38ecbf723e3e7e78632fe140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56be8dd1472d950e5522b9840e72d805"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga56be8dd1472d950e5522b9840e72d805">pjsip_endpt_unregister_module</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__module.htm">pjsip_module</a> *module)</td></tr>
<tr class="separator:ga56be8dd1472d950e5522b9840e72d805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6702b2d6409c0e8b265c76d6843a291b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga6702b2d6409c0e8b265c76d6843a291b">pjsip_process_rdata_param_default</a> (<a class="el" href="structpjsip__process__rdata__param.htm">pjsip_process_rdata_param</a> *p)</td></tr>
<tr class="separator:ga6702b2d6409c0e8b265c76d6843a291b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga015642e34ef43d47dca41f72755e102b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga015642e34ef43d47dca41f72755e102b">pjsip_endpt_process_rx_data</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="el" href="structpjsip__process__rdata__param.htm">pjsip_process_rdata_param</a> *p, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *p_handled)</td></tr>
<tr class="separator:ga015642e34ef43d47dca41f72755e102b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga279dadf22e247ac0531619cb70d1172d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga279dadf22e247ac0531619cb70d1172d">pjsip_endpt_create_pool</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const char *pool_name, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> initial, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> increment)</td></tr>
<tr class="separator:ga279dadf22e247ac0531619cb70d1172d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6c2a17c4374a3280ffcd6339a070a16"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gac6c2a17c4374a3280ffcd6339a070a16">pjsip_endpt_release_pool</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool)</td></tr>
<tr class="separator:gac6c2a17c4374a3280ffcd6339a070a16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb9bddd243f781d64055f276be75f754"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gabb9bddd243f781d64055f276be75f754">pjsip_endpt_find_tsx</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *key)</td></tr>
<tr class="separator:gabb9bddd243f781d64055f276be75f754"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58f74f6446de4fa2d11829b13f890656"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga58f74f6446de4fa2d11829b13f890656">pjsip_endpt_register_tsx</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx)</td></tr>
<tr class="separator:ga58f74f6446de4fa2d11829b13f890656"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0157e85702b1b9849f59c1fd8e7bb47c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga0157e85702b1b9849f59c1fd8e7bb47c">pjsip_endpt_destroy_tsx</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx)</td></tr>
<tr class="separator:ga0157e85702b1b9849f59c1fd8e7bb47c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60ad4ba521c96b0c015574ea64059248"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga60ad4ba521c96b0c015574ea64059248">pjsip_endpt_create_tdata</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga60ad4ba521c96b0c015574ea64059248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga341266ecfb3000a726ca02cba9d468bd"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga341266ecfb3000a726ca02cba9d468bd">pjsip_endpt_create_resolver</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> **p_resv)</td></tr>
<tr class="separator:ga341266ecfb3000a726ca02cba9d468bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa783363fa5b0d6d1fd081bfd40d4314b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gaa783363fa5b0d6d1fd081bfd40d4314b">pjsip_endpt_set_resolver</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> *resv)</td></tr>
<tr class="separator:gaa783363fa5b0d6d1fd081bfd40d4314b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b4dbd5940d3388b571eb830884c1786"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga9b4dbd5940d3388b571eb830884c1786">pjsip_endpt_set_ext_resolver</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__ext__resolver.htm">pjsip_ext_resolver</a> *ext_res)</td></tr>
<tr class="separator:ga9b4dbd5940d3388b571eb830884c1786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d1813527291fa846382035d8ce2b9c0"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga6d1813527291fa846382035d8ce2b9c0">pjsip_endpt_get_resolver</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:ga6d1813527291fa846382035d8ce2b9c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96a7ae57882371b0373b5780bea1c6e2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga96a7ae57882371b0373b5780bea1c6e2">pjsip_endpt_resolve</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjsip__host__info.htm">pjsip_host_info</a> *target, void *token, <a class="el" href="group__PJSIP__RESOLVE.htm#ga457e5e9cfc2841e02b67c434d26be065">pjsip_resolver_callback</a> *cb)</td></tr>
<tr class="separator:ga96a7ae57882371b0373b5780bea1c6e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f2f132c35ccadaada5d58407cf80fc9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSIP__TYPES.htm#ga7fb8ae48b81d0ff606d096bb9195e974">pjsip_tpmgr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga3f2f132c35ccadaada5d58407cf80fc9">pjsip_endpt_get_tpmgr</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:ga3f2f132c35ccadaada5d58407cf80fc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1b07406c3059e9f4c6ec290a16e24685"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga1b07406c3059e9f4c6ec290a16e24685">pjsip_endpt_get_ioqueue</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td></tr>
<tr class="separator:ga1b07406c3059e9f4c6ec290a16e24685"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada064c58049e0633c99f0f37cc7f7aae"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gada064c58049e0633c99f0f37cc7f7aae">pjsip_endpt_acquire_transport</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="group__PJSIP__TYPES.htm#ga281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a> type, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *remote, int addr_len, const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *sel, <a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **p_tp)</td></tr>
<tr class="separator:gada064c58049e0633c99f0f37cc7f7aae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2b6fc6a846b018505f20a5bdcfb1e73"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gaf2b6fc6a846b018505f20a5bdcfb1e73">pjsip_endpt_acquire_transport2</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="group__PJSIP__TYPES.htm#ga281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a> type, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *remote, int addr_len, const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *sel, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, <a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **p_tp)</td></tr>
<tr class="separator:gaf2b6fc6a846b018505f20a5bdcfb1e73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed75abf9153e8b106ce08ae4f33ab2f4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gaed75abf9153e8b106ce08ae4f33ab2f4">pjsip_endpt_get_capability</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, int htype, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *hname)</td></tr>
<tr class="separator:gaed75abf9153e8b106ce08ae4f33ab2f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25f36c94d6eca83daffad8d5e75329d2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga25f36c94d6eca83daffad8d5e75329d2">pjsip_endpt_has_capability</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, int htype, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *hname, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *token)</td></tr>
<tr class="separator:ga25f36c94d6eca83daffad8d5e75329d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f6d79dd7524d926d70f32ef2b6215bb"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga0f6d79dd7524d926d70f32ef2b6215bb">pjsip_endpt_add_capability</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__module.htm">pjsip_module</a> *mod, int htype, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *hname, unsigned count, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> tags[])</td></tr>
<tr class="separator:ga0f6d79dd7524d926d70f32ef2b6215bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga80b19044e085b2d57b69391a542d698c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#ga80b19044e085b2d57b69391a542d698c">pjsip_endpt_get_request_headers</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *e)</td></tr>
<tr class="separator:ga80b19044e085b2d57b69391a542d698c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadba7a204a9cd72359948ae5e9791434f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gadba7a204a9cd72359948ae5e9791434f">pjsip_endpt_dump</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> detail)</td></tr>
<tr class="separator:gadba7a204a9cd72359948ae5e9791434f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad087847ca92bfe3ddf96534511099c4"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__ENDPT.htm#gaad087847ca92bfe3ddf96534511099c4">pjsip_endpt_atexit</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="group__PJSIP__ENDPT.htm#ga2e3472c35a7c7308411bac5894b38410">pjsip_endpt_exit_callback</a> func)</td></tr>
<tr class="separator:gaad087847ca92bfe3ddf96534511099c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >SIP Endpoint instance (pjsip_endpoint) can be viewed as the master/owner of all SIP objects in an application. It performs the following roles:</p><ul>
<li>it manages the allocation/deallocation of memory pools for all objects.</li>
<li>it manages listeners and transports, and how they are used by transactions.</li>
<li>it receives incoming messages from transport layer and automatically dispatches them to the correct transaction (or create a new one).</li>
<li>it has a single instance of timer management (timer heap).</li>
<li>it manages modules, which is the primary means of extending the library.</li>
<li>it provides single polling function for all objects and distributes events.</li>
<li>it automatically handles incoming requests which can not be handled by existing modules (such as when incoming request has unsupported method).</li>
<li>and so on..</li>
</ul>
<p >Application should only instantiate one SIP endpoint instance for every process. </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga2e3472c35a7c7308411bac5894b38410" name="ga2e3472c35a7c7308411bac5894b38410"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2e3472c35a7c7308411bac5894b38410">&#9670;&nbsp;</a></span>pjsip_endpt_exit_callback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* pjsip_endpt_exit_callback) (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Type of callback to register to <a class="el" href="group__PJSIP__ENDPT.htm#gaad087847ca92bfe3ddf96534511099c4">pjsip_endpt_atexit()</a>. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaf264125f3592f83d0dce3bccf2bd5916" name="gaf264125f3592f83d0dce3bccf2bd5916"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf264125f3592f83d0dce3bccf2bd5916">&#9670;&nbsp;</a></span>pjsip_endpt_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *&#160;</td>
          <td class="paramname"><em>pf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> **&#160;</td>
          <td class="paramname"><em>endpt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create an instance of SIP endpoint from the specified pool factory. The pool factory reference then will be kept by the endpoint, so that future memory allocations by SIP components will be taken from the same pool factory.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pf</td><td>Pool factory that will be used for the lifetime of endpoint. </td></tr>
    <tr><td class="paramname">name</td><td>Optional name to be specified for the endpoint. If this parameter is NULL, then the name will use local host name. </td></tr>
    <tr><td class="paramname">endpt</td><td>Pointer to receive endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga0739d42024587fc86866dd9b24b9dc17" name="ga0739d42024587fc86866dd9b24b9dc17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0739d42024587fc86866dd9b24b9dc17">&#9670;&nbsp;</a></span>pjsip_endpt_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_endpt_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destroy endpoint instance. Application must make sure that all pending transactions have been terminated properly, because this function does not check for the presence of pending transactions.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga41d153b13f58dc6a38ea0d0f99c9e872" name="ga41d153b13f58dc6a38ea0d0f99c9e872"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga41d153b13f58dc6a38ea0d0f99c9e872">&#9670;&nbsp;</a></span>pjsip_endpt_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> * pjsip_endpt_name </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get endpoint name.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Endpoint name, as was registered during endpoint creation. The string is NULL terminated. </dd></dl>

</div>
</div>
<a id="ga2fc6fbb56b269712776f22d02edb2f6c" name="ga2fc6fbb56b269712776f22d02edb2f6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2fc6fbb56b269712776f22d02edb2f6c">&#9670;&nbsp;</a></span>pjsip_endpt_handle_events()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_handle_events </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *&#160;</td>
          <td class="paramname"><em>max_timeout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Poll for events. Application must call this function periodically to ensure that all events from both transports and timer heap are handled in timely manner. This function, like all other endpoint functions, is thread safe, and application may have more than one thread concurrently calling this function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">max_timeout</td><td>Maximum time to wait for events, or NULL to wait forever until event is received.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga3e04c78e14bca71bb090a08dad930806" name="ga3e04c78e14bca71bb090a08dad930806"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3e04c78e14bca71bb090a08dad930806">&#9670;&nbsp;</a></span>pjsip_endpt_handle_events2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_handle_events2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *&#160;</td>
          <td class="paramname"><em>max_timeout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Handle events with additional info about number of events that have been handled.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">max_timeout</td><td>Maximum time to wait for events, or NULL to wait forever until event is received. </td></tr>
    <tr><td class="paramname">count</td><td>Optional argument to receive the number of events that have been handled by the function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga404107233ddfd6924432cf62fd6ef036" name="ga404107233ddfd6924432cf62fd6ef036"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga404107233ddfd6924432cf62fd6ef036">&#9670;&nbsp;</a></span>pjsip_endpt_schedule_timer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_schedule_timer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *&#160;</td>
          <td class="paramname"><em>entry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *&#160;</td>
          <td class="paramname"><em>delay</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Schedule timer to endpoint's timer heap. Application must poll the endpoint periodically (by calling <a class="el" href="group__PJSIP__ENDPT.htm#ga2fc6fbb56b269712776f22d02edb2f6c">pjsip_endpt_handle_events</a>) to ensure that the timer events are handled in timely manner. When the timeout for the timer has elapsed, the callback specified in the entry argument will be called. This function, like all other endpoint functions, is thread safe.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">entry</td><td>The timer entry. </td></tr>
    <tr><td class="paramname">delay</td><td>The relative delay of the timer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_OK (zero) if successfull. </dd></dl>

</div>
</div>
<a id="ga78c9191bb5ebb35f57be3cd61e82b2f2" name="ga78c9191bb5ebb35f57be3cd61e82b2f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga78c9191bb5ebb35f57be3cd61e82b2f2">&#9670;&nbsp;</a></span>pjsip_endpt_schedule_timer_w_grp_lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_schedule_timer_w_grp_lock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *&#160;</td>
          <td class="paramname"><em>entry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> *&#160;</td>
          <td class="paramname"><em>delay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id_val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Schedule timer to endpoint's timer heap with group lock. Application must poll the endpoint periodically (by calling <a class="el" href="group__PJSIP__ENDPT.htm#ga2fc6fbb56b269712776f22d02edb2f6c">pjsip_endpt_handle_events</a>) to ensure that the timer events are handled in timely manner. When the timeout for the timer has elapsed, the callback specified in the entry argument will be called. This function, like all other endpoint functions, is thread safe.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">entry</td><td>The timer entry. </td></tr>
    <tr><td class="paramname">delay</td><td>The relative delay of the timer. </td></tr>
    <tr><td class="paramname">id_val</td><td>The value to be set to the "id" field of the timer entry once the timer is scheduled. </td></tr>
    <tr><td class="paramname">grp_lock</td><td>The group lock. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_OK (zero) if successfull. </dd></dl>

</div>
</div>
<a id="ga7d979a79eca2e162a6a6d756e7608df3" name="ga7d979a79eca2e162a6a6d756e7608df3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7d979a79eca2e162a6a6d756e7608df3">&#9670;&nbsp;</a></span>pjsip_endpt_cancel_timer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_endpt_cancel_timer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__timer__entry.htm">pj_timer_entry</a> *&#160;</td>
          <td class="paramname"><em>entry</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Cancel the previously registered timer. This function, like all other endpoint functions, is thread safe.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">entry</td><td>The timer entry previously registered. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaa06aaba374446162889a2cbd88fdf669" name="gaa06aaba374446162889a2cbd88fdf669"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa06aaba374446162889a2cbd88fdf669">&#9670;&nbsp;</a></span>pjsip_endpt_get_timer_heap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gaec8852c90e22c6868c83d44dcbdecb8a">pj_timer_heap_t</a> * pjsip_endpt_get_timer_heap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the timer heap instance of the SIP endpoint.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The timer heap instance. </dd></dl>

</div>
</div>
<a id="ga1322fd2f38ecbf723e3e7e78632fe140" name="ga1322fd2f38ecbf723e3e7e78632fe140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1322fd2f38ecbf723e3e7e78632fe140">&#9670;&nbsp;</a></span>pjsip_endpt_register_module()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_register_module </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td>
          <td class="paramname"><em>module</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register new module to the endpoint. The endpoint will then call the load and start function in the module to properly initialize the module, and assign a unique module ID for the module.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">module</td><td>The module to be registered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga56be8dd1472d950e5522b9840e72d805" name="ga56be8dd1472d950e5522b9840e72d805"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga56be8dd1472d950e5522b9840e72d805">&#9670;&nbsp;</a></span>pjsip_endpt_unregister_module()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_unregister_module </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td>
          <td class="paramname"><em>module</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Unregister a module from the endpoint. The endpoint will then call the stop and unload function in the module to properly shutdown the module.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">module</td><td>The module to be registered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga6702b2d6409c0e8b265c76d6843a291b" name="ga6702b2d6409c0e8b265c76d6843a291b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6702b2d6409c0e8b265c76d6843a291b">&#9670;&nbsp;</a></span>pjsip_process_rdata_param_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_process_rdata_param_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__process__rdata__param.htm">pjsip_process_rdata_param</a> *&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Initialize with default.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>The param. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga015642e34ef43d47dca41f72755e102b" name="ga015642e34ef43d47dca41f72755e102b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga015642e34ef43d47dca41f72755e102b">&#9670;&nbsp;</a></span>pjsip_endpt_process_rx_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_process_rx_data </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__process__rdata__param.htm">pjsip_process_rdata_param</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> *&#160;</td>
          <td class="paramname"><em>p_handled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Manually distribute the specified <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> to registered modules. Normally application does not need to call this function because received messages will be given to endpoint automatically by transports.</p>
<p >Application can use this function when it has postponed the processing of an incoming message, for example to perform long operations such as database operation or to consult other servers to decide what to do with the message. In this case, application clones the original rdata, return from the callback, and perform the long operation. Upon completing the long operation, it resumes pjsip's module processing by calling this function, and then free the cloned rdata.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint instance. </td></tr>
    <tr><td class="paramname">rdata</td><td>The rdata to be distributed. </td></tr>
    <tr><td class="paramname">p</td><td>Optional pointer to param to specify from which module the processing should start. </td></tr>
    <tr><td class="paramname">p_handled</td><td>Optional pointer to receive last return value of module's <em>on_rx_request()</em> or <em>on_rx_response()</em> callback.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga279dadf22e247ac0531619cb70d1172d" name="ga279dadf22e247ac0531619cb70d1172d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga279dadf22e247ac0531619cb70d1172d">&#9670;&nbsp;</a></span>pjsip_endpt_create_pool()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> * pjsip_endpt_create_pool </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pool_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>initial</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>increment</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create pool from the endpoint. All SIP components should allocate their memory pool by calling this function, to make sure that the pools are allocated from the same pool factory. This function, like all other endpoint functions, is thread safe.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint. </td></tr>
    <tr><td class="paramname">pool_name</td><td>Name to be assigned to the pool. </td></tr>
    <tr><td class="paramname">initial</td><td>The initial size of the pool. </td></tr>
    <tr><td class="paramname">increment</td><td>The resize size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Memory pool, or NULL on failure.</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="elRef" href="../../../pjlib/docs/html/group__PJ__POOL.htm#ga4634b31af5eb0a0178481536986f1d15">pj_pool_create</a> </dd></dl>

</div>
</div>
<a id="gac6c2a17c4374a3280ffcd6339a070a16" name="gac6c2a17c4374a3280ffcd6339a070a16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac6c2a17c4374a3280ffcd6339a070a16">&#9670;&nbsp;</a></span>pjsip_endpt_release_pool()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_endpt_release_pool </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Return back pool to endpoint to be released back to the pool factory. This function, like all other endpoint functions, is thread safe.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">pool</td><td>The pool to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gabb9bddd243f781d64055f276be75f754" name="gabb9bddd243f781d64055f276be75f754"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabb9bddd243f781d64055f276be75f754">&#9670;&nbsp;</a></span>pjsip_endpt_find_tsx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> * pjsip_endpt_find_tsx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Find transaction in endpoint's transaction table by the transaction's key. This function normally is only used by modules. The key for a transaction can be created by calling <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3098550af065696fdc9ad4a3d9fe3a1d">pjsip_tsx_create_key</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint instance. </td></tr>
    <tr><td class="paramname">key</td><td>Transaction key, as created with <a class="el" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga3098550af065696fdc9ad4a3d9fe3a1d">pjsip_tsx_create_key</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The transaction, or NULL if it's not found. </dd></dl>

</div>
</div>
<a id="ga58f74f6446de4fa2d11829b13f890656" name="ga58f74f6446de4fa2d11829b13f890656"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga58f74f6446de4fa2d11829b13f890656">&#9670;&nbsp;</a></span>pjsip_endpt_register_tsx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_endpt_register_tsx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register the transaction to the endpoint's transaction table. This function should only be used internally by the stack.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint. </td></tr>
    <tr><td class="paramname">tsx</td><td>The transaction. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga0157e85702b1b9849f59c1fd8e7bb47c" name="ga0157e85702b1b9849f59c1fd8e7bb47c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0157e85702b1b9849f59c1fd8e7bb47c">&#9670;&nbsp;</a></span>pjsip_endpt_destroy_tsx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_endpt_destroy_tsx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Forcefull destroy the transaction. This function should only be used internally by the stack.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">tsx</td><td>The transaction to destroy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga60ad4ba521c96b0c015574ea64059248" name="ga60ad4ba521c96b0c015574ea64059248"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga60ad4ba521c96b0c015574ea64059248">&#9670;&nbsp;</a></span>pjsip_endpt_create_tdata()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create_tdata </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a new transmit data buffer. This function, like all other endpoint functions, is thread safe.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive transmit data buffer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga341266ecfb3000a726ca02cba9d468bd" name="ga341266ecfb3000a726ca02cba9d468bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga341266ecfb3000a726ca02cba9d468bd">&#9670;&nbsp;</a></span>pjsip_endpt_create_resolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_create_resolver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> **&#160;</td>
          <td class="paramname"><em>p_resv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create the DNS resolver instance. Application creates the DNS resolver instance, set the nameserver to be used by the DNS resolver, then set the DNS resolver to be used by the endpoint by calling <a class="el" href="group__PJSIP__ENDPT.htm#gaa783363fa5b0d6d1fd081bfd40d4314b">pjsip_endpt_set_resolver()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint instance. </td></tr>
    <tr><td class="paramname">p_resv</td><td>Pointer to receive the DNS resolver instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaa783363fa5b0d6d1fd081bfd40d4314b" name="gaa783363fa5b0d6d1fd081bfd40d4314b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa783363fa5b0d6d1fd081bfd40d4314b">&#9670;&nbsp;</a></span>pjsip_endpt_set_resolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_set_resolver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> *&#160;</td>
          <td class="paramname"><em>resv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set DNS resolver to be used by the SIP resolver. Application can set the resolver instance to NULL to disable DNS resolution (perhaps temporarily). When DNS resolver is disabled, the endpoint will resolve hostnames with the normal <a class="elRef" href="../../../pjlib/docs/html/group__pj__addr__resolve.htm#ga7c8264aa7743594d31766679dbae0b88">pj_gethostbyname()</a> function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint instance. </td></tr>
    <tr><td class="paramname">resv</td><td>The resolver instance to be used by the SIP endpoint.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga9b4dbd5940d3388b571eb830884c1786" name="ga9b4dbd5940d3388b571eb830884c1786"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9b4dbd5940d3388b571eb830884c1786">&#9670;&nbsp;</a></span>pjsip_endpt_set_ext_resolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_set_ext_resolver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__ext__resolver.htm">pjsip_ext_resolver</a> *&#160;</td>
          <td class="paramname"><em>ext_res</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set the DNS external resolver implementation to use in the SIP resolver.</p>
<p >Note that naturally when implementing its own resolver, application would not need the internal resolver, hence this function will also destroy the PJLIB-UTIL DNS resolver if any (e.g: set using <a class="el" href="group__PJSIP__ENDPT.htm#gaa783363fa5b0d6d1fd081bfd40d4314b">pjsip_endpt_set_resolver()</a>). Application that needs it, still be able create its own instance.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP resolver engine. </td></tr>
    <tr><td class="paramname">ext_res</td><td>The external resolver implementation callback. This argument can be NULL to reset the whole external implementation. However, it is prohibited to reset individual callback.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga6d1813527291fa846382035d8ce2b9c0" name="ga6d1813527291fa846382035d8ce2b9c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d1813527291fa846382035d8ce2b9c0">&#9670;&nbsp;</a></span>pjsip_endpt_get_resolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> * pjsip_endpt_get_resolver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the DNS resolver being used by the SIP resolver.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The DNS resolver instance currently being used by the SIP endpoint. </dd></dl>

</div>
</div>
<a id="ga96a7ae57882371b0373b5780bea1c6e2" name="ga96a7ae57882371b0373b5780bea1c6e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga96a7ae57882371b0373b5780bea1c6e2">&#9670;&nbsp;</a></span>pjsip_endpt_resolve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_endpt_resolve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__host__info.htm">pjsip_host_info</a> *&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__RESOLVE.htm#ga457e5e9cfc2841e02b67c434d26be065">pjsip_resolver_callback</a> *&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Asynchronously resolve a SIP target host or domain according to rule specified in RFC 3263 (Locating SIP Servers). When the resolving operation has completed, the callback will be called.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint instance. </td></tr>
    <tr><td class="paramname">pool</td><td>The pool to allocate resolver job. </td></tr>
    <tr><td class="paramname">target</td><td>The target specification to be resolved. </td></tr>
    <tr><td class="paramname">token</td><td>A user defined token to be passed back to callback function. </td></tr>
    <tr><td class="paramname">cb</td><td>The callback function. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga3f2f132c35ccadaada5d58407cf80fc9" name="ga3f2f132c35ccadaada5d58407cf80fc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3f2f132c35ccadaada5d58407cf80fc9">&#9670;&nbsp;</a></span>pjsip_endpt_get_tpmgr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSIP__TYPES.htm#ga7fb8ae48b81d0ff606d096bb9195e974">pjsip_tpmgr</a> * pjsip_endpt_get_tpmgr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get transport manager instance.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transport manager instance. </dd></dl>

</div>
</div>
<a id="ga1b07406c3059e9f4c6ec290a16e24685" name="ga1b07406c3059e9f4c6ec290a16e24685"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1b07406c3059e9f4c6ec290a16e24685">&#9670;&nbsp;</a></span>pjsip_endpt_get_ioqueue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> * pjsip_endpt_get_ioqueue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get ioqueue instance.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The ioqueue. </dd></dl>

</div>
</div>
<a id="gada064c58049e0633c99f0f37cc7f7aae" name="gada064c58049e0633c99f0f37cc7f7aae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gada064c58049e0633c99f0f37cc7f7aae">&#9670;&nbsp;</a></span>pjsip_endpt_acquire_transport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_acquire_transport </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *&#160;</td>
          <td class="paramname"><em>remote</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>addr_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *&#160;</td>
          <td class="paramname"><em>sel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **&#160;</td>
          <td class="paramname"><em>p_tp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Find a SIP transport suitable for sending SIP message to the specified address. If transport selector ("sel") is set, then the function will check if the transport selected is suitable to send requests to the specified address.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJSIP__TRANSPORT.htm#gacae41e99c91a999d56021b3f80e736c0">pjsip_tpmgr_acquire_transport</a></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint instance. </td></tr>
    <tr><td class="paramname">type</td><td>The type of transport to be acquired. </td></tr>
    <tr><td class="paramname">remote</td><td>The remote address to send message to. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the remote address. </td></tr>
    <tr><td class="paramname">sel</td><td>Optional pointer to transport selector instance which is used to find explicit transport, if required. </td></tr>
    <tr><td class="paramname">p_tp</td><td>Pointer to receive the transport instance, if one is found.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaf2b6fc6a846b018505f20a5bdcfb1e73" name="gaf2b6fc6a846b018505f20a5bdcfb1e73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf2b6fc6a846b018505f20a5bdcfb1e73">&#9670;&nbsp;</a></span>pjsip_endpt_acquire_transport2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_acquire_transport2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *&#160;</td>
          <td class="paramname"><em>remote</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>addr_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__tpselector.htm">pjsip_tpselector</a> *&#160;</td>
          <td class="paramname"><em>sel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **&#160;</td>
          <td class="paramname"><em>p_tp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Find a SIP transport suitable for sending SIP message to the specified address by also considering the outgoing SIP message data. If transport selector ("sel") is set, then the function will check if the transport selected is suitable to send requests to the specified address.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJSIP__TRANSPORT.htm#gacae41e99c91a999d56021b3f80e736c0">pjsip_tpmgr_acquire_transport</a></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint instance. </td></tr>
    <tr><td class="paramname">type</td><td>The type of transport to be acquired. </td></tr>
    <tr><td class="paramname">remote</td><td>The remote address to send message to. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the remote address. </td></tr>
    <tr><td class="paramname">sel</td><td>Optional pointer to transport selector instance which is used to find explicit transport, if required. </td></tr>
    <tr><td class="paramname">tdata</td><td>Optional pointer to SIP message data to be sent. </td></tr>
    <tr><td class="paramname">p_tp</td><td>Pointer to receive the transport instance, if one is found.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaed75abf9153e8b106ce08ae4f33ab2f4" name="gaed75abf9153e8b106ce08ae4f33ab2f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed75abf9153e8b106ce08ae4f33ab2f4">&#9670;&nbsp;</a></span>pjsip_endpt_get_capability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> * pjsip_endpt_get_capability </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>htype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>hname</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the value of the specified capability header field.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">htype</td><td>The header type to be retrieved, which value may be:<ul>
<li>PJSIP_H_ACCEPT</li>
<li>PJSIP_H_ALLOW</li>
<li>PJSIP_H_SUPPORTED </li>
</ul>
</td></tr>
    <tr><td class="paramname">hname</td><td>If htype specifies PJSIP_H_OTHER, then the header name must be supplied in this argument. Otherwise the value must be set to NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The appropriate header, or NULL if the header is not available. </dd></dl>

</div>
</div>
<a id="ga25f36c94d6eca83daffad8d5e75329d2" name="ga25f36c94d6eca83daffad8d5e75329d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga25f36c94d6eca83daffad8d5e75329d2">&#9670;&nbsp;</a></span>pjsip_endpt_has_capability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pjsip_endpt_has_capability </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>htype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>token</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Check if we have the specified capability.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">htype</td><td>The header type to be retrieved, which value may be:<ul>
<li>PJSIP_H_ACCEPT</li>
<li>PJSIP_H_ALLOW</li>
<li>PJSIP_H_SUPPORTED </li>
</ul>
</td></tr>
    <tr><td class="paramname">hname</td><td>If htype specifies PJSIP_H_OTHER, then the header name must be supplied in this argument. Otherwise the value must be set to NULL. </td></tr>
    <tr><td class="paramname">token</td><td>The capability token to check. For example, if <em>htype</em> is PJSIP_H_ALLOW, then <em>token</em> specifies the method names; if <em>htype</em> is PJSIP_H_SUPPORTED, then <em>token</em> specifies the extension names such as "100rel".</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_TRUE if the specified capability is supported, otherwise PJ_FALSE.. </dd></dl>

</div>
</div>
<a id="ga0f6d79dd7524d926d70f32ef2b6215bb" name="ga0f6d79dd7524d926d70f32ef2b6215bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0f6d79dd7524d926d70f32ef2b6215bb">&#9670;&nbsp;</a></span>pjsip_endpt_add_capability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_add_capability </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td>
          <td class="paramname"><em>mod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>htype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>hname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&#160;</td>
          <td class="paramname"><em>tags</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Add or register new capabilities as indicated by the tags to the appropriate header fields in the endpoint.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">mod</td><td>The module which registers the capability. </td></tr>
    <tr><td class="paramname">htype</td><td>The header type to be set, which value may be:<ul>
<li>PJSIP_H_ACCEPT</li>
<li>PJSIP_H_ALLOW</li>
<li>PJSIP_H_SUPPORTED </li>
</ul>
</td></tr>
    <tr><td class="paramname">hname</td><td>If htype specifies PJSIP_H_OTHER, then the header name must be supplied in this argument. Otherwise the value must be set to NULL. </td></tr>
    <tr><td class="paramname">count</td><td>The number of tags in the array. The value must not be greater than PJSIP_GENERIC_ARRAY_MAX_COUNT. </td></tr>
    <tr><td class="paramname">tags</td><td>Array of tags describing the capabilities or extensions to be added to the appropriate header.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga80b19044e085b2d57b69391a542d698c" name="ga80b19044e085b2d57b69391a542d698c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga80b19044e085b2d57b69391a542d698c">&#9670;&nbsp;</a></span>pjsip_endpt_get_request_headers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structpjsip__hdr.htm">pjsip_hdr</a> * pjsip_endpt_get_request_headers </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get list of additional headers to be put in outgoing request message. Currently only Max-Forwards are defined.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">e</td><td>The endpoint.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>List of headers. </dd></dl>

</div>
</div>
<a id="gadba7a204a9cd72359948ae5e9791434f" name="gadba7a204a9cd72359948ae5e9791434f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadba7a204a9cd72359948ae5e9791434f">&#9670;&nbsp;</a></span>pjsip_endpt_dump()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_endpt_dump </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>detail</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Dump endpoint status to the log. This will print the status to the log with log level 3.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint. </td></tr>
    <tr><td class="paramname">detail</td><td>If non zero, then it will dump a detailed output. BEWARE that this option may crash the system because it tries to access all memory pools. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaad087847ca92bfe3ddf96534511099c4" name="gaad087847ca92bfe3ddf96534511099c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaad087847ca92bfe3ddf96534511099c4">&#9670;&nbsp;</a></span>pjsip_endpt_atexit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_endpt_atexit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__ENDPT.htm#ga2e3472c35a7c7308411bac5894b38410">pjsip_endpt_exit_callback</a>&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register cleanup function to be called by SIP endpoint when <a class="el" href="group__PJSIP__ENDPT.htm#ga0739d42024587fc86866dd9b24b9dc17">pjsip_endpt_destroy()</a> is called. Note that application should not use or access any endpoint resource (such as pool, ioqueue, timer heap) from within the callback as such resource may have been released when the callback function is invoked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The SIP endpoint. </td></tr>
    <tr><td class="paramname">func</td><td>The function to be registered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
