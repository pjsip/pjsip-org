<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>RTCP Feedback - RFC 4585 (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">RTCP Feedback - RFC 4585<div class="ingroups"><a class="el" href="group__PJMEDIA__SESSION.htm">Media Sessions</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>RTCP Feedback extension to RTCP session.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__fb__cap.htm">pjmedia_rtcp_fb_cap</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__fb__nack.htm">pjmedia_rtcp_fb_nack</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__fb__sli.htm">pjmedia_rtcp_fb_sli</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__rtcp__fb__rpsi.htm">pjmedia_rtcp_fb_rpsi</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__event__rx__rtcp__fb__data.htm">pjmedia_event_rx_rtcp_fb_data</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga6e4bc5d0481134e143ba668a85d9d70d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga6e4bc5d0481134e143ba668a85d9d70d">pjmedia_rtcp_fb_type</a> { <br />
&#160;&#160;<a class="el" href="group__PJMED__RTCP__FB.htm#gga6e4bc5d0481134e143ba668a85d9d70da1734022e2850f78fa7ee25fdf26b676f">PJMEDIA_RTCP_FB_ACK</a>, 
<br />
&#160;&#160;<a class="el" href="group__PJMED__RTCP__FB.htm#gga6e4bc5d0481134e143ba668a85d9d70dac45a0a46e1ed4a0b0d0c4d17230059ea">PJMEDIA_RTCP_FB_NACK</a>, 
<br />
&#160;&#160;<a class="el" href="group__PJMED__RTCP__FB.htm#gga6e4bc5d0481134e143ba668a85d9d70da0a21200867a6491ffd0501c8322f2cec">PJMEDIA_RTCP_FB_TRR_INT</a>, 
<br />
&#160;&#160;<a class="el" href="group__PJMED__RTCP__FB.htm#gga6e4bc5d0481134e143ba668a85d9d70da3425436fc4a083e3825cc9345ab9c97e">PJMEDIA_RTCP_FB_OTHER</a>
<br />
 }</td></tr>
<tr class="separator:ga6e4bc5d0481134e143ba668a85d9d70d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaf5e5200c490f4677165f7e4a991ad47c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#gaf5e5200c490f4677165f7e4a991ad47c">pjmedia_rtcp_fb_setting_default</a> (<a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *opt)</td></tr>
<tr class="separator:gaf5e5200c490f4677165f7e4a991ad47c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8dcddf7f2dd90bc3c9557f267ddd4d10"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga8dcddf7f2dd90bc3c9557f267ddd4d10">pjmedia_rtcp_fb_setting_dup</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *dst, const <a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *src)</td></tr>
<tr class="separator:ga8dcddf7f2dd90bc3c9557f267ddd4d10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga77fdc431267a7e11da9ba2999ca88ad0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga77fdc431267a7e11da9ba2999ca88ad0">pjmedia_rtcp_fb_info_dup</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *dst, const <a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *src)</td></tr>
<tr class="separator:ga77fdc431267a7e11da9ba2999ca88ad0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefbccebfcde76743834ad77e31d8e959"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#gaefbccebfcde76743834ad77e31d8e959">pjmedia_rtcp_fb_encode_sdp</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, const <a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *opt, <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp_local, unsigned med_idx, const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp_remote)</td></tr>
<tr class="separator:gaefbccebfcde76743834ad77e31d8e959"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaacd446bfee7e8be284df4191d46ddd1f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#gaacd446bfee7e8be284df4191d46ddd1f">pjmedia_rtcp_fb_decode_sdp</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, const void *opt, const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, unsigned med_idx, <a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td></tr>
<tr class="separator:gaacd446bfee7e8be284df4191d46ddd1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacedb687501d3545f89169cb2fca68d97"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#gacedb687501d3545f89169cb2fca68d97">pjmedia_rtcp_fb_decode_sdp2</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, const void *opt, const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, unsigned med_idx, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pt, <a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td></tr>
<tr class="separator:gacedb687501d3545f89169cb2fca68d97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e01fa2371885c155da520564dfd3445"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga4e01fa2371885c155da520564dfd3445">pjmedia_rtcp_fb_build_nack</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *length, unsigned nack_cnt, const <a class="el" href="structpjmedia__rtcp__fb__nack.htm">pjmedia_rtcp_fb_nack</a> nack[])</td></tr>
<tr class="separator:ga4e01fa2371885c155da520564dfd3445"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad63b404cb2f4b90bb9b8d26d6e716a8f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#gad63b404cb2f4b90bb9b8d26d6e716a8f">pjmedia_rtcp_fb_build_pli</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *length)</td></tr>
<tr class="separator:gad63b404cb2f4b90bb9b8d26d6e716a8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e7ae748c5a176be1c6e3af0073a45d6"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga4e7ae748c5a176be1c6e3af0073a45d6">pjmedia_rtcp_fb_build_sli</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *length, unsigned sli_cnt, const <a class="el" href="structpjmedia__rtcp__fb__sli.htm">pjmedia_rtcp_fb_sli</a> sli[])</td></tr>
<tr class="separator:ga4e7ae748c5a176be1c6e3af0073a45d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0670a57d48504a80dba7efa7a65ee476"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga0670a57d48504a80dba7efa7a65ee476">pjmedia_rtcp_fb_build_rpsi</a> (<a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *session, void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *length, const <a class="el" href="structpjmedia__rtcp__fb__rpsi.htm">pjmedia_rtcp_fb_rpsi</a> *rpsi)</td></tr>
<tr class="separator:ga0670a57d48504a80dba7efa7a65ee476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e4d849fe70be4b35879e58d05d2a4bf"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga0e4d849fe70be4b35879e58d05d2a4bf">pjmedia_rtcp_fb_parse_nack</a> (const void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> length, unsigned *nack_cnt, <a class="el" href="structpjmedia__rtcp__fb__nack.htm">pjmedia_rtcp_fb_nack</a> nack[])</td></tr>
<tr class="separator:ga0e4d849fe70be4b35879e58d05d2a4bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a5e23395bc5d74502b30346f76b8ab1"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga3a5e23395bc5d74502b30346f76b8ab1">pjmedia_rtcp_fb_parse_pli</a> (const void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> length)</td></tr>
<tr class="separator:ga3a5e23395bc5d74502b30346f76b8ab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac08820298dcbced535105eaf15aa4b22"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#gac08820298dcbced535105eaf15aa4b22">pjmedia_rtcp_fb_parse_sli</a> (const void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> length, unsigned *sli_cnt, <a class="el" href="structpjmedia__rtcp__fb__sli.htm">pjmedia_rtcp_fb_sli</a> sli[])</td></tr>
<tr class="separator:gac08820298dcbced535105eaf15aa4b22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga650e435c216cf6e5ffc3eb186f210780"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__RTCP__FB.htm#ga650e435c216cf6e5ffc3eb186f210780">pjmedia_rtcp_fb_parse_rpsi</a> (const void *buf, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> length, <a class="el" href="structpjmedia__rtcp__fb__rpsi.htm">pjmedia_rtcp_fb_rpsi</a> *rpsi)</td></tr>
<tr class="separator:ga650e435c216cf6e5ffc3eb186f210780"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>PJMEDIA implements RTCP Feedback specification (RFC 4585) to enable receivers to provide more immediate feedback to the senders. </p>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga6e4bc5d0481134e143ba668a85d9d70d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e4bc5d0481134e143ba668a85d9d70d">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMED__RTCP__FB.htm#ga6e4bc5d0481134e143ba668a85d9d70d">pjmedia_rtcp_fb_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enumeration of RTCP Feedback types. Each feedback type may have subtypes, which should be specified in feedback parameters. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga6e4bc5d0481134e143ba668a85d9d70da1734022e2850f78fa7ee25fdf26b676f"></a>PJMEDIA_RTCP_FB_ACK&#160;</td><td class="fielddoc"><p>Positive acknowledgement feedbacks. Sample subtypes are Reference Picture Selection Indication (RPSI) and application layer feedbacks. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga6e4bc5d0481134e143ba668a85d9d70dac45a0a46e1ed4a0b0d0c4d17230059ea"></a>PJMEDIA_RTCP_FB_NACK&#160;</td><td class="fielddoc"><p>Negative acknowledgement feedbacks. Sample subtypes are generic NACK, Picture Loss Indication (PLI), Slice Loss Indication (SLI), Reference Picture Selection Indication (RPSI), and application layer feedbacks. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga6e4bc5d0481134e143ba668a85d9d70da0a21200867a6491ffd0501c8322f2cec"></a>PJMEDIA_RTCP_FB_TRR_INT&#160;</td><td class="fielddoc"><p>Minimum interval between two regular RTCP packets. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga6e4bc5d0481134e143ba668a85d9d70da3425436fc4a083e3825cc9345ab9c97e"></a>PJMEDIA_RTCP_FB_OTHER&#160;</td><td class="fielddoc"><p>Other feedback types. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaf5e5200c490f4677165f7e4a991ad47c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf5e5200c490f4677165f7e4a991ad47c">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_setting_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_setting_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *&#160;</td>
          <td class="paramname"><em>opt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initialize RTCP Feedback setting with default values.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">opt</td><td>The RTCP Feedback setting to be initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga8dcddf7f2dd90bc3c9557f267ddd4d10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8dcddf7f2dd90bc3c9557f267ddd4d10">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_setting_dup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_fb_setting_dup </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Duplicate RTCP Feedback setting.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to be used for duplicating the config. </td></tr>
    <tr><td class="paramname">dst</td><td>Destination configuration. </td></tr>
    <tr><td class="paramname">src</td><td>Source configuration. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga77fdc431267a7e11da9ba2999ca88ad0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga77fdc431267a7e11da9ba2999ca88ad0">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_info_dup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_rtcp_fb_info_dup </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Duplicate RTCP Feedback info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to be used for duplicating the info. </td></tr>
    <tr><td class="paramname">dst</td><td>Destination info. </td></tr>
    <tr><td class="paramname">src</td><td>Source info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaefbccebfcde76743834ad77e31d8e959"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaefbccebfcde76743834ad77e31d8e959">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_encode_sdp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_encode_sdp </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__fb__setting.htm">pjmedia_rtcp_fb_setting</a> *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp_local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>med_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp_remote</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Encode RTCP Feedback specific information into local SDP according to the provided RTCP Feedback setting. This is useful to signal remote endpoint that local endpoint is capable and willing to receive RTCP Feedback packets as described in the local SDP.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool object to allocate memory in updating local SDP. </td></tr>
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">opt</td><td>RTCP Feedback setting. </td></tr>
    <tr><td class="paramname">sdp_local</td><td>The local SDP to be filled in information from the media transport. </td></tr>
    <tr><td class="paramname">med_idx</td><td>The SDP media index. </td></tr>
    <tr><td class="paramname">sdp_remote</td><td>Remote SDP or NULL if local is offerer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gaacd446bfee7e8be284df4191d46ddd1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaacd446bfee7e8be284df4191d46ddd1f">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_decode_sdp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_decode_sdp </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>med_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Decode RTCP Feedback specific information from SDP media.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool object to allocate memory. </td></tr>
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">opt</td><td>Options, currently it must be NULL. </td></tr>
    <tr><td class="paramname">sdp</td><td>The SDP. </td></tr>
    <tr><td class="paramname">med_idx</td><td>The SDP media index. </td></tr>
    <tr><td class="paramname">info</td><td>The RTCP-FB info fetched from SDP.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gacedb687501d3545f89169cb2fca68d97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacedb687501d3545f89169cb2fca68d97">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_decode_sdp2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_decode_sdp2 </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>med_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>pt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__info.htm">pjmedia_rtcp_fb_info</a> *&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Decode RTCP Feedback specific information from SDP media for the specified payload type. If the payload type is set to negative value, it will decode RTCP Feedback info for all payload types in the SDP media.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool object to allocate memory. </td></tr>
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">opt</td><td>Options, currently it must be NULL. </td></tr>
    <tr><td class="paramname">sdp</td><td>The SDP. </td></tr>
    <tr><td class="paramname">med_idx</td><td>The SDP media index. </td></tr>
    <tr><td class="paramname">pt</td><td>The payload type. </td></tr>
    <tr><td class="paramname">info</td><td>The RTCP-FB info fetched from SDP.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga4e01fa2371885c155da520564dfd3445"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4e01fa2371885c155da520564dfd3445">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_build_nack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_build_nack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>nack_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__fb__nack.htm">pjmedia_rtcp_fb_nack</a>&#160;</td>
          <td class="paramname"><em>nack</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Build an RTCP Feedback Generic NACK packet. This packet can be appended to other RTCP packets, e.g: RTCP RR/SR, to compose a compound RTCP packet. See also RFC 4585 Section 6.2.1 about Generic NACK message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>The RTCP session. </td></tr>
    <tr><td class="paramname">buf</td><td>The buffer to receive RTCP Feedback packet. </td></tr>
    <tr><td class="paramname">length</td><td>On input, it will contain the buffer length. On output, it will contain the generated RTCP Feedback packet length. </td></tr>
    <tr><td class="paramname">nack_cnt</td><td>The number of RTCP Feedback Generic NACK messages. </td></tr>
    <tr><td class="paramname">nack</td><td>The array of RTCP Feedback Generic NACK messages.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gad63b404cb2f4b90bb9b8d26d6e716a8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad63b404cb2f4b90bb9b8d26d6e716a8f">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_build_pli()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_build_pli </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Build an RTCP Feedback Picture Loss Indication (PLI) packet. This packet can be appended to other RTCP packets, e.g: RTCP RR/SR, to compose a compound RTCP packet. See also RFC 4585 Section 6.3.1 about PLI FB message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>The RTCP session. </td></tr>
    <tr><td class="paramname">buf</td><td>The buffer to receive RTCP Feedback packet. </td></tr>
    <tr><td class="paramname">length</td><td>On input, it will contain the buffer length. On output, it will contain the generated RTCP Feedback packet length.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga4e7ae748c5a176be1c6e3af0073a45d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4e7ae748c5a176be1c6e3af0073a45d6">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_build_sli()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_build_sli </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>sli_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__fb__sli.htm">pjmedia_rtcp_fb_sli</a>&#160;</td>
          <td class="paramname"><em>sli</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Build an RTCP Feedback Slice Loss Indication (SLI) packet. This packet can be appended to other RTCP packets, e.g: RTCP RR/SR, to compose a compound RTCP packet. See also RFC 4585 Section 6.3.2 about SLI FB message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>The RTCP session. </td></tr>
    <tr><td class="paramname">buf</td><td>The buffer to receive RTCP Feedback packet. </td></tr>
    <tr><td class="paramname">length</td><td>On input, it will contain the buffer length. On output, it will contain the generated RTCP Feedback packet length. </td></tr>
    <tr><td class="paramname">sli_cnt</td><td>The number of RTCP Feedback SLI messages. </td></tr>
    <tr><td class="paramname">sli</td><td>The array of RTCP Feedback SLI messages.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga0670a57d48504a80dba7efa7a65ee476"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0670a57d48504a80dba7efa7a65ee476">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_build_rpsi()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_build_rpsi </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__session.htm">pjmedia_rtcp_session</a> *&#160;</td>
          <td class="paramname"><em>session</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__rtcp__fb__rpsi.htm">pjmedia_rtcp_fb_rpsi</a> *&#160;</td>
          <td class="paramname"><em>rpsi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Build an RTCP Feedback Reference Picture Selection Indication (RPSI) packet. This packet can be appended to other RTCP packets, e.g: RTCP RR/SR, to compose a compound RTCP packet. See also RFC 4585 Section 6.3.3 about RPSI FB message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">session</td><td>The RTCP session. </td></tr>
    <tr><td class="paramname">buf</td><td>The buffer to receive RTCP Feedback packet. </td></tr>
    <tr><td class="paramname">length</td><td>On input, it will contain the buffer length. On output, it will contain the generated RTCP Feedback packet length. </td></tr>
    <tr><td class="paramname">rpsi</td><td>The RTCP Feedback RPSI message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga0e4d849fe70be4b35879e58d05d2a4bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0e4d849fe70be4b35879e58d05d2a4bf">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_parse_nack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_parse_nack </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>nack_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__nack.htm">pjmedia_rtcp_fb_nack</a>&#160;</td>
          <td class="paramname"><em>nack</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check whether the specified payload contains RTCP feedback generic NACK message, and parse the payload if it does.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>The payload buffer. </td></tr>
    <tr><td class="paramname">length</td><td>The payload length. </td></tr>
    <tr><td class="paramname">nack_cnt</td><td>On input, it specifies the maximum number of generic NACK messages. On output, it specifies the number of parsed generic NACK messages. </td></tr>
    <tr><td class="paramname">nack</td><td>The array of RTCP Feedback Generic NACK messages.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the payload contains generic NACK message and has been parsed successfully. </dd></dl>

</div>
</div>
<a id="ga3a5e23395bc5d74502b30346f76b8ab1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3a5e23395bc5d74502b30346f76b8ab1">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_parse_pli()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_parse_pli </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check whether the specified payload contains RTCP feedback Picture Loss Indication (PLI) message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>The payload buffer. </td></tr>
    <tr><td class="paramname">length</td><td>The payload length.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the payload contains PLI message. </dd></dl>

</div>
</div>
<a id="gac08820298dcbced535105eaf15aa4b22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac08820298dcbced535105eaf15aa4b22">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_parse_sli()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_parse_sli </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>sli_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__sli.htm">pjmedia_rtcp_fb_sli</a>&#160;</td>
          <td class="paramname"><em>sli</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check whether the specified payload contains RTCP feedback Slice Loss Indication (SLI) message, and parse the payload if it does.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>The payload buffer. </td></tr>
    <tr><td class="paramname">length</td><td>The payload length. </td></tr>
    <tr><td class="paramname">sli_cnt</td><td>On input, it specifies the maximum number of SLI messages. On output, it specifies the number of parsed SLI messages. </td></tr>
    <tr><td class="paramname">sli</td><td>The array of RTCP Feedback SLI messages.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the payload contains SLI messages and has been parsed successfully. </dd></dl>

</div>
</div>
<a id="ga650e435c216cf6e5ffc3eb186f210780"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga650e435c216cf6e5ffc3eb186f210780">&#9670;&nbsp;</a></span>pjmedia_rtcp_fb_parse_rpsi()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_rtcp_fb_parse_rpsi </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__rtcp__fb__rpsi.htm">pjmedia_rtcp_fb_rpsi</a> *&#160;</td>
          <td class="paramname"><em>rpsi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check whether the specified payload contains RTCP feedback Reference Picture Selection Indication (RPSI) message, and parse the payload if it does.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>The payload buffer. </td></tr>
    <tr><td class="paramname">length</td><td>The payload length. </td></tr>
    <tr><td class="paramname">rpsi</td><td>The parsed RTCP Feedback RPSI messages.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the payload contains SLI messages and has been parsed successfully. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
