<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Test: Atomic Variable (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Test: Atomic Variable </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>This file provides implementation of <b>atomic_test()</b>. It tests the functionality of the atomic variable API.</p>
<h1><a class="anchor" id="atomic_test_sec"></a>
Scope of the Test</h1>
<p>API tested:</p><ul>
<li><a class="el" href="group__PJ__ATOMIC.htm#ga2759c0fd578a2baca353e1361e0582ca">pj_atomic_create()</a></li>
<li><a class="el" href="group__PJ__ATOMIC.htm#ga8bf9e925db97f3c0736b730618f9d2ea">pj_atomic_get()</a></li>
<li><a class="el" href="group__PJ__ATOMIC.htm#ga2fbd542505166610ab6e44ee1ff9f61f">pj_atomic_inc()</a></li>
<li><a class="el" href="group__PJ__ATOMIC.htm#ga5866e033c6ec9bfca547a2219609c6d3">pj_atomic_dec()</a></li>
<li><a class="el" href="group__PJ__ATOMIC.htm#gaa742e470e7431bb2bdef1a76df5b51db">pj_atomic_set()</a></li>
<li><a class="el" href="group__PJ__ATOMIC.htm#ga37c1f01289a5795825cbc2a3b956a601">pj_atomic_destroy()</a></li>
</ul>
<p>This file is <b>pjlib-test/atomic.c</b></p>
<div class="fragment"><div class="line"><span class="comment">/* $Id$ */</span></div><div class="line"><span class="comment">/* </span></div><div class="line"><span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span></div><div class="line"><span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span></div><div class="line"><span class="comment"> * (at your option) any later version.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><span class="comment"> * along with this program; if not, write to the Free Software</span></div><div class="line"><span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="preprocessor">#include &quot;test.h&quot;</span></div><div class="line"><span class="preprocessor">#include &lt;pjlib.h&gt;</span></div><div class="line"></div><div class="line"><span class="preprocessor">#if INCLUDE_ATOMIC_TEST</span></div><div class="line"></div><div class="line"><span class="keywordtype">int</span> atomic_test(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool;</div><div class="line">    <a class="code" href="group__PJ__BASIC.htm#ga6b90ec490189c586ec263a92869da47f">pj_atomic_t</a> *atomic_var;</div><div class="line">    <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> rc;</div><div class="line"></div><div class="line">    pool = <a class="code" href="group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>(mem, NULL, 4096, 0, NULL);</div><div class="line">    <span class="keywordflow">if</span> (!pool)</div><div class="line">        <span class="keywordflow">return</span> -10;</div><div class="line"></div><div class="line">    <span class="comment">/* create() */</span></div><div class="line">    rc = <a class="code" href="group__PJ__ATOMIC.htm#ga2759c0fd578a2baca353e1361e0582ca">pj_atomic_create</a>(pool, 111, &amp;atomic_var);</div><div class="line">    <span class="keywordflow">if</span> (rc != 0) {</div><div class="line">        <span class="keywordflow">return</span> -20;</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="comment">/* get: check the value. */</span></div><div class="line">    <span class="keywordflow">if</span> (<a class="code" href="group__PJ__ATOMIC.htm#ga8bf9e925db97f3c0736b730618f9d2ea">pj_atomic_get</a>(atomic_var) != 111)</div><div class="line">        <span class="keywordflow">return</span> -30;</div><div class="line"></div><div class="line">    <span class="comment">/* increment. */</span></div><div class="line">    <a class="code" href="group__PJ__ATOMIC.htm#ga2fbd542505166610ab6e44ee1ff9f61f">pj_atomic_inc</a>(atomic_var);</div><div class="line">    <span class="keywordflow">if</span> (<a class="code" href="group__PJ__ATOMIC.htm#ga8bf9e925db97f3c0736b730618f9d2ea">pj_atomic_get</a>(atomic_var) != 112)</div><div class="line">        <span class="keywordflow">return</span> -40;</div><div class="line"></div><div class="line">    <span class="comment">/* decrement. */</span></div><div class="line">    <a class="code" href="group__PJ__ATOMIC.htm#ga5866e033c6ec9bfca547a2219609c6d3">pj_atomic_dec</a>(atomic_var);</div><div class="line">    <span class="keywordflow">if</span> (<a class="code" href="group__PJ__ATOMIC.htm#ga8bf9e925db97f3c0736b730618f9d2ea">pj_atomic_get</a>(atomic_var) != 111)</div><div class="line">        <span class="keywordflow">return</span> -50;</div><div class="line"></div><div class="line">    <span class="comment">/* set */</span></div><div class="line">    <a class="code" href="group__PJ__ATOMIC.htm#gaa742e470e7431bb2bdef1a76df5b51db">pj_atomic_set</a>(atomic_var, 211);</div><div class="line">    <span class="keywordflow">if</span> (<a class="code" href="group__PJ__ATOMIC.htm#ga8bf9e925db97f3c0736b730618f9d2ea">pj_atomic_get</a>(atomic_var) != 211)</div><div class="line">        <span class="keywordflow">return</span> -60;</div><div class="line"></div><div class="line">    <span class="comment">/* add */</span></div><div class="line">    <a class="code" href="group__PJ__ATOMIC.htm#ga41b464b33a76fe5a22c6dcf42953fb41">pj_atomic_add</a>(atomic_var, 10);</div><div class="line">    <span class="keywordflow">if</span> (<a class="code" href="group__PJ__ATOMIC.htm#ga8bf9e925db97f3c0736b730618f9d2ea">pj_atomic_get</a>(atomic_var) != 221)</div><div class="line">        <span class="keywordflow">return</span> -60;</div><div class="line"></div><div class="line">    <span class="comment">/* check the value again. */</span></div><div class="line">    <span class="keywordflow">if</span> (<a class="code" href="group__PJ__ATOMIC.htm#ga8bf9e925db97f3c0736b730618f9d2ea">pj_atomic_get</a>(atomic_var) != 221)</div><div class="line">        <span class="keywordflow">return</span> -70;</div><div class="line"></div><div class="line">    <span class="comment">/* destroy */</span></div><div class="line">    rc = <a class="code" href="group__PJ__ATOMIC.htm#ga37c1f01289a5795825cbc2a3b956a601">pj_atomic_destroy</a>(atomic_var);</div><div class="line">    <span class="keywordflow">if</span> (rc != 0)</div><div class="line">        <span class="keywordflow">return</span> -80;</div><div class="line"></div><div class="line">    <a class="code" href="group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release</a>(pool);</div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div><div class="line"></div><div class="line"></div><div class="line"><span class="preprocessor">#else</span></div><div class="line"><span class="comment">/* To prevent warning about &quot;translation unit is empty&quot;</span></div><div class="line"><span class="comment"> * when this test is disabled. </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keywordtype">int</span> dummy_atomic_test;</div><div class="line"><span class="preprocessor">#endif  </span><span class="comment">/* INCLUDE_ATOMIC_TEST */</span><span class="preprocessor"></span></div><div class="line"></div></div><!-- fragment --> </div></div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
