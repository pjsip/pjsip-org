<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Test: Exception Handling (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Test: Exception Handling </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>This file provides implementation of <b>exception_test()</b>. It tests the functionality of the exception handling API.</p>
<dl class="section note"><dt>Note</dt><dd>This test use static ID not acquired through proper registration. This is not recommended, since it may create ID collissions.</dd></dl>
<h1><a class="anchor" id="exception_test_sec"></a>
Scope of the Test</h1>
<p>Some scenarios tested:</p><ul>
<li>no exception situation</li>
<li>basic TRY/CATCH</li>
<li>multiple exception handlers</li>
<li>default handlers</li>
</ul>
<p>This file is <b>pjlib-test/exception.c</b></p>
<div class="fragment"><div class="line"><span class="comment">/* $Id$ */</span></div><div class="line"><span class="comment">/* </span></div><div class="line"><span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span></div><div class="line"><span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span></div><div class="line"><span class="comment"> * (at your option) any later version.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><span class="comment"> * along with this program; if not, write to the Free Software</span></div><div class="line"><span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="preprocessor">#include &quot;test.h&quot;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="preprocessor">#if INCLUDE_EXCEPTION_TEST</span></div><div class="line"></div><div class="line"><span class="preprocessor">#include &lt;pjlib.h&gt;</span></div><div class="line"></div><div class="line"><span class="preprocessor">#ifdef  _MSC_VER</span></div><div class="line"><span class="preprocessor">#pragma warning(disable:4702) // warning C4702: unreachable code</span></div><div class="line"><span class="preprocessor">#endif</span></div><div class="line"></div><div class="line"><span class="preprocessor">#define ID_1    1</span></div><div class="line"><span class="preprocessor">#define ID_2    2</span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> throw_id_1(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <a class="code" href="except_8h.htm#a82f4cda6bfb8c0d5c1452a2314a8ec9c">PJ_THROW</a>( ID_1 );</div><div class="line">    PJ_UNREACHED(<span class="keywordflow">return</span> -1;)</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> throw_id_2(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <a class="code" href="except_8h.htm#a82f4cda6bfb8c0d5c1452a2314a8ec9c">PJ_THROW</a>( ID_2 );</div><div class="line">    PJ_UNREACHED(<span class="keywordflow">return</span> -1;)</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> try_catch_test(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <a class="code" href="except_8h.htm#ae6b16c80d1dd667bf1adaa659ed6e95c">PJ_USE_EXCEPTION</a>;</div><div class="line">    <span class="keywordtype">int</span> rc = -200;</div><div class="line"></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        <a class="code" href="except_8h.htm#a82f4cda6bfb8c0d5c1452a2314a8ec9c">PJ_THROW</a>(ID_1);</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        rc = 0;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line">    <span class="keywordflow">return</span> rc;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> throw_in_handler(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <a class="code" href="except_8h.htm#ae6b16c80d1dd667bf1adaa659ed6e95c">PJ_USE_EXCEPTION</a>;</div><div class="line">    <span class="keywordtype">int</span> rc = 0;</div><div class="line"></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        <a class="code" href="except_8h.htm#a82f4cda6bfb8c0d5c1452a2314a8ec9c">PJ_THROW</a>(ID_1);</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        <span class="keywordflow">if</span> (<a class="code" href="except_8h.htm#a9309a179331c0fbcea0c2d62864419af">PJ_GET_EXCEPTION</a>() != ID_1)</div><div class="line">            rc = -300;</div><div class="line">        <span class="keywordflow">else</span></div><div class="line">            <a class="code" href="except_8h.htm#a82f4cda6bfb8c0d5c1452a2314a8ec9c">PJ_THROW</a>(ID_2);</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line">    <span class="keywordflow">return</span> rc;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> return_in_handler(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <a class="code" href="except_8h.htm#ae6b16c80d1dd667bf1adaa659ed6e95c">PJ_USE_EXCEPTION</a>;</div><div class="line"></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        <a class="code" href="except_8h.htm#a82f4cda6bfb8c0d5c1452a2314a8ec9c">PJ_THROW</a>(ID_1);</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        <span class="keywordflow">return</span> 0;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line">    <span class="keywordflow">return</span> -400;</div><div class="line">}</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keywordtype">int</span> test(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <span class="keywordtype">int</span> rc = 0;</div><div class="line">    <a class="code" href="except_8h.htm#ae6b16c80d1dd667bf1adaa659ed6e95c">PJ_USE_EXCEPTION</a>;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * No exception situation.</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        <a class="code" href="group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>(rc);</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        rc = -3;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span> (rc != 0)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * Basic TRY/CATCH</span></div><div class="line"><span class="comment">     */</span> </div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        rc = throw_id_1();</div><div class="line"></div><div class="line">        <span class="comment">// should not reach here.</span></div><div class="line">        rc = -10;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        <span class="keywordtype">int</span> <span class="keywordtype">id</span> = <a class="code" href="except_8h.htm#a9309a179331c0fbcea0c2d62864419af">PJ_GET_EXCEPTION</a>();</div><div class="line">        <span class="keywordflow">if</span> (<span class="keywordtype">id</span> != ID_1) {</div><div class="line">            <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(<span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;...error: got unexpected exception %d (%s)&quot;</span>, </div><div class="line">                      <span class="keywordtype">id</span>, <a class="code" href="group__PJ__EXCEPT.htm#ga3ad4985730d5f311fcf9568335d8b1f6">pj_exception_id_name</a>(<span class="keywordtype">id</span>)));</div><div class="line">            <span class="keywordflow">if</span> (!rc) rc = -20;</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span> (rc != 0)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * Multiple exceptions handlers</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        rc = throw_id_2();</div><div class="line">        <span class="comment">// should not reach here.</span></div><div class="line">        rc = -25;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        <span class="keywordflow">switch</span> (<a class="code" href="except_8h.htm#a9309a179331c0fbcea0c2d62864419af">PJ_GET_EXCEPTION</a>()) {</div><div class="line">        <span class="keywordflow">case</span> ID_1:</div><div class="line">            <span class="keywordflow">if</span> (!rc) rc = -30;</div><div class="line">            <span class="keywordflow">break</span>;</div><div class="line">        <span class="keywordflow">case</span> ID_2:</div><div class="line">            <span class="keywordflow">if</span> (!rc) rc = 0;</div><div class="line">            <span class="keywordflow">break</span>;</div><div class="line">        <span class="keywordflow">default</span>:</div><div class="line">            <span class="keywordflow">if</span> (!rc) rc = -40;</div><div class="line">            <span class="keywordflow">break</span>;</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span> (rc != 0)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * Test default handler.</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        rc = throw_id_1();</div><div class="line">        <span class="comment">// should not reach here</span></div><div class="line">        rc = -50;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        <span class="keywordflow">switch</span> (<a class="code" href="except_8h.htm#a9309a179331c0fbcea0c2d62864419af">PJ_GET_EXCEPTION</a>()) {</div><div class="line">        <span class="keywordflow">case</span> ID_1:</div><div class="line">            <span class="keywordflow">if</span> (!rc) rc = 0;</div><div class="line">            <span class="keywordflow">break</span>;</div><div class="line">        <span class="keywordflow">default</span>:</div><div class="line">            <span class="keywordflow">if</span> (!rc) rc = -60;</div><div class="line">            <span class="keywordflow">break</span>;</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span> (rc != 0)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * Nested handlers</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        rc = try_catch_test();</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        rc = -70;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span> (rc != 0)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * Throwing exception inside handler</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    rc = -80;</div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        <span class="keywordtype">int</span> rc2;</div><div class="line">        rc2 = throw_in_handler();</div><div class="line">        <span class="keywordflow">if</span> (rc2)</div><div class="line">            rc = rc2;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        <span class="keywordflow">if</span> (<a class="code" href="except_8h.htm#a9309a179331c0fbcea0c2d62864419af">PJ_GET_EXCEPTION</a>() == ID_2) {</div><div class="line">            rc = 0;</div><div class="line">        } <span class="keywordflow">else</span> {</div><div class="line">            rc = -90;</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span> (rc != 0)</div><div class="line">        <span class="keywordflow">return</span> rc;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * Return from handler. Returning from the function inside a handler</span></div><div class="line"><span class="comment">     * should be okay (though returning from the function inside the</span></div><div class="line"><span class="comment">     * PJ_TRY block IS NOT OKAY!!). We want to test to see if handler</span></div><div class="line"><span class="comment">     * is cleaned up properly, but not sure how to do this.</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <a class="code" href="except_8h.htm#a5f05874fb937ac2f5ce1dc9c0aff63cd">PJ_TRY</a> {</div><div class="line">        <span class="keywordtype">int</span> rc2;</div><div class="line">        rc2 = return_in_handler();</div><div class="line">        <span class="keywordflow">if</span> (rc2)</div><div class="line">            rc = rc2;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#a02e140a2b9d9c7090e1daa947459bb28">PJ_CATCH_ANY</a> {</div><div class="line">        rc = -100;</div><div class="line">    }</div><div class="line">    <a class="code" href="except_8h.htm#aa9e7a44e709211c2d4346146eb2ecf45">PJ_END</a>;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keywordtype">int</span> exception_test(<span class="keywordtype">void</span>)</div><div class="line">{</div><div class="line">    <span class="keywordtype">int</span> i, rc;</div><div class="line">    <span class="keyword">enum</span> { LOOP = 10 };</div><div class="line"></div><div class="line">    <span class="keywordflow">for</span> (i=0; i&lt;LOOP; ++i) {</div><div class="line">        <span class="keywordflow">if</span> ((rc=test()) != 0) {</div><div class="line">            <a class="code" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(<span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;...failed at i=%d (rc=%d)&quot;</span>, i, rc));</div><div class="line">            <span class="keywordflow">return</span> rc;</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <span class="keywordflow">return</span> 0;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="preprocessor">#else</span></div><div class="line"><span class="comment">/* To prevent warning about &quot;translation unit is empty&quot;</span></div><div class="line"><span class="comment"> * when this test is disabled. </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keywordtype">int</span> dummy_exception_test;</div><div class="line"><span class="preprocessor">#endif  </span><span class="comment">/* INCLUDE_EXCEPTION_TEST */</span><span class="preprocessor"></span></div><div class="line"></div><div class="line"></div></div><!-- fragment --> </div></div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
