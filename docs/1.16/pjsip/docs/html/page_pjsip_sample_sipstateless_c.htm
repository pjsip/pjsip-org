<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJSIP Reference: Samples: Stateless SIP Endpoint (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>

<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Samples: Stateless SIP Endpoint </h1>  </div>
</div>
<div class="contents">
<p>This is about the simplest SIP application with PJSIP, all it does is respond all incoming requests with 501 (Not Implemented) response statelessly.</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: sipstateless.c 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00030"></a>00030 <span class="comment">/* Include all headers. */</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;pjsip.h&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;pjlib-util.h&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;pjlib.h&gt;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="comment">/* If this macro is set, UDP transport will be initialized at port 5060 */</span>
<a name="l00037"></a>00037 <span class="preprocessor">#define HAS_UDP_TRANSPORT</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span>
<a name="l00039"></a>00039 <span class="comment">/* If this macro is set, TCP transport will be initialized at port 5060 */</span>
<a name="l00040"></a>00040 <span class="preprocessor">#define HAS_TCP_TRANSPORT   (1 &amp;&amp; PJ_HAS_TCP)</span>
<a name="l00041"></a>00041 <span class="preprocessor"></span>
<a name="l00042"></a>00042 <span class="comment">/* Log identification */</span>
<a name="l00043"></a>00043 <span class="preprocessor">#define THIS_FILE       &quot;sipstateless.c&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span>
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="comment">/* Global SIP endpoint */</span>
<a name="l00047"></a>00047 <span class="keyword">static</span> <a class="code" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *sip_endpt;
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="comment">/* What response code to be sent (default is 501/Not Implemented) */</span>
<a name="l00050"></a>00050 <span class="keyword">static</span> <span class="keywordtype">int</span> code = PJSIP_SC_NOT_IMPLEMENTED;
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">/* Additional header list */</span>
<a name="l00053"></a>00053 <span class="keyword">struct </span><a class="code" href="structpjsip__hdr.htm">pjsip_hdr</a> hdr_list;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="comment">/* usage() */</span>
<a name="l00056"></a>00056 <span class="keyword">static</span> <span class="keywordtype">void</span> usage(<span class="keywordtype">void</span>)
<a name="l00057"></a>00057 {
<a name="l00058"></a>00058     puts(<span class="stringliteral">&quot;Usage:&quot;</span>);
<a name="l00059"></a>00059     puts(<span class="stringliteral">&quot;  sipstateless [code] [-H HDR] ..&quot;</span>);
<a name="l00060"></a>00060     puts(<span class="stringliteral">&quot;&quot;</span>);
<a name="l00061"></a>00061     puts(<span class="stringliteral">&quot;Options:&quot;</span>);
<a name="l00062"></a>00062     puts(<span class="stringliteral">&quot;  code     SIP status code to send (default: 501/Not Implemented&quot;</span>);
<a name="l00063"></a>00063     puts(<span class="stringliteral">&quot;  -H HDR   Specify additional headers to send with response&quot;</span>);
<a name="l00064"></a>00064     puts(<span class="stringliteral">&quot;           This option may be specified more than once.&quot;</span>);
<a name="l00065"></a>00065     puts(<span class="stringliteral">&quot;           Example:&quot;</span>);
<a name="l00066"></a>00066     puts(<span class="stringliteral">&quot;              -H &#39;Expires: 300&#39; -H &#39;Contact: &lt;sip:localhost&gt;&#39;&quot;</span>); 
<a name="l00067"></a>00067 }
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 <span class="comment">/* Callback to handle incoming requests. */</span>
<a name="l00071"></a>00071 <span class="keyword">static</span> <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> on_rx_request( <a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata )
<a name="l00072"></a>00072 {
<a name="l00073"></a>00073     <span class="comment">/* Respond (statelessly) all incoming requests (except ACK!) </span>
<a name="l00074"></a>00074 <span class="comment">     * with 501 (Not Implemented)</span>
<a name="l00075"></a>00075 <span class="comment">     */</span>
<a name="l00076"></a>00076     <span class="keywordflow">if</span> (rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a957baee7035acb34775c1c7cfd929161">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#a93bcca2b1e43e5940b0d073b0c78ac63">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#ac3bb3248869a192554dda0b328a10e01">method</a>.<a class="code" href="structpjsip__method.htm#a107556b345ce2a3fbdff4f64e1cd43be">id</a> != <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a0e564a7a7fc064ef37547b2d82117372">PJSIP_ACK_METHOD</a>) {
<a name="l00077"></a>00077         <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga09a4577a6c0b7c14c37d0981b1d55f07">pjsip_endpt_respond_stateless</a>( sip_endpt, rdata, 
<a name="l00078"></a>00078                                        code, NULL,
<a name="l00079"></a>00079                                        &amp;hdr_list, NULL);
<a name="l00080"></a>00080     }
<a name="l00081"></a>00081     <span class="keywordflow">return</span> PJ_TRUE;
<a name="l00082"></a>00082 }
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 <span class="comment">/*</span>
<a name="l00087"></a>00087 <span class="comment"> * main()</span>
<a name="l00088"></a>00088 <span class="comment"> *</span>
<a name="l00089"></a>00089 <span class="comment"> */</span>
<a name="l00090"></a>00090 <span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
<a name="l00091"></a>00091 {
<a name="l00092"></a>00092     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm">pj_caching_pool</a> cp;
<a name="l00093"></a>00093     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool = NULL;
<a name="l00094"></a>00094     <a class="code" href="structpjsip__module.htm">pjsip_module</a> mod_app =
<a name="l00095"></a>00095     {
<a name="l00096"></a>00096         NULL, NULL,                 <span class="comment">/* prev, next.              */</span>
<a name="l00097"></a>00097         { <span class="stringliteral">&quot;mod-app&quot;</span>, 7 },           <span class="comment">/* Name.                    */</span>
<a name="l00098"></a>00098         -1,                                 <span class="comment">/* Id               */</span>
<a name="l00099"></a>00099         PJSIP_MOD_PRIORITY_APPLICATION, <span class="comment">/* Priority             */</span>
<a name="l00100"></a>00100         NULL,                       <span class="comment">/* load()                   */</span>
<a name="l00101"></a>00101         NULL,                       <span class="comment">/* start()                  */</span>
<a name="l00102"></a>00102         NULL,                       <span class="comment">/* stop()                   */</span>
<a name="l00103"></a>00103         NULL,                       <span class="comment">/* unload()                 */</span>
<a name="l00104"></a>00104         &amp;on_rx_request,             <span class="comment">/* on_rx_request()          */</span>
<a name="l00105"></a>00105         NULL,                       <span class="comment">/* on_rx_response()         */</span>
<a name="l00106"></a>00106         NULL,                       <span class="comment">/* on_tx_request.           */</span>
<a name="l00107"></a>00107         NULL,                       <span class="comment">/* on_tx_response()         */</span>
<a name="l00108"></a>00108         NULL,                       <span class="comment">/* on_tsx_state()           */</span>
<a name="l00109"></a>00109     };
<a name="l00110"></a>00110     <span class="keywordtype">int</span> c;
<a name="l00111"></a>00111     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00112"></a>00112     
<a name="l00113"></a>00113     <span class="comment">/* Must init PJLIB first: */</span>
<a name="l00114"></a>00114     status = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga069615152140fa2df009cebc8a36b769">pj_init</a>();
<a name="l00115"></a>00115     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00116"></a>00116 
<a name="l00117"></a>00117 
<a name="l00118"></a>00118     <span class="comment">/* Then init PJLIB-UTIL: */</span>
<a name="l00119"></a>00119     status = <a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__BASE.htm#gaf44fef477c4b0e38a99004965fc55110">pjlib_util_init</a>();
<a name="l00120"></a>00120     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00121"></a>00121 
<a name="l00122"></a>00122     <span class="comment">/* Must create a pool factory before we can allocate any memory. */</span>
<a name="l00123"></a>00123     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>(&amp;cp, &amp;<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL__FACTORY.htm#ga98cf758eafb888f318a8de7f396f47ca">pj_pool_factory_default_policy</a>, 0);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125     <span class="comment">/* Create global endpoint: */</span>
<a name="l00126"></a>00126     {
<a name="l00127"></a>00127         <span class="comment">/* Endpoint MUST be assigned a globally unique name.</span>
<a name="l00128"></a>00128 <span class="comment">         * Ideally we should put hostname or public IP address, but</span>
<a name="l00129"></a>00129 <span class="comment">         * we&#39;ll just use an arbitrary name here.</span>
<a name="l00130"></a>00130 <span class="comment">         */</span>
<a name="l00131"></a>00131 
<a name="l00132"></a>00132         <span class="comment">/* Create the endpoint: */</span>
<a name="l00133"></a>00133         status = <a class="code" href="group__PJSIP__ENDPT.htm#gaf264125f3592f83d0dce3bccf2bd5916">pjsip_endpt_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, <span class="stringliteral">&quot;sipstateless&quot;</span>, 
<a name="l00134"></a>00134                                     &amp;sip_endpt);
<a name="l00135"></a>00135         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00136"></a>00136     }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138     <span class="comment">/* Parse arguments */</span>
<a name="l00139"></a>00139     pj_optind = 0;
<a name="l00140"></a>00140     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LIST.htm#ga0f39ad164f2124e6d42d1c2e7a5926dc">pj_list_init</a>(&amp;hdr_list);
<a name="l00141"></a>00141     <span class="keywordflow">while</span> ((c=<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga4b0616c67077cdc496c1bb963c414970">pj_getopt</a>(argc, argv , <span class="stringliteral">&quot;H:&quot;</span>)) != -1) {
<a name="l00142"></a>00142         <span class="keywordflow">switch</span> (c) {
<a name="l00143"></a>00143         <span class="keywordflow">case</span> <span class="charliteral">&#39;H&#39;</span>:
<a name="l00144"></a>00144             <span class="keywordflow">if</span> (pool == NULL) {
<a name="l00145"></a>00145                 pool = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, <span class="stringliteral">&quot;sipstateless&quot;</span>, 1000, 
<a name="l00146"></a>00146                                       1000, NULL);
<a name="l00147"></a>00147             } 
<a name="l00148"></a>00148             
<a name="l00149"></a>00149             <span class="keywordflow">if</span> (pool) {
<a name="l00150"></a>00150                 <span class="keywordtype">char</span> *name;
<a name="l00151"></a>00151                 name = strtok(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>, <span class="stringliteral">&quot;:&quot;</span>);
<a name="l00152"></a>00152                 <span class="keywordflow">if</span> (name == NULL) {
<a name="l00153"></a>00153                     puts(<span class="stringliteral">&quot;Error: invalid header format&quot;</span>);
<a name="l00154"></a>00154                     <span class="keywordflow">return</span> 1;
<a name="l00155"></a>00155                 } <span class="keywordflow">else</span> {
<a name="l00156"></a>00156                     <span class="keywordtype">char</span> *val = strtok(NULL, <span class="stringliteral">&quot;\r\n&quot;</span>);
<a name="l00157"></a>00157                     <a class="code" href="structpjsip__generic__string__hdr.htm">pjsip_generic_string_hdr</a> *h;
<a name="l00158"></a>00158                     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> hname, hvalue;
<a name="l00159"></a>00159 
<a name="l00160"></a>00160                     hname = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga20fa0c4d9ccddd0822a775730cf4a867">pj_str</a>(name);
<a name="l00161"></a>00161                     hvalue = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga20fa0c4d9ccddd0822a775730cf4a867">pj_str</a>(val);
<a name="l00162"></a>00162 
<a name="l00163"></a>00163                     h = <a class="code" href="group__PJSIP__MSG__HDR.htm#ga5af7bca10b0d5d8d7a9e078ecc21f127">pjsip_generic_string_hdr_create</a>(pool, &amp;hname, &amp;hvalue);
<a name="l00164"></a>00164 
<a name="l00165"></a>00165                     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LIST.htm#gab2b4b1d6e67621db8c7dcc67a83ed45f">pj_list_push_back</a>(&amp;hdr_list, h);
<a name="l00166"></a>00166 
<a name="l00167"></a>00167                     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(4,(THIS_FILE, <span class="stringliteral">&quot;Header %s: %s added&quot;</span>, name, val));
<a name="l00168"></a>00168                 }
<a name="l00169"></a>00169             }
<a name="l00170"></a>00170             <span class="keywordflow">break</span>;
<a name="l00171"></a>00171         <span class="keywordflow">default</span>:
<a name="l00172"></a>00172             puts(<span class="stringliteral">&quot;Error: invalid argument&quot;</span>);
<a name="l00173"></a>00173             usage();
<a name="l00174"></a>00174             <span class="keywordflow">return</span> 1;
<a name="l00175"></a>00175         }
<a name="l00176"></a>00176     }
<a name="l00177"></a>00177 
<a name="l00178"></a>00178     <span class="keywordflow">if</span> (pj_optind != argc) {
<a name="l00179"></a>00179         code = atoi(argv[pj_optind]);
<a name="l00180"></a>00180         <span class="keywordflow">if</span> (code &lt; 200 || code &gt; 699) {
<a name="l00181"></a>00181             puts(<span class="stringliteral">&quot;Error: invalid status code&quot;</span>);
<a name="l00182"></a>00182             usage();
<a name="l00183"></a>00183             <span class="keywordflow">return</span> 1;
<a name="l00184"></a>00184         }
<a name="l00185"></a>00185     }
<a name="l00186"></a>00186 
<a name="l00187"></a>00187     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(4,(THIS_FILE, <span class="stringliteral">&quot;Returning %d to incoming requests&quot;</span>, code));
<a name="l00188"></a>00188 
<a name="l00189"></a>00189 
<a name="l00190"></a>00190     <span class="comment">/* </span>
<a name="l00191"></a>00191 <span class="comment">     * Add UDP transport, with hard-coded port </span>
<a name="l00192"></a>00192 <span class="comment">     */</span>
<a name="l00193"></a>00193 <span class="preprocessor">#ifdef HAS_UDP_TRANSPORT</span>
<a name="l00194"></a>00194 <span class="preprocessor"></span>    {
<a name="l00195"></a>00195         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> addr;
<a name="l00196"></a>00196 
<a name="l00197"></a>00197         addr.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm#ab298fd61a3f2bf3036fe414740a53cc6">sin_family</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SOCK.htm#ga8ea303b95fe973432a361e47e0459086">pj_AF_INET</a>();
<a name="l00198"></a>00198         addr.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm#ad1ed5a34d99da0d23e65b3b3b5fad228">sin_addr</a>.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__in__addr.htm#aa438bba3f010df65ae964a41bccb156b">s_addr</a> = 0;
<a name="l00199"></a>00199         addr.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm#a0e60b93d03fa052211bb6131e64bdda1">sin_port</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SOCK.htm#ga25ce2f95b79d3556375804123a5eb77e">pj_htons</a>(5060);
<a name="l00200"></a>00200 
<a name="l00201"></a>00201         status = <a class="code" href="group__PJSIP__TRANSPORT__UDP.htm#ga065dd345bde0618c3c7301d3cbc31ac8">pjsip_udp_transport_start</a>( sip_endpt, &amp;addr, NULL, 1, NULL);
<a name="l00202"></a>00202         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00203"></a>00203             <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, 
<a name="l00204"></a>00204                       <span class="stringliteral">&quot;Error starting UDP transport (port in use?)&quot;</span>));
<a name="l00205"></a>00205             <span class="keywordflow">return</span> 1;
<a name="l00206"></a>00206         }
<a name="l00207"></a>00207     }
<a name="l00208"></a>00208 <span class="preprocessor">#endif</span>
<a name="l00209"></a>00209 <span class="preprocessor"></span>
<a name="l00210"></a>00210 <span class="preprocessor">#if HAS_TCP_TRANSPORT</span>
<a name="l00211"></a>00211 <span class="preprocessor"></span>    <span class="comment">/* </span>
<a name="l00212"></a>00212 <span class="comment">     * Add UDP transport, with hard-coded port </span>
<a name="l00213"></a>00213 <span class="comment">     */</span>
<a name="l00214"></a>00214     {
<a name="l00215"></a>00215         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> addr;
<a name="l00216"></a>00216 
<a name="l00217"></a>00217         addr.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm#ab298fd61a3f2bf3036fe414740a53cc6">sin_family</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SOCK.htm#ga8ea303b95fe973432a361e47e0459086">pj_AF_INET</a>();
<a name="l00218"></a>00218         addr.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm#ad1ed5a34d99da0d23e65b3b3b5fad228">sin_addr</a>.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__in__addr.htm#aa438bba3f010df65ae964a41bccb156b">s_addr</a> = 0;
<a name="l00219"></a>00219         addr.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm#a0e60b93d03fa052211bb6131e64bdda1">sin_port</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SOCK.htm#ga25ce2f95b79d3556375804123a5eb77e">pj_htons</a>(5060);
<a name="l00220"></a>00220 
<a name="l00221"></a>00221         status = pjsip_tcp_transport_start(sip_endpt, &amp;addr, 1, NULL);
<a name="l00222"></a>00222         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00223"></a>00223             <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, 
<a name="l00224"></a>00224                       <span class="stringliteral">&quot;Error starting TCP transport (port in use?)&quot;</span>));
<a name="l00225"></a>00225             <span class="keywordflow">return</span> 1;
<a name="l00226"></a>00226         }
<a name="l00227"></a>00227     }
<a name="l00228"></a>00228 <span class="preprocessor">#endif</span>
<a name="l00229"></a>00229 <span class="preprocessor"></span>
<a name="l00230"></a>00230     <span class="comment">/*</span>
<a name="l00231"></a>00231 <span class="comment">     * Register our module to receive incoming requests.</span>
<a name="l00232"></a>00232 <span class="comment">     */</span>
<a name="l00233"></a>00233     status = <a class="code" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a>( sip_endpt, &amp;mod_app);
<a name="l00234"></a>00234     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 
<a name="l00237"></a>00237     <span class="comment">/* Done. Loop forever to handle incoming events. */</span>
<a name="l00238"></a>00238     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(THIS_FILE, <span class="stringliteral">&quot;Press Ctrl-C to quit..&quot;</span>));
<a name="l00239"></a>00239 
<a name="l00240"></a>00240     <span class="keywordflow">for</span> (;;) {
<a name="l00241"></a>00241         <a class="code" href="group__PJSIP__ENDPT.htm#ga2fc6fbb56b269712776f22d02edb2f6c">pjsip_endpt_handle_events</a>(sip_endpt, NULL);
<a name="l00242"></a>00242     }
<a name="l00243"></a>00243 }
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
