<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Samples: Encoding and Decoding (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Samples: Encoding and Decoding </h1>  </div>
</div>
<div class="contents">
<p>This sample shows how to use codec.</p>
<p>This file is pjsip-apps/src/samples/encdec.c</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: encdec.c 3816 2011-10-14 04:15:15Z bennylp $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;pjlib.h&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;<a class="code" href="pjmedia_8h.htm" title="PJMEDIA main header file.">pjmedia.h</a>&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;<a class="code" href="pjmedia-codec_8h.htm" title="Include all codecs API in PJMEDIA-CODEC.">pjmedia-codec.h</a>&gt;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 <span class="preprocessor">#define THIS_FILE   &quot;encdec.c&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span>
<a name="l00037"></a>00037 <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *desc = 
<a name="l00038"></a>00038  <span class="stringliteral">&quot; encdec                                                               \n&quot;</span>
<a name="l00039"></a>00039  <span class="stringliteral">&quot;                                                                      \n&quot;</span>
<a name="l00040"></a>00040  <span class="stringliteral">&quot; PURPOSE:                                                             \n&quot;</span>
<a name="l00041"></a>00041  <span class="stringliteral">&quot;  Encode input WAV with a codec, and decode the result to another WAV \n&quot;</span>
<a name="l00042"></a>00042  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00043"></a>00043  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00044"></a>00044  <span class="stringliteral">&quot; USAGE:                                                               \n&quot;</span>
<a name="l00045"></a>00045  <span class="stringliteral">&quot;  encdec codec input.wav output.wav                                   \n&quot;</span>
<a name="l00046"></a>00046  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00047"></a>00047  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00048"></a>00048  <span class="stringliteral">&quot; where:\n&quot;</span>
<a name="l00049"></a>00049  <span class="stringliteral">&quot;  codec         Set the codec name.                                   \n&quot;</span>
<a name="l00050"></a>00050  <span class="stringliteral">&quot;  input.wav     Set the input WAV filename.                           \n&quot;</span>
<a name="l00051"></a>00051  <span class="stringliteral">&quot;  output.wav    Set the output WAV filename.                          \n&quot;</span>
<a name="l00052"></a>00052 
<a name="l00053"></a>00053  <span class="stringliteral">&quot;\n&quot;</span>
<a name="l00054"></a>00054 ;
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="comment">//#undef PJ_TRACE</span>
<a name="l00057"></a>00057 <span class="comment">//#define PJ_TRACE 1</span>
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="preprocessor">#ifndef PJ_TRACE</span>
<a name="l00060"></a>00060 <span class="preprocessor"></span><span class="preprocessor">#       define PJ_TRACE 0</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span>
<a name="l00063"></a>00063 <span class="preprocessor">#if PJ_TRACE</span>
<a name="l00064"></a>00064 <span class="preprocessor"></span><span class="preprocessor">#   define TRACE_(expr)     PJ_LOG(4,expr)</span>
<a name="l00065"></a>00065 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00066"></a>00066 <span class="preprocessor"></span><span class="preprocessor">#   define TRACE_(expr)</span>
<a name="l00067"></a>00067 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00068"></a>00068 <span class="preprocessor"></span>
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 <span class="keyword">static</span> <span class="keywordtype">void</span> err(<span class="keyword">const</span> <span class="keywordtype">char</span> *op, <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)
<a name="l00071"></a>00071 {
<a name="l00072"></a>00072     <span class="keywordtype">char</span> errmsg[PJ_ERR_MSG_SIZE];
<a name="l00073"></a>00073     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__errno.htm#ga7d2616aded0d61924fb31f4fd6ee45c0">pj_strerror</a>(status, errmsg, <span class="keyword">sizeof</span>(errmsg));
<a name="l00074"></a>00074     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(<span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;%s error: %s&quot;</span>, op, errmsg));
<a name="l00075"></a>00075 }
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 <span class="preprocessor">#define CHECK(op)   do { \</span>
<a name="l00078"></a>00078 <span class="preprocessor">                        status = op; \</span>
<a name="l00079"></a>00079 <span class="preprocessor">                        if (status != PJ_SUCCESS) { \</span>
<a name="l00080"></a>00080 <span class="preprocessor">                            err(#op, status); \</span>
<a name="l00081"></a>00081 <span class="preprocessor">                            return status; \</span>
<a name="l00082"></a>00082 <span class="preprocessor">                        } \</span>
<a name="l00083"></a>00083 <span class="preprocessor">                    } \</span>
<a name="l00084"></a>00084 <span class="preprocessor">                    while (0)</span>
<a name="l00085"></a>00085 <span class="preprocessor"></span>
<a name="l00086"></a>00086 <span class="keyword">static</span> <a class="code" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *mept;
<a name="l00087"></a>00087 <span class="keyword">static</span> <span class="keywordtype">unsigned</span> file_msec_duration;
<a name="l00088"></a>00088 
<a name="l00089"></a>00089 <span class="keyword">static</span> <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> enc_dec_test(<span class="keyword">const</span> <span class="keywordtype">char</span> *codec_id,
<a name="l00090"></a>00090                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *filein,
<a name="l00091"></a>00091                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *fileout)
<a name="l00092"></a>00092 {
<a name="l00093"></a>00093     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool;
<a name="l00094"></a>00094     <a class="code" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *cm;
<a name="l00095"></a>00095     <a class="code" href="structpjmedia__codec.htm">pjmedia_codec</a> *<a class="code" href="structcodec.htm">codec</a>;
<a name="l00096"></a>00096     <span class="keyword">const</span> <a class="code" href="structpjmedia__codec__info.htm">pjmedia_codec_info</a> *pci;
<a name="l00097"></a>00097     <a class="code" href="structpjmedia__codec__param.htm">pjmedia_codec_param</a> param;
<a name="l00098"></a>00098     <span class="keywordtype">unsigned</span> cnt, samples_per_frame;
<a name="l00099"></a>00099     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> tmp;
<a name="l00100"></a>00100     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *wavin, *wavout;
<a name="l00101"></a>00101     <span class="keywordtype">unsigned</span> lost_pct;
<a name="l00102"></a>00102     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00103"></a>00103 
<a name="l00104"></a>00104 <span class="preprocessor">#define T   file_msec_duration/1000, file_msec_duration%1000</span>
<a name="l00105"></a>00105 <span class="preprocessor"></span>    
<a name="l00106"></a>00106     pool = <a class="code" href="group__PJMED__ENDPT.htm#gab2c86fe6be23f0bbad13d04c86125b24">pjmedia_endpt_create_pool</a>(mept, <span class="stringliteral">&quot;encdec&quot;</span>, 1000, 1000);
<a name="l00107"></a>00107 
<a name="l00108"></a>00108     cm = <a class="code" href="group__PJMED__ENDPT.htm#gae058aeedcfad28aa6293308c65429760">pjmedia_endpt_get_codec_mgr</a>(mept);
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="preprocessor">#ifdef LOST_PCT</span>
<a name="l00111"></a>00111 <span class="preprocessor"></span>    lost_pct = LOST_PCT;
<a name="l00112"></a>00112 <span class="preprocessor">#else</span>
<a name="l00113"></a>00113 <span class="preprocessor"></span>    lost_pct = 0;
<a name="l00114"></a>00114 <span class="preprocessor">#endif</span>
<a name="l00115"></a>00115 <span class="preprocessor"></span>    
<a name="l00116"></a>00116     cnt = 1;
<a name="l00117"></a>00117     CHECK( <a class="code" href="group__PJMEDIA__CODEC.htm#ga81c62a95860137e0e7ece5bb80581e8d">pjmedia_codec_mgr_find_codecs_by_id</a>(cm, <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga5a57d48a802ff650d8e5186cf65b7c4a">pj_cstr</a>(&amp;tmp, codec_id), 
<a name="l00118"></a>00118                                                &amp;cnt, &amp;pci, NULL) );
<a name="l00119"></a>00119     CHECK( <a class="code" href="group__PJMEDIA__CODEC.htm#ga7766eaa06db1ec402540cefe1b329af1">pjmedia_codec_mgr_get_default_param</a>(cm, pci, &amp;param) );
<a name="l00120"></a>00120 
<a name="l00121"></a>00121     samples_per_frame = param.<a class="code" href="structpjmedia__codec__param.htm#ab2d9a9a3b73d8ead78fb469d5c432a6a">info</a>.<a class="code" href="structpjmedia__codec__param.htm#aa7fde5539ba808d35d2af176a3d296f2">clock_rate</a> * param.<a class="code" href="structpjmedia__codec__param.htm#ab2d9a9a3b73d8ead78fb469d5c432a6a">info</a>.<a class="code" href="structpjmedia__codec__param.htm#ab9ed7fd2c0e2718e479bc62fb86ede2b">frm_ptime</a> / 1000;
<a name="l00122"></a>00122 
<a name="l00123"></a>00123     <span class="comment">/* Control VAD */</span>
<a name="l00124"></a>00124     param.<a class="code" href="structpjmedia__codec__param.htm#af53cf234b62d3dc2b0d08320fbf45e08">setting</a>.<a class="code" href="structpjmedia__codec__param.htm#ab5abfc5c4115233551e0aa69ffb67ff1">vad</a> = 1;
<a name="l00125"></a>00125 
<a name="l00126"></a>00126     <span class="comment">/* Open wav for reading */</span>
<a name="l00127"></a>00127     CHECK( <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga987129692be57281a40c836e8749313f">pjmedia_wav_player_port_create</a>(pool, filein, 
<a name="l00128"></a>00128                                           param.<a class="code" href="structpjmedia__codec__param.htm#ab2d9a9a3b73d8ead78fb469d5c432a6a">info</a>.<a class="code" href="structpjmedia__codec__param.htm#ab9ed7fd2c0e2718e479bc62fb86ede2b">frm_ptime</a>, 
<a name="l00129"></a>00129                                           <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#gga090e1b63247b254576a9b20a53bb4568aec9c00b3a775a1b34f1c41ff12bae159">PJMEDIA_FILE_NO_LOOP</a>, 0, &amp;wavin) );
<a name="l00130"></a>00130 
<a name="l00131"></a>00131     <span class="comment">/* Open wav for writing */</span>
<a name="l00132"></a>00132     CHECK( <a class="code" href="group__PJMEDIA__FILE__REC.htm#ga899268674e9657e8033738bca29621a2">pjmedia_wav_writer_port_create</a>(pool, fileout,
<a name="l00133"></a>00133                                           param.<a class="code" href="structpjmedia__codec__param.htm#ab2d9a9a3b73d8ead78fb469d5c432a6a">info</a>.<a class="code" href="structpjmedia__codec__param.htm#aa7fde5539ba808d35d2af176a3d296f2">clock_rate</a>, 
<a name="l00134"></a>00134                                           param.<a class="code" href="structpjmedia__codec__param.htm#ab2d9a9a3b73d8ead78fb469d5c432a6a">info</a>.<a class="code" href="structpjmedia__codec__param.htm#a6a9537e267bb4da1f598f36751042387">channel_cnt</a>,
<a name="l00135"></a>00135                                           samples_per_frame,
<a name="l00136"></a>00136                                           16, 0, 0, &amp;wavout) );
<a name="l00137"></a>00137 
<a name="l00138"></a>00138     <span class="comment">/* Alloc codec */</span>
<a name="l00139"></a>00139     CHECK( <a class="code" href="group__PJMEDIA__CODEC.htm#ga7587af95d801c5d32ac91bbf1e32789d">pjmedia_codec_mgr_alloc_codec</a>(cm, pci, &amp;codec) );
<a name="l00140"></a>00140     CHECK( codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#a3b6748a3101a34f1d47b1235beacbd8a">init</a>(codec, pool) );
<a name="l00141"></a>00141     CHECK( codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#a7deff7cdb43d9f565e0aee1adbcfdeb7">open</a>(codec, &amp;param) );
<a name="l00142"></a>00142     
<a name="l00143"></a>00143     <span class="keywordflow">for</span> (;;) {
<a name="l00144"></a>00144         <a class="code" href="structpjmedia__frame.htm">pjmedia_frame</a> frm_pcm, frm_bit, out_frm, frames[4];
<a name="l00145"></a>00145         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1bc332ac2d70cd1a23adef144571790f">pj_int16_t</a> pcmbuf[320];
<a name="l00146"></a>00146         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__timestamp.htm">pj_timestamp</a> ts;
<a name="l00147"></a>00147         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> bitstream[160];
<a name="l00148"></a>00148 
<a name="l00149"></a>00149         frm_pcm.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = (<span class="keywordtype">char</span>*)pcmbuf;
<a name="l00150"></a>00150         frm_pcm.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = samples_per_frame * 2;
<a name="l00151"></a>00151 
<a name="l00152"></a>00152         <span class="comment">/* Read from WAV */</span>
<a name="l00153"></a>00153         <span class="keywordflow">if</span> (<a class="code" href="group__PJMEDIA__PORT.htm#gabb664bcbd6c07ac3b0b4793a68c9a757">pjmedia_port_get_frame</a>(wavin, &amp;frm_pcm) != PJ_SUCCESS)
<a name="l00154"></a>00154             <span class="keywordflow">break</span>;
<a name="l00155"></a>00155         <span class="keywordflow">if</span> (frm_pcm.<a class="code" href="structpjmedia__frame.htm#a7b4e62af4cbe9e40aa9ef276b43f61dc">type</a> != <a class="code" href="group__PJMEDIA__TYPES.htm#gga59dceaa77e4a0d37f8a89f1f2af04cf2af26cab1ae619c9ea6420407b2587c724">PJMEDIA_FRAME_TYPE_AUDIO</a>)
<a name="l00156"></a>00156             <span class="keywordflow">break</span>;;
<a name="l00157"></a>00157 
<a name="l00158"></a>00158         <span class="comment">/* Update duration */</span>
<a name="l00159"></a>00159         file_msec_duration += samples_per_frame * 1000 / 
<a name="l00160"></a>00160                               param.<a class="code" href="structpjmedia__codec__param.htm#ab2d9a9a3b73d8ead78fb469d5c432a6a">info</a>.<a class="code" href="structpjmedia__codec__param.htm#aa7fde5539ba808d35d2af176a3d296f2">clock_rate</a>;
<a name="l00161"></a>00161 
<a name="l00162"></a>00162         <span class="comment">/* Encode */</span>
<a name="l00163"></a>00163         frm_bit.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = bitstream;
<a name="l00164"></a>00164         frm_bit.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = <span class="keyword">sizeof</span>(bitstream);
<a name="l00165"></a>00165         CHECK(codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#a51417db9a266ef980d7480000a1edf4f">encode</a>(codec, &amp;frm_pcm, <span class="keyword">sizeof</span>(bitstream), &amp;frm_bit));
<a name="l00166"></a>00166 
<a name="l00167"></a>00167         <span class="comment">/* On DTX, write zero frame to wavout to maintain duration */</span>
<a name="l00168"></a>00168         <span class="keywordflow">if</span> (frm_bit.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> == 0 || frm_bit.<a class="code" href="structpjmedia__frame.htm#a7b4e62af4cbe9e40aa9ef276b43f61dc">type</a> != <a class="code" href="group__PJMEDIA__TYPES.htm#gga59dceaa77e4a0d37f8a89f1f2af04cf2af26cab1ae619c9ea6420407b2587c724">PJMEDIA_FRAME_TYPE_AUDIO</a>) {
<a name="l00169"></a>00169             out_frm.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = (<span class="keywordtype">char</span>*)pcmbuf;
<a name="l00170"></a>00170             out_frm.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = 160;
<a name="l00171"></a>00171             CHECK( <a class="code" href="group__PJMEDIA__PORT.htm#ga8f5f75da0c30cac7770805472bbfa9d7">pjmedia_port_put_frame</a>(wavout, &amp;out_frm) );
<a name="l00172"></a>00172             TRACE_((THIS_FILE, <span class="stringliteral">&quot;%d.%03d read: %u, enc: %u&quot;</span>,
<a name="l00173"></a>00173                     T, frm_pcm.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>, frm_bit.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>));
<a name="l00174"></a>00174             <span class="keywordflow">continue</span>;
<a name="l00175"></a>00175         }
<a name="l00176"></a>00176         
<a name="l00177"></a>00177         <span class="comment">/* Parse the bitstream (not really necessary for this case</span>
<a name="l00178"></a>00178 <span class="comment">         * since we always decode 1 frame, but it&#39;s still good</span>
<a name="l00179"></a>00179 <span class="comment">         * for testing)</span>
<a name="l00180"></a>00180 <span class="comment">         */</span>
<a name="l00181"></a>00181         ts.u64 = 0;
<a name="l00182"></a>00182         cnt = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gacd8459212a1e5175eeb04e3a6cd76659">PJ_ARRAY_SIZE</a>(frames);
<a name="l00183"></a>00183         CHECK( codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#a51907e6b79cc595f28a2b46bb26b7d24">parse</a>(codec, bitstream, frm_bit.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>, &amp;ts, &amp;cnt, 
<a name="l00184"></a>00184                                 frames) );
<a name="l00185"></a>00185         CHECK( (cnt==1 ? PJ_SUCCESS : -1) );
<a name="l00186"></a>00186 
<a name="l00187"></a>00187         <span class="comment">/* Decode or simulate packet loss */</span>
<a name="l00188"></a>00188         out_frm.<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a> = (<span class="keywordtype">char</span>*)pcmbuf;
<a name="l00189"></a>00189         out_frm.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> = <span class="keyword">sizeof</span>(pcmbuf);
<a name="l00190"></a>00190         
<a name="l00191"></a>00191         <span class="keywordflow">if</span> ((<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__RAND.htm#ga654f8cb013a1312b87000df1a1d03398">pj_rand</a>() % 100) &lt; (<span class="keywordtype">int</span>)lost_pct) {
<a name="l00192"></a>00192             <span class="comment">/* Simulate loss */</span>
<a name="l00193"></a>00193             CHECK( codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#a97e514fca6a4055632feb619e556054f">recover</a>(codec, <span class="keyword">sizeof</span>(pcmbuf), &amp;out_frm) );
<a name="l00194"></a>00194             TRACE_((THIS_FILE, <span class="stringliteral">&quot;%d.%03d Packet lost&quot;</span>, T));
<a name="l00195"></a>00195         } <span class="keywordflow">else</span> {
<a name="l00196"></a>00196             <span class="comment">/* Decode */</span>
<a name="l00197"></a>00197             CHECK( codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#afce45b38865973f70bff7ad8edd7d88e">decode</a>(codec, &amp;frames[0], <span class="keyword">sizeof</span>(pcmbuf), 
<a name="l00198"></a>00198                                      &amp;out_frm) );
<a name="l00199"></a>00199         }
<a name="l00200"></a>00200 
<a name="l00201"></a>00201         <span class="comment">/* Write to WAV */</span>
<a name="l00202"></a>00202         CHECK( <a class="code" href="group__PJMEDIA__PORT.htm#ga8f5f75da0c30cac7770805472bbfa9d7">pjmedia_port_put_frame</a>(wavout, &amp;out_frm) );
<a name="l00203"></a>00203 
<a name="l00204"></a>00204         TRACE_((THIS_FILE, <span class="stringliteral">&quot;%d.%03d read: %u, enc: %u, dec/write: %u&quot;</span>,
<a name="l00205"></a>00205                 T, frm_pcm.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>, frm_bit.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>, out_frm.<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a>));
<a name="l00206"></a>00206     }
<a name="l00207"></a>00207 
<a name="l00208"></a>00208     <span class="comment">/* Close wavs */</span>
<a name="l00209"></a>00209     <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>(wavout);
<a name="l00210"></a>00210     <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>(wavin);
<a name="l00211"></a>00211 
<a name="l00212"></a>00212     <span class="comment">/* Close codec */</span>
<a name="l00213"></a>00213     codec-&gt;<a class="code" href="structpjmedia__codec.htm#a71c39a95a65d0154a680449e73127cc9">op</a>-&gt;<a class="code" href="structpjmedia__codec__op.htm#a2ddd57354087797777c1425533a3f570">close</a>(codec);
<a name="l00214"></a>00214     <a class="code" href="group__PJMEDIA__CODEC.htm#ga90f173b694ea7f073859424dead76fe2">pjmedia_codec_mgr_dealloc_codec</a>(cm, codec);
<a name="l00215"></a>00215 
<a name="l00216"></a>00216     <span class="comment">/* Release pool */</span>
<a name="l00217"></a>00217     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release</a>(pool);
<a name="l00218"></a>00218 
<a name="l00219"></a>00219     <span class="keywordflow">return</span> PJ_SUCCESS;
<a name="l00220"></a>00220 }
<a name="l00221"></a>00221 
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 <span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
<a name="l00224"></a>00224 {
<a name="l00225"></a>00225     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm">pj_caching_pool</a> cp;
<a name="l00226"></a>00226     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__time__val.htm">pj_time_val</a> t0, t1;
<a name="l00227"></a>00227     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00228"></a>00228 
<a name="l00229"></a>00229     <span class="keywordflow">if</span> (argc != 4) {
<a name="l00230"></a>00230         puts(desc);
<a name="l00231"></a>00231         <span class="keywordflow">return</span> 1;
<a name="l00232"></a>00232     }
<a name="l00233"></a>00233 
<a name="l00234"></a>00234     CHECK( <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga069615152140fa2df009cebc8a36b769">pj_init</a>() );
<a name="l00235"></a>00235     
<a name="l00236"></a>00236     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>(&amp;cp, NULL, 0);
<a name="l00237"></a>00237 
<a name="l00238"></a>00238     CHECK( <a class="code" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, NULL, 1, &amp;mept) );
<a name="l00239"></a>00239 
<a name="l00240"></a>00240     <span class="comment">/* Register all codecs */</span>
<a name="l00241"></a>00241 <span class="preprocessor">#if PJMEDIA_HAS_G711_CODEC</span>
<a name="l00242"></a>00242 <span class="preprocessor"></span>    CHECK( <a class="code" href="group__PJMED__G711.htm#gaa4cc7591d63c308e1f2e7821240abf14">pjmedia_codec_g711_init</a>(mept) );
<a name="l00243"></a>00243 <span class="preprocessor">#endif</span>
<a name="l00244"></a>00244 <span class="preprocessor"></span><span class="preprocessor">#if PJMEDIA_HAS_GSM_CODEC</span>
<a name="l00245"></a>00245 <span class="preprocessor"></span>    CHECK( <a class="code" href="group__PJMED__GSM.htm#ga54c6443b9c2424912cdd6c872baab91d">pjmedia_codec_gsm_init</a>(mept) );
<a name="l00246"></a>00246 <span class="preprocessor">#endif</span>
<a name="l00247"></a>00247 <span class="preprocessor"></span><span class="preprocessor">#if PJMEDIA_HAS_ILBC_CODEC</span>
<a name="l00248"></a>00248 <span class="preprocessor"></span>    CHECK( <a class="code" href="group__PJMED__ILBC.htm#gae8b9ac7a86f59868d92d8dd1c4c1d7fe">pjmedia_codec_ilbc_init</a>(mept, 30) );
<a name="l00249"></a>00249 <span class="preprocessor">#endif</span>
<a name="l00250"></a>00250 <span class="preprocessor"></span><span class="preprocessor">#if PJMEDIA_HAS_SPEEX_CODEC</span>
<a name="l00251"></a>00251 <span class="preprocessor"></span>    CHECK( <a class="code" href="group__PJMED__SPEEX.htm#ga693061056507f242d547de4f84a10d3d">pjmedia_codec_speex_init</a>(mept, 0, 5, 5) );
<a name="l00252"></a>00252 <span class="preprocessor">#endif</span>
<a name="l00253"></a>00253 <span class="preprocessor"></span><span class="preprocessor">#if PJMEDIA_HAS_G722_CODEC</span>
<a name="l00254"></a>00254 <span class="preprocessor"></span>    CHECK( <a class="code" href="group__PJMED__G722.htm#gaebc40f2cfbc264d6a5e6f1db0ddc83fd">pjmedia_codec_g722_init</a>(mept) );
<a name="l00255"></a>00255 <span class="preprocessor">#endif</span>
<a name="l00256"></a>00256 <span class="preprocessor"></span><span class="preprocessor">#if PJMEDIA_HAS_OPENCORE_AMRNB_CODEC</span>
<a name="l00257"></a>00257 <span class="preprocessor"></span>    CHECK( <a class="code" href="group__PJMED__OC__AMRNB.htm#ga02e779f05ff2e57c61a63d846cb85754">pjmedia_codec_opencore_amrnb_init</a>(mept) );
<a name="l00258"></a>00258 <span class="preprocessor">#endif</span>
<a name="l00259"></a>00259 <span class="preprocessor"></span>
<a name="l00260"></a>00260     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a>(&amp;t0);
<a name="l00261"></a>00261     status = enc_dec_test(argv[1], argv[2], argv[3]);
<a name="l00262"></a>00262     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__TIME.htm#ga0806df13f40d3153061f399ed86be856">pj_gettimeofday</a>(&amp;t1);
<a name="l00263"></a>00263     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__TIME.htm#gaec98fc019fc44b5a6f6b0b9137bcf272">PJ_TIME_VAL_SUB</a>(t1, t0);
<a name="l00264"></a>00264 
<a name="l00265"></a>00265     <a class="code" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy</a>(mept);
<a name="l00266"></a>00266     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#ga4c912e7d9e08dae33c2fecea9f1949bc">pj_caching_pool_destroy</a>(&amp;cp);
<a name="l00267"></a>00267     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gad42209dcf11f957ed9f1790e30f519cd">pj_shutdown</a>();
<a name="l00268"></a>00268 
<a name="l00269"></a>00269     <span class="keywordflow">if</span> (status == PJ_SUCCESS) {
<a name="l00270"></a>00270         puts(<span class="stringliteral">&quot;&quot;</span>);
<a name="l00271"></a>00271         puts(<span class="stringliteral">&quot;Success&quot;</span>);
<a name="l00272"></a>00272         printf(<span class="stringliteral">&quot;Duration: %ds.%03d\n&quot;</span>, file_msec_duration/1000, 
<a name="l00273"></a>00273                                        file_msec_duration%1000);
<a name="l00274"></a>00274         printf(<span class="stringliteral">&quot;Time: %lds.%03ld\n&quot;</span>, t1.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__time__val.htm#af2739d0c2189e9c902281c04fd1f4502">sec</a>, t1.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__time__val.htm#ab9cc04663b258dd3dcb449a3110e0d82">msec</a>);
<a name="l00275"></a>00275     }
<a name="l00276"></a>00276 
<a name="l00277"></a>00277     <span class="keywordflow">return</span> 0;
<a name="l00278"></a>00278 }
<a name="l00279"></a>00279 
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
