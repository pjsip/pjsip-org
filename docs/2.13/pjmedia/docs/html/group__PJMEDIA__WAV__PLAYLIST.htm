<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>WAV File Play List (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">WAV File Play List<div class="ingroups"><a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Audio playback of multiple WAV files.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga2db5ab611a2abff72b9add1128b7913e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__WAV__PLAYLIST.htm#ga2db5ab611a2abff72b9add1128b7913e">pjmedia_wav_playlist_create</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *port_label, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> file_list[], int file_count, unsigned ptime, unsigned options, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> buff_size, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **p_port)</td></tr>
<tr class="separator:ga2db5ab611a2abff72b9add1128b7913e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed69b7a381758f12f47ed1d3bbfa357e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__WAV__PLAYLIST.htm#gaed69b7a381758f12f47ed1d3bbfa357e">pjmedia_wav_playlist_set_eof_cb</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *user_data, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*cb)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data))</td></tr>
<tr class="separator:gaed69b7a381758f12f47ed1d3bbfa357e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e1bc712c3cd646b08b109c6d50c5441"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__WAV__PLAYLIST.htm#ga5e1bc712c3cd646b08b109c6d50c5441">pjmedia_wav_playlist_set_eof_cb2</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *user_data, void(*cb)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data))</td></tr>
<tr class="separator:ga5e1bc712c3cd646b08b109c6d50c5441"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >The WAV play list port enables application to play back multiple WAV files in a playlist. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga2db5ab611a2abff72b9add1128b7913e" name="ga2db5ab611a2abff72b9add1128b7913e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2db5ab611a2abff72b9add1128b7913e">&#9670;&nbsp;</a></span>pjmedia_wav_playlist_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_wav_playlist_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>port_label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&#160;</td>
          <td class="paramname"><em>file_list</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>file_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>ptime</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a>&#160;</td>
          <td class="paramname"><em>buff_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **&#160;</td>
          <td class="paramname"><em>p_port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a WAV playlist from the array of WAV file names. The WAV files must have the same clock rate, number of channels, and bits per sample, or otherwise this function will return error.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to create memory buffers for this port. </td></tr>
    <tr><td class="paramname">port_label</td><td>Optional label to set as the port name. </td></tr>
    <tr><td class="paramname">file_list</td><td>Array of WAV file names. Each filename's length must be smaller than PJ_MAXPATH. </td></tr>
    <tr><td class="paramname">file_count</td><td>Number of files in the array. </td></tr>
    <tr><td class="paramname">ptime</td><td>The duration (in miliseconds) of each frame read from this port. If the value is zero, the default duration (20ms) will be used. </td></tr>
    <tr><td class="paramname">options</td><td>Optional options. Application may specify PJMEDIA_FILE_NO_LOOP to prevent play back loop. </td></tr>
    <tr><td class="paramname">buff_size</td><td>Buffer size to be allocated. If the value is zero or negative, the port will use default buffer size (which is about 4KB). </td></tr>
    <tr><td class="paramname">p_port</td><td>Pointer to receive the file port instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaed69b7a381758f12f47ed1d3bbfa357e" name="gaed69b7a381758f12f47ed1d3bbfa357e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed69b7a381758f12f47ed1d3bbfa357e">&#9670;&nbsp;</a></span>pjmedia_wav_playlist_set_eof_cb()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_wav_playlist_set_eof_cb </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data)&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register a callback to be called when the file reading has reached the end of file of the last file. If the file is set to play repeatedly, then the callback will be called multiple times. Note that only one callback can be registered for each file port.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The WAV play list port. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be specified in the callback </td></tr>
    <tr><td class="paramname">cb</td><td>Callback to be called. If the callback returns non- PJ_SUCCESS, the playback will stop. Note that if application destroys the file port in the callback, it must return non-PJ_SUCCESS here.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga5e1bc712c3cd646b08b109c6d50c5441" name="ga5e1bc712c3cd646b08b109c6d50c5441"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5e1bc712c3cd646b08b109c6d50c5441">&#9670;&nbsp;</a></span>pjmedia_wav_playlist_set_eof_cb2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_wav_playlist_set_eof_cb2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data)&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register a callback to be called when the file reading has reached the end of file of the last file. If the file is set to play repeatedly, then the callback will be called multiple times. Note that only one callback can be registered for each file port.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The WAV play list port. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be specified in the callback </td></tr>
    <tr><td class="paramname">cb</td><td>Callback to be called. Note that if application wishes to stop the playback, it can disconnect the port in the callback, and only after all connections have been removed could the application safely destroy the port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
