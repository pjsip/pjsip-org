<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: activesock.h Source File (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>activesock.h</h1>  </div>
</div>
<div class="contents">
<a href="activesock_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: activesock.h 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef __PJ_ASYNCSOCK_H__</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define __PJ_ASYNCSOCK_H__</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="ioqueue_8h.htm" title="I/O Dispatching Mechanism.">pj/ioqueue.h</a>&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;<a class="code" href="sock_8h.htm" title="Socket Abstraction.">pj/sock.h</a>&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <a class="code" href="group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a>
<a name="l00033"></a>00033 
<a name="l00051"></a><a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">00051</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> <a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a>;
<a name="l00052"></a>00052 
<a name="l00056"></a><a class="code" href="structpj__activesock__cb.htm">00056</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__activesock__cb.htm">pj_activesock_cb</a>
<a name="l00057"></a>00057 {
<a name="l00084"></a><a class="code" href="structpj__activesock__cb.htm#af0b64be6f5cc9d0f86ab10b3fa661abc">00084</a>     <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> (*<a class="code" href="structpj__activesock__cb.htm#af0b64be6f5cc9d0f86ab10b3fa661abc">on_data_read</a>)(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00085"></a>00085                               <span class="keywordtype">void</span> *data,
<a name="l00086"></a>00086                               <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size,
<a name="l00087"></a>00087                               <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status,
<a name="l00088"></a>00088                               <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> *remainder);
<a name="l00109"></a><a class="code" href="structpj__activesock__cb.htm#aff10cd7702198590cf47d230ae3220a2">00109</a>     <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> (*<a class="code" href="structpj__activesock__cb.htm#aff10cd7702198590cf47d230ae3220a2">on_data_recvfrom</a>)(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00110"></a>00110                                   <span class="keywordtype">void</span> *data,
<a name="l00111"></a>00111                                   <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size,
<a name="l00112"></a>00112                                   <span class="keyword">const</span> <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr,
<a name="l00113"></a>00113                                   <span class="keywordtype">int</span> addr_len,
<a name="l00114"></a>00114                                   <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status);
<a name="l00115"></a>00115 
<a name="l00129"></a><a class="code" href="structpj__activesock__cb.htm#a90e1eeb50556994335c97d25776ae11b">00129</a>     <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> (*<a class="code" href="structpj__activesock__cb.htm#a90e1eeb50556994335c97d25776ae11b">on_data_sent</a>)(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00130"></a>00130                               <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="code" href="structsend__key.htm">send_key</a>,
<a name="l00131"></a>00131                               <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> sent);
<a name="l00132"></a>00132 
<a name="l00147"></a><a class="code" href="structpj__activesock__cb.htm#a81908dea56a4c206bdce1b1cb4f07155">00147</a>     <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> (*<a class="code" href="structpj__activesock__cb.htm#a81908dea56a4c206bdce1b1cb4f07155">on_accept_complete</a>)(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00148"></a>00148                                     <a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> newsock,
<a name="l00149"></a>00149                                     <span class="keyword">const</span> <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr,
<a name="l00150"></a>00150                                     <span class="keywordtype">int</span> src_addr_len);
<a name="l00151"></a>00151 
<a name="l00164"></a><a class="code" href="structpj__activesock__cb.htm#a0f926bf07c838aa32bc1afd1da3a8fb0">00164</a>     <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> (*<a class="code" href="structpj__activesock__cb.htm#a0f926bf07c838aa32bc1afd1da3a8fb0">on_connect_complete</a>)(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00165"></a>00165                                      <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status);
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 } <a class="code" href="structpj__activesock__cb.htm">pj_activesock_cb</a>;
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 
<a name="l00174"></a><a class="code" href="structpj__activesock__cfg.htm">00174</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__activesock__cfg.htm">pj_activesock_cfg</a>
<a name="l00175"></a>00175 {
<a name="l00188"></a><a class="code" href="structpj__activesock__cfg.htm#a2f9f961ce994286a9e9ad15caa760b66">00188</a>     <span class="keywordtype">unsigned</span> <a class="code" href="structpj__activesock__cfg.htm#a2f9f961ce994286a9e9ad15caa760b66">async_cnt</a>;
<a name="l00189"></a>00189 
<a name="l00203"></a><a class="code" href="structpj__activesock__cfg.htm#af4d596853b7361622b1a4bc8dcb6e022">00203</a>     <span class="keywordtype">int</span> <a class="code" href="structpj__activesock__cfg.htm#af4d596853b7361622b1a4bc8dcb6e022">concurrency</a>;
<a name="l00204"></a>00204 
<a name="l00218"></a><a class="code" href="structpj__activesock__cfg.htm#ab36fe9ac90f1ace207b9d9511379f546">00218</a>     <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> <a class="code" href="structpj__activesock__cfg.htm#ab36fe9ac90f1ace207b9d9511379f546">whole_data</a>;
<a name="l00219"></a>00219 
<a name="l00220"></a>00220 } <a class="code" href="structpj__activesock__cfg.htm">pj_activesock_cfg</a>;
<a name="l00221"></a>00221 
<a name="l00222"></a>00222 
<a name="l00228"></a>00228 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__ACTIVESOCK.htm#ga58b5e99dfabf0c15aefc42db69beb2cb">pj_activesock_cfg_default</a>(<a class="code" href="structpj__activesock__cfg.htm">pj_activesock_cfg</a> *cfg);
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 
<a name="l00253"></a>00253 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gaad8adb25f996f1ae75a2b1e98e15e584">pj_activesock_create</a>(<a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00254"></a>00254                                           <a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock,
<a name="l00255"></a>00255                                           <span class="keywordtype">int</span> sock_type,
<a name="l00256"></a>00256                                           const <a class="code" href="structpj__activesock__cfg.htm">pj_activesock_cfg</a> *opt,
<a name="l00257"></a>00257                                           <a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioqueue,
<a name="l00258"></a>00258                                           const <a class="code" href="structpj__activesock__cb.htm">pj_activesock_cb</a> *cb,
<a name="l00259"></a>00259                                           <span class="keywordtype">void</span> *user_data,
<a name="l00260"></a>00260                                           <a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> **p_asock);
<a name="l00261"></a>00261 
<a name="l00284"></a>00284 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gafff5c0d4bb59a5085d2215b7530ace68">pj_activesock_create_udp</a>(<a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00285"></a>00285                                               const <a class="code" href="unionpj__sockaddr.htm">pj_sockaddr</a> *addr,
<a name="l00286"></a>00286                                               const <a class="code" href="structpj__activesock__cfg.htm">pj_activesock_cfg</a> *opt,
<a name="l00287"></a>00287                                               <a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioqueue,
<a name="l00288"></a>00288                                               const <a class="code" href="structpj__activesock__cb.htm">pj_activesock_cb</a> *cb,
<a name="l00289"></a>00289                                               <span class="keywordtype">void</span> *user_data,
<a name="l00290"></a>00290                                               <a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> **p_asock,
<a name="l00291"></a>00291                                               <a class="code" href="unionpj__sockaddr.htm">pj_sockaddr</a> *bound_addr);
<a name="l00292"></a>00292 
<a name="l00293"></a>00293 
<a name="l00303"></a>00303 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gac8a9253fe6327c82871e92f7e6bcd8d6">pj_activesock_close</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock);
<a name="l00304"></a>00304 
<a name="l00305"></a>00305 <span class="preprocessor">#if (defined(PJ_IPHONE_OS_HAS_MULTITASKING_SUPPORT) &amp;&amp; \</span>
<a name="l00306"></a>00306 <span class="preprocessor">     PJ_IPHONE_OS_HAS_MULTITASKING_SUPPORT!=0) || \</span>
<a name="l00307"></a>00307 <span class="preprocessor">     defined(DOXYGEN)</span>
<a name="l00308"></a>00308 <span class="preprocessor"></span>
<a name="l00321"></a>00321 PJ_DECL(<span class="keywordtype">void</span>) pj_activesock_set_iphone_os_bg(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00322"></a>00322                                              <span class="keywordtype">int</span> val);
<a name="l00323"></a>00323 
<a name="l00337"></a>00337 PJ_DECL(<span class="keywordtype">void</span>) pj_activesock_enable_iphone_os_bg(<a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> val);
<a name="l00338"></a>00338 <span class="preprocessor">#endif</span>
<a name="l00339"></a>00339 <span class="preprocessor"></span>
<a name="l00352"></a>00352 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#ga35500827f3657a40c07a62e2fd423917">pj_activesock_set_user_data</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00353"></a>00353                                                  <span class="keywordtype">void</span> *user_data);
<a name="l00354"></a>00354 
<a name="l00363"></a>00363 PJ_DECL(<span class="keywordtype">void</span>*) <a class="code" href="group__PJ__ACTIVESOCK.htm#gac5a45c643541dbdd6d74a633fb28207d">pj_activesock_get_user_data</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock);
<a name="l00364"></a>00364 
<a name="l00365"></a>00365 
<a name="l00388"></a>00388 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gaff5faf21c01d9a606aa014a2f2791183">pj_activesock_start_read</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00389"></a>00389                                               <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00390"></a>00390                                               <span class="keywordtype">unsigned</span> buff_size,
<a name="l00391"></a>00391                                               <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags);
<a name="l00392"></a>00392 
<a name="l00407"></a>00407 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gad392064eddce34de3a4d52a65ce94861">pj_activesock_start_read2</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00408"></a>00408                                                <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00409"></a>00409                                                <span class="keywordtype">unsigned</span> buff_size,
<a name="l00410"></a>00410                                                <span class="keywordtype">void</span> *readbuf[],
<a name="l00411"></a>00411                                                <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags);
<a name="l00412"></a>00412 
<a name="l00426"></a>00426 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#ga48dbb84c14a6a0f53adcda91d6d8ae1e">pj_activesock_start_recvfrom</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00427"></a>00427                                                   <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00428"></a>00428                                                   <span class="keywordtype">unsigned</span> buff_size,
<a name="l00429"></a>00429                                                   <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags);
<a name="l00430"></a>00430 
<a name="l00445"></a>00445 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gad5d12dc84bd0bd35027f104b3edc8437">pj_activesock_start_recvfrom2</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00446"></a>00446                                                    <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00447"></a>00447                                                    <span class="keywordtype">unsigned</span> buff_size,
<a name="l00448"></a>00448                                                    <span class="keywordtype">void</span> *readbuf[],
<a name="l00449"></a>00449                                                    <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags);
<a name="l00450"></a>00450 
<a name="l00471"></a>00471 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gaaa1bc3760aa6b278e8ace0841a0fd7f5">pj_activesock_send</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00472"></a>00472                                         <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="code" href="structsend__key.htm">send_key</a>,
<a name="l00473"></a>00473                                         const <span class="keywordtype">void</span> *data,
<a name="l00474"></a>00474                                         <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *size,
<a name="l00475"></a>00475                                         <span class="keywordtype">unsigned</span> flags);
<a name="l00476"></a>00476 
<a name="l00498"></a>00498 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#ga39e1466848c1d13642a65f063423ae44">pj_activesock_sendto</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00499"></a>00499                                           <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *send_key,
<a name="l00500"></a>00500                                           const <span class="keywordtype">void</span> *data,
<a name="l00501"></a>00501                                           <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *size,
<a name="l00502"></a>00502                                           <span class="keywordtype">unsigned</span> flags,
<a name="l00503"></a>00503                                           const <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *addr,
<a name="l00504"></a>00504                                           <span class="keywordtype">int</span> addr_len);
<a name="l00505"></a>00505 
<a name="l00506"></a>00506 <span class="preprocessor">#if PJ_HAS_TCP</span>
<a name="l00507"></a>00507 <span class="preprocessor"></span>
<a name="l00526"></a>00526 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#gaea8588339a3981d944a8cf14847f1140">pj_activesock_start_accept</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00527"></a>00527                                                 <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool);
<a name="l00528"></a>00528 
<a name="l00546"></a>00546 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__ACTIVESOCK.htm#ga85245f4b7bfd186a2e2f28611a343133">pj_activesock_start_connect</a>(<a class="code" href="group__PJ__ACTIVESOCK.htm#ga2374729a4261eb7a1e780110bcef2e37">pj_activesock_t</a> *asock,
<a name="l00547"></a>00547                                                  <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00548"></a>00548                                                  const <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *remaddr,
<a name="l00549"></a>00549                                                  <span class="keywordtype">int</span> addr_len);
<a name="l00550"></a>00550 
<a name="l00551"></a>00551 <span class="preprocessor">#endif  </span><span class="comment">/* PJ_HAS_TCP */</span>
<a name="l00552"></a>00552 
<a name="l00557"></a>00557 <a class="code" href="group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>
<a name="l00558"></a>00558 
<a name="l00559"></a>00559 <span class="preprocessor">#endif  </span><span class="comment">/* __PJ_ASYNCSOCK_H__ */</span>
<a name="l00560"></a>00560 
</pre></div></div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
