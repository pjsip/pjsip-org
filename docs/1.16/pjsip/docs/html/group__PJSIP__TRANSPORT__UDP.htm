<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJSIP Reference: UDP Transport (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>

<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>UDP Transport<br/>
<small>
[<a class="el" href="group__PJSIP__TRANSPORT.htm">Transport</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>API to create and register UDP transport.The functions below are used to create UDP transport and register the transport to the framework.  
</p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#gga7ff5f2dff38e7639981794c43dc9167ba29f769d3101ed1084614947ab63fad42">PJSIP_UDP_TRANSPORT_KEEP_SOCKET</a> =  1, 
<a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#gga7ff5f2dff38e7639981794c43dc9167bad025583717c99e8be58ec7ad39afa043">PJSIP_UDP_TRANSPORT_DESTROY_SOCKET</a> =  2
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga065dd345bde0618c3c7301d3cbc31ac8">pjsip_udp_transport_start</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *local, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name, unsigned async_cnt, <a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **p_transport)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga7b40599e5e4e104b121555a00ce8d4dd">pjsip_udp_transport_start6</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in6.htm">pj_sockaddr_in6</a> *local, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name, unsigned async_cnt, <a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **p_transport)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#gaf5f10f8fbd374de72c575a24a1daedf9">pjsip_udp_transport_attach</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name, unsigned async_cnt, <a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **p_transport)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga8ef05fc7e6b894ba35a524341ff36cbb">pjsip_udp_transport_attach2</a> (<a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="sip__types_8h.htm#a281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a> type, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name, unsigned async_cnt, <a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **p_transport)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga9ce1b7e9b24d1af9c917064cf5d78eb5">pjsip_udp_transport_get_socket</a> (<a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *transport)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga8c49467a9c5d146396f96bbedd029221">pjsip_udp_transport_pause</a> (<a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *transport, unsigned option)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga10a94356f68949c4b91bc154d991130f">pjsip_udp_transport_restart</a> (<a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *transport, unsigned option, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *local, const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *a_name)</td></tr>
</table>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga7ff5f2dff38e7639981794c43dc9167b"></a><!-- doxytag: member="sip_transport_udp.h::@26" ref="ga7ff5f2dff38e7639981794c43dc9167b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Flag that can be specified when calling <a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga8c49467a9c5d146396f96bbedd029221">pjsip_udp_transport_pause()</a> or <a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga10a94356f68949c4b91bc154d991130f">pjsip_udp_transport_restart()</a>. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga7ff5f2dff38e7639981794c43dc9167ba29f769d3101ed1084614947ab63fad42"></a><!-- doxytag: member="PJSIP_UDP_TRANSPORT_KEEP_SOCKET" ref="gga7ff5f2dff38e7639981794c43dc9167ba29f769d3101ed1084614947ab63fad42" args="" -->PJSIP_UDP_TRANSPORT_KEEP_SOCKET</em>&nbsp;</td><td>
<p>This flag tells the transport to keep the existing/internal socket handle. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga7ff5f2dff38e7639981794c43dc9167bad025583717c99e8be58ec7ad39afa043"></a><!-- doxytag: member="PJSIP_UDP_TRANSPORT_DESTROY_SOCKET" ref="gga7ff5f2dff38e7639981794c43dc9167bad025583717c99e8be58ec7ad39afa043" args="" -->PJSIP_UDP_TRANSPORT_DESTROY_SOCKET</em>&nbsp;</td><td>
<p>This flag tells the transport to destroy the existing/internal socket handle. Naturally this flag and PJSIP_UDP_TRANSPORT_KEEP_SOCKET are mutually exclusive. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga065dd345bde0618c3c7301d3cbc31ac8"></a><!-- doxytag: member="sip_transport_udp.h::pjsip_udp_transport_start" ref="ga065dd345bde0618c3c7301d3cbc31ac8" args="(pjsip_endpoint *endpt, const pj_sockaddr_in *local, const pjsip_host_port *a_name, unsigned async_cnt, pjsip_transport **p_transport)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_udp_transport_start </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *&nbsp;</td>
          <td class="paramname"> <em>local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&nbsp;</td>
          <td class="paramname"> <em>a_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>async_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **&nbsp;</td>
          <td class="paramname"> <em>p_transport</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Start UDP transport.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The SIP endpoint. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>local</em>&nbsp;</td><td>Optional local address to bind. If this argument is NULL, the UDP transport will be bound to arbitrary UDP port. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a_name</em>&nbsp;</td><td>Published address (only the host and port portion is used). If this argument is NULL, then the bound address will be used as the published address. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>async_cnt</em>&nbsp;</td><td>Number of simultaneous async operations. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_transport</em>&nbsp;</td><td>Pointer to receive the transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when the transport has been successfully started and registered to transport manager, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7b40599e5e4e104b121555a00ce8d4dd"></a><!-- doxytag: member="sip_transport_udp.h::pjsip_udp_transport_start6" ref="ga7b40599e5e4e104b121555a00ce8d4dd" args="(pjsip_endpoint *endpt, const pj_sockaddr_in6 *local, const pjsip_host_port *a_name, unsigned async_cnt, pjsip_transport **p_transport)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_udp_transport_start6 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in6.htm">pj_sockaddr_in6</a> *&nbsp;</td>
          <td class="paramname"> <em>local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&nbsp;</td>
          <td class="paramname"> <em>a_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>async_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **&nbsp;</td>
          <td class="paramname"> <em>p_transport</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Start IPv6 UDP transport. </p>

</div>
</div>
<a class="anchor" id="gaf5f10f8fbd374de72c575a24a1daedf9"></a><!-- doxytag: member="sip_transport_udp.h::pjsip_udp_transport_attach" ref="gaf5f10f8fbd374de72c575a24a1daedf9" args="(pjsip_endpoint *endpt, pj_sock_t sock, const pjsip_host_port *a_name, unsigned async_cnt, pjsip_transport **p_transport)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_udp_transport_attach </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&nbsp;</td>
          <td class="paramname"> <em>a_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>async_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **&nbsp;</td>
          <td class="paramname"> <em>p_transport</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Attach IPv4 UDP socket as a new transport and start the transport.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The SIP endpoint. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>UDP socket to use. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a_name</em>&nbsp;</td><td>Published address (only the host and port portion is used). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>async_cnt</em>&nbsp;</td><td>Number of simultaneous async operations. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_transport</em>&nbsp;</td><td>Pointer to receive the transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when the transport has been successfully started and registered to transport manager, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8ef05fc7e6b894ba35a524341ff36cbb"></a><!-- doxytag: member="sip_transport_udp.h::pjsip_udp_transport_attach2" ref="ga8ef05fc7e6b894ba35a524341ff36cbb" args="(pjsip_endpoint *endpt, pjsip_transport_type_e type, pj_sock_t sock, const pjsip_host_port *a_name, unsigned async_cnt, pjsip_transport **p_transport)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_udp_transport_attach2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&nbsp;</td>
          <td class="paramname"> <em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a>&nbsp;</td>
          <td class="paramname"> <em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&nbsp;</td>
          <td class="paramname"> <em>a_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>async_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> **&nbsp;</td>
          <td class="paramname"> <em>p_transport</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Attach IPv4 or IPv6 UDP socket as a new transport and start the transport.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>endpt</em>&nbsp;</td><td>The SIP endpoint. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>Transport type, which is PJSIP_TRANSPORT_UDP for IPv4 or PJSIP_TRANSPORT_UDP6 for IPv6 socket. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>UDP socket to use. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a_name</em>&nbsp;</td><td>Published address (only the host and port portion is used). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>async_cnt</em>&nbsp;</td><td>Number of simultaneous async operations. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_transport</em>&nbsp;</td><td>Pointer to receive the transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when the transport has been successfully started and registered to transport manager, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9ce1b7e9b24d1af9c917064cf5d78eb5"></a><!-- doxytag: member="sip_transport_udp.h::pjsip_udp_transport_get_socket" ref="ga9ce1b7e9b24d1af9c917064cf5d78eb5" args="(pjsip_transport *transport)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> pjsip_udp_transport_get_socket </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *&nbsp;</td>
          <td class="paramname"> <em>transport</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieve the internal socket handle used by the UDP transport. Note that this socket normally is registered to ioqueue, so if application wants to make use of this socket, it should temporarily pause the transport.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>transport</em>&nbsp;</td><td>The UDP transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The socket handle, or PJ_INVALID_SOCKET if no socket is currently being used (for example, when transport is being paused). </dd></dl>

</div>
</div>
<a class="anchor" id="ga8c49467a9c5d146396f96bbedd029221"></a><!-- doxytag: member="sip_transport_udp.h::pjsip_udp_transport_pause" ref="ga8c49467a9c5d146396f96bbedd029221" args="(pjsip_transport *transport, unsigned option)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_udp_transport_pause </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *&nbsp;</td>
          <td class="paramname"> <em>transport</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>option</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Temporarily pause or shutdown the transport. When transport is being paused, it cannot be used by the SIP stack to send or receive SIP messages.</p>
<p>Two types of operations are supported by this function:</p>
<ul>
<li>to temporarily make this transport unavailable for SIP uses, but otherwise keep the socket handle intact. Application then can retrieve the socket handle with <a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga9ce1b7e9b24d1af9c917064cf5d78eb5">pjsip_udp_transport_get_socket()</a> and use it to send/receive application data (for example, STUN messages). In this case, application should specify PJSIP_UDP_TRANSPORT_KEEP_SOCKET when calling this function, and also to specify this flag when calling <a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga10a94356f68949c4b91bc154d991130f">pjsip_udp_transport_restart()</a> later.</li>
<li>to temporarily shutdown the transport, including closing down the internal socket handle. This is useful for example to temporarily suspend the application for an indefinite period. In this case, application should specify PJSIP_UDP_TRANSPORT_DESTROY_SOCKET flag when calling this function, and specify a new socket when calling <a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga10a94356f68949c4b91bc154d991130f">pjsip_udp_transport_restart()</a>.</li>
</ul>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>transport</em>&nbsp;</td><td>The UDP transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>option</em>&nbsp;</td><td>Pause option.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if transport is paused successfully, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga10a94356f68949c4b91bc154d991130f"></a><!-- doxytag: member="sip_transport_udp.h::pjsip_udp_transport_restart" ref="ga10a94356f68949c4b91bc154d991130f" args="(pjsip_transport *transport, unsigned option, pj_sock_t sock, const pj_sockaddr_in *local, const pjsip_host_port *a_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_udp_transport_restart </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transport.htm">pjsip_transport</a> *&nbsp;</td>
          <td class="paramname"> <em>transport</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>option</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&nbsp;</td>
          <td class="paramname"> <em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *&nbsp;</td>
          <td class="paramname"> <em>local</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__host__port.htm">pjsip_host_port</a> *&nbsp;</td>
          <td class="paramname"> <em>a_name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Restart the transport. Several operations are supported by this function:</p>
<ul>
<li>if transport was made temporarily unavailable to SIP stack with <a class="el" href="group__PJSIP__TRANSPORT__UDP.htm#ga8c49467a9c5d146396f96bbedd029221">pjsip_udp_transport_pause()</a> and PJSIP_UDP_TRANSPORT_KEEP_SOCKET, application can make the transport available to the SIP stack again, by specifying PJSIP_UDP_TRANSPORT_KEEP_SOCKET flag here.</li>
<li>if application wants to replace the internal socket with a new socket, it must specify PJSIP_UDP_TRANSPORT_DESTROY_SOCKET when calling this function, so that the internal socket will be destroyed if it hasn't been closed. In this case, application has two choices on how to create the new socket: 1) to let the transport create the new socket, in this case the <em>sock</em> option should be set to <em>PJ_INVALID_SOCKET</em> and optionally the <em>local</em> parameter can be filled with the desired address and port where the new socket should be bound to, or 2) to specify its own socket to be used by this transport, by specifying a valid socket in <em>sock</em> argument and set the <em>local</em> argument to NULL. In both cases, application may specify the published address of the socket in <em>a_name</em> argument.</li>
</ul>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>transport</em>&nbsp;</td><td>The UDP transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>option</em>&nbsp;</td><td>Restart option. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sock</em>&nbsp;</td><td>Optional socket to be used by the transport. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>local</em>&nbsp;</td><td>The address where the socket should be bound to. If this argument is NULL, socket will be bound to any available port. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a_name</em>&nbsp;</td><td>Optionally specify the published address for this transport. If the socket is not replaced (PJSIP_UDP_TRANSPORT_KEEP_SOCKET flag is specified), then if this argument is NULL, the previous value will be used. If the socket is replaced and this argument is NULL, the bound address will be used as the published address of the transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if transport can be restarted, or the appropriate error code. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
