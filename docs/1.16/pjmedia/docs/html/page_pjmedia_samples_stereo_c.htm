<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Samples: Using Stereo Port (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Samples: Using Stereo Port </h1>  </div>
</div>
<div class="contents">
<p>This example demonstrates how to use PJMEDIA_STEREO_PORT to change the channel count of the media streams.</p>
<p>This file is pjsip-apps/src/samples/stereotest.c</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: stereotest.c 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;<a class="code" href="pjmedia_8h.htm" title="PJMEDIA main header file.">pjmedia.h</a>&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;pjlib-util.h&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;pjlib.h&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;util.h&quot;</span>
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="preprocessor">#define REC_CLOCK_RATE      16000</span>
<a name="l00042"></a>00042 <span class="preprocessor"></span><span class="preprocessor">#define PTIME               20</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span>
<a name="l00044"></a>00044 <span class="preprocessor">#define MODE_PLAY           1</span>
<a name="l00045"></a>00045 <span class="preprocessor"></span><span class="preprocessor">#define MODE_RECORD         2</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span>
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="comment">/* For logging purpose. */</span>
<a name="l00049"></a>00049 <span class="preprocessor">#define THIS_FILE   &quot;stereotest.c&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *desc = 
<a name="l00053"></a>00053 <span class="stringliteral">&quot; FILE                                                              \n&quot;</span>
<a name="l00054"></a>00054 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00055"></a>00055 <span class="stringliteral">&quot;  stereotest.c                                                     \n&quot;</span>
<a name="l00056"></a>00056 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00057"></a>00057 <span class="stringliteral">&quot; PURPOSE                                                           \n&quot;</span>
<a name="l00058"></a>00058 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00059"></a>00059 <span class="stringliteral">&quot;  Demonstrate how use stereo port to play a WAV file to sound      \n&quot;</span>
<a name="l00060"></a>00060 <span class="stringliteral">&quot;  device or record to a WAV file from sound device with different  \n&quot;</span>
<a name="l00061"></a>00061 <span class="stringliteral">&quot;  channel count.                                                   \n&quot;</span>
<a name="l00062"></a>00062 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00063"></a>00063 <span class="stringliteral">&quot; USAGE                                                             \n&quot;</span>
<a name="l00064"></a>00064 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00065"></a>00065 <span class="stringliteral">&quot;  stereotest [options] WAV                                         \n&quot;</span>
<a name="l00066"></a>00066 <span class="stringliteral">&quot;                                                                   \n&quot;</span>
<a name="l00067"></a>00067 <span class="stringliteral">&quot;  Options:                                                         \n&quot;</span>
<a name="l00068"></a>00068 <span class="stringliteral">&quot;  -m, --mode=N          Operation mode: 1 = playing, 2 = recording.\n&quot;</span>
<a name="l00069"></a>00069 <span class="stringliteral">&quot;  -C, --rec-ch-cnt=N    Number of channel for recording file.      \n&quot;</span>
<a name="l00070"></a>00070 <span class="stringliteral">&quot;  -c, --snd-ch-cnt=N    Number of channel for opening sound device.\n&quot;</span>
<a name="l00071"></a>00071 <span class="stringliteral">&quot;                                                                   \n&quot;</span>;
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 <span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
<a name="l00074"></a>00074 {
<a name="l00075"></a>00075     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm">pj_caching_pool</a> cp;
<a name="l00076"></a>00076     <a class="code" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *med_endpt;
<a name="l00077"></a>00077     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool;
<a name="l00078"></a>00078 
<a name="l00079"></a>00079     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *file_port = NULL;
<a name="l00080"></a>00080     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *stereo_port = NULL;
<a name="l00081"></a>00081     <a class="code" href="group__PJMED__SND__PORT.htm#gaf747a635d331877d0025e182faa3f1a2">pjmedia_snd_port</a> *snd_port = NULL;
<a name="l00082"></a>00082 
<a name="l00083"></a>00083     <span class="keywordtype">int</span> dev_id = -1;
<a name="l00084"></a>00084     <span class="keywordtype">char</span> tmp[10];
<a name="l00085"></a>00085     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00086"></a>00086 
<a name="l00087"></a>00087     <span class="keywordtype">char</span> *wav_file = NULL;
<a name="l00088"></a>00088     <span class="keywordtype">unsigned</span> mode = 0;
<a name="l00089"></a>00089     <span class="keywordtype">unsigned</span> rec_ch_cnt = 1;
<a name="l00090"></a>00090     <span class="keywordtype">unsigned</span> snd_ch_cnt = 2;
<a name="l00091"></a>00091 
<a name="l00092"></a>00092     <span class="keyword">enum</span> {
<a name="l00093"></a>00093         OPT_MODE        = <span class="charliteral">&#39;m&#39;</span>,
<a name="l00094"></a>00094         OPT_REC_CHANNEL = <span class="charliteral">&#39;C&#39;</span>,
<a name="l00095"></a>00095         OPT_SND_CHANNEL = <span class="charliteral">&#39;c&#39;</span>,
<a name="l00096"></a>00096     };
<a name="l00097"></a>00097 
<a name="l00098"></a>00098     <span class="keyword">struct </span><a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/structpj__getopt__option.htm">pj_getopt_option</a> long_options[] = {
<a name="l00099"></a>00099         { <span class="stringliteral">&quot;mode&quot;</span>,           1, 0, OPT_MODE },
<a name="l00100"></a>00100         { <span class="stringliteral">&quot;rec-ch-cnt&quot;</span>,     1, 0, OPT_REC_CHANNEL },
<a name="l00101"></a>00101         { <span class="stringliteral">&quot;snd-ch-cnt&quot;</span>,     1, 0, OPT_SND_CHANNEL },
<a name="l00102"></a>00102         { NULL, 0, 0, 0 },
<a name="l00103"></a>00103     };
<a name="l00104"></a>00104 
<a name="l00105"></a>00105     <span class="keywordtype">int</span> c;
<a name="l00106"></a>00106     <span class="keywordtype">int</span> option_index;
<a name="l00107"></a>00107 
<a name="l00108"></a>00108     <span class="comment">/* Must init PJLIB first: */</span>
<a name="l00109"></a>00109     status = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga069615152140fa2df009cebc8a36b769">pj_init</a>();
<a name="l00110"></a>00110     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00111"></a>00111 
<a name="l00112"></a>00112     <span class="comment">/* Parse arguments */</span>
<a name="l00113"></a>00113     pj_optind = 0;
<a name="l00114"></a>00114     <span class="keywordflow">while</span>((c=<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#gafcaf5634bffb80179fe8c8f535574a68">pj_getopt_long</a>(argc,argv, <span class="stringliteral">&quot;m:C:c:&quot;</span>, long_options, &amp;option_index))!=-1) {
<a name="l00115"></a>00115 
<a name="l00116"></a>00116         <span class="keywordflow">switch</span> (c) {
<a name="l00117"></a>00117         <span class="keywordflow">case</span> OPT_MODE:
<a name="l00118"></a>00118             <span class="keywordflow">if</span> (mode) {
<a name="l00119"></a>00119                 app_perror(THIS_FILE, <span class="stringliteral">&quot;Cannot record and play at once!&quot;</span>, 
<a name="l00120"></a>00120                            PJ_EINVAL);
<a name="l00121"></a>00121                 <span class="keywordflow">return</span> 1;
<a name="l00122"></a>00122             }
<a name="l00123"></a>00123             mode = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00124"></a>00124             <span class="keywordflow">break</span>;
<a name="l00125"></a>00125 
<a name="l00126"></a>00126         <span class="keywordflow">case</span> OPT_REC_CHANNEL:
<a name="l00127"></a>00127             rec_ch_cnt = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00128"></a>00128             <span class="keywordflow">break</span>;
<a name="l00129"></a>00129 
<a name="l00130"></a>00130         <span class="keywordflow">case</span> OPT_SND_CHANNEL:
<a name="l00131"></a>00131             snd_ch_cnt = atoi(<a class="codeRef" doxygen="pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJLIB__UTIL__GETOPT.htm#ga8c6ed35e8ccbf455fe91cd153134dbe8">pj_optarg</a>);
<a name="l00132"></a>00132             <span class="keywordflow">break</span>;
<a name="l00133"></a>00133 
<a name="l00134"></a>00134         <span class="keywordflow">default</span>:
<a name="l00135"></a>00135             printf(<span class="stringliteral">&quot;Invalid options %s\n&quot;</span>, argv[pj_optind]);
<a name="l00136"></a>00136             puts(desc);
<a name="l00137"></a>00137             <span class="keywordflow">return</span> 1;
<a name="l00138"></a>00138         }
<a name="l00139"></a>00139 
<a name="l00140"></a>00140     }
<a name="l00141"></a>00141 
<a name="l00142"></a>00142     wav_file = argv[pj_optind];
<a name="l00143"></a>00143 
<a name="l00144"></a>00144     <span class="comment">/* Verify arguments. */</span>
<a name="l00145"></a>00145     <span class="keywordflow">if</span> (!wav_file) {
<a name="l00146"></a>00146         app_perror(THIS_FILE, <span class="stringliteral">&quot;WAV file not specified!&quot;</span>, PJ_EINVAL);
<a name="l00147"></a>00147         puts(desc);
<a name="l00148"></a>00148         <span class="keywordflow">return</span> 1;
<a name="l00149"></a>00149     }
<a name="l00150"></a>00150     <span class="keywordflow">if</span> (!snd_ch_cnt || !rec_ch_cnt || rec_ch_cnt &gt; 6) {
<a name="l00151"></a>00151         app_perror(THIS_FILE, <span class="stringliteral">&quot;Invalid or too many channel count!&quot;</span>, PJ_EINVAL);
<a name="l00152"></a>00152         puts(desc);
<a name="l00153"></a>00153         <span class="keywordflow">return</span> 1;
<a name="l00154"></a>00154     }
<a name="l00155"></a>00155     <span class="keywordflow">if</span> (mode != MODE_RECORD &amp;&amp; mode != MODE_PLAY) {
<a name="l00156"></a>00156         app_perror(THIS_FILE, <span class="stringliteral">&quot;Invalid operation mode!&quot;</span>, PJ_EINVAL);
<a name="l00157"></a>00157         puts(desc);
<a name="l00158"></a>00158         <span class="keywordflow">return</span> 1;
<a name="l00159"></a>00159     }
<a name="l00160"></a>00160 
<a name="l00161"></a>00161     <span class="comment">/* Must create a pool factory before we can allocate any memory. */</span>
<a name="l00162"></a>00162     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>(&amp;cp, &amp;<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL__FACTORY.htm#ga98cf758eafb888f318a8de7f396f47ca">pj_pool_factory_default_policy</a>, 0);
<a name="l00163"></a>00163 
<a name="l00164"></a>00164     <span class="comment">/* </span>
<a name="l00165"></a>00165 <span class="comment">     * Initialize media endpoint.</span>
<a name="l00166"></a>00166 <span class="comment">     * This will implicitly initialize PJMEDIA too.</span>
<a name="l00167"></a>00167 <span class="comment">     */</span>
<a name="l00168"></a>00168     status = <a class="code" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, NULL, 1, &amp;med_endpt);
<a name="l00169"></a>00169     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00170"></a>00170 
<a name="l00171"></a>00171     <span class="comment">/* Create memory pool for our file player */</span>
<a name="l00172"></a>00172     pool = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>( &amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>,     <span class="comment">/* pool factory         */</span>
<a name="l00173"></a>00173                            <span class="stringliteral">&quot;app&quot;</span>,           <span class="comment">/* pool name.           */</span>
<a name="l00174"></a>00174                            4000,            <span class="comment">/* init size            */</span>
<a name="l00175"></a>00175                            4000,            <span class="comment">/* increment size       */</span>
<a name="l00176"></a>00176                            NULL             <span class="comment">/* callback on error    */</span>
<a name="l00177"></a>00177                            );
<a name="l00178"></a>00178 
<a name="l00179"></a>00179     <span class="keywordflow">if</span> (mode == MODE_PLAY) {
<a name="l00180"></a>00180         <span class="comment">/* Create WAVE file player port. */</span>
<a name="l00181"></a>00181         status = <a class="code" href="group__PJMEDIA__FILE__PLAY.htm#ga987129692be57281a40c836e8749313f">pjmedia_wav_player_port_create</a>( pool, wav_file, PTIME, 0,
<a name="l00182"></a>00182                                                  0, &amp;file_port);
<a name="l00183"></a>00183         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00184"></a>00184             app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to open file&quot;</span>, status);
<a name="l00185"></a>00185             <span class="keywordflow">return</span> 1;
<a name="l00186"></a>00186         }
<a name="l00187"></a>00187 
<a name="l00188"></a>00188         <span class="comment">/* Create sound player port. */</span>
<a name="l00189"></a>00189         status = <a class="code" href="group__PJMED__SND__PORT.htm#gaa67792594c2b15e22f957f12e90cd206">pjmedia_snd_port_create_player</a>( 
<a name="l00190"></a>00190                      pool,                              <span class="comment">/* pool               */</span>
<a name="l00191"></a>00191                      dev_id,                            <span class="comment">/* device id.         */</span>
<a name="l00192"></a>00192                      file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a>,        <span class="comment">/* clock rate.        */</span>
<a name="l00193"></a>00193                      snd_ch_cnt,                        <span class="comment">/* # of channels.     */</span>
<a name="l00194"></a>00194                      snd_ch_cnt * PTIME *               <span class="comment">/* samples per frame. */</span>
<a name="l00195"></a>00195                      file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a> / 1000,
<a name="l00196"></a>00196                      file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a604c79a6c2a4afd930abd1323e8e8d31">bits_per_sample</a>,   <span class="comment">/* bits per sample.   */</span>
<a name="l00197"></a>00197                      0,                                 <span class="comment">/* options            */</span>
<a name="l00198"></a>00198                      &amp;snd_port                          <span class="comment">/* returned port      */</span>
<a name="l00199"></a>00199                      );
<a name="l00200"></a>00200         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00201"></a>00201             app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to open sound device&quot;</span>, status);
<a name="l00202"></a>00202             <span class="keywordflow">return</span> 1;
<a name="l00203"></a>00203         }
<a name="l00204"></a>00204 
<a name="l00205"></a>00205         <span class="keywordflow">if</span> (snd_ch_cnt != file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a>) {
<a name="l00206"></a>00206             status = <a class="code" href="group__PJMEDIA__STEREO.htm#ga704a744d9f3161bb40d9bb993b301f46">pjmedia_stereo_port_create</a>( pool,
<a name="l00207"></a>00207                                                  file_port,
<a name="l00208"></a>00208                                                  snd_ch_cnt,
<a name="l00209"></a>00209                                                  0,
<a name="l00210"></a>00210                                                  &amp;stereo_port);
<a name="l00211"></a>00211             <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00212"></a>00212                 app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to create stereo port&quot;</span>, status);
<a name="l00213"></a>00213                 <span class="keywordflow">return</span> 1;
<a name="l00214"></a>00214             }
<a name="l00215"></a>00215 
<a name="l00216"></a>00216             status = <a class="code" href="group__PJMED__SND__PORT.htm#ga046156b765a34e6c640b0534e6b21f9c">pjmedia_snd_port_connect</a>(snd_port, stereo_port);
<a name="l00217"></a>00217         } <span class="keywordflow">else</span> {
<a name="l00218"></a>00218             status = <a class="code" href="group__PJMED__SND__PORT.htm#ga046156b765a34e6c640b0534e6b21f9c">pjmedia_snd_port_connect</a>(snd_port, file_port);
<a name="l00219"></a>00219         }
<a name="l00220"></a>00220 
<a name="l00221"></a>00221         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00222"></a>00222             app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to connect sound port&quot;</span>, status);
<a name="l00223"></a>00223             <span class="keywordflow">return</span> 1;
<a name="l00224"></a>00224         }
<a name="l00225"></a>00225 
<a name="l00226"></a>00226     } <span class="keywordflow">else</span> {
<a name="l00227"></a>00227         <span class="comment">/* Create WAVE file writer port. */</span>
<a name="l00228"></a>00228         status = <a class="code" href="group__PJMEDIA__FILE__REC.htm#ga899268674e9657e8033738bca29621a2">pjmedia_wav_writer_port_create</a>(pool, wav_file,
<a name="l00229"></a>00229                                                 REC_CLOCK_RATE,
<a name="l00230"></a>00230                                                 rec_ch_cnt,
<a name="l00231"></a>00231                                                 rec_ch_cnt * PTIME * 
<a name="l00232"></a>00232                                                 REC_CLOCK_RATE / 1000,
<a name="l00233"></a>00233                                                 NBITS,
<a name="l00234"></a>00234                                                 0, 0, 
<a name="l00235"></a>00235                                                 &amp;file_port);
<a name="l00236"></a>00236         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00237"></a>00237             app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to open file&quot;</span>, status);
<a name="l00238"></a>00238             <span class="keywordflow">return</span> 1;
<a name="l00239"></a>00239         }
<a name="l00240"></a>00240 
<a name="l00241"></a>00241         <span class="comment">/* Create sound player port. */</span>
<a name="l00242"></a>00242         status = <a class="code" href="group__PJMED__SND__PORT.htm#gae667a793d66b446edb61b6c20de0e70d">pjmedia_snd_port_create_rec</a>( 
<a name="l00243"></a>00243                          pool,                      <span class="comment">/* pool                 */</span>
<a name="l00244"></a>00244                          dev_id,                    <span class="comment">/* device id.           */</span>
<a name="l00245"></a>00245                          REC_CLOCK_RATE,            <span class="comment">/* clock rate.          */</span>
<a name="l00246"></a>00246                          snd_ch_cnt,                <span class="comment">/* # of channels.       */</span>
<a name="l00247"></a>00247                          snd_ch_cnt * PTIME * 
<a name="l00248"></a>00248                          REC_CLOCK_RATE / 1000,     <span class="comment">/* samples per frame.   */</span>
<a name="l00249"></a>00249                          NBITS,                     <span class="comment">/* bits per sample.     */</span>
<a name="l00250"></a>00250                          0,                         <span class="comment">/* options              */</span>
<a name="l00251"></a>00251                          &amp;snd_port                  <span class="comment">/* returned port        */</span>
<a name="l00252"></a>00252                      );
<a name="l00253"></a>00253         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00254"></a>00254             app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to open sound device&quot;</span>, status);
<a name="l00255"></a>00255             <span class="keywordflow">return</span> 1;
<a name="l00256"></a>00256         }
<a name="l00257"></a>00257 
<a name="l00258"></a>00258         <span class="keywordflow">if</span> (rec_ch_cnt != snd_ch_cnt) {
<a name="l00259"></a>00259             status = <a class="code" href="group__PJMEDIA__STEREO.htm#ga704a744d9f3161bb40d9bb993b301f46">pjmedia_stereo_port_create</a>( pool,
<a name="l00260"></a>00260                                                  file_port,
<a name="l00261"></a>00261                                                  snd_ch_cnt,
<a name="l00262"></a>00262                                                  0,
<a name="l00263"></a>00263                                                  &amp;stereo_port);
<a name="l00264"></a>00264             <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00265"></a>00265                 app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to create stereo port&quot;</span>, status);
<a name="l00266"></a>00266                 <span class="keywordflow">return</span> 1;
<a name="l00267"></a>00267             }
<a name="l00268"></a>00268 
<a name="l00269"></a>00269             status = <a class="code" href="group__PJMED__SND__PORT.htm#ga046156b765a34e6c640b0534e6b21f9c">pjmedia_snd_port_connect</a>(snd_port, stereo_port);
<a name="l00270"></a>00270         } <span class="keywordflow">else</span> {
<a name="l00271"></a>00271             status = <a class="code" href="group__PJMED__SND__PORT.htm#ga046156b765a34e6c640b0534e6b21f9c">pjmedia_snd_port_connect</a>(snd_port, file_port);
<a name="l00272"></a>00272         }
<a name="l00273"></a>00273 
<a name="l00274"></a>00274         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00275"></a>00275             app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to connect sound port&quot;</span>, status);
<a name="l00276"></a>00276             <span class="keywordflow">return</span> 1;
<a name="l00277"></a>00277         }
<a name="l00278"></a>00278     }
<a name="l00279"></a>00279 
<a name="l00280"></a>00280     <span class="comment">/* Dump memory usage */</span>
<a name="l00281"></a>00281     dump_pool_usage(THIS_FILE, &amp;cp);
<a name="l00282"></a>00282 
<a name="l00283"></a>00283     <span class="comment">/* </span>
<a name="l00284"></a>00284 <span class="comment">     * File should be playing and looping now, using sound device&#39;s thread. </span>
<a name="l00285"></a>00285 <span class="comment">     */</span>
<a name="l00286"></a>00286 
<a name="l00287"></a>00287 
<a name="l00288"></a>00288     <span class="comment">/* Sleep to allow log messages to flush */</span>
<a name="l00289"></a>00289     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep</a>(100);
<a name="l00290"></a>00290 
<a name="l00291"></a>00291     printf(<span class="stringliteral">&quot;Mode = %s\n&quot;</span>, (mode == MODE_PLAY? <span class="stringliteral">&quot;playing&quot;</span> : <span class="stringliteral">&quot;recording&quot;</span>) );
<a name="l00292"></a>00292     printf(<span class="stringliteral">&quot;File  port channel count = %d\n&quot;</span>, file_port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a>);
<a name="l00293"></a>00293     printf(<span class="stringliteral">&quot;Sound port channel count = %d\n&quot;</span>, 
<a name="l00294"></a>00294            <a class="code" href="group__PJMED__SND__PORT.htm#gabf7bb3a164219b3a00ff11f8d8e2f433">pjmedia_snd_port_get_port</a>(snd_port)-&gt;info.<a class="code" href="structpjmedia__conf__port__info.htm#a40b54c0cfd081011c5f46c136493b140">channel_count</a>);
<a name="l00295"></a>00295     puts(<span class="stringliteral">&quot;&quot;</span>);
<a name="l00296"></a>00296     puts(<span class="stringliteral">&quot;Press &lt;ENTER&gt; to stop and quit&quot;</span>);
<a name="l00297"></a>00297 
<a name="l00298"></a>00298     <span class="keywordflow">if</span> (fgets(tmp, <span class="keyword">sizeof</span>(tmp), stdin) == NULL) {
<a name="l00299"></a>00299         puts(<span class="stringliteral">&quot;EOF while reading stdin, will quit now..&quot;</span>);
<a name="l00300"></a>00300     }
<a name="l00301"></a>00301     
<a name="l00302"></a>00302     <span class="comment">/* Start deinitialization: */</span>
<a name="l00303"></a>00303 
<a name="l00304"></a>00304 
<a name="l00305"></a>00305     <span class="comment">/* Destroy sound device */</span>
<a name="l00306"></a>00306     status = <a class="code" href="group__PJMED__SND__PORT.htm#gabf940770326a67c49e59f731e851307b">pjmedia_snd_port_destroy</a>( snd_port );
<a name="l00307"></a>00307     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00308"></a>00308 
<a name="l00309"></a>00309 
<a name="l00310"></a>00310     <span class="comment">/* Destroy stereo port and file_port. </span>
<a name="l00311"></a>00311 <span class="comment">     * Stereo port will destroy all downstream ports (e.g. the file port)</span>
<a name="l00312"></a>00312 <span class="comment">     */</span>
<a name="l00313"></a>00313     status = <a class="code" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy</a>( stereo_port? stereo_port : file_port);
<a name="l00314"></a>00314     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00315"></a>00315 
<a name="l00316"></a>00316 
<a name="l00317"></a>00317     <span class="comment">/* Release application pool */</span>
<a name="l00318"></a>00318     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gade0f14f6635ecfccb576ec41c57fede5">pj_pool_release</a>( pool );
<a name="l00319"></a>00319 
<a name="l00320"></a>00320     <span class="comment">/* Destroy media endpoint. */</span>
<a name="l00321"></a>00321     <a class="code" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy</a>( med_endpt );
<a name="l00322"></a>00322 
<a name="l00323"></a>00323     <span class="comment">/* Destroy pool factory */</span>
<a name="l00324"></a>00324     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#ga4c912e7d9e08dae33c2fecea9f1949bc">pj_caching_pool_destroy</a>( &amp;cp );
<a name="l00325"></a>00325 
<a name="l00326"></a>00326     <span class="comment">/* Shutdown PJLIB */</span>
<a name="l00327"></a>00327     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gad42209dcf11f957ed9f1790e30f519cd">pj_shutdown</a>();
<a name="l00328"></a>00328 
<a name="l00329"></a>00329 
<a name="l00330"></a>00330     <span class="comment">/* Done. */</span>
<a name="l00331"></a>00331     <span class="keywordflow">return</span> 0;
<a name="l00332"></a>00332 
<a name="l00333"></a>00333 }
<a name="l00334"></a>00334 
<a name="l00335"></a>00335 
<a name="l00336"></a>00336 
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
