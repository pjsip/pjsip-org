<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: SDP Parsing and Data Structure (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>SDP Parsing and Data Structure<br/>
<small>
[<a class="el" href="group__PJMEDIA__SESSION.htm">Media Sessions</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>SDP data structure representation and parsing.  
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__rtpmap.htm">pjmedia_sdp_rtpmap</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__fmtp.htm">pjmedia_sdp_fmtp</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__rtcp__attr.htm">pjmedia_sdp_rtcp_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__conn.htm">pjmedia_sdp_conn</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__bandw.htm">pjmedia_sdp_bandw</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga8ef8ceda820f28c63715192c5386dc80">PJMEDIA_MAX_SDP_FMT</a>&nbsp;&nbsp;&nbsp;32</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gaef9d9f666903124e4d32a52de5c8b0e0">PJMEDIA_MAX_SDP_BANDW</a>&nbsp;&nbsp;&nbsp;4</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga35d1ce4bc904c83838c875e34e4dbad1">PJMEDIA_MAX_SDP_ATTR</a>&nbsp;&nbsp;&nbsp;(PJMEDIA_MAX_SDP_FMT*2 + 4)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gad64f5e3f35c3729b9a4cf15f9747ba31">PJMEDIA_MAX_SDP_MEDIA</a>&nbsp;&nbsp;&nbsp;16</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga6cc77b0d32fce4ef222e4e323c5c949e">pjmedia_sdp_attr_create</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const char *name, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga6a85a3a44fd54c902f07e8eb38678f85">pjmedia_sdp_attr_clone</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gaa12958104e7fda2431568e92836477ab">pjmedia_sdp_attr_find</a> (unsigned count, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *const attr_array[], const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *fmt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga5045d9902577fef9a1734968d568cb15">pjmedia_sdp_attr_find2</a> (unsigned count, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *const attr_array[], const char *name, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *fmt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga875d191f0be379e77f08384c02a3b53c">pjmedia_sdp_attr_add</a> (unsigned *count, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr_array[], <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gaacc5b07429bd98a7e0ffc8f681bd68a2">pjmedia_sdp_attr_remove_all</a> (unsigned *count, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr_array[], const char *name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gad43953af0e633dd739ea533ca6bf1f52">pjmedia_sdp_attr_remove</a> (unsigned *count, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr_array[], <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gadcce23524b5a10e97fdce151ffa10910">pjmedia_sdp_attr_to_rtpmap</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr, <a class="el" href="structpjmedia__sdp__rtpmap.htm">pjmedia_sdp_rtpmap</a> **p_rtpmap)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga7537c8ba7767d73f61267b30defe4665">pjmedia_sdp_attr_get_rtpmap</a> (const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr, <a class="el" href="structpjmedia__sdp__rtpmap.htm">pjmedia_sdp_rtpmap</a> *rtpmap)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga35e2836c8694c99c0a8f5acf46a0afe8">pjmedia_sdp_rtpmap_to_attr</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__rtpmap.htm">pjmedia_sdp_rtpmap</a> *rtpmap, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga82a9d0fac96bfe987f6c157455dfe53f">pjmedia_sdp_attr_get_fmtp</a> (const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr, <a class="el" href="structpjmedia__sdp__fmtp.htm">pjmedia_sdp_fmtp</a> *fmtp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gaa0895ca191888dc4e2ee477ab4c72fdb">pjmedia_sdp_attr_get_rtcp</a> (const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr, <a class="el" href="structpjmedia__sdp__rtcp__attr.htm">pjmedia_sdp_rtcp_attr</a> *rtcp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga062fd46d4bd17fee3c7543d6182a46b7">pjmedia_sdp_attr_create_rtcp</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__conn.htm">pjmedia_sdp_conn</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga9470889d484f2b75f09175355e511460">pjmedia_sdp_conn_clone</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__conn.htm">pjmedia_sdp_conn</a> *rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__bandw.htm">pjmedia_sdp_bandw</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga5e34e072bad2078d6c9371c51890848f">pjmedia_sdp_bandw_clone</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__bandw.htm">pjmedia_sdp_bandw</a> *rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga5b1d198d7a0afb395c1f6b567981c93c">pjmedia_sdp_media_clone</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga7c14e1f8f1c4119c89634212d9902fe9">pjmedia_sdp_media_find_attr</a> (const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *m, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *name, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *fmt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga6be716e2b53b35b00898b017601b174a">pjmedia_sdp_media_find_attr2</a> (const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *m, const char *name, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *fmt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga58ed08f1ff3457e6e12840bea8fd7f68">pjmedia_sdp_media_add_attr</a> (<a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *m, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga6badfa57e50747978f6c338e5bbeda37">pjmedia_sdp_media_remove_all_attr</a> (<a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *m, const char *name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga6a37a45ebbf6127b21e90341d3b16033">pjmedia_sdp_media_remove_attr</a> (<a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *m, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga6f70445a07aceaa8025fd71254c99da0">pjmedia_sdp_media_cmp</a> (const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *sd1, const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *sd2, unsigned option)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gac78a797d82c2aa938e3fa4250294f190">pjmedia_sdp_transport_cmp</a> (const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *t1, const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *t2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gac578b596162c05af66533b64be75ae0a">pjmedia_sdp_media_deactivate</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *m)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga494ddd7a27fb056f01d389829bd8c405">pjmedia_sdp_media_clone_deactivate</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga11acd6dd72b802c0133848ca83ace3b1">pjmedia_sdp_parse</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, char *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> len, <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> **p_sdp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gaf2325de9acf6effdfb92491ed3e9b881">pjmedia_sdp_print</a> (const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, char *buf, <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga4a5d8813207a21dbf23a8165de62dfd0">pjmedia_sdp_validate</a> (const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga0aee30f74f9e6357feaa3843cb783f93">pjmedia_sdp_session_clone</a> (<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#ga54ebb8bba13af6b83931f1ae83dc8fbe">pjmedia_sdp_session_cmp</a> (const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sd1, const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sd2, unsigned option)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__SDP.htm#gabe7f905a92c7c367ace234dbaa2ae30d">pjmedia_sdp_session_add_attr</a> (<a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *s, <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *attr)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>The basic SDP session descriptor and elements are described in header file <b>&lt;<a class="el" href="sdp_8h.htm" title="SDP header file.">pjmedia/sdp.h</a>&gt;</b>. This file contains declaration for SDP session descriptor and SDP media descriptor, along with their attributes. This file also declares functions to parse SDP message. </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga8ef8ceda820f28c63715192c5386dc80"></a><!-- doxytag: member="sdp.h::PJMEDIA_MAX_SDP_FMT" ref="ga8ef8ceda820f28c63715192c5386dc80" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_MAX_SDP_FMT&nbsp;&nbsp;&nbsp;32</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The PJMEDIA_MAX_SDP_FMT macro defines maximum format in a media line. </p>

</div>
</div>
<a class="anchor" id="gaef9d9f666903124e4d32a52de5c8b0e0"></a><!-- doxytag: member="sdp.h::PJMEDIA_MAX_SDP_BANDW" ref="gaef9d9f666903124e4d32a52de5c8b0e0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_MAX_SDP_BANDW&nbsp;&nbsp;&nbsp;4</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The PJMEDIA_MAX_SDP_BANDW macro defines maximum bandwidth information lines in a media line. </p>

</div>
</div>
<a class="anchor" id="ga35d1ce4bc904c83838c875e34e4dbad1"></a><!-- doxytag: member="sdp.h::PJMEDIA_MAX_SDP_ATTR" ref="ga35d1ce4bc904c83838c875e34e4dbad1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_MAX_SDP_ATTR&nbsp;&nbsp;&nbsp;(PJMEDIA_MAX_SDP_FMT*2 + 4)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The PJMEDIA_MAX_SDP_ATTR macro defines maximum SDP attributes in media and session descriptor. </p>

</div>
</div>
<a class="anchor" id="gad64f5e3f35c3729b9a4cf15f9747ba31"></a><!-- doxytag: member="sdp.h::PJMEDIA_MAX_SDP_MEDIA" ref="gad64f5e3f35c3729b9a4cf15f9747ba31" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJMEDIA_MAX_SDP_MEDIA&nbsp;&nbsp;&nbsp;16</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The PJMEDIA_MAX_SDP_MEDIA macro defines maximum SDP media lines in a SDP session descriptor. </p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga6cc77b0d32fce4ef222e4e323c5c949e"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_create" ref="ga6cc77b0d32fce4ef222e4e323c5c949e" args="(pj_pool_t *pool, const char *name, const pj_str_t *value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a>* pjmedia_sdp_attr_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create SDP attribute.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to create the attribute. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Attribute name. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Optional attribute value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The new SDP attribute. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6a85a3a44fd54c902f07e8eb38678f85"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_clone" ref="ga6a85a3a44fd54c902f07e8eb38678f85" args="(pj_pool_t *pool, const pjmedia_sdp_attr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a>* pjmedia_sdp_attr_clone </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone attribute</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to be used. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>The attribute to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>New attribute as cloned from the attribute. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa12958104e7fda2431568e92836477ab"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_find" ref="gaa12958104e7fda2431568e92836477ab" args="(unsigned count, pjmedia_sdp_attr *const attr_array[], const pj_str_t *name, const pj_str_t *fmt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a>* pjmedia_sdp_attr_find </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *const &nbsp;</td>
          <td class="paramname"> <em>attr_array</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>fmt</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find the first attribute with the specified type.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>Number of attributes in the array. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr_array</em>&nbsp;</td><td>Array of attributes. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Attribute name to find. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fmt</em>&nbsp;</td><td>Optional string to indicate which payload format to find for <em>rtpmap</em> and <em>fmt</em> attributes. For other types of attributes, the value should be NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The specified attribute, or NULL if it can't be found.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJMEDIA__SDP.htm#ga5045d9902577fef9a1734968d568cb15">pjmedia_sdp_attr_find2</a>, <a class="el" href="group__PJMEDIA__SDP.htm#ga7c14e1f8f1c4119c89634212d9902fe9">pjmedia_sdp_media_find_attr</a>, <a class="el" href="group__PJMEDIA__SDP.htm#ga6be716e2b53b35b00898b017601b174a">pjmedia_sdp_media_find_attr2</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga5045d9902577fef9a1734968d568cb15"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_find2" ref="ga5045d9902577fef9a1734968d568cb15" args="(unsigned count, pjmedia_sdp_attr *const attr_array[], const char *name, const pj_str_t *fmt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a>* pjmedia_sdp_attr_find2 </td>
          <td>(</td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *const &nbsp;</td>
          <td class="paramname"> <em>attr_array</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>fmt</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find the first attribute with the specified type.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>Number of attributes in the array. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr_array</em>&nbsp;</td><td>Array of attributes. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Attribute name to find. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fmt</em>&nbsp;</td><td>Optional string to indicate which payload format to find for <em>rtpmap</em> and <em>fmt</em> attributes. For other types of attributes, the value should be NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The specified attribute, or NULL if it can't be found.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJMEDIA__SDP.htm#gaa12958104e7fda2431568e92836477ab">pjmedia_sdp_attr_find</a>, <a class="el" href="group__PJMEDIA__SDP.htm#ga7c14e1f8f1c4119c89634212d9902fe9">pjmedia_sdp_media_find_attr</a>, <a class="el" href="group__PJMEDIA__SDP.htm#ga6be716e2b53b35b00898b017601b174a">pjmedia_sdp_media_find_attr2</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga875d191f0be379e77f08384c02a3b53c"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_add" ref="ga875d191f0be379e77f08384c02a3b53c" args="(unsigned *count, pjmedia_sdp_attr *attr_array[], pjmedia_sdp_attr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_attr_add </td>
          <td>(</td>
          <td class="paramtype">unsigned *&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr_array</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Add a new attribute to array of attributes.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>Number of attributes in the array. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr_array</em>&nbsp;</td><td>Array of attributes. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>The attribute to add.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the error code.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJMEDIA__SDP.htm#ga58ed08f1ff3457e6e12840bea8fd7f68">pjmedia_sdp_media_add_attr</a> </dd></dl>

</div>
</div>
<a class="anchor" id="gaacc5b07429bd98a7e0ffc8f681bd68a2"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_remove_all" ref="gaacc5b07429bd98a7e0ffc8f681bd68a2" args="(unsigned *count, pjmedia_sdp_attr *attr_array[], const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pjmedia_sdp_attr_remove_all </td>
          <td>(</td>
          <td class="paramtype">unsigned *&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr_array</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remove all attributes with the specified name in array of attributes.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>Number of attributes in the array. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr_array</em>&nbsp;</td><td>Array of attributes. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Attribute name to find.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Number of attributes removed.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJMEDIA__SDP.htm#ga6badfa57e50747978f6c338e5bbeda37">pjmedia_sdp_media_remove_all_attr</a> </dd></dl>

</div>
</div>
<a class="anchor" id="gad43953af0e633dd739ea533ca6bf1f52"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_remove" ref="gad43953af0e633dd739ea533ca6bf1f52" args="(unsigned *count, pjmedia_sdp_attr *attr_array[], pjmedia_sdp_attr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_attr_remove </td>
          <td>(</td>
          <td class="paramtype">unsigned *&nbsp;</td>
          <td class="paramname"> <em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr_array</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remove the specified attribute from the attribute array.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>Number of attributes in the array. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr_array</em>&nbsp;</td><td>Array of attributes. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>The attribute instance to remove.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when attribute has been removed, or PJ_ENOTFOUND when the attribute can not be found.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJMEDIA__SDP.htm#ga6a37a45ebbf6127b21e90341d3b16033">pjmedia_sdp_media_remove_attr</a> </dd></dl>

</div>
</div>
<a class="anchor" id="gadcce23524b5a10e97fdce151ffa10910"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_to_rtpmap" ref="gadcce23524b5a10e97fdce151ffa10910" args="(pj_pool_t *pool, const pjmedia_sdp_attr *attr, pjmedia_sdp_rtpmap **p_rtpmap)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_attr_to_rtpmap </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__rtpmap.htm">pjmedia_sdp_rtpmap</a> **&nbsp;</td>
          <td class="paramname"> <em>p_rtpmap</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convert generic attribute to SDP <em>rtpmap</em>. This function allocates a new attribute and call <a class="el" href="group__PJMEDIA__SDP.htm#ga7537c8ba7767d73f61267b30defe4665">pjmedia_sdp_attr_get_rtpmap()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool used to create the rtpmap attribute. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>Generic attribute to be converted to rtpmap, which name must be "rtpmap". </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_rtpmap</em>&nbsp;</td><td>Pointer to receive SDP rtpmap attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if the attribute can be successfully converted to <em>rtpmap</em> type.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJMEDIA__SDP.htm#ga7537c8ba7767d73f61267b30defe4665">pjmedia_sdp_attr_get_rtpmap</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga7537c8ba7767d73f61267b30defe4665"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_get_rtpmap" ref="ga7537c8ba7767d73f61267b30defe4665" args="(const pjmedia_sdp_attr *attr, pjmedia_sdp_rtpmap *rtpmap)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_attr_get_rtpmap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__rtpmap.htm">pjmedia_sdp_rtpmap</a> *&nbsp;</td>
          <td class="paramname"> <em>rtpmap</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the rtpmap representation of the same SDP attribute.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>Generic attribute to be converted to rtpmap, which name must be "rtpmap". </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rtpmap</em>&nbsp;</td><td>SDP <em>rtpmap</em> attribute to be initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if the attribute can be successfully converted to <em>rtpmap</em> attribute.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="group__PJMEDIA__SDP.htm#gadcce23524b5a10e97fdce151ffa10910">pjmedia_sdp_attr_to_rtpmap</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga35e2836c8694c99c0a8f5acf46a0afe8"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_rtpmap_to_attr" ref="ga35e2836c8694c99c0a8f5acf46a0afe8" args="(pj_pool_t *pool, const pjmedia_sdp_rtpmap *rtpmap, pjmedia_sdp_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_rtpmap_to_attr </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__rtpmap.htm">pjmedia_sdp_rtpmap</a> *&nbsp;</td>
          <td class="paramname"> <em>rtpmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> **&nbsp;</td>
          <td class="paramname"> <em>p_attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convert <em>rtpmap</em> attribute to generic attribute.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to be used. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rtpmap</em>&nbsp;</td><td>The <em>rtpmap</em> attribute. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_attr</em>&nbsp;</td><td>Pointer to receive the generic SDP attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga82a9d0fac96bfe987f6c157455dfe53f"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_get_fmtp" ref="ga82a9d0fac96bfe987f6c157455dfe53f" args="(const pjmedia_sdp_attr *attr, pjmedia_sdp_fmtp *fmtp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_attr_get_fmtp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__fmtp.htm">pjmedia_sdp_fmtp</a> *&nbsp;</td>
          <td class="paramname"> <em>fmtp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the fmtp representation of the same SDP attribute.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>Generic attribute to be converted to fmtp, which name must be "fmtp". </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fmtp</em>&nbsp;</td><td>SDP fmtp attribute to be initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa0895ca191888dc4e2ee477ab4c72fdb"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_get_rtcp" ref="gaa0895ca191888dc4e2ee477ab4c72fdb" args="(const pjmedia_sdp_attr *attr, pjmedia_sdp_rtcp_attr *rtcp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_attr_get_rtcp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__rtcp__attr.htm">pjmedia_sdp_rtcp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>rtcp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse a generic SDP attribute to get SDP rtcp attribute values.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>Generic attribute to be converted to rtcp, which name must be "rtcp". </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rtcp</em>&nbsp;</td><td>SDP rtcp attribute to be initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga062fd46d4bd17fee3c7543d6182a46b7"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_attr_create_rtcp" ref="ga062fd46d4bd17fee3c7543d6182a46b7" args="(pj_pool_t *pool, const pj_sockaddr *a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a>* pjmedia_sdp_attr_create_rtcp </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *&nbsp;</td>
          <td class="paramname"> <em>a</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a=rtcp attribute.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to create the attribute. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>a</em>&nbsp;</td><td>Socket address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>SDP RTCP attribute. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9470889d484f2b75f09175355e511460"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_conn_clone" ref="ga9470889d484f2b75f09175355e511460" args="(pj_pool_t *pool, const pjmedia_sdp_conn *rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__conn.htm">pjmedia_sdp_conn</a>* pjmedia_sdp_conn_clone </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__conn.htm">pjmedia_sdp_conn</a> *&nbsp;</td>
          <td class="paramname"> <em>rhs</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone connection info.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to allocate memory for the new connection info. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rhs</em>&nbsp;</td><td>The connection into to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The new connection info. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5e34e072bad2078d6c9371c51890848f"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_bandw_clone" ref="ga5e34e072bad2078d6c9371c51890848f" args="(pj_pool_t *pool, const pjmedia_sdp_bandw *rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__bandw.htm">pjmedia_sdp_bandw</a>* pjmedia_sdp_bandw_clone </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__bandw.htm">pjmedia_sdp_bandw</a> *&nbsp;</td>
          <td class="paramname"> <em>rhs</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone bandwidth info.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to allocate memory for the new bandwidth info. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rhs</em>&nbsp;</td><td>The bandwidth into to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The new bandwidth info. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5b1d198d7a0afb395c1f6b567981c93c"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_clone" ref="ga5b1d198d7a0afb395c1f6b567981c93c" args="(pj_pool_t *pool, const pjmedia_sdp_media *rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a>* pjmedia_sdp_media_clone </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>rhs</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone SDP media description.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to allocate memory for the new media description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rhs</em>&nbsp;</td><td>The media descriptin to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>New media description. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7c14e1f8f1c4119c89634212d9902fe9"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_find_attr" ref="ga7c14e1f8f1c4119c89634212d9902fe9" args="(const pjmedia_sdp_media *m, const pj_str_t *name, const pj_str_t *fmt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a>* pjmedia_sdp_media_find_attr </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>fmt</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find the first occurence of the specified attribute name in the media descriptor. Optionally the format may be specified.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>m</em>&nbsp;</td><td>The SDP media description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Attribute name to find. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fmt</em>&nbsp;</td><td>Optional payload type to match in the attribute list, when the attribute is <em>rtpmap</em> or <em>fmtp</em>. For other types of SDP attributes, this value should be NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The first instance of the specified attribute or NULL. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6be716e2b53b35b00898b017601b174a"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_find_attr2" ref="ga6be716e2b53b35b00898b017601b174a" args="(const pjmedia_sdp_media *m, const char *name, const pj_str_t *fmt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a>* pjmedia_sdp_media_find_attr2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>fmt</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find the first occurence of the specified attribute name in the SDP media descriptor. Optionally the format may be specified.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>m</em>&nbsp;</td><td>The SDP media description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Attribute name to find. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fmt</em>&nbsp;</td><td>Optional payload type to match in the attribute list, when the attribute is <em>rtpmap</em> or <em>fmtp</em>. For other types of SDP attributes, this value should be NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The first instance of the specified attribute or NULL. </dd></dl>

</div>
</div>
<a class="anchor" id="ga58ed08f1ff3457e6e12840bea8fd7f68"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_add_attr" ref="ga58ed08f1ff3457e6e12840bea8fd7f68" args="(pjmedia_sdp_media *m, pjmedia_sdp_attr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_media_add_attr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Add new attribute to the media descriptor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>m</em>&nbsp;</td><td>The SDP media description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>Attribute to add.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6badfa57e50747978f6c338e5bbeda37"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_remove_all_attr" ref="ga6badfa57e50747978f6c338e5bbeda37" args="(pjmedia_sdp_media *m, const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pjmedia_sdp_media_remove_all_attr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remove all attributes with the specified name from the SDP media descriptor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>m</em>&nbsp;</td><td>The SDP media description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>Attribute name to remove.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of attributes removed. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6a37a45ebbf6127b21e90341d3b16033"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_remove_attr" ref="ga6a37a45ebbf6127b21e90341d3b16033" args="(pjmedia_sdp_media *m, pjmedia_sdp_attr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_media_remove_attr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remove the occurence of the specified attribute from the SDP media descriptor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>m</em>&nbsp;</td><td>The SDP media descriptor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>The attribute to find and remove.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if the attribute can be found and has been removed from the array. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6f70445a07aceaa8025fd71254c99da0"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_cmp" ref="ga6f70445a07aceaa8025fd71254c99da0" args="(const pjmedia_sdp_media *sd1, const pjmedia_sdp_media *sd2, unsigned option)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_media_cmp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>sd1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>sd2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>option</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Compare two SDP media for equality.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sd1</em>&nbsp;</td><td>The first SDP media to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sd2</em>&nbsp;</td><td>The second SDP media to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>option</em>&nbsp;</td><td>Comparison option, which should be zero for now.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when both SDP medias are equal, or the appropriate status code describing which part of the descriptors that are not equal. </dd></dl>

</div>
</div>
<a class="anchor" id="gac78a797d82c2aa938e3fa4250294f190"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_transport_cmp" ref="gac78a797d82c2aa938e3fa4250294f190" args="(const pj_str_t *t1, const pj_str_t *t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_transport_cmp </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>t1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&nbsp;</td>
          <td class="paramname"> <em>t2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Compare two media transports for compatibility.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>t1</em>&nbsp;</td><td>The first media transport to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>t2</em>&nbsp;</td><td>The second media transport to compare.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when both media transports are compatible, otherwise returns PJMEDIA_SDP_ETPORTNOTEQUAL. </dd></dl>

</div>
</div>
<a class="anchor" id="gac578b596162c05af66533b64be75ae0a"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_deactivate" ref="gac578b596162c05af66533b64be75ae0a" args="(pj_pool_t *pool, pjmedia_sdp_media *m)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_media_deactivate </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>m</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Deactivate SDP media.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Memory pool to allocate memory from. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>m</em>&nbsp;</td><td>The SDP media to deactivate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when SDP media successfully deactivated, otherwise appropriate status code returned. </dd></dl>

</div>
</div>
<a class="anchor" id="ga494ddd7a27fb056f01d389829bd8c405"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_media_clone_deactivate" ref="ga494ddd7a27fb056f01d389829bd8c405" args="(pj_pool_t *pool, const pjmedia_sdp_media *rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a>* pjmedia_sdp_media_clone_deactivate </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> *&nbsp;</td>
          <td class="paramname"> <em>rhs</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone SDP media description and deactivate the new SDP media.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Memory pool to allocate memory for the clone. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rhs</em>&nbsp;</td><td>The SDP media to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>New media descrption with deactivated indication. </dd></dl>

</div>
</div>
<a class="anchor" id="ga11acd6dd72b802c0133848ca83ace3b1"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_parse" ref="ga11acd6dd72b802c0133848ca83ace3b1" args="(pj_pool_t *pool, char *buf, pj_size_t len, pjmedia_sdp_session **p_sdp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_parse </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> **&nbsp;</td>
          <td class="paramname"> <em>p_sdp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Parse SDP message.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool to allocate SDP session description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The message buffer. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>len</em>&nbsp;</td><td>The length of the message. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>p_sdp</em>&nbsp;</td><td>Pointer to receive the SDP session descriptor.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if message was successfully parsed into SDP session descriptor. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf2325de9acf6effdfb92491ed3e9b881"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_print" ref="gaf2325de9acf6effdfb92491ed3e9b881" args="(const pjmedia_sdp_session *sdp, char *buf, pj_size_t size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pjmedia_sdp_print </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Print SDP description to a buffer.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sdp</em>&nbsp;</td><td>The SDP session description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buf</em>&nbsp;</td><td>The buffer. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>The buffer length.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>the length printed, or -1 if the buffer is too short. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4a5d8813207a21dbf23a8165de62dfd0"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_validate" ref="ga4a5d8813207a21dbf23a8165de62dfd0" args="(const pjmedia_sdp_session *sdp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>sdp</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Perform semantic validation for the specified SDP session descriptor. This function perform validation beyond just syntactic verification, such as to verify the value of network type and address type, check the connection line, and verify that <em>rtpmap</em> attribute is present when dynamic payload type is used.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sdp</em>&nbsp;</td><td>The SDP session descriptor to validate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0aee30f74f9e6357feaa3843cb783f93"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_session_clone" ref="ga0aee30f74f9e6357feaa3843cb783f93" args="(pj_pool_t *pool, const pjmedia_sdp_session *sdp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a>* pjmedia_sdp_session_clone </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>sdp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone SDP session descriptor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>The pool used to clone the session. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sdp</em>&nbsp;</td><td>The SDP session to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>New SDP session. </dd></dl>

</div>
</div>
<a class="anchor" id="ga54ebb8bba13af6b83931f1ae83dc8fbe"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_session_cmp" ref="ga54ebb8bba13af6b83931f1ae83dc8fbe" args="(const pjmedia_sdp_session *sd1, const pjmedia_sdp_session *sd2, unsigned option)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_session_cmp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>sd1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>sd2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>option</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Compare two SDP session for equality.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>sd1</em>&nbsp;</td><td>The first SDP session to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>sd2</em>&nbsp;</td><td>The second SDP session to compare. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>option</em>&nbsp;</td><td>Must be zero for now.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS when both SDPs are equal, or otherwise the status code indicates which part of the session descriptors are not equal. </dd></dl>

</div>
</div>
<a class="anchor" id="gabe7f905a92c7c367ace234dbaa2ae30d"></a><!-- doxytag: member="sdp.h::pjmedia_sdp_session_add_attr" ref="gabe7f905a92c7c367ace234dbaa2ae30d" args="(pjmedia_sdp_session *s, pjmedia_sdp_attr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_sdp_session_add_attr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&nbsp;</td>
          <td class="paramname"> <em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__attr.htm">pjmedia_sdp_attr</a> *&nbsp;</td>
          <td class="paramname"> <em>attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Add new attribute to the session descriptor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>s</em>&nbsp;</td><td>The SDP session description. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>attr</em>&nbsp;</td><td>Attribute to add.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
