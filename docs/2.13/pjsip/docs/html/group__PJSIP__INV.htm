<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>INVITE Session (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">INVITE Session<div class="ingroups"><a class="el" href="group__PJSIP__HIGH__UA.htm">User Agent Library</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Provides INVITE session management.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__inv__on__rx__offer__cb__param.htm">pjsip_inv_on_rx_offer_cb_param</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__inv__callback.htm">pjsip_inv_callback</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gae15c49faf8faccb855f10add6722a932"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gae15c49faf8faccb855f10add6722a932">pjsip_rdata_sdp_info</a></td></tr>
<tr class="separator:gae15c49faf8faccb855f10add6722a932"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47d23bd3139af4524c298cb0ba009f5d"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga47d23bd3139af4524c298cb0ba009f5d">pjsip_tdata_sdp_info</a></td></tr>
<tr class="separator:ga47d23bd3139af4524c298cb0ba009f5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga083ffd9c75c406c41f113479cc1ebc1c"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga083ffd9c75c406c41f113479cc1ebc1c">pjsip_inv_state</a> { <br />
&#160;&#160;<a class="el" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1ca95e8d024a5da4bee2c70c377c8b41a9a">PJSIP_INV_STATE_NULL</a>
, <a class="el" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1ca2887c717289ddf3801758c0631c5f8dc">PJSIP_INV_STATE_CALLING</a>
, <a class="el" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1cabb5da59ed053d8e6411aae718880cc20">PJSIP_INV_STATE_INCOMING</a>
, <a class="el" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1ca6c887e56774f6d1fd3527cb55b3843fd">PJSIP_INV_STATE_EARLY</a>
, <br />
&#160;&#160;<a class="el" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1cac40d6e9e47c32fa3fc3a13310c55fb35">PJSIP_INV_STATE_CONNECTING</a>
, <a class="el" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1caf5c664d1b367a44db04f2cca09f6155b">PJSIP_INV_STATE_CONFIRMED</a>
, <a class="el" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1caab482bbbe77ed88994a790bd6abcc1c5">PJSIP_INV_STATE_DISCONNECTED</a>
<br />
 }</td></tr>
<tr class="separator:ga083ffd9c75c406c41f113479cc1ebc1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga06d359a886069c33569369b4e2ee28ff"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga06d359a886069c33569369b4e2ee28ff">pjsip_inv_option</a> { <br />
&#160;&#160;<a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffafd7239dc6f3470583f201ed33f39bd89">PJSIP_INV_SUPPORT_100REL</a> = 1
, <a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffa079ad3ffc3e62fbc0188131616fd199a">PJSIP_INV_SUPPORT_TIMER</a> = 2
, <a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffa39d165f584a747d15f41e31cb8eaa941">PJSIP_INV_SUPPORT_UPDATE</a> = 4
, <a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffa015f74bd1fecaec00772526cc4064b59">PJSIP_INV_SUPPORT_ICE</a> = 8
, <br />
&#160;&#160;<a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffab877f04ce7737c33b1a0ae49950443e3">PJSIP_INV_REQUIRE_ICE</a> = 16
, <a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffaaa7c9a3cc09ec7426e727c2fbb2c7578">PJSIP_INV_REQUIRE_100REL</a> = 32
, <a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffa8d00a2238859c24738ec02be82a15002">PJSIP_INV_REQUIRE_TIMER</a> = 64
, <a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffa566f16f6fcd21a60c7948fb86f34e2ad">PJSIP_INV_ALWAYS_USE_TIMER</a> = 128
, <br />
&#160;&#160;<a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffa790cb106e8424b685fafb295e1441ee5">PJSIP_INV_SUPPORT_TRICKLE_ICE</a> = 256
, <a class="el" href="group__PJSIP__INV.htm#gga06d359a886069c33569369b4e2ee28ffa7255139e8dc036e741dfeb80c401c844">PJSIP_INV_REQUIRE_TRICKLE_ICE</a> = 512
<br />
 }</td></tr>
<tr class="separator:ga06d359a886069c33569369b4e2ee28ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gafd8e278e13d53c78ec6f4dabc2ba2a04"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gafd8e278e13d53c78ec6f4dabc2ba2a04">pjsip_inv_usage_init</a> (<a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, const <a class="el" href="structpjsip__inv__callback.htm">pjsip_inv_callback</a> *cb)</td></tr>
<tr class="separator:gafd8e278e13d53c78ec6f4dabc2ba2a04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf1fa74b073c2e1360db9a8cb7f350b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__module.htm">pjsip_module</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gabf1fa74b073c2e1360db9a8cb7f350b9">pjsip_inv_usage_instance</a> (void)</td></tr>
<tr class="separator:gabf1fa74b073c2e1360db9a8cb7f350b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04604e2269c688bfae5d553180e3fc8f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga04604e2269c688bfae5d553180e3fc8f">pjsip_inv_usage_dump</a> (void)</td></tr>
<tr class="separator:ga04604e2269c688bfae5d553180e3fc8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a0312d7ff604f9fd7308bbcdb1e08c7"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga5a0312d7ff604f9fd7308bbcdb1e08c7">pjsip_inv_create_uac</a> (<a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *local_sdp, unsigned options, <a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> **p_inv)</td></tr>
<tr class="separator:ga5a0312d7ff604f9fd7308bbcdb1e08c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1ec4917f8f7c7376a6ea49201045ddf"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gac1ec4917f8f7c7376a6ea49201045ddf">pjsip_inv_verify_request</a> (<a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, unsigned *options, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, <a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg, <a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **tdata)</td></tr>
<tr class="separator:gac1ec4917f8f7c7376a6ea49201045ddf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae22a23a61eda1396a3341a68c272459b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gae22a23a61eda1396a3341a68c272459b">pjsip_inv_verify_request2</a> (<a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, unsigned *options, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *offer, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *answer, <a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg, <a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **tdata)</td></tr>
<tr class="separator:gae22a23a61eda1396a3341a68c272459b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92746552a8b978ea8ef901ecd849d64d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga92746552a8b978ea8ef901ecd849d64d">pjsip_inv_verify_request3</a> (<a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *tmp_pool, unsigned *options, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *offer, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *answer, <a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg, <a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *endpt, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **tdata)</td></tr>
<tr class="separator:ga92746552a8b978ea8ef901ecd849d64d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga446995d30676e2f47279056793756f0e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga446995d30676e2f47279056793756f0e">pjsip_inv_create_uas</a> (<a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *local_sdp, unsigned options, <a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> **p_inv)</td></tr>
<tr class="separator:ga446995d30676e2f47279056793756f0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaadde3fa16c72221266a4cae1e1365a7"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gaaadde3fa16c72221266a4cae1e1365a7">pjsip_inv_add_ref</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv)</td></tr>
<tr class="separator:gaaadde3fa16c72221266a4cae1e1365a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4571e493576c8025f7f881d35999c4a"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gae4571e493576c8025f7f881d35999c4a">pjsip_inv_dec_ref</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv)</td></tr>
<tr class="separator:gae4571e493576c8025f7f881d35999c4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd08039422a44bfcad8a9fc09f5d10f7"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gadd08039422a44bfcad8a9fc09f5d10f7">pjsip_inv_terminate</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, int st_code, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> notify)</td></tr>
<tr class="separator:gadd08039422a44bfcad8a9fc09f5d10f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8af665ba4b5eabdbcd72cd73bfc3a8e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gad8af665ba4b5eabdbcd72cd73bfc3a8e">pjsip_inv_uac_restart</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> new_offer)</td></tr>
<tr class="separator:gad8af665ba4b5eabdbcd72cd73bfc3a8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabbba2ef44235adfc49911b729010073f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gabbba2ef44235adfc49911b729010073f">pjsip_inv_process_redirect</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="el" href="group__PJSIP__ENDPT__TARGET__URI.htm#gaa99c427ca4668e49f1c3f6e25b10516c">pjsip_redirect_op</a> cmd, <a class="el" href="structpjsip__event.htm">pjsip_event</a> *e)</td></tr>
<tr class="separator:gabbba2ef44235adfc49911b729010073f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga729c006bbc8076e88ab8337754d2319e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga729c006bbc8076e88ab8337754d2319e">pjsip_inv_invite</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga729c006bbc8076e88ab8337754d2319e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7dbf4062678f4a75c3ba15f5b7a81ebf"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga7dbf4062678f4a75c3ba15f5b7a81ebf">pjsip_inv_initial_answer</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, int st_code, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga7dbf4062678f4a75c3ba15f5b7a81ebf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2ec8b6d5c6b02f65c979eea05f82f61"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gad2ec8b6d5c6b02f65c979eea05f82f61">pjsip_inv_answer</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, int st_code, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *local_sdp, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:gad2ec8b6d5c6b02f65c979eea05f82f61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7e49d4115263d1ca11fa6fa399c5a93"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gab7e49d4115263d1ca11fa6fa399c5a93">pjsip_inv_set_local_sdp</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp)</td></tr>
<tr class="separator:gab7e49d4115263d1ca11fa6fa399c5a93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaeb5c21d71241a68497079cf9c4c2af5"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gaaeb5c21d71241a68497079cf9c4c2af5">pjsip_inv_set_sdp_answer</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp)</td></tr>
<tr class="separator:gaaeb5c21d71241a68497079cf9c4c2af5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a7982ae0f381b057b6c06a99ca87275"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga2a7982ae0f381b057b6c06a99ca87275">pjsip_inv_end_session</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, int st_code, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *st_text, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga2a7982ae0f381b057b6c06a99ca87275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb6c60f02187eb0491c2e9d004d4cb6b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gacb6c60f02187eb0491c2e9d004d4cb6b">pjsip_inv_cancel_reinvite</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:gacb6c60f02187eb0491c2e9d004d4cb6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f7f847cbb1135ca5c023f2ee0687be8"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga7f7f847cbb1135ca5c023f2ee0687be8">pjsip_inv_reinvite</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *new_contact, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *new_offer, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga7f7f847cbb1135ca5c023f2ee0687be8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21683fbbab2f90861591e30d737a6e9b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga21683fbbab2f90861591e30d737a6e9b">pjsip_inv_update</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *new_contact, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *offer, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga21683fbbab2f90861591e30d737a6e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b60e9a2057483db3816ccbd4bf2d945"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga4b60e9a2057483db3816ccbd4bf2d945">pjsip_inv_create_ack</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, int cseq, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **p_tdata)</td></tr>
<tr class="separator:ga4b60e9a2057483db3816ccbd4bf2d945"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b80fd8a5a89df2228b681f141c1ebd9"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga0b80fd8a5a89df2228b681f141c1ebd9">pjsip_inv_send_msg</a> (<a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata)</td></tr>
<tr class="separator:ga0b80fd8a5a89df2228b681f141c1ebd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8780a37f0950c8f33005eebf1b9c0ba7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga8780a37f0950c8f33005eebf1b9c0ba7">pjsip_dlg_get_inv_session</a> (<a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg)</td></tr>
<tr class="separator:ga8780a37f0950c8f33005eebf1b9c0ba7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ab43f3d40f6ca4ebf1591d20528e62c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga3ab43f3d40f6ca4ebf1591d20528e62c">pjsip_tsx_get_inv_session</a> (<a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx)</td></tr>
<tr class="separator:ga3ab43f3d40f6ca4ebf1591d20528e62c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26e71648743ec8d1c008db61304a4c70"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga26e71648743ec8d1c008db61304a4c70">pjsip_inv_state_name</a> (<a class="el" href="group__PJSIP__INV.htm#ga083ffd9c75c406c41f113479cc1ebc1c">pjsip_inv_state</a> state)</td></tr>
<tr class="separator:ga26e71648743ec8d1c008db61304a4c70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb56916cdf65edcc0e6e8c3d1175ab0d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gabb56916cdf65edcc0e6e8c3d1175ab0d">pjsip_create_sdp_body</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **p_body)</td></tr>
<tr class="separator:gabb56916cdf65edcc0e6e8c3d1175ab0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf9575ddc9b5bdf1670c97d44a5bc88ee"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gaf9575ddc9b5bdf1670c97d44a5bc88ee">pjsip_create_multipart_sdp_body</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *sdp, <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **p_body)</td></tr>
<tr class="separator:gaf9575ddc9b5bdf1670c97d44a5bc88ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga463915a39b8b124a043d2300f821d549"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga463915a39b8b124a043d2300f821d549">pjsip_get_sdp_info</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> *body, <a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *msg_media_type, const <a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *search_media_type)</td></tr>
<tr class="separator:ga463915a39b8b124a043d2300f821d549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga03cd1fc2950d5ba58d6d6b6c3dd84149"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSIP__INV.htm#gae15c49faf8faccb855f10add6722a932">pjsip_rdata_sdp_info</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga03cd1fc2950d5ba58d6d6b6c3dd84149">pjsip_rdata_get_sdp_info</a> (<a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</td></tr>
<tr class="separator:ga03cd1fc2950d5ba58d6d6b6c3dd84149"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d58174f1da860b6d36b6b02ab13501a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSIP__INV.htm#gae15c49faf8faccb855f10add6722a932">pjsip_rdata_sdp_info</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga8d58174f1da860b6d36b6b02ab13501a">pjsip_rdata_get_sdp_info2</a> (<a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata, const <a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *search_media_type)</td></tr>
<tr class="separator:ga8d58174f1da860b6d36b6b02ab13501a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8d5b6631dd6d6aef776a57f2e8a86a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSIP__INV.htm#ga47d23bd3139af4524c298cb0ba009f5d">pjsip_tdata_sdp_info</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#gad8d5b6631dd6d6aef776a57f2e8a86a1">pjsip_tdata_get_sdp_info</a> (<a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata)</td></tr>
<tr class="separator:gad8d5b6631dd6d6aef776a57f2e8a86a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga93b936b106647cc8131ad3b031c7b74d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSIP__INV.htm#ga47d23bd3139af4524c298cb0ba009f5d">pjsip_tdata_sdp_info</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSIP__INV.htm#ga93b936b106647cc8131ad3b031c7b74d">pjsip_tdata_get_sdp_info2</a> (<a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata, const <a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *search_media_type)</td></tr>
<tr class="separator:ga93b936b106647cc8131ad3b031c7b74d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >The INVITE session uses the <a class="el" href="group__PJSIP__DIALOG.htm">Base Dialog</a> framework to manage the underlying dialog, and is one type of usages that can use a particular dialog instance (other usages are event subscription, discussed in <a class="el" href="group__PJSIP__EVENT__NOT.htm">SIP Event Notification (RFC 3265) Module</a>). The INVITE session manages the life-time of the session, and also manages the SDP negotiation.</p>
<p >Application must link with <b>pjsip-ua</b> static library to use this API.</p>
<p >More detailed information is explained in <a href="/docs.htm">PJSIP Developer's Guide</a> PDF document, and readers are encouraged to read the document to get the concept behind dialog, dialog usages, and INVITE sessions.</p>
<p >The INVITE session does NOT manage media. If application wants to use API that encapsulates both signaling and media in a very easy to use API, it can use <a class="el" href="group__PJSUA__LIB.htm">PJSUA API - High Level Softphone API</a> for this purpose. </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gae15c49faf8faccb855f10add6722a932" name="gae15c49faf8faccb855f10add6722a932"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae15c49faf8faccb855f10add6722a932">&#9670;&nbsp;</a></span>pjsip_rdata_sdp_info</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a> <a class="el" href="group__PJSIP__INV.htm#gae15c49faf8faccb855f10add6722a932">pjsip_rdata_sdp_info</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For backwards compatibility and completeness, pjsip_rdata_sdp_info and pjsip_tdata_sdp_info are typedef'd to <a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a>. </p>

</div>
</div>
<a id="ga47d23bd3139af4524c298cb0ba009f5d" name="ga47d23bd3139af4524c298cb0ba009f5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga47d23bd3139af4524c298cb0ba009f5d">&#9670;&nbsp;</a></span>pjsip_tdata_sdp_info</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a> <a class="el" href="group__PJSIP__INV.htm#ga47d23bd3139af4524c298cb0ba009f5d">pjsip_tdata_sdp_info</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >For backwards compatibility and completeness, pjsip_rdata_sdp_info and pjsip_tdata_sdp_info are typedef'd to <a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a>. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga083ffd9c75c406c41f113479cc1ebc1c" name="ga083ffd9c75c406c41f113479cc1ebc1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga083ffd9c75c406c41f113479cc1ebc1c">&#9670;&nbsp;</a></span>pjsip_inv_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSIP__INV.htm#ga083ffd9c75c406c41f113479cc1ebc1c">pjsip_inv_state</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration describes invite session state. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga083ffd9c75c406c41f113479cc1ebc1ca95e8d024a5da4bee2c70c377c8b41a9a" name="gga083ffd9c75c406c41f113479cc1ebc1ca95e8d024a5da4bee2c70c377c8b41a9a"></a>PJSIP_INV_STATE_NULL&#160;</td><td class="fielddoc"><p >Before INVITE is sent or received <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga083ffd9c75c406c41f113479cc1ebc1ca2887c717289ddf3801758c0631c5f8dc" name="gga083ffd9c75c406c41f113479cc1ebc1ca2887c717289ddf3801758c0631c5f8dc"></a>PJSIP_INV_STATE_CALLING&#160;</td><td class="fielddoc"><p >After INVITE is sent <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga083ffd9c75c406c41f113479cc1ebc1cabb5da59ed053d8e6411aae718880cc20" name="gga083ffd9c75c406c41f113479cc1ebc1cabb5da59ed053d8e6411aae718880cc20"></a>PJSIP_INV_STATE_INCOMING&#160;</td><td class="fielddoc"><p >After INVITE is received. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga083ffd9c75c406c41f113479cc1ebc1ca6c887e56774f6d1fd3527cb55b3843fd" name="gga083ffd9c75c406c41f113479cc1ebc1ca6c887e56774f6d1fd3527cb55b3843fd"></a>PJSIP_INV_STATE_EARLY&#160;</td><td class="fielddoc"><p >After response with To tag. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga083ffd9c75c406c41f113479cc1ebc1cac40d6e9e47c32fa3fc3a13310c55fb35" name="gga083ffd9c75c406c41f113479cc1ebc1cac40d6e9e47c32fa3fc3a13310c55fb35"></a>PJSIP_INV_STATE_CONNECTING&#160;</td><td class="fielddoc"><p >After 2xx is sent/received. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga083ffd9c75c406c41f113479cc1ebc1caf5c664d1b367a44db04f2cca09f6155b" name="gga083ffd9c75c406c41f113479cc1ebc1caf5c664d1b367a44db04f2cca09f6155b"></a>PJSIP_INV_STATE_CONFIRMED&#160;</td><td class="fielddoc"><p >After ACK is sent/received. <br  />
 </p>
</td></tr>
<tr><td class="fieldname"><a id="gga083ffd9c75c406c41f113479cc1ebc1caab482bbbe77ed88994a790bd6abcc1c5" name="gga083ffd9c75c406c41f113479cc1ebc1caab482bbbe77ed88994a790bd6abcc1c5"></a>PJSIP_INV_STATE_DISCONNECTED&#160;</td><td class="fielddoc"><p >Session is terminated. <br  />
 </p>
</td></tr>
</table>

</div>
</div>
<a id="ga06d359a886069c33569369b4e2ee28ff" name="ga06d359a886069c33569369b4e2ee28ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga06d359a886069c33569369b4e2ee28ff">&#9670;&nbsp;</a></span>pjsip_inv_option</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSIP__INV.htm#ga06d359a886069c33569369b4e2ee28ff">pjsip_inv_option</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration shows various options that can be applied to a session. The bitmask combination of these options need to be specified when creating a session. After the dialog is established (including early), the options member of <a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> shows which capabilities are common in both endpoints. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffafd7239dc6f3470583f201ed33f39bd89" name="gga06d359a886069c33569369b4e2ee28ffafd7239dc6f3470583f201ed33f39bd89"></a>PJSIP_INV_SUPPORT_100REL&#160;</td><td class="fielddoc"><p >Indicate support for reliable provisional response extension </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffa079ad3ffc3e62fbc0188131616fd199a" name="gga06d359a886069c33569369b4e2ee28ffa079ad3ffc3e62fbc0188131616fd199a"></a>PJSIP_INV_SUPPORT_TIMER&#160;</td><td class="fielddoc"><p >Indicate support for session timer extension. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffa39d165f584a747d15f41e31cb8eaa941" name="gga06d359a886069c33569369b4e2ee28ffa39d165f584a747d15f41e31cb8eaa941"></a>PJSIP_INV_SUPPORT_UPDATE&#160;</td><td class="fielddoc"><p >Indicate support for UPDATE method. This is automatically implied when creating outgoing dialog. After the dialog is established, the options member of <a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> shows whether peer supports this method as well. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffa015f74bd1fecaec00772526cc4064b59" name="gga06d359a886069c33569369b4e2ee28ffa015f74bd1fecaec00772526cc4064b59"></a>PJSIP_INV_SUPPORT_ICE&#160;</td><td class="fielddoc"><p >Indicate support for ICE </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffab877f04ce7737c33b1a0ae49950443e3" name="gga06d359a886069c33569369b4e2ee28ffab877f04ce7737c33b1a0ae49950443e3"></a>PJSIP_INV_REQUIRE_ICE&#160;</td><td class="fielddoc"><p >Require ICE support. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffaaa7c9a3cc09ec7426e727c2fbb2c7578" name="gga06d359a886069c33569369b4e2ee28ffaaa7c9a3cc09ec7426e727c2fbb2c7578"></a>PJSIP_INV_REQUIRE_100REL&#160;</td><td class="fielddoc"><p >Require reliable provisional response extension. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffa8d00a2238859c24738ec02be82a15002" name="gga06d359a886069c33569369b4e2ee28ffa8d00a2238859c24738ec02be82a15002"></a>PJSIP_INV_REQUIRE_TIMER&#160;</td><td class="fielddoc"><p >Require session timer extension. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffa566f16f6fcd21a60c7948fb86f34e2ad" name="gga06d359a886069c33569369b4e2ee28ffa566f16f6fcd21a60c7948fb86f34e2ad"></a>PJSIP_INV_ALWAYS_USE_TIMER&#160;</td><td class="fielddoc"><p >Session timer extension will always be used even when peer doesn't support/want session timer. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffa790cb106e8424b685fafb295e1441ee5" name="gga06d359a886069c33569369b4e2ee28ffa790cb106e8424b685fafb295e1441ee5"></a>PJSIP_INV_SUPPORT_TRICKLE_ICE&#160;</td><td class="fielddoc"><p >Indicate support for trickle ICE </p>
</td></tr>
<tr><td class="fieldname"><a id="gga06d359a886069c33569369b4e2ee28ffa7255139e8dc036e741dfeb80c401c844" name="gga06d359a886069c33569369b4e2ee28ffa7255139e8dc036e741dfeb80c401c844"></a>PJSIP_INV_REQUIRE_TRICKLE_ICE&#160;</td><td class="fielddoc"><p >Require trickle ICE support. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gafd8e278e13d53c78ec6f4dabc2ba2a04" name="gafd8e278e13d53c78ec6f4dabc2ba2a04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd8e278e13d53c78ec6f4dabc2ba2a04">&#9670;&nbsp;</a></span>pjsip_inv_usage_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_usage_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__inv__callback.htm">pjsip_inv_callback</a> *&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Initialize the invite usage module and register it to the endpoint. The callback argument contains pointer to functions to be called on occurences of events in invite sessions.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The endpoint instance. </td></tr>
    <tr><td class="paramname">cb</td><td>Callback structure.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gabf1fa74b073c2e1360db9a8cb7f350b9" name="gabf1fa74b073c2e1360db9a8cb7f350b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabf1fa74b073c2e1360db9a8cb7f350b9">&#9670;&nbsp;</a></span>pjsip_inv_usage_instance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__module.htm">pjsip_module</a> * pjsip_inv_usage_instance </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the INVITE usage module instance.</p>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga04604e2269c688bfae5d553180e3fc8f" name="ga04604e2269c688bfae5d553180e3fc8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga04604e2269c688bfae5d553180e3fc8f">&#9670;&nbsp;</a></span>pjsip_inv_usage_dump()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsip_inv_usage_dump </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Dump user agent contents (e.g. all dialogs). </p>

</div>
</div>
<a id="ga5a0312d7ff604f9fd7308bbcdb1e08c7" name="ga5a0312d7ff604f9fd7308bbcdb1e08c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5a0312d7ff604f9fd7308bbcdb1e08c7">&#9670;&nbsp;</a></span>pjsip_inv_create_uac()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_create_uac </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *&#160;</td>
          <td class="paramname"><em>dlg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>local_sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> **&#160;</td>
          <td class="paramname"><em>p_inv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create UAC invite session for the specified dialog in dlg.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dlg</td><td>The dialog which will be used by this invite session. </td></tr>
    <tr><td class="paramname">local_sdp</td><td>If application has determined its media capability, it can specify the SDP here. Otherwise it can leave this to NULL, to let remote UAS specifies an offer. </td></tr>
    <tr><td class="paramname">options</td><td>The options argument is bitmask combination of SIP features in pjsip_inv_option enumeration. </td></tr>
    <tr><td class="paramname">p_inv</td><td>On successful return, the invite session will be put in this argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function will return PJ_SUCCESS if it can create the session. Otherwise the appropriate error status will be returned on failure. </dd></dl>

</div>
</div>
<a id="gac1ec4917f8f7c7376a6ea49201045ddf" name="gac1ec4917f8f7c7376a6ea49201045ddf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac1ec4917f8f7c7376a6ea49201045ddf">&#9670;&nbsp;</a></span>pjsip_inv_verify_request()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_verify_request </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *&#160;</td>
          <td class="paramname"><em>dlg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Application SHOULD call this function upon receiving the initial INVITE request in rdata before creating the invite session (or even dialog), to verify that the invite session can handle the INVITE request. This function verifies that local endpoint is capable to handle required SIP extensions in the request (i.e. Require header) and also the media, if media description is present in the request.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rdata</td><td>The incoming INVITE request.</td></tr>
    <tr><td class="paramname">options</td><td>Upon calling this function, the options argument MUST contain the desired SIP extensions to be applied to the session. Upon return, this argument will contain the SIP extension that will be applied to the session, after considering the Supported, Require, and Allow headers in the request.</td></tr>
    <tr><td class="paramname">sdp</td><td>If local media capability has been determined, and if application wishes to verify that it can handle the media offer in the incoming INVITE request, it SHOULD specify its local media capability in this argument. If it is not specified, media verification will not be performed by this function.</td></tr>
    <tr><td class="paramname">dlg</td><td>If tdata is not NULL, application needs to specify how to create the response. Either dlg or endpt argument MUST be specified, with dlg argument takes precedence when both are specified.</td></tr>
  </table>
  </dd>
</dl>
<p>If a dialog has been created prior to calling this function, then it MUST be specified in dlg argument. Otherwise application MUST specify the endpt argument (this is useful e.g. when application wants to send the response statelessly).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>If tdata is not NULL, application needs to specify how to create the response. Either dlg or endpt argument MUST be specified, with dlg argument takes precedence when both are specified.</td></tr>
    <tr><td class="paramname">tdata</td><td>If this argument is not NULL, this function will create the appropriate non-2xx final response message when the verification fails.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If everything has been negotiated successfully, the function will return PJ_SUCCESS. Otherwise it will return the reason of the failure as the return code.</dd></dl>
<p>This function is capable to create the appropriate response message when the verification has failed. If tdata is specified, then a non-2xx final response will be created and put in this argument upon return, when the verification has failed.</p>
<p >If a dialog has been created prior to calling this function, then it MUST be specified in dlg argument. Otherwise application MUST specify the endpt argument (this is useful e.g. when application wants to send the response statelessly).</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJSIP__INV.htm#gae22a23a61eda1396a3341a68c272459b">pjsip_inv_verify_request2()</a> </dd></dl>

</div>
</div>
<a id="gae22a23a61eda1396a3341a68c272459b" name="gae22a23a61eda1396a3341a68c272459b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae22a23a61eda1396a3341a68c272459b">&#9670;&nbsp;</a></span>pjsip_inv_verify_request2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_verify_request2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>offer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>answer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *&#160;</td>
          <td class="paramname"><em>dlg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Variant of <a class="el" href="group__PJSIP__INV.htm#gac1ec4917f8f7c7376a6ea49201045ddf">pjsip_inv_verify_request()</a> which allows application to specify the parsed SDP in the <em>offer</em> argument. This is useful to avoid having to re-parse the SDP in the incoming request.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJSIP__INV.htm#gac1ec4917f8f7c7376a6ea49201045ddf">pjsip_inv_verify_request()</a> </dd></dl>

</div>
</div>
<a id="ga92746552a8b978ea8ef901ecd849d64d" name="ga92746552a8b978ea8ef901ecd849d64d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga92746552a8b978ea8ef901ecd849d64d">&#9670;&nbsp;</a></span>pjsip_inv_verify_request3()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_verify_request3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>tmp_pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>offer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>answer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *&#160;</td>
          <td class="paramname"><em>dlg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__TYPES.htm#ga2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Variant of <a class="el" href="group__PJSIP__INV.htm#gac1ec4917f8f7c7376a6ea49201045ddf">pjsip_inv_verify_request()</a> which allows application not to specify the rdata (i.e. pass NULL as the rdata parameter) and specify the parsed SDP in the <em>offer</em> argument and a temporary pool in the <em>tmp_pool</em> argument. This is useful if application no longer has access to the rdata.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJSIP__INV.htm#gac1ec4917f8f7c7376a6ea49201045ddf">pjsip_inv_verify_request()</a> </dd></dl>

</div>
</div>
<a id="ga446995d30676e2f47279056793756f0e" name="ga446995d30676e2f47279056793756f0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga446995d30676e2f47279056793756f0e">&#9670;&nbsp;</a></span>pjsip_inv_create_uas()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_create_uas </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *&#160;</td>
          <td class="paramname"><em>dlg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>local_sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> **&#160;</td>
          <td class="paramname"><em>p_inv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create UAS invite session for the specified dialog in dlg. Application SHOULD call the verification function before calling this function, to ensure that it can create the session successfully.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dlg</td><td>The dialog to be used. </td></tr>
    <tr><td class="paramname">rdata</td><td>Application MUST specify the received INVITE request in rdata. The invite session needs to inspect the received request to see if the request contains features that it supports. </td></tr>
    <tr><td class="paramname">local_sdp</td><td>If application has determined its media capability, it can specify this capability in this argument. If SDP is received in the initial INVITE, the UAS capability specified in this argument doesn't have to match the received offer; the SDP negotiator is able to rearrange the media lines in the answer so that it matches the offer. </td></tr>
    <tr><td class="paramname">options</td><td>The options argument is bitmask combination of SIP features in pjsip_inv_option enumeration. </td></tr>
    <tr><td class="paramname">p_inv</td><td>Pointer to receive the newly created invite session.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>On successful, the invite session will be put in p_inv argument and the function will return PJ_SUCCESS. Otherwise the appropriate error status will be returned on failure. </dd></dl>

</div>
</div>
<a id="gaaadde3fa16c72221266a4cae1e1365a7" name="gaaadde3fa16c72221266a4cae1e1365a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaadde3fa16c72221266a4cae1e1365a7">&#9670;&nbsp;</a></span>pjsip_inv_add_ref()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_add_ref </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Add reference counter to the INVITE session. The reference counter controls the life time of the session, ie. when the counter reaches zero, then it will be destroyed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The INVITE session. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the INVITE session reference counter was increased. </dd></dl>

</div>
</div>
<a id="gae4571e493576c8025f7f881d35999c4a" name="gae4571e493576c8025f7f881d35999c4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae4571e493576c8025f7f881d35999c4a">&#9670;&nbsp;</a></span>pjsip_inv_dec_ref()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_dec_ref </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Decrement reference counter of the INVITE session. When the session is no longer used, it will be destroyed and caller is informed with PJ_EGONE return status.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The INVITE session. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the INVITE session reference counter was decreased. A status PJ_EGONE will be returned to inform that session is destroyed. </dd></dl>

</div>
</div>
<a id="gadd08039422a44bfcad8a9fc09f5d10f7" name="gadd08039422a44bfcad8a9fc09f5d10f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadd08039422a44bfcad8a9fc09f5d10f7">&#9670;&nbsp;</a></span>pjsip_inv_terminate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_terminate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>st_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>notify</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Forcefully terminate and destroy INVITE session, regardless of the state of the session. Note that this function should only be used when there is failure in the INVITE session creation. After the invite session has been created and initialized, normally application SHOULD use <a class="el" href="group__PJSIP__INV.htm#ga2a7982ae0f381b057b6c06a99ca87275">pjsip_inv_end_session()</a> to end the INVITE session instead.</p>
<p >Note also that this function may terminate the underlying dialog, if there are no other sessions in the dialog.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">st_code</td><td>Status code for the reason of the termination. </td></tr>
    <tr><td class="paramname">notify</td><td>If set to non-zero, then on_state_changed() callback will be called.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the INVITE session has been terminated. </dd></dl>

</div>
</div>
<a id="gad8af665ba4b5eabdbcd72cd73bfc3a8e" name="gad8af665ba4b5eabdbcd72cd73bfc3a8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad8af665ba4b5eabdbcd72cd73bfc3a8e">&#9670;&nbsp;</a></span>pjsip_inv_uac_restart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_uac_restart </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>new_offer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Restart UAC session and prepare the session for a new initial INVITE. This function can be called for example when the application wants to follow redirection response with a new call reusing this session so that the new call will have the same Call-ID and From headers. After the session is restarted, application may create and send a new INVITE request.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">new_offer</td><td>Should be set to PJ_TRUE since the application will restart the session.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on successful operation. </dd></dl>

</div>
</div>
<a id="gabbba2ef44235adfc49911b729010073f" name="gabbba2ef44235adfc49911b729010073f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabbba2ef44235adfc49911b729010073f">&#9670;&nbsp;</a></span>pjsip_inv_process_redirect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_process_redirect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSIP__ENDPT__TARGET__URI.htm#gaa99c427ca4668e49f1c3f6e25b10516c">pjsip_redirect_op</a>&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__event.htm">pjsip_event</a> *&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Accept or reject redirection response. Application MUST call this function after it signaled PJSIP_REDIRECT_PENDING in the <em>on_redirected()</em> callback, to notify the invite session whether to accept or reject the redirection to the current target. Application can use the combination of PJSIP_REDIRECT_PENDING command in <em>on_redirected()</em> callback and this function to ask for user permission before redirecting the call.</p>
<p >Note that if the application chooses to reject or stop redirection (by using PJSIP_REDIRECT_REJECT or PJSIP_REDIRECT_STOP respectively), the session disconnection callback will be called before this function returns. And if the application rejects the target, the <em>on_redirected()</em> callback may also be called before this function returns if there is another target to try.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">cmd</td><td>Redirection operation. The semantic of this argument is similar to the description in the <em>on_redirected()</em> callback, except that the PJSIP_REDIRECT_PENDING is not accepted here. </td></tr>
    <tr><td class="paramname">e</td><td>Should be set to NULL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on successful operation. </dd></dl>

</div>
</div>
<a id="ga729c006bbc8076e88ab8337754d2319e" name="ga729c006bbc8076e88ab8337754d2319e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga729c006bbc8076e88ab8337754d2319e">&#9670;&nbsp;</a></span>pjsip_inv_invite()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_invite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create the initial INVITE request for this session. This function can only be called for UAC session. If local media capability is specified when the invite session was created, then this function will put an SDP offer in the outgoing INVITE request. Otherwise the outgoing request will not contain SDP body.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The UAC invite session. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>The initial INVITE request will be put in this argument if it can be created successfully.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the INVITE request can be created. </dd></dl>

</div>
</div>
<a id="ga7dbf4062678f4a75c3ba15f5b7a81ebf" name="ga7dbf4062678f4a75c3ba15f5b7a81ebf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7dbf4062678f4a75c3ba15f5b7a81ebf">&#9670;&nbsp;</a></span>pjsip_inv_initial_answer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_initial_answer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>st_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>st_text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create the initial response message for the incoming INVITE request in rdata with status code st_code and optional status text st_text. Use <a class="el" href="group__PJSIP__INV.htm#gad2ec8b6d5c6b02f65c979eea05f82f61">pjsip_inv_answer()</a> to create subsequent response message. </p>

</div>
</div>
<a id="gad2ec8b6d5c6b02f65c979eea05f82f61" name="gad2ec8b6d5c6b02f65c979eea05f82f61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad2ec8b6d5c6b02f65c979eea05f82f61">&#9670;&nbsp;</a></span>pjsip_inv_answer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_answer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>st_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>st_text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>local_sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a response message to an INVITE request.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The UAS invite session. </td></tr>
    <tr><td class="paramname">st_code</td><td>The st_code contains the status code to be sent, which may be a provisional or final response. </td></tr>
    <tr><td class="paramname">st_text</td><td>If custom status text is desired, application can specify the text in st_text; otherwise if this argument is NULL, default status text will be used. </td></tr>
    <tr><td class="paramname">local_sdp</td><td>If application has specified its media capability during creation of UAS invite session, the local_sdp argument MUST be NULL. This is because application can not perform more than one SDP offer/answer session in a single INVITE transaction. If application has not specified its media capability during creation of UAS invite session, it MAY or MUST specify its capability in local_sdp argument, depending whether st_code indicates a 2xx final response. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive the response message created by this function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if response message was created successfully. </dd></dl>

</div>
</div>
<a id="gab7e49d4115263d1ca11fa6fa399c5a93" name="gab7e49d4115263d1ca11fa6fa399c5a93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab7e49d4115263d1ca11fa6fa399c5a93">&#9670;&nbsp;</a></span>pjsip_inv_set_local_sdp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_set_local_sdp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set local offer or answer depending on negotiator state (it may also create a negotiator if it doesn't exist yet).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">sdp</td><td>The SDP description which will be set as an offer/answer to remote.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if local offer/answer can be accepted by SDP negotiator. </dd></dl>

</div>
</div>
<a id="gaaeb5c21d71241a68497079cf9c4c2af5" name="gaaeb5c21d71241a68497079cf9c4c2af5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaeb5c21d71241a68497079cf9c4c2af5">&#9670;&nbsp;</a></span>pjsip_inv_set_sdp_answer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_set_sdp_answer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set local answer to respond to remote SDP offer, to be carried by subsequent response (or request).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">sdp</td><td>The SDP description which will be set as answer to remote.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if local answer can be accepted by SDP negotiator. </dd></dl>

</div>
</div>
<a id="ga2a7982ae0f381b057b6c06a99ca87275" name="ga2a7982ae0f381b057b6c06a99ca87275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2a7982ae0f381b057b6c06a99ca87275">&#9670;&nbsp;</a></span>pjsip_inv_end_session()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_end_session </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>st_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>st_text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a SIP message to initiate invite session termination. Depending on the state of the session, this function may return CANCEL request, a non-2xx final response, a BYE request, or even no request.</p>
<p >For UAS, if the session has not answered the incoming INVITE, this function creates the non-2xx final response with the specified status code in <em>st_code</em> and optional status text in <em>st_text</em>.</p>
<p >For UAC, if the original INVITE has not been answered with a final response, the behavior depends on whether provisional response has been received. If provisional response has been received, this function will create CANCEL request. If no provisional response has been received, the function will not create CANCEL request (the function will return PJ_SUCCESS but the <em>p_tdata</em> will contain NULL) because we cannot send CANCEL before receiving provisional response. If then a provisional response is received, the invite session will send CANCEL automatically.</p>
<p >For both UAC and UAS, if the INVITE session has been answered with final response, a BYE request will be created.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">st_code</td><td>Status code to be used for terminating the session. </td></tr>
    <tr><td class="paramname">st_text</td><td>Optional status text. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive the message to be created. Note that it's possible to receive NULL here while the function returns PJ_SUCCESS, see the description.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if termination is initiated. </dd></dl>

</div>
</div>
<a id="gacb6c60f02187eb0491c2e9d004d4cb6b" name="gacb6c60f02187eb0491c2e9d004d4cb6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacb6c60f02187eb0491c2e9d004d4cb6b">&#9670;&nbsp;</a></span>pjsip_inv_cancel_reinvite()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_cancel_reinvite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a CANCEL request for an ongoing re-INVITE transaction. If no provisional response has been received, the function will not create CANCEL request (the function will return PJ_SUCCESS but the <em>p_tdata</em> will contain NULL) because we cannot send CANCEL before receiving provisional response. If then a provisional response is received, the invite session will send CANCEL automatically.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive the message to be created. Note that it's possible to receive NULL here while the function returns PJ_SUCCESS, see the description.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if termination is initiated. </dd></dl>

</div>
</div>
<a id="ga7f7f847cbb1135ca5c023f2ee0687be8" name="ga7f7f847cbb1135ca5c023f2ee0687be8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7f7f847cbb1135ca5c023f2ee0687be8">&#9670;&nbsp;</a></span>pjsip_inv_reinvite()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_reinvite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>new_contact</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>new_offer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a re-INVITE request.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">new_contact</td><td>If application wants to update its local contact and inform peer to perform target refresh with a new contact, it can specify the new contact in this argument; otherwise this argument must be NULL. </td></tr>
    <tr><td class="paramname">new_offer</td><td>Application MAY initiate a new SDP offer/answer session in the request when there is no pending answer to be sent or received. It can detect this condition by observing the state of the SDP negotiator of the invite session. If new offer should be sent to remote, the offer must be specified in this argument, otherwise it must be NULL. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive the re-INVITE request message to be created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if a re-INVITE request with the specified characteristics (e.g. to contain new offer) can be created. </dd></dl>

</div>
</div>
<a id="ga21683fbbab2f90861591e30d737a6e9b" name="ga21683fbbab2f90861591e30d737a6e9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga21683fbbab2f90861591e30d737a6e9b">&#9670;&nbsp;</a></span>pjsip_inv_update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>new_contact</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>offer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create an UPDATE request to initiate new SDP offer.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">new_contact</td><td>If application wants to update its local contact and inform peer to perform target refresh with a new contact, it can specify the new contact in this argument; otherwise this argument must be NULL. </td></tr>
    <tr><td class="paramname">offer</td><td>Offer to be sent to remote. This argument is mandatory. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive the UPDATE request message to be created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if a UPDATE request with the specified characteristics (e.g. to contain new offer) can be created. </dd></dl>

</div>
</div>
<a id="ga4b60e9a2057483db3816ccbd4bf2d945" name="ga4b60e9a2057483db3816ccbd4bf2d945"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4b60e9a2057483db3816ccbd4bf2d945">&#9670;&nbsp;</a></span>pjsip_inv_create_ack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_create_ack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cseq</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> **&#160;</td>
          <td class="paramname"><em>p_tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create an ACK request. Normally ACK request transmission is handled by the framework. Application only needs to use this function if it handles the ACK transmission manually, by overriding <em>on_send_ack()</em> callback in <a class="el" href="structpjsip__inv__callback.htm">pjsip_inv_callback</a>.</p>
<p >Note that if the invite session has a pending offer to be answered (for example when the last 2xx response to INVITE contains an offer), application MUST have set the SDP answer with <a class="el" href="group__PJSIP__INV.htm#gaaeb5c21d71241a68497079cf9c4c2af5">pjsip_inv_set_sdp_answer()</a> prior to creating the ACK request. In this case, the ACK request will be added with SDP message body.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">cseq</td><td>Mandatory argument to specify the CSeq of the ACK request. This value MUST match the value of the INVITE transaction to be acknowledged. </td></tr>
    <tr><td class="paramname">p_tdata</td><td>Pointer to receive the ACK request message to be created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if ACK request has been created. </dd></dl>

</div>
</div>
<a id="ga0b80fd8a5a89df2228b681f141c1ebd9" name="ga0b80fd8a5a89df2228b681f141c1ebd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0b80fd8a5a89df2228b681f141c1ebd9">&#9670;&nbsp;</a></span>pjsip_inv_send_msg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_inv_send_msg </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *&#160;</td>
          <td class="paramname"><em>inv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Send request or response message in tdata.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inv</td><td>The invite session. </td></tr>
    <tr><td class="paramname">tdata</td><td>The message to be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if transaction can be initiated successfully to send this message. Note that the actual final state of the transaction itself will be reported later, in on_tsx_state_changed() callback. </dd></dl>

</div>
</div>
<a id="ga8780a37f0950c8f33005eebf1b9c0ba7" name="ga8780a37f0950c8f33005eebf1b9c0ba7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8780a37f0950c8f33005eebf1b9c0ba7">&#9670;&nbsp;</a></span>pjsip_dlg_get_inv_session()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> * pjsip_dlg_get_inv_session </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__dialog.htm">pjsip_dialog</a> *&#160;</td>
          <td class="paramname"><em>dlg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the invite session for the dialog, if any.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dlg</td><td>The dialog which invite session is being queried.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The invite session instance which has been associated with this dialog, or NULL. </dd></dl>

</div>
</div>
<a id="ga3ab43f3d40f6ca4ebf1591d20528e62c" name="ga3ab43f3d40f6ca4ebf1591d20528e62c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3ab43f3d40f6ca4ebf1591d20528e62c">&#9670;&nbsp;</a></span>pjsip_tsx_get_inv_session()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__inv__session.htm">pjsip_inv_session</a> * pjsip_tsx_get_inv_session </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__transaction.htm">pjsip_transaction</a> *&#160;</td>
          <td class="paramname"><em>tsx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the invite session instance associated with transaction tsx, if any.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tsx</td><td>The transaction, which invite session is being queried.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The invite session instance which has been associated with this transaction, or NULL. </dd></dl>

</div>
</div>
<a id="ga26e71648743ec8d1c008db61304a4c70" name="ga26e71648743ec8d1c008db61304a4c70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga26e71648743ec8d1c008db61304a4c70">&#9670;&nbsp;</a></span>pjsip_inv_state_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char * pjsip_inv_state_name </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSIP__INV.htm#ga083ffd9c75c406c41f113479cc1ebc1c">pjsip_inv_state</a>&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get state names for INVITE session state.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">state</td><td>The invite state.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String describing the state. </dd></dl>

</div>
</div>
<a id="gabb56916cdf65edcc0e6e8c3d1175ab0d" name="gabb56916cdf65edcc0e6e8c3d1175ab0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabb56916cdf65edcc0e6e8c3d1175ab0d">&#9670;&nbsp;</a></span>pjsip_create_sdp_body()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_create_sdp_body </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **&#160;</td>
          <td class="paramname"><em>p_body</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This is a utility function to create SIP body for SDP content.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory. </td></tr>
    <tr><td class="paramname">sdp</td><td>SDP session to be put in the SIP message body. </td></tr>
    <tr><td class="paramname">p_body</td><td>Pointer to receive SIP message body containing the SDP session.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gaf9575ddc9b5bdf1670c97d44a5bc88ee" name="gaf9575ddc9b5bdf1670c97d44a5bc88ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf9575ddc9b5bdf1670c97d44a5bc88ee">&#9670;&nbsp;</a></span>pjsip_create_multipart_sdp_body()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsip_create_multipart_sdp_body </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> *&#160;</td>
          <td class="paramname"><em>sdp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> **&#160;</td>
          <td class="paramname"><em>p_body</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This is a utility function to create a multipart body with the SIP body as the first part.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory. </td></tr>
    <tr><td class="paramname">sdp</td><td>SDP session to be put in the SIP message body. </td></tr>
    <tr><td class="paramname">p_body</td><td>Pointer to receive SIP message body containing the SDP session.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga463915a39b8b124a043d2300f821d549" name="ga463915a39b8b124a043d2300f821d549"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga463915a39b8b124a043d2300f821d549">&#9670;&nbsp;</a></span>pjsip_get_sdp_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjsip__sdp__info.htm">pjsip_sdp_info</a> * pjsip_get_sdp_info </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__msg__body.htm">pjsip_msg_body</a> *&#160;</td>
          <td class="paramname"><em>body</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *&#160;</td>
          <td class="paramname"><em>msg_media_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *&#160;</td>
          <td class="paramname"><em>search_media_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve SDP information from a message body. Application should prefer to use this function rather than parsing the SDP manually since this function supports multipart message body.</p>
<p >This function will only parse the SDP once, the first time it is called on the same message. Subsequent call on the same message will just pick up the already parsed SDP from the message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory. </td></tr>
    <tr><td class="paramname">body</td><td>The message body. </td></tr>
    <tr><td class="paramname">msg_media_type</td><td>From the rdata or tdata Content-Type header, if available. If NULL, the content_type from the body will be used. </td></tr>
    <tr><td class="paramname">search_media_type</td><td>The media type to search for. If NULL, "application/sdp" will be used.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The SDP info. </dd></dl>

</div>
</div>
<a id="ga03cd1fc2950d5ba58d6d6b6c3dd84149" name="ga03cd1fc2950d5ba58d6d6b6c3dd84149"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga03cd1fc2950d5ba58d6d6b6c3dd84149">&#9670;&nbsp;</a></span>pjsip_rdata_get_sdp_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSIP__INV.htm#gae15c49faf8faccb855f10add6722a932">pjsip_rdata_sdp_info</a> * pjsip_rdata_get_sdp_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve SDP information from an incoming message. Application should prefer to use this function rather than parsing the SDP manually since this function supports multipart message body.</p>
<p >This function will only parse the SDP once, the first time it is called on the same message. Subsequent call on the same message will just pick up the already parsed SDP from the message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rdata</td><td>The incoming message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The SDP info. </dd></dl>

</div>
</div>
<a id="ga8d58174f1da860b6d36b6b02ab13501a" name="ga8d58174f1da860b6d36b6b02ab13501a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8d58174f1da860b6d36b6b02ab13501a">&#9670;&nbsp;</a></span>pjsip_rdata_get_sdp_info2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSIP__INV.htm#gae15c49faf8faccb855f10add6722a932">pjsip_rdata_sdp_info</a> * pjsip_rdata_get_sdp_info2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *&#160;</td>
          <td class="paramname"><em>rdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *&#160;</td>
          <td class="paramname"><em>search_media_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve SDP information from an incoming message. Application should prefer to use this function rather than parsing the SDP manually since this function supports multipart message body.</p>
<p >This function will only parse the SDP once, the first time it is called on the same message. Subsequent call on the same message will just pick up the already parsed SDP from the message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rdata</td><td>The incoming message. </td></tr>
    <tr><td class="paramname">search_media_type</td><td>The SDP media type to search for. If NULL, "application/sdp" will be used.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The SDP info. </dd></dl>

</div>
</div>
<a id="gad8d5b6631dd6d6aef776a57f2e8a86a1" name="gad8d5b6631dd6d6aef776a57f2e8a86a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad8d5b6631dd6d6aef776a57f2e8a86a1">&#9670;&nbsp;</a></span>pjsip_tdata_get_sdp_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSIP__INV.htm#ga47d23bd3139af4524c298cb0ba009f5d">pjsip_tdata_sdp_info</a> * pjsip_tdata_get_sdp_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve SDP information from an outgoing message. Application should prefer to use this function rather than parsing the SDP manually since this function supports multipart message body.</p>
<p >This function will only parse the SDP once, the first time it is called on the same message. Subsequent call on the same message will just pick up the already parsed SDP from the message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tdata</td><td>The outgoing message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The SDP info. </dd></dl>

</div>
</div>
<a id="ga93b936b106647cc8131ad3b031c7b74d" name="ga93b936b106647cc8131ad3b031c7b74d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga93b936b106647cc8131ad3b031c7b74d">&#9670;&nbsp;</a></span>pjsip_tdata_get_sdp_info2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSIP__INV.htm#ga47d23bd3139af4524c298cb0ba009f5d">pjsip_tdata_sdp_info</a> * pjsip_tdata_get_sdp_info2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *&#160;</td>
          <td class="paramname"><em>tdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsip__media__type.htm">pjsip_media_type</a> *&#160;</td>
          <td class="paramname"><em>search_media_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve SDP information from an outgoing message. Application should prefer to use this function rather than parsing the SDP manually since this function supports multipart message body.</p>
<p >This function will only parse the SDP once, the first time it is called on the same message. Subsequent call on the same message will just pick up the already parsed SDP from the message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tdata</td><td>The outgoing message. </td></tr>
    <tr><td class="paramname">search_media_type</td><td>The SDP media type to search for. If NULL, "application/sdp" will be used.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The SDP info. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>.</p>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
