<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>The Endpoint (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">The Endpoint</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga04eb4fc874b3c7b093d50d0511b23159"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga04eb4fc874b3c7b093d50d0511b23159">pjmedia_endpt_exit_callback</a>) (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:ga04eb4fc874b3c7b093d50d0511b23159"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga9124433e83a40740fc28f19bc7532ce6"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga9124433e83a40740fc28f19bc7532ce6">pjmedia_endpt_flag</a> { <a class="el" href="group__PJMED__ENDPT.htm#gga9124433e83a40740fc28f19bc7532ce6a477d962806aa708fbb7f97987f0bd4a5">PJMEDIA_ENDPT_HAS_TELEPHONE_EVENT_FLAG</a>
 }</td></tr>
<tr class="separator:ga9124433e83a40740fc28f19bc7532ce6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad59801af61dff1b248f4da8eaea6a362"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gad59801af61dff1b248f4da8eaea6a362">pjmedia_endpt_create_sdp_param_default</a> (<a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a> *param)</td></tr>
<tr class="separator:gad59801af61dff1b248f4da8eaea6a362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8cc9deb21bec36fea8c3ef3a29e06d9"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gab8cc9deb21bec36fea8c3ef3a29e06d9">pjmedia_endpt_create2</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *pf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioqueue, unsigned worker_cnt, <a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> **p_endpt)</td></tr>
<tr class="separator:gab8cc9deb21bec36fea8c3ef3a29e06d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2865efcd255dbcb05ede33dbae5c27f5"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *pf, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioqueue, unsigned worker_cnt, <a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> **p_endpt)</td></tr>
<tr class="separator:ga2865efcd255dbcb05ede33dbae5c27f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20a3e8058d4932d5f9c4ade5b3349e74"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga20a3e8058d4932d5f9c4ade5b3349e74">pjmedia_endpt_destroy2</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:ga20a3e8058d4932d5f9c4ade5b3349e74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae2304cc656a0e6a602f6cdaaec91bb19"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:gae2304cc656a0e6a602f6cdaaec91bb19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e80870363bd577710521726816c32b0"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga7e80870363bd577710521726816c32b0">pjmedia_endpt_set_flag</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="el" href="group__PJMED__ENDPT.htm#ga9124433e83a40740fc28f19bc7532ce6">pjmedia_endpt_flag</a> flag, const void *value)</td></tr>
<tr class="separator:ga7e80870363bd577710521726816c32b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11020e92ec7131382d0d2d44a96f7f44"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga11020e92ec7131382d0d2d44a96f7f44">pjmedia_endpt_get_flag</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="el" href="group__PJMED__ENDPT.htm#ga9124433e83a40740fc28f19bc7532ce6">pjmedia_endpt_flag</a> flag, void *value)</td></tr>
<tr class="separator:ga11020e92ec7131382d0d2d44a96f7f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad74122b8cc21e32b313b4d255bf1a977"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gad74122b8cc21e32b313b4d255bf1a977">pjmedia_endpt_get_ioqueue</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:gad74122b8cc21e32b313b4d255bf1a977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab055243714063c448c8973654122b487"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gab055243714063c448c8973654122b487">pjmedia_endpt_get_thread_count</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:gab055243714063c448c8973654122b487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba4fcff7f82c9d11f4b9e66319a96989"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gacb9d46aed6813bf142efc1c3db7a2d17">pj_thread_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gaba4fcff7f82c9d11f4b9e66319a96989">pjmedia_endpt_get_thread</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, unsigned index)</td></tr>
<tr class="separator:gaba4fcff7f82c9d11f4b9e66319a96989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8842a7a291d559130fbda6533c1fdb98"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga8842a7a291d559130fbda6533c1fdb98">pjmedia_endpt_stop_threads</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:ga8842a7a291d559130fbda6533c1fdb98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9f83d4ddcc203964c935b3ad02072b8"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gaa9f83d4ddcc203964c935b3ad02072b8">pjmedia_endpt_create_pool</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, const char *name, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> initial, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> increment)</td></tr>
<tr class="separator:gaa9f83d4ddcc203964c935b3ad02072b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6604d72aa6d89355ea9e0483d04060c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gae6604d72aa6d89355ea9e0483d04060c">pjmedia_endpt_get_codec_mgr</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:gae6604d72aa6d89355ea9e0483d04060c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa49360a690c292dddd722b39c2f8c8bb"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gaa49360a690c292dddd722b39c2f8c8bb">pjmedia_endpt_create_sdp</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, unsigned stream_cnt, const <a class="el" href="structpjmedia__sock__info.htm">pjmedia_sock_info</a> sock_info[], <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> **p_sdp)</td></tr>
<tr class="separator:gaa49360a690c292dddd722b39c2f8c8bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b4651e9905f19b1a4ba0d73cf31b4bf"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga3b4651e9905f19b1a4ba0d73cf31b4bf">pjmedia_endpt_create_base_sdp</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *sess_name, const <a class="elRef" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *origin, <a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> **p_sdp)</td></tr>
<tr class="separator:ga3b4651e9905f19b1a4ba0d73cf31b4bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacda8e2fcd2fa7d0f02f282a136871309"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gacda8e2fcd2fa7d0f02f282a136871309">pjmedia_endpt_create_audio_sdp</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sock__info.htm">pjmedia_sock_info</a> *si, const <a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a> *options, <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> **p_m)</td></tr>
<tr class="separator:gacda8e2fcd2fa7d0f02f282a136871309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2e3c803aaa5847f463bec79c69f60ae"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gaa2e3c803aaa5847f463bec79c69f60ae">pjmedia_endpt_create_video_sdp</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpjmedia__sock__info.htm">pjmedia_sock_info</a> *si, const <a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a> *options, <a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> **p_m)</td></tr>
<tr class="separator:gaa2e3c803aaa5847f463bec79c69f60ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga637b08b81c21e7afa5577f795bf86c71"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#ga637b08b81c21e7afa5577f795bf86c71">pjmedia_endpt_dump</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td></tr>
<tr class="separator:ga637b08b81c21e7afa5577f795bf86c71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae923d54afcf699587099395fed0cb53d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMED__ENDPT.htm#gae923d54afcf699587099395fed0cb53d">pjmedia_endpt_atexit</a> (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt, <a class="el" href="group__PJMED__ENDPT.htm#ga04eb4fc874b3c7b093d50d0511b23159">pjmedia_endpt_exit_callback</a> func)</td></tr>
<tr class="separator:gae923d54afcf699587099395fed0cb53d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >The media endpoint acts as placeholder for endpoint capabilities. Each media endpoint will have a codec manager to manage list of codecs installed in the endpoint and a sound device factory.</p>
<p >A reference to media endpoint instance is required when application wants to create a media session (<a class="el" href="group__PJMEDIA__SESSION.htm#ga6bb6bcc4721ca9f357b5e3bb750378c6">pjmedia_session_create()</a>). </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga04eb4fc874b3c7b093d50d0511b23159" name="ga04eb4fc874b3c7b093d50d0511b23159"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga04eb4fc874b3c7b093d50d0511b23159">&#9670;&nbsp;</a></span>pjmedia_endpt_exit_callback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* pjmedia_endpt_exit_callback) (<a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *endpt)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Type of callback to register to <a class="el" href="group__PJMED__ENDPT.htm#gae923d54afcf699587099395fed0cb53d">pjmedia_endpt_atexit()</a>. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga9124433e83a40740fc28f19bc7532ce6" name="ga9124433e83a40740fc28f19bc7532ce6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9124433e83a40740fc28f19bc7532ce6">&#9670;&nbsp;</a></span>pjmedia_endpt_flag</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMED__ENDPT.htm#ga9124433e83a40740fc28f19bc7532ce6">pjmedia_endpt_flag</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration describes various flags that can be set or retrieved in the media endpoint, by using <a class="el" href="group__PJMED__ENDPT.htm#ga7e80870363bd577710521726816c32b0">pjmedia_endpt_set_flag()</a> and <a class="el" href="group__PJMED__ENDPT.htm#ga11020e92ec7131382d0d2d44a96f7f44">pjmedia_endpt_get_flag()</a> respectively. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga9124433e83a40740fc28f19bc7532ce6a477d962806aa708fbb7f97987f0bd4a5" name="gga9124433e83a40740fc28f19bc7532ce6a477d962806aa708fbb7f97987f0bd4a5"></a>PJMEDIA_ENDPT_HAS_TELEPHONE_EVENT_FLAG&#160;</td><td class="fielddoc"><p >This flag controls whether telephony-event should be offered in SDP. Value is boolean. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gad59801af61dff1b248f4da8eaea6a362" name="gad59801af61dff1b248f4da8eaea6a362"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad59801af61dff1b248f4da8eaea6a362">&#9670;&nbsp;</a></span>pjmedia_endpt_create_sdp_param_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjmedia_endpt_create_sdp_param_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a> *&#160;</td>
          <td class="paramname"><em>param</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Call this function to initialize <em><a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a></em> with default values.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">param</td><td>The param to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gab8cc9deb21bec36fea8c3ef3a29e06d9" name="gab8cc9deb21bec36fea8c3ef3a29e06d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab8cc9deb21bec36fea8c3ef3a29e06d9">&#9670;&nbsp;</a></span>pjmedia_endpt_create2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_create2 </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *&#160;</td>
          <td class="paramname"><em>pf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *&#160;</td>
          <td class="paramname"><em>ioqueue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>worker_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> **&#160;</td>
          <td class="paramname"><em>p_endpt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create an instance of media endpoint.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pf</td><td>Pool factory, which will be used by the media endpoint throughout its lifetime. </td></tr>
    <tr><td class="paramname">ioqueue</td><td>Optional ioqueue instance to be registered to the endpoint. The ioqueue instance is used to poll all RTP and RTCP sockets. If this argument is NULL, the endpoint will create an internal ioqueue instance. </td></tr>
    <tr><td class="paramname">worker_cnt</td><td>Specify the number of worker threads to be created to poll the ioqueue. </td></tr>
    <tr><td class="paramname">p_endpt</td><td>Pointer to receive the endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

<p class="reference">Referenced by <a class="el" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create()</a>.</p>

</div>
</div>
<a id="ga2865efcd255dbcb05ede33dbae5c27f5" name="ga2865efcd255dbcb05ede33dbae5c27f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2865efcd255dbcb05ede33dbae5c27f5">&#9670;&nbsp;</a></span>pjmedia_endpt_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__factory.htm">pj_pool_factory</a> *&#160;</td>
          <td class="paramname"><em>pf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *&#160;</td>
          <td class="paramname"><em>ioqueue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>worker_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> **&#160;</td>
          <td class="paramname"><em>p_endpt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create an instance of media endpoint and initialize audio subsystem.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pf</td><td>Pool factory, which will be used by the media endpoint throughout its lifetime. </td></tr>
    <tr><td class="paramname">ioqueue</td><td>Optional ioqueue instance to be registered to the endpoint. The ioqueue instance is used to poll all RTP and RTCP sockets. If this argument is NULL, the endpoint will create an internal ioqueue instance. </td></tr>
    <tr><td class="paramname">worker_cnt</td><td>Specify the number of worker threads to be created to poll the ioqueue. </td></tr>
    <tr><td class="paramname">p_endpt</td><td>Pointer to receive the endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>, <a class="el" href="group__PJMEDIA__AUDIODEV__SUBSYSTEM__API.htm#gaa66ec5427ffc9ede38c4902d165f1c91">pjmedia_aud_subsys_init()</a>, <a class="el" href="group__PJMEDIA__AUDIODEV__SUBSYSTEM__API.htm#ga385d198c8d30dc0142970d9a84de10cf">pjmedia_aud_subsys_shutdown()</a>, and <a class="el" href="group__PJMED__ENDPT.htm#gab8cc9deb21bec36fea8c3ef3a29e06d9">pjmedia_endpt_create2()</a>.</p>

</div>
</div>
<a id="ga20a3e8058d4932d5f9c4ade5b3349e74" name="ga20a3e8058d4932d5f9c4ade5b3349e74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga20a3e8058d4932d5f9c4ade5b3349e74">&#9670;&nbsp;</a></span>pjmedia_endpt_destroy2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_destroy2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destroy media endpoint instance.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>Media endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

<p class="reference">Referenced by <a class="el" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy()</a>.</p>

</div>
</div>
<a id="gae2304cc656a0e6a602f6cdaaec91bb19" name="gae2304cc656a0e6a602f6cdaaec91bb19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae2304cc656a0e6a602f6cdaaec91bb19">&#9670;&nbsp;</a></span>pjmedia_endpt_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destroy media endpoint instance and shutdown audio subsystem.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>Media endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac928151ecd64bc26385f2725100b559c">PJ_INLINE</a>, <a class="el" href="group__PJMEDIA__AUDIODEV__SUBSYSTEM__API.htm#ga385d198c8d30dc0142970d9a84de10cf">pjmedia_aud_subsys_shutdown()</a>, and <a class="el" href="group__PJMED__ENDPT.htm#ga20a3e8058d4932d5f9c4ade5b3349e74">pjmedia_endpt_destroy2()</a>.</p>

</div>
</div>
<a id="ga7e80870363bd577710521726816c32b0" name="ga7e80870363bd577710521726816c32b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7e80870363bd577710521726816c32b0">&#9670;&nbsp;</a></span>pjmedia_endpt_set_flag()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_set_flag </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__ENDPT.htm#ga9124433e83a40740fc28f19bc7532ce6">pjmedia_endpt_flag</a>&#160;</td>
          <td class="paramname"><em>flag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Change the value of a flag.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>Media endpoint. </td></tr>
    <tr><td class="paramname">flag</td><td>The flag. </td></tr>
    <tr><td class="paramname">value</td><td>Pointer to the value to be set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga11020e92ec7131382d0d2d44a96f7f44" name="ga11020e92ec7131382d0d2d44a96f7f44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11020e92ec7131382d0d2d44a96f7f44">&#9670;&nbsp;</a></span>pjmedia_endpt_get_flag()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_get_flag </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__ENDPT.htm#ga9124433e83a40740fc28f19bc7532ce6">pjmedia_endpt_flag</a>&#160;</td>
          <td class="paramname"><em>flag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve the value of a flag.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>Media endpoint. </td></tr>
    <tr><td class="paramname">flag</td><td>The flag. </td></tr>
    <tr><td class="paramname">value</td><td>Pointer to store the result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gad74122b8cc21e32b313b4d255bf1a977" name="gad74122b8cc21e32b313b4d255bf1a977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad74122b8cc21e32b313b4d255bf1a977">&#9670;&nbsp;</a></span>pjmedia_endpt_get_ioqueue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> * pjmedia_endpt_get_ioqueue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the ioqueue instance of the media endpoint.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The ioqueue instance of the media endpoint. </dd></dl>

</div>
</div>
<a id="gab055243714063c448c8973654122b487" name="gab055243714063c448c8973654122b487"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab055243714063c448c8973654122b487">&#9670;&nbsp;</a></span>pjmedia_endpt_get_thread_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pjmedia_endpt_get_thread_count </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the number of worker threads on the media endpoint</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of worker threads on the media endpoint </dd></dl>

</div>
</div>
<a id="gaba4fcff7f82c9d11f4b9e66319a96989" name="gaba4fcff7f82c9d11f4b9e66319a96989"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaba4fcff7f82c9d11f4b9e66319a96989">&#9670;&nbsp;</a></span>pjmedia_endpt_get_thread()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gacb9d46aed6813bf142efc1c3db7a2d17">pj_thread_t</a> * pjmedia_endpt_get_thread </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get a reference to one of the worker threads of the media endpoint</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint instance. </td></tr>
    <tr><td class="paramname">index</td><td>The index of the thread: 0&lt;= index &lt; thread_cnt</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>pj_thread_t or NULL </dd></dl>

</div>
</div>
<a id="ga8842a7a291d559130fbda6533c1fdb98" name="ga8842a7a291d559130fbda6533c1fdb98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8842a7a291d559130fbda6533c1fdb98">&#9670;&nbsp;</a></span>pjmedia_endpt_stop_threads()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_stop_threads </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Stop and destroy the worker threads of the media endpoint</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gaa9f83d4ddcc203964c935b3ad02072b8" name="gaa9f83d4ddcc203964c935b3ad02072b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa9f83d4ddcc203964c935b3ad02072b8">&#9670;&nbsp;</a></span>pjmedia_endpt_create_pool()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> * pjmedia_endpt_create_pool </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>initial</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>increment</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Request the media endpoint to create pool.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint instance. </td></tr>
    <tr><td class="paramname">name</td><td>Name to be assigned to the pool. </td></tr>
    <tr><td class="paramname">initial</td><td>Initial pool size, in bytes. </td></tr>
    <tr><td class="paramname">increment</td><td>Increment size, in bytes.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Memory pool. </dd></dl>

</div>
</div>
<a id="gae6604d72aa6d89355ea9e0483d04060c" name="gae6604d72aa6d89355ea9e0483d04060c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae6604d72aa6d89355ea9e0483d04060c">&#9670;&nbsp;</a></span>pjmedia_endpt_get_codec_mgr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpjmedia__codec__mgr.htm">pjmedia_codec_mgr</a> * pjmedia_endpt_get_codec_mgr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the codec manager instance of the media endpoint.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The instance of codec manager belonging to this media endpoint. </dd></dl>

</div>
</div>
<a id="gaa49360a690c292dddd722b39c2f8c8bb" name="gaa49360a690c292dddd722b39c2f8c8bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa49360a690c292dddd722b39c2f8c8bb">&#9670;&nbsp;</a></span>pjmedia_endpt_create_sdp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_create_sdp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>stream_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sock__info.htm">pjmedia_sock_info</a>&#160;</td>
          <td class="paramname"><em>sock_info</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> **&#160;</td>
          <td class="paramname"><em>p_sdp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a SDP session description that describes the endpoint capability.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to use to create the SDP descriptor. </td></tr>
    <tr><td class="paramname">stream_cnt</td><td>Number of elements in the sock_info array. This also denotes the maximum number of streams (i.e. the "m=" lines) that will be created in the SDP. By convention, if this value is greater than one, the first media will be audio and the remaining media is video. </td></tr>
    <tr><td class="paramname">sock_info</td><td>Array of socket transport information. One transport is needed for each media stream, and each transport consists of an RTP and RTCP socket pair. </td></tr>
    <tr><td class="paramname">p_sdp</td><td>Pointer to receive SDP session descriptor.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga3b4651e9905f19b1a4ba0d73cf31b4bf" name="ga3b4651e9905f19b1a4ba0d73cf31b4bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3b4651e9905f19b1a4ba0d73cf31b4bf">&#9670;&nbsp;</a></span>pjmedia_endpt_create_base_sdp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_create_base_sdp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>sess_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *&#160;</td>
          <td class="paramname"><em>origin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__session.htm">pjmedia_sdp_session</a> **&#160;</td>
          <td class="paramname"><em>p_sdp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a "blank" SDP session description. The SDP will contain basic SDP fields such as origin, time, and name, but without any media lines.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to allocate memory from. </td></tr>
    <tr><td class="paramname">sess_name</td><td>Optional SDP session name, or NULL to use default value. </td></tr>
    <tr><td class="paramname">origin</td><td>Address to put in the origin field. </td></tr>
    <tr><td class="paramname">p_sdp</td><td>Pointer to receive the created SDP session.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gacda8e2fcd2fa7d0f02f282a136871309" name="gacda8e2fcd2fa7d0f02f282a136871309"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacda8e2fcd2fa7d0f02f282a136871309">&#9670;&nbsp;</a></span>pjmedia_endpt_create_audio_sdp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_create_audio_sdp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sock__info.htm">pjmedia_sock_info</a> *&#160;</td>
          <td class="paramname"><em>si</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a> *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> **&#160;</td>
          <td class="paramname"><em>p_m</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create SDP media line for audio media.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to allocate memory from. </td></tr>
    <tr><td class="paramname">si</td><td>Socket information. </td></tr>
    <tr><td class="paramname">options</td><td>Options parameter, can be NULL. If set to NULL, default values will be used. </td></tr>
    <tr><td class="paramname">p_m</td><td>Pointer to receive the created SDP media.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaa2e3c803aaa5847f463bec79c69f60ae" name="gaa2e3c803aaa5847f463bec79c69f60ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa2e3c803aaa5847f463bec79c69f60ae">&#9670;&nbsp;</a></span>pjmedia_endpt_create_video_sdp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_create_video_sdp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__sock__info.htm">pjmedia_sock_info</a> *&#160;</td>
          <td class="paramname"><em>si</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjmedia__endpt__create__sdp__param.htm">pjmedia_endpt_create_sdp_param</a> *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__sdp__media.htm">pjmedia_sdp_media</a> **&#160;</td>
          <td class="paramname"><em>p_m</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create SDP media line for video media.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to allocate memory from. </td></tr>
    <tr><td class="paramname">si</td><td>Socket information. </td></tr>
    <tr><td class="paramname">options</td><td>Options parameter, can be NULL. If set to NULL, default values will be used. </td></tr>
    <tr><td class="paramname">p_m</td><td>Pointer to receive the created SDP media.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga637b08b81c21e7afa5577f795bf86c71" name="ga637b08b81c21e7afa5577f795bf86c71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga637b08b81c21e7afa5577f795bf86c71">&#9670;&nbsp;</a></span>pjmedia_endpt_dump()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_dump </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Dump media endpoint capabilities.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gae923d54afcf699587099395fed0cb53d" name="gae923d54afcf699587099395fed0cb53d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae923d54afcf699587099395fed0cb53d">&#9670;&nbsp;</a></span>pjmedia_endpt_atexit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_endpt_atexit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *&#160;</td>
          <td class="paramname"><em>endpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJMED__ENDPT.htm#ga04eb4fc874b3c7b093d50d0511b23159">pjmedia_endpt_exit_callback</a>&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Register cleanup function to be called by media endpoint when <a class="el" href="group__PJMED__ENDPT.htm#gae2304cc656a0e6a602f6cdaaec91bb19">pjmedia_endpt_destroy()</a> is called. Note that application should not use or access any endpoint resource (such as pool, ioqueue) from within the callback as such resource may have been released when the callback function is invoked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpt</td><td>The media endpoint. </td></tr>
    <tr><td class="paramname">func</td><td>The function to be registered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
