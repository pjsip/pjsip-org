<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj::Endpoint Class Reference (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacepj.htm">pj</a></li><li class="navelem"><a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">pj::Endpoint Class Reference<div class="ingroups"><a class="el" href="group__PJSUA2__Ref.htm">pjsua2 API Reference</a> &raquo; <a class="el" href="group__PJSUA2__UA.htm">Endpoint</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;endpoint.hpp&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5813b00098f418645f6b6e4d831dbb10"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a5813b00098f418645f6b6e4d831dbb10">Endpoint</a> ()</td></tr>
<tr class="separator:a5813b00098f418645f6b6e4d831dbb10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804fbc429b1b3ec998db082a3d46648f"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a804fbc429b1b3ec998db082a3d46648f">~Endpoint</a> ()</td></tr>
<tr class="separator:a804fbc429b1b3ec998db082a3d46648f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad44722129a7da0bf9af3068d6559a367"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj_1_1Version.htm">Version</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ad44722129a7da0bf9af3068d6559a367">libVersion</a> () const</td></tr>
<tr class="separator:ad44722129a7da0bf9af3068d6559a367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1e71b8a8a8aac472da2865dc686c863"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#af1e71b8a8a8aac472da2865dc686c863">libCreate</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:af1e71b8a8a8aac472da2865dc686c863"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36eb0545dfb8f7bbf51449e003291ee8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga1acf2a655ce23df2632dca4f52bc3607">pjsua_state</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a36eb0545dfb8f7bbf51449e003291ee8">libGetState</a> () const</td></tr>
<tr class="separator:a36eb0545dfb8f7bbf51449e003291ee8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0948de89ef57bcdfa061bc2679fc6aae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a0948de89ef57bcdfa061bc2679fc6aae">libInit</a> (const <a class="el" href="structpj_1_1EpConfig.htm">EpConfig</a> &amp;prmEpConfig) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a0948de89ef57bcdfa061bc2679fc6aae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3f1dd0605fa8385e2762ad91c7a7bf4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ae3f1dd0605fa8385e2762ad91c7a7bf4">libStart</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:ae3f1dd0605fa8385e2762ad91c7a7bf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dad54c1ed16bcfcf1cdecabf05db168"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a7dad54c1ed16bcfcf1cdecabf05db168">libRegisterThread</a> (const string &amp;name) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a7dad54c1ed16bcfcf1cdecabf05db168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae428230e3268d9c53928fbff33e2f5e0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ae428230e3268d9c53928fbff33e2f5e0">libIsThreadRegistered</a> ()</td></tr>
<tr class="separator:ae428230e3268d9c53928fbff33e2f5e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97813292d9bcb14389559eee79dfd2e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a97813292d9bcb14389559eee79dfd2e6">libStopWorkerThreads</a> ()</td></tr>
<tr class="separator:a97813292d9bcb14389559eee79dfd2e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade134bcab9fdbef563236237034ec3ec"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ade134bcab9fdbef563236237034ec3ec">libHandleEvents</a> (unsigned msec_timeout)</td></tr>
<tr class="separator:ade134bcab9fdbef563236237034ec3ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b945ff391f030b6237a793e726ab017"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a4b945ff391f030b6237a793e726ab017">libDestroy</a> (unsigned prmFlags=0) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a4b945ff391f030b6237a793e726ab017"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afce9c49849a50e12f15ab1c9418ccae4"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#afce9c49849a50e12f15ab1c9418ccae4">utilStrError</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> prmErr)</td></tr>
<tr class="separator:afce9c49849a50e12f15ab1c9418ccae4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bf85e3ba3377365022b83d9e4d8797f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a1bf85e3ba3377365022b83d9e4d8797f">utilLogWrite</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> prmLevel, const string &amp;prmSender, const string &amp;prmMsg)</td></tr>
<tr class="separator:a1bf85e3ba3377365022b83d9e4d8797f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c7d427f225e78e65fbdf7d31a2507fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a9c7d427f225e78e65fbdf7d31a2507fc">utilLogWrite</a> (<a class="el" href="structpj_1_1LogEntry.htm">LogEntry</a> &amp;e)</td></tr>
<tr class="separator:a9c7d427f225e78e65fbdf7d31a2507fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a950370a9ae755dec3c48605e78794e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a6a950370a9ae755dec3c48605e78794e">utilVerifySipUri</a> (const string &amp;prmUri)</td></tr>
<tr class="separator:a6a950370a9ae755dec3c48605e78794e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9bcdb9a219bf51ade2794c5475ebf4"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a5f9bcdb9a219bf51ade2794c5475ebf4">utilVerifyUri</a> (const string &amp;prmUri)</td></tr>
<tr class="separator:a5f9bcdb9a219bf51ade2794c5475ebf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e17ba10ff53e11c7ea930d381f6ffb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a1e17ba10ff53e11c7ea930d381f6ffb2">utilTimerSchedule</a> (unsigned prmMsecDelay, <a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a> prmUserData) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a1e17ba10ff53e11c7ea930d381f6ffb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45fab96ad58b168078efa0570846adc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a45fab96ad58b168078efa0570846adc2">utilTimerCancel</a> (<a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a> prmToken)</td></tr>
<tr class="separator:a45fab96ad58b168078efa0570846adc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2afd3f6dbc51bf81771603b549a5061e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a2afd3f6dbc51bf81771603b549a5061e">utilAddPendingJob</a> (PendingJob *job)</td></tr>
<tr class="separator:a2afd3f6dbc51bf81771603b549a5061e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8af53f46d1f220a9ce64e346454f6776"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#gabe28f85f8c93408a2da22ce02d498ac0">IntVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a8af53f46d1f220a9ce64e346454f6776">utilSslGetAvailableCiphers</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a8af53f46d1f220a9ce64e346454f6776"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f160fd6e28add68631c513e8addd8cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a5f160fd6e28add68631c513e8addd8cb">natDetectType</a> (void) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a5f160fd6e28add68631c513e8addd8cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ae85ab21d785c4acc59b6475758b9a0"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjnath/docs/pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a4ae85ab21d785c4acc59b6475758b9a0">natGetType</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a4ae85ab21d785c4acc59b6475758b9a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a770e9e0b5995e4a4f3ebc38af18563"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a7a770e9e0b5995e4a4f3ebc38af18563">natUpdateStunServers</a> (const <a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> &amp;prmServers, bool prmWait) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a7a770e9e0b5995e4a4f3ebc38af18563"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6914154f65d7f100404952dcece32f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ac6914154f65d7f100404952dcece32f0">natCheckStunServers</a> (const <a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> &amp;prmServers, bool prmWait, <a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a> prmUserData) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:ac6914154f65d7f100404952dcece32f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501c78c6db6cead48a7a996bd90f0387"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a501c78c6db6cead48a7a996bd90f0387">natCancelCheckStunServers</a> (<a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a> token, bool notify_cb=false) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a501c78c6db6cead48a7a996bd90f0387"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8ef69249865cc0c482edf9e4add403a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#af8ef69249865cc0c482edf9e4add403a">transportCreate</a> (<a class="el" href="sip__types_8h.htm#a281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a> type, const <a class="el" href="structpj_1_1TransportConfig.htm">TransportConfig</a> &amp;cfg) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:af8ef69249865cc0c482edf9e4add403a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8996ed2e65e9c2125cb042cd945d30d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#gabe28f85f8c93408a2da22ce02d498ac0">IntVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a8996ed2e65e9c2125cb042cd945d30d0">transportEnum</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a8996ed2e65e9c2125cb042cd945d30d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b250fe6936497e7ff2ef938bdc78b76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj_1_1TransportInfo.htm">TransportInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a6b250fe6936497e7ff2ef938bdc78b76">transportGetInfo</a> (<a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a> id) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a6b250fe6936497e7ff2ef938bdc78b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917ce810151bce8b066b31b06a3dc175"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a917ce810151bce8b066b31b06a3dc175">transportSetEnable</a> (<a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a> id, bool enabled) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a917ce810151bce8b066b31b06a3dc175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ace91df9aebcfae1d065f44fc1e611c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a9ace91df9aebcfae1d065f44fc1e611c">transportClose</a> (<a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a> id) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a9ace91df9aebcfae1d065f44fc1e611c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a150e37fc529c4ad15fbbfda4c9c98a8c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a150e37fc529c4ad15fbbfda4c9c98a8c">transportShutdown</a> (<a class="el" href="group__PJSUA2__TYPES.htm#gac21f5fad8a76f33eb73d905a880b480d">TransportHandle</a> tp) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a150e37fc529c4ad15fbbfda4c9c98a8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f22f14871e34f43fb8db67445a6d57c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a6f22f14871e34f43fb8db67445a6d57c">hangupAllCalls</a> (void)</td></tr>
<tr class="separator:a6f22f14871e34f43fb8db67445a6d57c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a941c6af9ab95e56989c3a20d6f339368"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a941c6af9ab95e56989c3a20d6f339368">mediaAdd</a> (<a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;media)</td></tr>
<tr class="separator:a941c6af9ab95e56989c3a20d6f339368"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa91cb569484233cb3aba70918250ea6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#afa91cb569484233cb3aba70918250ea6">mediaRemove</a> (<a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;media)</td></tr>
<tr class="separator:afa91cb569484233cb3aba70918250ea6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b9eb6a5ae201dcb60b866c705042bce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a6b9eb6a5ae201dcb60b866c705042bce">mediaExists</a> (const <a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;media) const</td></tr>
<tr class="separator:a6b9eb6a5ae201dcb60b866c705042bce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff66e63efb4adddb646d07dea3eb0512"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#aff66e63efb4adddb646d07dea3eb0512">mediaMaxPorts</a> () const</td></tr>
<tr class="separator:aff66e63efb4adddb646d07dea3eb0512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75e9664368c7befa3490314a65e7d214"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a75e9664368c7befa3490314a65e7d214">mediaActivePorts</a> () const</td></tr>
<tr class="separator:a75e9664368c7befa3490314a65e7d214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f3b94131a087c8823b9cb38a68fc815"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__PJSUA2__MED.htm#ga175bdcc3892303943f33facb2d14cbde">AudioMediaVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a2f3b94131a087c8823b9cb38a68fc815">mediaEnumPorts</a> () const PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a2f3b94131a087c8823b9cb38a68fc815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aade33eea597789bc728891be26413442"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__MED.htm#gad5da6dbc7c64a3a1f7257a212d6e5ea2">AudioMediaVector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#aade33eea597789bc728891be26413442">mediaEnumPorts2</a> () const PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:aade33eea597789bc728891be26413442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2484d1264779f527ca5b72960661adc3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__MED.htm#ga8d911802eb2269c0f6716c7dcbcc2f50">VideoMediaVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a2484d1264779f527ca5b72960661adc3">mediaEnumVidPorts</a> () const PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a2484d1264779f527ca5b72960661adc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad04137f49c7778d78ae21db11590b369"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classpj_1_1AudDevManager.htm">AudDevManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ad04137f49c7778d78ae21db11590b369">audDevManager</a> ()</td></tr>
<tr class="separator:ad04137f49c7778d78ae21db11590b369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae220795879170330a161b41eedaa619b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classpj_1_1VidDevManager.htm">VidDevManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ae220795879170330a161b41eedaa619b">vidDevManager</a> ()</td></tr>
<tr class="separator:ae220795879170330a161b41eedaa619b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a079f265baf12f9b6c1e8bb8cca895766"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__PJSUA2__MED.htm#ga103b4fb801b767c2416f9591d17a8616">CodecInfoVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a079f265baf12f9b6c1e8bb8cca895766">codecEnum</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a079f265baf12f9b6c1e8bb8cca895766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51163c2111e32b9b7542a6af92157c4a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__MED.htm#gaa2de5873a2023ed4d00971f8eff95c30">CodecInfoVector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a51163c2111e32b9b7542a6af92157c4a">codecEnum2</a> () const PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a51163c2111e32b9b7542a6af92157c4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7bdb84ea89e920e6fc67ba678ea185c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ab7bdb84ea89e920e6fc67ba678ea185c">codecSetPriority</a> (const string &amp;codec_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> priority) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:ab7bdb84ea89e920e6fc67ba678ea185c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7a244ac0b59cf31851042c9fdb89a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj_1_1CodecParam.htm">CodecParam</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a6b7a244ac0b59cf31851042c9fdb89a8">codecGetParam</a> (const string &amp;codec_id) const PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a6b7a244ac0b59cf31851042c9fdb89a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8eb6bf37b3c24ca78ad6ac63fd66505"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#af8eb6bf37b3c24ca78ad6ac63fd66505">codecSetParam</a> (const string &amp;codec_id, const <a class="el" href="structpj_1_1CodecParam.htm">CodecParam</a> param) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:af8eb6bf37b3c24ca78ad6ac63fd66505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5617b6a04fa5f2dfc350fa040577a61"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__PJSUA2__MED.htm#ga103b4fb801b767c2416f9591d17a8616">CodecInfoVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#af5617b6a04fa5f2dfc350fa040577a61">videoCodecEnum</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:af5617b6a04fa5f2dfc350fa040577a61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18dc993c7e4a2e46d9c5db1d14bd9f7f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__MED.htm#gaa2de5873a2023ed4d00971f8eff95c30">CodecInfoVector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a18dc993c7e4a2e46d9c5db1d14bd9f7f">videoCodecEnum2</a> () const PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a18dc993c7e4a2e46d9c5db1d14bd9f7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5bca249a2f3b18522de7d91f3df33a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ad5bca249a2f3b18522de7d91f3df33a9">videoCodecSetPriority</a> (const string &amp;codec_id, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> priority) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:ad5bca249a2f3b18522de7d91f3df33a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8288b37cc57a8f4dac9e98056363477"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj_1_1VidCodecParam.htm">VidCodecParam</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ad8288b37cc57a8f4dac9e98056363477">getVideoCodecParam</a> (const string &amp;codec_id) const PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:ad8288b37cc57a8f4dac9e98056363477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a926cac9d59c0bd80968fa57f664fe3df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a926cac9d59c0bd80968fa57f664fe3df">setVideoCodecParam</a> (const string &amp;codec_id, const <a class="el" href="structpj_1_1VidCodecParam.htm">VidCodecParam</a> &amp;param) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a926cac9d59c0bd80968fa57f664fe3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af062e428e1656b2ece241276f57f86b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#af062e428e1656b2ece241276f57f86b5">resetVideoCodecParam</a> (const string &amp;codec_id) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:af062e428e1656b2ece241276f57f86b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5eeb229d502606e847e5d4e8d74b33c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#af5eeb229d502606e847e5d4e8d74b33c">srtpCryptoEnum</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:af5eeb229d502606e847e5d4e8d74b33c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade15aa32898fbfd3c5c64c51e625c2e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ade15aa32898fbfd3c5c64c51e625c2e5">handleIpChange</a> (const <a class="el" href="structpj_1_1IpChangeParam.htm">IpChangeParam</a> &amp;param) PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:ade15aa32898fbfd3c5c64c51e625c2e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e140e65b0e572adcbe68155ef98888a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a9e140e65b0e572adcbe68155ef98888a">onNatDetectionComplete</a> (const <a class="el" href="structpj_1_1OnNatDetectionCompleteParam.htm">OnNatDetectionCompleteParam</a> &amp;prm)</td></tr>
<tr class="separator:a9e140e65b0e572adcbe68155ef98888a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e3448694cb55857de8096a000c5185c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a9e3448694cb55857de8096a000c5185c">onNatCheckStunServersComplete</a> (const <a class="el" href="structpj_1_1OnNatCheckStunServersCompleteParam.htm">OnNatCheckStunServersCompleteParam</a> &amp;prm)</td></tr>
<tr class="separator:a9e3448694cb55857de8096a000c5185c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef1c7b9cafbba48a2b3b05b7501f6526"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#aef1c7b9cafbba48a2b3b05b7501f6526">onTransportState</a> (const <a class="el" href="structpj_1_1OnTransportStateParam.htm">OnTransportStateParam</a> &amp;prm)</td></tr>
<tr class="separator:aef1c7b9cafbba48a2b3b05b7501f6526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a295811b720685e14c402fcae3b1cac2f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a295811b720685e14c402fcae3b1cac2f">onTimer</a> (const <a class="el" href="structpj_1_1OnTimerParam.htm">OnTimerParam</a> &amp;prm)</td></tr>
<tr class="separator:a295811b720685e14c402fcae3b1cac2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9e5b50345ace669d098e4f32c3d02e6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#ad9e5b50345ace669d098e4f32c3d02e6">onSelectAccount</a> (<a class="el" href="structpj_1_1OnSelectAccountParam.htm">OnSelectAccountParam</a> &amp;prm)</td></tr>
<tr class="separator:ad9e5b50345ace669d098e4f32c3d02e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df62e55d6b709dad12ed874643917b9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a5df62e55d6b709dad12ed874643917b9">onIpChangeProgress</a> (<a class="el" href="structpj_1_1OnIpChangeProgressParam.htm">OnIpChangeProgressParam</a> &amp;prm)</td></tr>
<tr class="separator:a5df62e55d6b709dad12ed874643917b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acccf86db0b985cf6b186264cb8502681"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#acccf86db0b985cf6b186264cb8502681">onMediaEvent</a> (<a class="el" href="structpj_1_1OnMediaEventParam.htm">OnMediaEventParam</a> &amp;prm)</td></tr>
<tr class="separator:acccf86db0b985cf6b186264cb8502681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1452e993afa5a180b6c05c6721ead003"><td class="memItemLeft" align="right" valign="top">virtual <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a1452e993afa5a180b6c05c6721ead003">onCredAuth</a> (<a class="el" href="structpj_1_1OnCredAuthParam.htm">OnCredAuthParam</a> &amp;prm)</td></tr>
<tr class="separator:a1452e993afa5a180b6c05c6721ead003"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a341b213202244345802ca64a56e3df86"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpj_1_1Endpoint.htm#a341b213202244345802ca64a56e3df86">instance</a> () PJSUA2_THROW(<a class="el" href="structpj_1_1Error.htm">Error</a>)</td></tr>
<tr class="separator:a341b213202244345802ca64a56e3df86"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:afe88acb4e40c6814281aa640e63a4a16"><td class="memItemLeft" align="right" valign="top"><a id="afe88acb4e40c6814281aa640e63a4a16"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Account</b></td></tr>
<tr class="separator:afe88acb4e40c6814281aa640e63a4a16"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a> represents an instance of pjsua library. There can only be one instance of pjsua library in an application, hence this class is a singleton. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5813b00098f418645f6b6e4d831dbb10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5813b00098f418645f6b6e4d831dbb10">&#9670;&nbsp;</a></span>Endpoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj::Endpoint::Endpoint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Default constructor </p>

</div>
</div>
<a id="a804fbc429b1b3ec998db082a3d46648f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a804fbc429b1b3ec998db082a3d46648f">&#9670;&nbsp;</a></span>~Endpoint()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual pj::Endpoint::~Endpoint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Virtual destructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a341b213202244345802ca64a56e3df86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a341b213202244345802ca64a56e3df86">&#9670;&nbsp;</a></span>instance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a>&amp; pj::Endpoint::instance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Retrieve the singleton instance of the endpoint </p>

</div>
</div>
<a id="ad44722129a7da0bf9af3068d6559a367"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad44722129a7da0bf9af3068d6559a367">&#9670;&nbsp;</a></span>libVersion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj_1_1Version.htm">Version</a> pj::Endpoint::libVersion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get library version. </p>

</div>
</div>
<a id="af1e71b8a8a8aac472da2865dc686c863"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1e71b8a8a8aac472da2865dc686c863">&#9670;&nbsp;</a></span>libCreate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::libCreate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Instantiate pjsua application. Application must call this function before calling any other functions, to make sure that the underlying libraries are properly initialized. Once this function has returned success, application must call <a class="el" href="classpj_1_1Endpoint.htm#a4b945ff391f030b6237a793e726ab017">libDestroy()</a> before quitting. </p>

</div>
</div>
<a id="a36eb0545dfb8f7bbf51449e003291ee8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36eb0545dfb8f7bbf51449e003291ee8">&#9670;&nbsp;</a></span>libGetState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga1acf2a655ce23df2632dca4f52bc3607">pjsua_state</a> pj::Endpoint::libGetState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get library state.</p>
<dl class="section return"><dt>Returns</dt><dd>library state. </dd></dl>

</div>
</div>
<a id="a0948de89ef57bcdfa061bc2679fc6aae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0948de89ef57bcdfa061bc2679fc6aae">&#9670;&nbsp;</a></span>libInit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::libInit </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj_1_1EpConfig.htm">EpConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>prmEpConfig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initialize pjsua with the specified settings. All the settings are optional, and the default values will be used when the config is not specified.</p>
<p>Note that create() MUST be called before calling this function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmEpConfig</td><td><a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a> configurations </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae3f1dd0605fa8385e2762ad91c7a7bf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3f1dd0605fa8385e2762ad91c7a7bf4">&#9670;&nbsp;</a></span>libStart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::libStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="classpj_1_1Call.htm">Call</a> this function after all initialization is done, so that the library can do additional checking set up. Application may call this function any time after init(). </p>

</div>
</div>
<a id="a7dad54c1ed16bcfcf1cdecabf05db168"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dad54c1ed16bcfcf1cdecabf05db168">&#9670;&nbsp;</a></span>libRegisterThread()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::libRegisterThread </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Register a thread that was created by external or native API to the library. Note that each time this function is called, it will allocate some memory to store the thread description, which will only be freed when the library is destroyed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The optional name to be assigned to the thread. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae428230e3268d9c53928fbff33e2f5e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae428230e3268d9c53928fbff33e2f5e0">&#9670;&nbsp;</a></span>libIsThreadRegistered()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::Endpoint::libIsThreadRegistered </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if this thread has been registered to the library. Note that this function is only applicable for library main &amp; worker threads and external/native threads registered using <a class="el" href="classpj_1_1Endpoint.htm#a7dad54c1ed16bcfcf1cdecabf05db168">libRegisterThread()</a>. </p>

</div>
</div>
<a id="a97813292d9bcb14389559eee79dfd2e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97813292d9bcb14389559eee79dfd2e6">&#9670;&nbsp;</a></span>libStopWorkerThreads()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::libStopWorkerThreads </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Stop all worker threads. </p>

</div>
</div>
<a id="ade134bcab9fdbef563236237034ec3ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade134bcab9fdbef563236237034ec3ec">&#9670;&nbsp;</a></span>libHandleEvents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pj::Endpoint::libHandleEvents </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>msec_timeout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Poll pjsua for events, and if necessary block the caller thread for the specified maximum interval (in miliseconds).</p>
<p>Application doesn't normally need to call this function if it has configured worker thread (<em>thread_cnt</em> field) in <a class="el" href="structpjsua__config.htm">pjsua_config</a> structure, because polling then will be done by these worker threads instead.</p>
<p>If EpConfig::UaConfig::mainThreadOnly is enabled and this function is called from the main thread (by default the main thread is thread that calls <a class="el" href="classpj_1_1Endpoint.htm#af1e71b8a8a8aac472da2865dc686c863">libCreate()</a>), this function will also scan and run any pending jobs in the list.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msec_timeout</td><td>Maximum time to wait, in miliseconds.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of events that have been handled during the poll. Negative value indicates error, and application can retrieve the error as (status = -return_value). </dd></dl>

</div>
</div>
<a id="a4b945ff391f030b6237a793e726ab017"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b945ff391f030b6237a793e726ab017">&#9670;&nbsp;</a></span>libDestroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::libDestroy </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>prmFlags</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroy pjsua. Application is recommended to perform graceful shutdown before calling this function (such as unregister the account from the SIP server, terminate presense subscription, and hangup active calls), however, this function will do all of these if it finds there are active sessions that need to be terminated. This function will block for few seconds to wait for replies from remote.</p>
<p>Application.may safely call this function more than once if it doesn't keep track of it's state.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmFlags</td><td>Combination of pjsua_destroy_flag enumeration. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afce9c49849a50e12f15ab1c9418ccae4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afce9c49849a50e12f15ab1c9418ccae4">&#9670;&nbsp;</a></span>utilStrError()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string pj::Endpoint::utilStrError </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td>
          <td class="paramname"><em>prmErr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieve the error string for the specified status code.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmErr</td><td>The error code. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1bf85e3ba3377365022b83d9e4d8797f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bf85e3ba3377365022b83d9e4d8797f">&#9670;&nbsp;</a></span>utilLogWrite() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::utilLogWrite </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>prmLevel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>prmSender</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>prmMsg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write a log message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmLevel</td><td>Log verbosity level (1-5) </td></tr>
    <tr><td class="paramname">prmSender</td><td>The log sender. </td></tr>
    <tr><td class="paramname">prmMsg</td><td>The log message. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9c7d427f225e78e65fbdf7d31a2507fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c7d427f225e78e65fbdf7d31a2507fc">&#9670;&nbsp;</a></span>utilLogWrite() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::utilLogWrite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj_1_1LogEntry.htm">LogEntry</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write a log entry. Application must implement its own custom <a class="el" href="classpj_1_1LogWriter.htm">LogWriter</a> and this function will then call the <a class="el" href="classpj_1_1LogWriter.htm#acf091896e6ef76a5ad4103952b6d8186">LogWriter::write()</a> method. Note that this function does not call PJSIP's internal logging functionality. For that, you should use utilLogWrite(prmLevel, prmSender, prmMsg) above.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">e</td><td>The log entry. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6a950370a9ae755dec3c48605e78794e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a950370a9ae755dec3c48605e78794e">&#9670;&nbsp;</a></span>utilVerifySipUri()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj::Endpoint::utilVerifySipUri </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>prmUri</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is a utility function to verify that valid SIP url is given. If the URL is a valid SIP/SIPS scheme, PJ_SUCCESS will be returned.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmUri</td><td>The URL string.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code.</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classpj_1_1Endpoint.htm#a5f9bcdb9a219bf51ade2794c5475ebf4">utilVerifyUri()</a> </dd></dl>

</div>
</div>
<a id="a5f9bcdb9a219bf51ade2794c5475ebf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f9bcdb9a219bf51ade2794c5475ebf4">&#9670;&nbsp;</a></span>utilVerifyUri()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj::Endpoint::utilVerifyUri </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>prmUri</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is a utility function to verify that valid URI is given. Unlike <a class="el" href="classpj_1_1Endpoint.htm#a6a950370a9ae755dec3c48605e78794e">utilVerifySipUri()</a>, this function will return PJ_SUCCESS if tel: URI is given.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmUri</td><td>The URL string.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code.</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__PJSUA__LIB__BASE.htm#gad6f3f10da98b76dc9d4fde50d923615f">pjsua_verify_sip_url()</a> </dd></dl>

</div>
</div>
<a id="a1e17ba10ff53e11c7ea930d381f6ffb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e17ba10ff53e11c7ea930d381f6ffb2">&#9670;&nbsp;</a></span>utilTimerSchedule()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a> pj::Endpoint::utilTimerSchedule </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>prmMsecDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a>&#160;</td>
          <td class="paramname"><em>prmUserData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Schedule a timer with the specified interval and user data. When the interval elapsed, <a class="el" href="classpj_1_1Endpoint.htm#a295811b720685e14c402fcae3b1cac2f">onTimer()</a> callback will be called. Note that the callback may be executed by different thread, depending on whether worker thread is enabled or not.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmMsecDelay</td><td>The time interval in msec. </td></tr>
    <tr><td class="paramname">prmUserData</td><td>Arbitrary user data, to be given back to application in the callback.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Token to identify the timer, which could be given to <a class="el" href="classpj_1_1Endpoint.htm#a45fab96ad58b168078efa0570846adc2">utilTimerCancel()</a>. </dd></dl>

</div>
</div>
<a id="a45fab96ad58b168078efa0570846adc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45fab96ad58b168078efa0570846adc2">&#9670;&nbsp;</a></span>utilTimerCancel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::utilTimerCancel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a>&#160;</td>
          <td class="paramname"><em>prmToken</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Cancel previously scheduled timer with the specified timer token.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmToken</td><td>The timer token, which was returned from previous <a class="el" href="classpj_1_1Endpoint.htm#a1e17ba10ff53e11c7ea930d381f6ffb2">utilTimerSchedule()</a> call. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2afd3f6dbc51bf81771603b549a5061e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2afd3f6dbc51bf81771603b549a5061e">&#9670;&nbsp;</a></span>utilAddPendingJob()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::utilAddPendingJob </td>
          <td>(</td>
          <td class="paramtype">PendingJob *&#160;</td>
          <td class="paramname"><em>job</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Utility to register a pending job to be executed by main thread. If EpConfig::UaConfig::mainThreadOnly is false, the job will be executed immediately.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">job</td><td>The job class. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8af53f46d1f220a9ce64e346454f6776"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8af53f46d1f220a9ce64e346454f6776">&#9670;&nbsp;</a></span>utilSslGetAvailableCiphers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#gabe28f85f8c93408a2da22ce02d498ac0">IntVector</a> pj::Endpoint::utilSslGetAvailableCiphers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get cipher list supported by SSL/TLS backend. </p>

</div>
</div>
<a id="a5f160fd6e28add68631c513e8addd8cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f160fd6e28add68631c513e8addd8cb">&#9670;&nbsp;</a></span>natDetectType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::natDetectType </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is a utility function to detect NAT type in front of this endpoint. Once invoked successfully, this function will complete asynchronously and report the result in <a class="el" href="classpj_1_1Endpoint.htm#a9e140e65b0e572adcbe68155ef98888a">onNatDetectionComplete()</a>.</p>
<p>After NAT has been detected and the callback is called, application can get the detected NAT type by calling <a class="el" href="classpj_1_1Endpoint.htm#a4ae85ab21d785c4acc59b6475758b9a0">natGetType()</a>. Application can also perform NAT detection by calling <a class="el" href="classpj_1_1Endpoint.htm#a5f160fd6e28add68631c513e8addd8cb">natDetectType()</a> again at later time.</p>
<p>Note that STUN must be enabled to run this function successfully. </p>

</div>
</div>
<a id="a4ae85ab21d785c4acc59b6475758b9a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ae85ab21d785c4acc59b6475758b9a0">&#9670;&nbsp;</a></span>natGetType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjnath/docs/pjnath.tag:../../../pjnath/docs/html/" href="../../../pjnath/docs/html/group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a> pj::Endpoint::natGetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the NAT type as detected by <a class="el" href="classpj_1_1Endpoint.htm#a5f160fd6e28add68631c513e8addd8cb">natDetectType()</a> function. This function will only return useful NAT type after <a class="el" href="classpj_1_1Endpoint.htm#a5f160fd6e28add68631c513e8addd8cb">natDetectType()</a> has completed successfully and <a class="el" href="classpj_1_1Endpoint.htm#a9e140e65b0e572adcbe68155ef98888a">onNatDetectionComplete()</a> callback has been called.</p>
<p>Exception: if this function is called while detection is in progress, PJ_EPENDING exception will be raised. </p>

</div>
</div>
<a id="a7a770e9e0b5995e4a4f3ebc38af18563"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a770e9e0b5995e4a4f3ebc38af18563">&#9670;&nbsp;</a></span>natUpdateStunServers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::natUpdateStunServers </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> &amp;&#160;</td>
          <td class="paramname"><em>prmServers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>prmWait</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Update the STUN servers list. The <a class="el" href="classpj_1_1Endpoint.htm#a0948de89ef57bcdfa061bc2679fc6aae">libInit()</a> must have been called before calling this function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmServers</td><td>Array of STUN servers to try. The endpoint will try to resolve and contact each of the STUN server entry until it finds one that is usable. Each entry may be a domain name, host name, IP address, and it may contain an optional port number. For example:<ul>
<li>"pjsip.org" (domain name)</li>
<li>"sip.pjsip.org" (host name)</li>
<li>"pjsip.org:33478" (domain name and a non- standard port number)</li>
<li>"10.0.0.1:3478" (IP address and port number) </li>
</ul>
</td></tr>
    <tr><td class="paramname">prmWait</td><td>Specify if the function should block until it gets the result. In this case, the function will block while the resolution is being done, and the callback <a class="el" href="classpj_1_1Endpoint.htm#a9e3448694cb55857de8096a000c5185c">onNatCheckStunServersComplete()</a> will be called before this function returns. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac6914154f65d7f100404952dcece32f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6914154f65d7f100404952dcece32f0">&#9670;&nbsp;</a></span>natCheckStunServers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::natCheckStunServers </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> &amp;&#160;</td>
          <td class="paramname"><em>prmServers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>prmWait</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a>&#160;</td>
          <td class="paramname"><em>prmUserData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Auxiliary function to resolve and contact each of the STUN server entries (sequentially) to find which is usable. The <a class="el" href="classpj_1_1Endpoint.htm#a0948de89ef57bcdfa061bc2679fc6aae">libInit()</a> must have been called before calling this function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prmServers</td><td>Array of STUN servers to try. The endpoint will try to resolve and contact each of the STUN server entry until it finds one that is usable. Each entry may be a domain name, host name, IP address, and it may contain an optional port number. For example:<ul>
<li>"pjsip.org" (domain name)</li>
<li>"sip.pjsip.org" (host name)</li>
<li>"pjsip.org:33478" (domain name and a non- standard port number)</li>
<li>"10.0.0.1:3478" (IP address and port number) </li>
</ul>
</td></tr>
    <tr><td class="paramname">prmWait</td><td>Specify if the function should block until it gets the result. In this case, the function will block while the resolution is being done, and the callback will be called before this function returns. </td></tr>
    <tr><td class="paramname">prmUserData</td><td>Arbitrary user data to be passed back to application in the callback.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classpj_1_1Endpoint.htm#a501c78c6db6cead48a7a996bd90f0387">natCancelCheckStunServers()</a> </dd></dl>

</div>
</div>
<a id="a501c78c6db6cead48a7a996bd90f0387"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a501c78c6db6cead48a7a996bd90f0387">&#9670;&nbsp;</a></span>natCancelCheckStunServers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::natCancelCheckStunServers </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#ga5d3c76912c9b255080f7f21002a6b8ae">Token</a>&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>notify_cb</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Cancel pending STUN resolution which match the specified token.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">token</td><td>The token to match. This token was given to <a class="el" href="classpj_1_1Endpoint.htm#ac6914154f65d7f100404952dcece32f0">natCheckStunServers()</a> </td></tr>
    <tr><td class="paramname">notify_cb</td><td>Boolean to control whether the callback should be called for cancelled resolutions. When the callback is called, the status in the result will be set as PJ_ECANCELLED.</td></tr>
  </table>
  </dd>
</dl>
<p>Exception: PJ_ENOTFOUND if there is no matching one, or other error. </p>

</div>
</div>
<a id="af8ef69249865cc0c482edf9e4add403a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8ef69249865cc0c482edf9e4add403a">&#9670;&nbsp;</a></span>transportCreate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a> pj::Endpoint::transportCreate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sip__types_8h.htm#a281800a20f69fd1cfb7b552377a89f21">pjsip_transport_type_e</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj_1_1TransportConfig.htm">TransportConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>cfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create and start a new SIP transport according to the specified settings.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Transport type. </td></tr>
    <tr><td class="paramname">cfg</td><td>Transport configuration.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The transport ID. </dd></dl>

</div>
</div>
<a id="a8996ed2e65e9c2125cb042cd945d30d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8996ed2e65e9c2125cb042cd945d30d0">&#9670;&nbsp;</a></span>transportEnum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#gabe28f85f8c93408a2da22ce02d498ac0">IntVector</a> pj::Endpoint::transportEnum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enumerate all transports currently created in the system. This function will return all transport IDs, and application may then call <a class="el" href="classpj_1_1Endpoint.htm#a6b250fe6936497e7ff2ef938bdc78b76">transportGetInfo()</a> function to retrieve detailed information about the transport.</p>
<dl class="section return"><dt>Returns</dt><dd>Array of transport IDs. </dd></dl>

</div>
</div>
<a id="a6b250fe6936497e7ff2ef938bdc78b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b250fe6936497e7ff2ef938bdc78b76">&#9670;&nbsp;</a></span>transportGetInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj_1_1TransportInfo.htm">TransportInfo</a> pj::Endpoint::transportGetInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get information about transport.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Transport ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transport info. </dd></dl>

</div>
</div>
<a id="a917ce810151bce8b066b31b06a3dc175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a917ce810151bce8b066b31b06a3dc175">&#9670;&nbsp;</a></span>transportSetEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::transportSetEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Disable a transport or re-enable it. By default transport is always enabled after it is created. Disabling a transport does not necessarily close the socket, it will only discard incoming messages and prevent the transport from being used to send outgoing messages.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Transport ID. </td></tr>
    <tr><td class="paramname">enabled</td><td>Enable or disable the transport. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9ace91df9aebcfae1d065f44fc1e611c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ace91df9aebcfae1d065f44fc1e611c">&#9670;&nbsp;</a></span>transportClose()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::transportClose </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#ga2ecd820d8891d99dc84e769d76864a59">TransportId</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Close the transport. The system will wait until all transactions are closed while preventing new users from using the transport, and will close the transport when its usage count reaches zero.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Transport ID. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a150e37fc529c4ad15fbbfda4c9c98a8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a150e37fc529c4ad15fbbfda4c9c98a8c">&#9670;&nbsp;</a></span>transportShutdown()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::transportShutdown </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA2__TYPES.htm#gac21f5fad8a76f33eb73d905a880b480d">TransportHandle</a>&#160;</td>
          <td class="paramname"><em>tp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Start graceful shutdown procedure for this transport handle. After graceful shutdown has been initiated, no new reference can be obtained for the transport. However, existing objects that currently uses the transport may still use this transport to send and receive packets. After all objects release their reference to this transport, the transport will be destroyed immediately.</p>
<p>Note: application normally uses this API after obtaining the handle from <a class="el" href="classpj_1_1Endpoint.htm#aef1c7b9cafbba48a2b3b05b7501f6526">onTransportState()</a> callback.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tp</td><td>The transport. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6f22f14871e34f43fb8db67445a6d57c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f22f14871e34f43fb8db67445a6d57c">&#9670;&nbsp;</a></span>hangupAllCalls()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::hangupAllCalls </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Terminate all calls. This will initiate call hangup for all currently active calls. </p>

</div>
</div>
<a id="a941c6af9ab95e56989c3a20d6f339368"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a941c6af9ab95e56989c3a20d6f339368">&#9670;&nbsp;</a></span>mediaAdd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::mediaAdd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;&#160;</td>
          <td class="paramname"><em>media</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add media to the media list.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">media</td><td>media to be added. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afa91cb569484233cb3aba70918250ea6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa91cb569484233cb3aba70918250ea6">&#9670;&nbsp;</a></span>mediaRemove()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::mediaRemove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;&#160;</td>
          <td class="paramname"><em>media</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove media from the media list.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">media</td><td>media to be removed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6b9eb6a5ae201dcb60b866c705042bce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b9eb6a5ae201dcb60b866c705042bce">&#9670;&nbsp;</a></span>mediaExists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool pj::Endpoint::mediaExists </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classpj_1_1AudioMedia.htm">AudioMedia</a> &amp;&#160;</td>
          <td class="paramname"><em>media</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if media has been added to the media list.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">media</td><td>media to be check.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if media has been added, false otherwise. </dd></dl>

</div>
</div>
<a id="aff66e63efb4adddb646d07dea3eb0512"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff66e63efb4adddb646d07dea3eb0512">&#9670;&nbsp;</a></span>mediaMaxPorts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj::Endpoint::mediaMaxPorts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get maximum number of media port.</p>
<dl class="section return"><dt>Returns</dt><dd>Maximum number of media port in the conference bridge. </dd></dl>

</div>
</div>
<a id="a75e9664368c7befa3490314a65e7d214"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75e9664368c7befa3490314a65e7d214">&#9670;&nbsp;</a></span>mediaActivePorts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pj::Endpoint::mediaActivePorts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get current number of active media port in the bridge.</p>
<dl class="section return"><dt>Returns</dt><dd>The number of active media port. </dd></dl>

</div>
</div>
<a id="a2f3b94131a087c8823b9cb38a68fc815"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f3b94131a087c8823b9cb38a68fc815">&#9670;&nbsp;</a></span>mediaEnumPorts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__PJSUA2__MED.htm#ga175bdcc3892303943f33facb2d14cbde">AudioMediaVector</a>&amp; pj::Endpoint::mediaEnumPorts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Warning: deprecated, use <a class="el" href="classpj_1_1Endpoint.htm#aade33eea597789bc728891be26413442">mediaEnumPorts2()</a> instead. This function is not safe in multithreaded environment.</p>
<p>Enumerate all media port.</p>
<dl class="section return"><dt>Returns</dt><dd>The list of media port. </dd></dl>

</div>
</div>
<a id="aade33eea597789bc728891be26413442"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aade33eea597789bc728891be26413442">&#9670;&nbsp;</a></span>mediaEnumPorts2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__MED.htm#gad5da6dbc7c64a3a1f7257a212d6e5ea2">AudioMediaVector2</a> pj::Endpoint::mediaEnumPorts2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enumerate all audio media port.</p>
<dl class="section return"><dt>Returns</dt><dd>The list of audio media port. </dd></dl>

</div>
</div>
<a id="a2484d1264779f527ca5b72960661adc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2484d1264779f527ca5b72960661adc3">&#9670;&nbsp;</a></span>mediaEnumVidPorts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__MED.htm#ga8d911802eb2269c0f6716c7dcbcc2f50">VideoMediaVector</a> pj::Endpoint::mediaEnumVidPorts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enumerate all video media port.</p>
<dl class="section return"><dt>Returns</dt><dd>The list of video media port. </dd></dl>

</div>
</div>
<a id="ad04137f49c7778d78ae21db11590b369"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad04137f49c7778d78ae21db11590b369">&#9670;&nbsp;</a></span>audDevManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classpj_1_1AudDevManager.htm">AudDevManager</a>&amp; pj::Endpoint::audDevManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the instance of Audio Device Manager.</p>
<dl class="section return"><dt>Returns</dt><dd>The Audio Device Manager. </dd></dl>

</div>
</div>
<a id="ae220795879170330a161b41eedaa619b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae220795879170330a161b41eedaa619b">&#9670;&nbsp;</a></span>vidDevManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classpj_1_1VidDevManager.htm">VidDevManager</a>&amp; pj::Endpoint::vidDevManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the instance of Video Device Manager.</p>
<dl class="section return"><dt>Returns</dt><dd>The Video Device Manager. </dd></dl>

</div>
</div>
<a id="a079f265baf12f9b6c1e8bb8cca895766"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a079f265baf12f9b6c1e8bb8cca895766">&#9670;&nbsp;</a></span>codecEnum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__PJSUA2__MED.htm#ga103b4fb801b767c2416f9591d17a8616">CodecInfoVector</a>&amp; pj::Endpoint::codecEnum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Warning: deprecated, use <a class="el" href="classpj_1_1Endpoint.htm#a51163c2111e32b9b7542a6af92157c4a">codecEnum2()</a> instead. This function is not safe in multithreaded environment.</p>
<p>Enum all supported codecs in the system.</p>
<dl class="section return"><dt>Returns</dt><dd>Array of codec info. </dd></dl>

</div>
</div>
<a id="a51163c2111e32b9b7542a6af92157c4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51163c2111e32b9b7542a6af92157c4a">&#9670;&nbsp;</a></span>codecEnum2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__MED.htm#gaa2de5873a2023ed4d00971f8eff95c30">CodecInfoVector2</a> pj::Endpoint::codecEnum2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enum all supported codecs in the system.</p>
<dl class="section return"><dt>Returns</dt><dd>Array of codec info. </dd></dl>

</div>
</div>
<a id="ab7bdb84ea89e920e6fc67ba678ea185c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7bdb84ea89e920e6fc67ba678ea185c">&#9670;&nbsp;</a></span>codecSetPriority()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::codecSetPriority </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>&#160;</td>
          <td class="paramname"><em>priority</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Change codec priority.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID, which is a string that uniquely identify the codec (such as "speex/8000"). </td></tr>
    <tr><td class="paramname">priority</td><td>Codec priority, 0-255, where zero means to disable the codec. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6b7a244ac0b59cf31851042c9fdb89a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b7a244ac0b59cf31851042c9fdb89a8">&#9670;&nbsp;</a></span>codecGetParam()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj_1_1CodecParam.htm">CodecParam</a> pj::Endpoint::codecGetParam </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>codec_id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get codec parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Codec parameters. If codec is not found, <a class="el" href="structpj_1_1Error.htm">Error</a> will be thrown. </dd></dl>

</div>
</div>
<a id="af8eb6bf37b3c24ca78ad6ac63fd66505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8eb6bf37b3c24ca78ad6ac63fd66505">&#9670;&nbsp;</a></span>codecSetParam()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::codecSetParam </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj_1_1CodecParam.htm">CodecParam</a>&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set codec parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID. </td></tr>
    <tr><td class="paramname">param</td><td>Codec parameter to set. Set to NULL to reset codec parameter to library default settings. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af5617b6a04fa5f2dfc350fa040577a61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5617b6a04fa5f2dfc350fa040577a61">&#9670;&nbsp;</a></span>videoCodecEnum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__PJSUA2__MED.htm#ga103b4fb801b767c2416f9591d17a8616">CodecInfoVector</a>&amp; pj::Endpoint::videoCodecEnum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Warning: deprecated, use <a class="el" href="classpj_1_1Endpoint.htm#a18dc993c7e4a2e46d9c5db1d14bd9f7f">videoCodecEnum2()</a> instead. This function is not safe in multithreaded environment.</p>
<p>Enum all supported video codecs in the system.</p>
<dl class="section return"><dt>Returns</dt><dd>Array of video codec info. </dd></dl>

</div>
</div>
<a id="a18dc993c7e4a2e46d9c5db1d14bd9f7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18dc993c7e4a2e46d9c5db1d14bd9f7f">&#9670;&nbsp;</a></span>videoCodecEnum2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__MED.htm#gaa2de5873a2023ed4d00971f8eff95c30">CodecInfoVector2</a> pj::Endpoint::videoCodecEnum2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enum all supported video codecs in the system.</p>
<dl class="section return"><dt>Returns</dt><dd>Array of video codec info. </dd></dl>

</div>
</div>
<a id="ad5bca249a2f3b18522de7d91f3df33a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5bca249a2f3b18522de7d91f3df33a9">&#9670;&nbsp;</a></span>videoCodecSetPriority()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::videoCodecSetPriority </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>&#160;</td>
          <td class="paramname"><em>priority</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Change video codec priority.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID, which is a string that uniquely identify the codec (such as "H263/90000"). Please see pjsua manual or pjmedia codec reference for details. </td></tr>
    <tr><td class="paramname">priority</td><td>Codec priority, 0-255, where zero means to disable the codec. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad8288b37cc57a8f4dac9e98056363477"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8288b37cc57a8f4dac9e98056363477">&#9670;&nbsp;</a></span>getVideoCodecParam()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj_1_1VidCodecParam.htm">VidCodecParam</a> pj::Endpoint::getVideoCodecParam </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>codec_id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get video codec parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Codec parameters. If codec is not found, <a class="el" href="structpj_1_1Error.htm">Error</a> will be thrown. </dd></dl>

</div>
</div>
<a id="a926cac9d59c0bd80968fa57f664fe3df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a926cac9d59c0bd80968fa57f664fe3df">&#9670;&nbsp;</a></span>setVideoCodecParam()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::setVideoCodecParam </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj_1_1VidCodecParam.htm">VidCodecParam</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set video codec parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID. </td></tr>
    <tr><td class="paramname">param</td><td>Codec parameter to set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af062e428e1656b2ece241276f57f86b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af062e428e1656b2ece241276f57f86b5">&#9670;&nbsp;</a></span>resetVideoCodecParam()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::resetVideoCodecParam </td>
          <td>(</td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>codec_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reset video codec parameters to library default settings.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af5eeb229d502606e847e5d4e8d74b33c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5eeb229d502606e847e5d4e8d74b33c">&#9670;&nbsp;</a></span>srtpCryptoEnum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA2__TYPES.htm#gaf4b042acfebd1325cae85c758f4482ae">StringVector</a> pj::Endpoint::srtpCryptoEnum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enumerate all SRTP crypto-suite names.</p>
<dl class="section return"><dt>Returns</dt><dd>The list of SRTP crypto-suite name. </dd></dl>

</div>
</div>
<a id="ade15aa32898fbfd3c5c64c51e625c2e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade15aa32898fbfd3c5c64c51e625c2e5">&#9670;&nbsp;</a></span>handleIpChange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj::Endpoint::handleIpChange </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj_1_1IpChangeParam.htm">IpChangeParam</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inform the stack that IP address change event was detected. The stack will:</p><ol type="1">
<li>Restart the listener (this step is configurable via <em><a class="el" href="structpj_1_1IpChangeParam.htm#abe81e70573880e104d1e7de04418a120">IpChangeParam.restartListener</a></em>).</li>
<li>Shutdown the transport used by account registration (this step is configurable via <em>AccountConfig.ipChangeConfig.shutdownTp</em>).</li>
<li>Update contact URI by sending re-Registration (this step is configurable via a\ AccountConfig.natConfig.contactRewriteUse and a\ AccountConfig.natConfig.contactRewriteMethod)</li>
<li>Hangup active calls (this step is configurable via a\ AccountConfig.ipChangeConfig.hangupCalls) or continue the call by sending re-INVITE (configurable via <em>AccountConfig.ipChangeConfig.reinviteFlags</em>).</li>
</ol>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">param</td><td>The IP change parameter, have a look at #IpChangeParam. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9e140e65b0e572adcbe68155ef98888a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e140e65b0e572adcbe68155ef98888a">&#9670;&nbsp;</a></span>onNatDetectionComplete()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::Endpoint::onNatDetectionComplete </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj_1_1OnNatDetectionCompleteParam.htm">OnNatDetectionCompleteParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Callback when the <a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a> has finished performing NAT type detection that is initiated with <a class="el" href="classpj_1_1Endpoint.htm#a5f160fd6e28add68631c513e8addd8cb">natDetectType()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>Callback parameters containing the detection result. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>.</p>

</div>
</div>
<a id="a9e3448694cb55857de8096a000c5185c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e3448694cb55857de8096a000c5185c">&#9670;&nbsp;</a></span>onNatCheckStunServersComplete()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::Endpoint::onNatCheckStunServersComplete </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj_1_1OnNatCheckStunServersCompleteParam.htm">OnNatCheckStunServersCompleteParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Callback when the <a class="el" href="classpj_1_1Endpoint.htm">Endpoint</a> has finished performing STUN server checking that is initiated when calling <a class="el" href="classpj_1_1Endpoint.htm#a0948de89ef57bcdfa061bc2679fc6aae">libInit()</a>, or by calling <a class="el" href="classpj_1_1Endpoint.htm#ac6914154f65d7f100404952dcece32f0">natCheckStunServers()</a> or <a class="el" href="classpj_1_1Endpoint.htm#a7a770e9e0b5995e4a4f3ebc38af18563">natUpdateStunServers()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>Callback parameters. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>.</p>

</div>
</div>
<a id="aef1c7b9cafbba48a2b3b05b7501f6526"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef1c7b9cafbba48a2b3b05b7501f6526">&#9670;&nbsp;</a></span>onTransportState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::Endpoint::onTransportState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj_1_1OnTransportStateParam.htm">OnTransportStateParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This callback is called when transport state has changed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>Callback parameters. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>.</p>

</div>
</div>
<a id="a295811b720685e14c402fcae3b1cac2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a295811b720685e14c402fcae3b1cac2f">&#9670;&nbsp;</a></span>onTimer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::Endpoint::onTimer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj_1_1OnTimerParam.htm">OnTimerParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Callback when a timer has fired. The timer was scheduled by <a class="el" href="classpj_1_1Endpoint.htm#a1e17ba10ff53e11c7ea930d381f6ffb2">utilTimerSchedule()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>Callback parameters. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>.</p>

</div>
</div>
<a id="ad9e5b50345ace669d098e4f32c3d02e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9e5b50345ace669d098e4f32c3d02e6">&#9670;&nbsp;</a></span>onSelectAccount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::Endpoint::onSelectAccount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj_1_1OnSelectAccountParam.htm">OnSelectAccountParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This callback can be used by application to override the account to be used to handle an incoming message. Initially, the account to be used will be calculated automatically by the library. This initial account will be used if application does not implement this callback, or application sets an invalid account upon returning from this callback.</p>
<p>Note that currently the incoming messages requiring account assignment are INVITE, MESSAGE, SUBSCRIBE, and unsolicited NOTIFY. This callback may be called before the callback of the SIP event itself, i.e: incoming call, pager, subscription, or unsolicited-event.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>Callback parameters. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>.</p>

</div>
</div>
<a id="a5df62e55d6b709dad12ed874643917b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5df62e55d6b709dad12ed874643917b9">&#9670;&nbsp;</a></span>onIpChangeProgress()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::Endpoint::onIpChangeProgress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj_1_1OnIpChangeProgressParam.htm">OnIpChangeProgressParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Calling <a class="el" href="classpj_1_1Endpoint.htm#ade15aa32898fbfd3c5c64c51e625c2e5">handleIpChange()</a> may involve different operation. This callback is called to report the progress of each enabled operation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>Callback parameters. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>.</p>

</div>
</div>
<a id="acccf86db0b985cf6b186264cb8502681"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acccf86db0b985cf6b186264cb8502681">&#9670;&nbsp;</a></span>onMediaEvent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void pj::Endpoint::onMediaEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj_1_1OnMediaEventParam.htm">OnMediaEventParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Notification about media events such as video notifications. This callback will most likely be called from media threads, thus application must not perform heavy processing in this callback. If application needs to perform more complex tasks to handle the event, it should post the task to another thread.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>Callback parameter. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#gae4737d316c3696dc34a85aa1c09dab99">flags</a>, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__config.htm#ga7523f8576efd271c22b188eab05d7870">PJ_UNUSED_ARG</a>, <a class="el" href="structpj_1_1OnNatDetectionCompleteParam.htm#a3b6c3c123a93b1d19cc5a367ccc5d726">pj::OnNatDetectionCompleteParam::reason</a>, <a class="el" href="structpj_1_1OnNatDetectionCompleteParam.htm#a9d892e031c2aeb307a613ad56e9cffe9">pj::OnNatDetectionCompleteParam::status</a>, and <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>.</p>

</div>
</div>
<a id="a1452e993afa5a180b6c05c6721ead003"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1452e993afa5a180b6c05c6721ead003">&#9670;&nbsp;</a></span>onCredAuth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj::Endpoint::onCredAuth </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj_1_1OnCredAuthParam.htm">OnCredAuthParam</a> &amp;&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Callback for computation of the digest credential.</p>
<p>Usually, an application does not need to implement (overload) this callback. Use it, if your application needs to support Digest AKA authentication without the default digest computation back-end (i.e: using <b>libmilenage</b>).</p>
<p>To use Digest AKA authentication, add <em>PJSIP_CRED_DATA_EXT_AKA</em> flag in the <a class="el" href="structpj_1_1AuthCredInfo.htm">AuthCredInfo</a>'s <em>dataType</em> field of the <a class="el" href="structpj_1_1AccountConfig.htm">AccountConfig</a>, and fill up other AKA specific information in <a class="el" href="structpj_1_1AuthCredInfo.htm">AuthCredInfo</a>:</p><ul>
<li>If PJSIP_HAS_DIGEST_AKA_AUTH is disabled, you have to overload this callback to provide your own digest computation back-end.</li>
<li>If PJSIP_HAS_DIGEST_AKA_AUTH is enabled, <b>libmilenage</b> library from <em>third_party</em> directory is linked, and this callback returns PJ_ENOTSUP, then the default digest computation back-end is used.</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm.digestChallenge</td><td>The authentication challenge sent by server in 401 or 401 response, as either Proxy-Authenticate or WWW-Authenticate header. </td></tr>
    <tr><td class="paramname">prm.credentialInfo</td><td>The credential to be used. </td></tr>
    <tr><td class="paramname">method</td><td>The request method. </td></tr>
    <tr><td class="paramname">prm.digestCredential</td><td>The digest credential where the digest response will be placed to. Upon calling this function, the nonce, nc, cnonce, qop, uri, and realm fields of this structure must have been set by caller. Upon return, the <em>response</em> field will be initialized by this function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_ENOTSUP is the default. If you overload this callback, return PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="endpoint_8hpp.htm">endpoint.hpp</a></li>
</ul>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
