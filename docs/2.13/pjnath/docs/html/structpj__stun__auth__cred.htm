<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj_stun_auth_cred Struct Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">pj_stun_auth_cred Struct Reference<div class="ingroups"><a class="el" href="group__PJNATH.htm">NAT Traversal Helper Library</a> &raquo; <a class="el" href="group__PJNATH__STUN.htm">STUN: Session Traversal Utilities for NAT</a> &raquo; <a class="el" href="group__PJNATH__STUN__BASE.htm">Base STUN objects</a> &raquo; <a class="el" href="group__PJNATH__STUN__AUTH.htm">STUN Authentication</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="stun__auth_8h_source.htm">stun_auth.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a5bc84463a3fb3a4fb9a18ba32afdd47f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJNATH__STUN__AUTH.htm#ga1cb1133fc704a99147e9e5f0ddf35aa0">pj_stun_auth_cred_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__auth__cred.htm#a5bc84463a3fb3a4fb9a18ba32afdd47f">type</a></td></tr>
<tr class="separator:a5bc84463a3fb3a4fb9a18ba32afdd47f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88c0c3ca6406edd3e56f94b1a436c618"><td class="memItemLeft" >union {</td></tr>
<tr class="memitem:a089d6ea97914c3fdb1752acb868de17e"><td class="memItemLeft" >&#160;&#160;&#160;struct {</td></tr>
<tr class="memitem:a8381ca0281bf00b688ee44227f856932"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a></td></tr>
<tr class="separator:a8381ca0281bf00b688ee44227f856932"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae45d44fb5c3a79c1b1e1f329356aa88d"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a32a804645a495e3a7431d35db0c1122f">username</a></td></tr>
<tr class="separator:ae45d44fb5c3a79c1b1e1f329356aa88d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad475ee86595b14957c3a9f35f446697"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a>&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a42b27b9d2462d78f864780b08dfdb822">data_type</a></td></tr>
<tr class="separator:aad475ee86595b14957c3a9f35f446697"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad404dee1cc802207255036778d243de"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a8745afb5a6e8304906343ca6660fbba5">data</a></td></tr>
<tr class="separator:aad404dee1cc802207255036778d243de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6610e2ceb9765c9dd89e0a1bc348010b"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a977b1259eba2545b8972f6b87dbce939">nonce</a></td></tr>
<tr class="separator:a6610e2ceb9765c9dd89e0a1bc348010b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a089d6ea97914c3fdb1752acb868de17e"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a704d07cda4a91989004f63162f941525">static_cred</a></td></tr>
<tr class="separator:a089d6ea97914c3fdb1752acb868de17e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76153e8870e187f6eae129269d4b7e67"><td class="memItemLeft" >&#160;&#160;&#160;struct {</td></tr>
<tr class="memitem:ae7da20b194a47be05e566442ae3ce0e9"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;void *&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a></td></tr>
<tr class="separator:ae7da20b194a47be05e566442ae3ce0e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a173ef863cfb371cc9a92a5c24ee1cf6d"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#aa7939abb503286242af51c017ef9c2e9">get_auth</a> )(void *<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*pool, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>,<br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a977b1259eba2545b8972f6b87dbce939">nonce</a>)</td></tr>
<tr class="separator:a173ef863cfb371cc9a92a5c24ee1cf6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4ac58c42277148930eeb04f9108a48e"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#ae429cfd9c0356cb1a1f4d9fa5c3552df">get_cred</a> )(const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool,<br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a32a804645a495e3a7431d35db0c1122f">username</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a977b1259eba2545b8972f6b87dbce939">nonce</a>,<br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a42b27b9d2462d78f864780b08dfdb822">data_type</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a8745afb5a6e8304906343ca6660fbba5">data</a>)</td></tr>
<tr class="separator:ac4ac58c42277148930eeb04f9108a48e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f4b954b0da94dc95f65a5a393552209"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a43d94c007186ce123698a885f4832a60">get_password</a> )(const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a32a804645a495e3a7431d35db0c1122f">username</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool,<br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a42b27b9d2462d78f864780b08dfdb822">data_type</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a8745afb5a6e8304906343ca6660fbba5">data</a>)</td></tr>
<tr class="separator:a7f4b954b0da94dc95f65a5a393552209"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80a2478bd59c9f5e1c8e82490fc82b14"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(*&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a4157642034bb0a8fd1f122532de12b0f">verify_nonce</a> )(const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a32a804645a495e3a7431d35db0c1122f">username</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> <br class="typebreak" />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*<a class="el" href="structpj__stun__auth__cred.htm#a977b1259eba2545b8972f6b87dbce939">nonce</a>)</td></tr>
<tr class="separator:a80a2478bd59c9f5e1c8e82490fc82b14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76153e8870e187f6eae129269d4b7e67"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;&#160;&#160;<a class="el" href="structpj__stun__auth__cred.htm#a34d6d258d346a462702277a2fedb1ca8">dyn_cred</a></td></tr>
<tr class="separator:a76153e8870e187f6eae129269d4b7e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88c0c3ca6406edd3e56f94b1a436c618"><td class="memItemLeft" valign="top">}&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__auth__cred.htm#a88c0c3ca6406edd3e56f94b1a436c618">data</a></td></tr>
<tr class="separator:a88c0c3ca6406edd3e56f94b1a436c618"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >This structure contains the descriptions needed to perform server side authentication. Depending on the <em>type</em> set in the structure, application may specify a static username/password combination, or to have callbacks called by the function to authenticate the credential dynamically. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a8745afb5a6e8304906343ca6660fbba5" name="a8745afb5a6e8304906343ca6660fbba5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8745afb5a6e8304906343ca6660fbba5">&#9670;&nbsp;</a></span>data <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> pj_stun_auth_cred::data</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The data, which depends depends on the value of <em>data_type</em> field. When <em>data_type</em> is zero, this field will contain the plaintext password. </p>

</div>
</div>
<a id="a88c0c3ca6406edd3e56f94b1a436c618" name="a88c0c3ca6406edd3e56f94b1a436c618"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88c0c3ca6406edd3e56f94b1a436c618">&#9670;&nbsp;</a></span> <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union  { ... }  pj_stun_auth_cred::data</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This union contains the authentication data. </p>

</div>
</div>
<a id="a42b27b9d2462d78f864780b08dfdb822" name="a42b27b9d2462d78f864780b08dfdb822"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42b27b9d2462d78f864780b08dfdb822">&#9670;&nbsp;</a></span>data_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a> pj_stun_auth_cred::data_type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Data type to indicate the type of password in the <em>data</em> field. </p>

</div>
</div>
<a id="a34d6d258d346a462702277a2fedb1ca8" name="a34d6d258d346a462702277a2fedb1ca8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34d6d258d346a462702277a2fedb1ca8">&#9670;&nbsp;</a></span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct  { ... }  pj_stun_auth_cred::dyn_cred</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This structure contains callback to be called by the framework to authenticate the incoming message. </p>

</div>
</div>
<a id="aa7939abb503286242af51c017ef9c2e9" name="aa7939abb503286242af51c017ef9c2e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7939abb503286242af51c017ef9c2e9">&#9670;&nbsp;</a></span>get_auth</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_stun_auth_cred::get_auth) (void *<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a977b1259eba2545b8972f6b87dbce939">nonce</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback is called by pj_stun_verify_credential() when server needs to challenge the request with 401 response.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">user_data</td><td>The user data as specified in the credential. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to allocate memory. </td></tr>
    <tr><td class="paramname">realm</td><td>On return, the function should fill in with realm if application wants to use long term credential. Otherwise application should set empty string for the realm. </td></tr>
    <tr><td class="paramname">nonce</td><td>On return, if application wants to use long term credential, it MUST fill in the nonce with some value. Otherwise if short term credential is wanted, it MAY set this value. If short term credential is wanted and the application doesn't want to include NONCE, then it must set this to empty string.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback should return PJ_SUCCESS, or otherwise response message will not be created. </dd></dl>

</div>
</div>
<a id="ae429cfd9c0356cb1a1f4d9fa5c3552df" name="ae429cfd9c0356cb1a1f4d9fa5c3552df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae429cfd9c0356cb1a1f4d9fa5c3552df">&#9670;&nbsp;</a></span>get_cred</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_stun_auth_cred::get_cred) (const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void *<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a32a804645a495e3a7431d35db0c1122f">username</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a977b1259eba2545b8972f6b87dbce939">nonce</a>, <a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a> *<a class="el" href="structpj__stun__auth__cred.htm#a42b27b9d2462d78f864780b08dfdb822">data_type</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a8745afb5a6e8304906343ca6660fbba5">data</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the credential to be put in outgoing request.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The outgoing message where the credential is to be applied. </td></tr>
    <tr><td class="paramname">user_data</td><td>The user data as specified in the credential. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool where the callback can allocate memory to fill in the credential. </td></tr>
    <tr><td class="paramname">realm</td><td>On return, the callback may specify the realm if long term credential is desired, otherwise this string must be set to empty. </td></tr>
    <tr><td class="paramname">username</td><td>On return, the callback must fill in with the username. </td></tr>
    <tr><td class="paramname">nonce</td><td>On return, the callback may optionally fill in this argument with NONCE value if desired, otherwise this argument must be set to empty. </td></tr>
    <tr><td class="paramname">data_type</td><td>On return, the callback must set this argument with the type of password in the data argument. </td></tr>
    <tr><td class="paramname">data</td><td>On return, the callback must set this with the password, encoded according to data_type argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback must return PJ_SUCCESS, otherwise the message transmission will be cancelled. </dd></dl>

</div>
</div>
<a id="a43d94c007186ce123698a885f4832a60" name="a43d94c007186ce123698a885f4832a60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43d94c007186ce123698a885f4832a60">&#9670;&nbsp;</a></span>get_password</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_stun_auth_cred::get_password) (const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void *<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a32a804645a495e3a7431d35db0c1122f">username</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="el" href="group__PJNATH__STUN__AUTH.htm#gab91bef4d8bf966ccd2a48da636206c28">pj_stun_passwd_type</a> *<a class="el" href="structpj__stun__auth__cred.htm#a42b27b9d2462d78f864780b08dfdb822">data_type</a>, <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a8745afb5a6e8304906343ca6660fbba5">data</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the password for the specified username. This function is also used to check whether the username is valid.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The STUN message where the password will be applied to. </td></tr>
    <tr><td class="paramname">user_data</td><td>The user data as specified in the credential. </td></tr>
    <tr><td class="paramname">realm</td><td>The realm as specified in the message. </td></tr>
    <tr><td class="paramname">username</td><td>The username as specified in the message. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to allocate memory when necessary. </td></tr>
    <tr><td class="paramname">data_type</td><td>On return, application should fill up this argument with the type of data (which should be zero if data is a plaintext password). </td></tr>
    <tr><td class="paramname">data</td><td>On return, application should fill up this argument with the password according to data_type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback should return PJ_SUCCESS if username has been successfully verified and password was obtained. If non-PJ_SUCCESS is returned, it is assumed that the username is not valid. </dd></dl>

</div>
</div>
<a id="a977b1259eba2545b8972f6b87dbce939" name="a977b1259eba2545b8972f6b87dbce939"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a977b1259eba2545b8972f6b87dbce939">&#9670;&nbsp;</a></span>nonce</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> pj_stun_auth_cred::nonce</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Optional NONCE. </p>

</div>
</div>
<a id="ae7192679d18e6ae70d822c55757af433" name="ae7192679d18e6ae70d822c55757af433"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7192679d18e6ae70d822c55757af433">&#9670;&nbsp;</a></span>realm</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> pj_stun_auth_cred::realm</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >If not-empty, it indicates that this is a long term credential. </p>

</div>
</div>
<a id="a704d07cda4a91989004f63162f941525" name="a704d07cda4a91989004f63162f941525"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a704d07cda4a91989004f63162f941525">&#9670;&nbsp;</a></span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct  { ... }  pj_stun_auth_cred::static_cred</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This structure contains static data for performing authentication. A non-empty realm indicates whether short term or long term credential is used. </p>

</div>
</div>
<a id="a5bc84463a3fb3a4fb9a18ba32afdd47f" name="a5bc84463a3fb3a4fb9a18ba32afdd47f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bc84463a3fb3a4fb9a18ba32afdd47f">&#9670;&nbsp;</a></span>type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJNATH__STUN__AUTH.htm#ga1cb1133fc704a99147e9e5f0ddf35aa0">pj_stun_auth_cred_type</a> pj_stun_auth_cred::type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The type of authentication information in this structure. </p>

</div>
</div>
<a id="a4704c204d6f84d7ce4bd7c4f598a0407" name="a4704c204d6f84d7ce4bd7c4f598a0407"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4704c204d6f84d7ce4bd7c4f598a0407">&#9670;&nbsp;</a></span>user_data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* pj_stun_auth_cred::user_data</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >User data which will be passed back to callback functions. </p>

</div>
</div>
<a id="a32a804645a495e3a7431d35db0c1122f" name="a32a804645a495e3a7431d35db0c1122f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32a804645a495e3a7431d35db0c1122f">&#9670;&nbsp;</a></span>username</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> pj_stun_auth_cred::username</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The username of the credential. </p>

</div>
</div>
<a id="a4157642034bb0a8fd1f122532de12b0f" name="a4157642034bb0a8fd1f122532de12b0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4157642034bb0a8fd1f122532de12b0f">&#9670;&nbsp;</a></span>verify_nonce</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>(* pj_stun_auth_cred::verify_nonce) (const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void *<a class="el" href="structpj__stun__auth__cred.htm#a4704c204d6f84d7ce4bd7c4f598a0407">user_data</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#ae7192679d18e6ae70d822c55757af433">realm</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a32a804645a495e3a7431d35db0c1122f">username</a>, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *<a class="el" href="structpj__stun__auth__cred.htm#a977b1259eba2545b8972f6b87dbce939">nonce</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This callback will be called to verify that the NONCE given in the message can be accepted. If this callback returns PJ_FALSE, 438 (Stale Nonce) response will be created.</p>
<p >This callback is optional.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The STUN message where the nonce was received. </td></tr>
    <tr><td class="paramname">user_data</td><td>The user data as specified in the credential. </td></tr>
    <tr><td class="paramname">realm</td><td>The realm as specified in the message. </td></tr>
    <tr><td class="paramname">username</td><td>The username as specified in the message. </td></tr>
    <tr><td class="paramname">nonce</td><td>The nonce to be verified.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback MUST return non-zero if the NONCE can be accepted. </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="stun__auth_8h_source.htm">stun_auth.h</a></li>
</ul>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
