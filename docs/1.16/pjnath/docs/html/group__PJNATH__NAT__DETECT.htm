<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJNATH Reference: NAT Classification/Detection Tool (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>NAT Classification/Detection Tool<br/>
<small>
[<a class="el" href="group__PJNATH.htm">NAT Traversal Helper Library</a>]</small>
</h1>  </div>
</div>
<div class="contents">

<p>NAT Classification/Detection Tool.  
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__nat__detect__result.htm">pj_stun_nat_detect_result</a></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__NAT__DETECT.htm#gae52787dfe481ecfe419066298437df22">pj_stun_nat_detect_cb</a> (void *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, const <a class="el" href="structpj__stun__nat__detect__result.htm">pj_stun_nat_detect_result</a> *res)</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a> { <br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913daeec550d235830d234b0daa2ba8cc8692">PJ_STUN_NAT_TYPE_UNKNOWN</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913da511a755263e90e772d44d2f4d17e76de">PJ_STUN_NAT_TYPE_ERR_UNKNOWN</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913dad1b80e2d4dc8a7534b2011c25dc5a37d">PJ_STUN_NAT_TYPE_OPEN</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913da6bd1ce29c79c341c334b2d7a046186c6">PJ_STUN_NAT_TYPE_BLOCKED</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913da76fb447efd2298f7da24bfc91dfee143">PJ_STUN_NAT_TYPE_SYMMETRIC_UDP</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913da965b7ea4bdc9660730707df790735f78">PJ_STUN_NAT_TYPE_FULL_CONE</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913daa25bec861b511d9ab73539431d0b4b12">PJ_STUN_NAT_TYPE_SYMMETRIC</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913da50255b6ec204c5b3fd80ef5765f009ad">PJ_STUN_NAT_TYPE_RESTRICTED</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__PJNATH__NAT__DETECT.htm#gga07c3bec1eee4e02ea2fd5f03299d913da9f239a27e233bee603bc68fa34ae9484">PJ_STUN_NAT_TYPE_PORT_RESTRICTED</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__NAT__DETECT.htm#gae72cbbfff503591258e3f3ad5d6b744b">pj_stun_get_nat_name</a> (<a class="el" href="group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a> type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__NAT__DETECT.htm#ga66bdec69a6a450095a6a920d4e11f443">pj_stun_detect_nat_type</a> (const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *server, <a class="el" href="structpj__stun__config.htm">pj_stun_config</a> *stun_cfg, void *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="el" href="group__PJNATH__NAT__DETECT.htm#gae52787dfe481ecfe419066298437df22">pj_stun_nat_detect_cb</a> *cb)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This module provides one function to perform NAT classification and detection. NAT type detection is performed by calling <a class="el" href="group__PJNATH__NAT__DETECT.htm#ga66bdec69a6a450095a6a920d4e11f443">pj_stun_detect_nat_type()</a> function. </p>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gae52787dfe481ecfe419066298437df22"></a><!-- doxytag: member="nat_detect.h::pj_stun_nat_detect_cb" ref="gae52787dfe481ecfe419066298437df22" args="(void *user_data, const pj_stun_nat_detect_result *res)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void <a class="el" href="group__PJNATH__NAT__DETECT.htm#gae52787dfe481ecfe419066298437df22">pj_stun_nat_detect_cb</a>(void *<a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, const <a class="el" href="structpj__stun__nat__detect__result.htm">pj_stun_nat_detect_result</a> *res)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Type of callback to be called when the NAT detection function has completed. </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga07c3bec1eee4e02ea2fd5f03299d913d"></a><!-- doxytag: member="nat_detect.h::pj_stun_nat_type" ref="ga07c3bec1eee4e02ea2fd5f03299d913d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This enumeration describes the NAT types, as specified by RFC 3489 Section 5, NAT Variations. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913daeec550d235830d234b0daa2ba8cc8692"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_UNKNOWN" ref="gga07c3bec1eee4e02ea2fd5f03299d913daeec550d235830d234b0daa2ba8cc8692" args="" -->PJ_STUN_NAT_TYPE_UNKNOWN</em>&nbsp;</td><td>
<p>NAT type is unknown because the detection has not been performed. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913da511a755263e90e772d44d2f4d17e76de"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_ERR_UNKNOWN" ref="gga07c3bec1eee4e02ea2fd5f03299d913da511a755263e90e772d44d2f4d17e76de" args="" -->PJ_STUN_NAT_TYPE_ERR_UNKNOWN</em>&nbsp;</td><td>
<p>NAT type is unknown because there is failure in the detection process, possibly because server does not support RFC 3489. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913dad1b80e2d4dc8a7534b2011c25dc5a37d"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_OPEN" ref="gga07c3bec1eee4e02ea2fd5f03299d913dad1b80e2d4dc8a7534b2011c25dc5a37d" args="" -->PJ_STUN_NAT_TYPE_OPEN</em>&nbsp;</td><td>
<p>This specifies that the client has open access to Internet (or at least, its behind a firewall that behaves like a full-cone NAT, but without the translation) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913da6bd1ce29c79c341c334b2d7a046186c6"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_BLOCKED" ref="gga07c3bec1eee4e02ea2fd5f03299d913da6bd1ce29c79c341c334b2d7a046186c6" args="" -->PJ_STUN_NAT_TYPE_BLOCKED</em>&nbsp;</td><td>
<p>This specifies that communication with server has failed, probably because UDP packets are blocked. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913da76fb447efd2298f7da24bfc91dfee143"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_SYMMETRIC_UDP" ref="gga07c3bec1eee4e02ea2fd5f03299d913da76fb447efd2298f7da24bfc91dfee143" args="" -->PJ_STUN_NAT_TYPE_SYMMETRIC_UDP</em>&nbsp;</td><td>
<p>Firewall that allows UDP out, and responses have to come back to the source of the request (like a symmetric NAT, but no translation. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913da965b7ea4bdc9660730707df790735f78"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_FULL_CONE" ref="gga07c3bec1eee4e02ea2fd5f03299d913da965b7ea4bdc9660730707df790735f78" args="" -->PJ_STUN_NAT_TYPE_FULL_CONE</em>&nbsp;</td><td>
<p>A full cone NAT is one where all requests from the same internal IP address and port are mapped to the same external IP address and port. Furthermore, any external host can send a packet to the internal host, by sending a packet to the mapped external address. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913daa25bec861b511d9ab73539431d0b4b12"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_SYMMETRIC" ref="gga07c3bec1eee4e02ea2fd5f03299d913daa25bec861b511d9ab73539431d0b4b12" args="" -->PJ_STUN_NAT_TYPE_SYMMETRIC</em>&nbsp;</td><td>
<p>A symmetric NAT is one where all requests from the same internal IP address and port, to a specific destination IP address and port, are mapped to the same external IP address and port. If the same host sends a packet with the same source address and port, but to a different destination, a different mapping is used. Furthermore, only the external host that receives a packet can send a UDP packet back to the internal host. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913da50255b6ec204c5b3fd80ef5765f009ad"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_RESTRICTED" ref="gga07c3bec1eee4e02ea2fd5f03299d913da50255b6ec204c5b3fd80ef5765f009ad" args="" -->PJ_STUN_NAT_TYPE_RESTRICTED</em>&nbsp;</td><td>
<p>A restricted cone NAT is one where all requests from the same internal IP address and port are mapped to the same external IP address and port. Unlike a full cone NAT, an external host (with IP address X) can send a packet to the internal host only if the internal host had previously sent a packet to IP address X. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga07c3bec1eee4e02ea2fd5f03299d913da9f239a27e233bee603bc68fa34ae9484"></a><!-- doxytag: member="PJ_STUN_NAT_TYPE_PORT_RESTRICTED" ref="gga07c3bec1eee4e02ea2fd5f03299d913da9f239a27e233bee603bc68fa34ae9484" args="" -->PJ_STUN_NAT_TYPE_PORT_RESTRICTED</em>&nbsp;</td><td>
<p>A port restricted cone NAT is like a restricted cone NAT, but the restriction includes port numbers. Specifically, an external host can send a packet, with source IP address X and source port P, to the internal host only if the internal host had previously sent a packet to IP address X and port P. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga66bdec69a6a450095a6a920d4e11f443"></a><!-- doxytag: member="nat_detect.h::pj_stun_detect_nat_type" ref="ga66bdec69a6a450095a6a920d4e11f443" args="(const pj_sockaddr_in *server, pj_stun_config *stun_cfg, void *user_data, pj_stun_nat_detect_cb *cb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_detect_nat_type </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__sockaddr__in.htm">pj_sockaddr_in</a> *&nbsp;</td>
          <td class="paramname"> <em>server</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__config.htm">pj_stun_config</a> *&nbsp;</td>
          <td class="paramname"> <em>stun_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__NAT__DETECT.htm#gae52787dfe481ecfe419066298437df22">pj_stun_nat_detect_cb</a> *&nbsp;</td>
          <td class="paramname"> <em>cb</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Perform NAT classification function according to the procedures specified in RFC 3489. Once this function returns successfully, the procedure will run in the "background" and will complete asynchronously. Application can register a callback to be notified when such detection has completed.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>server</em>&nbsp;</td><td>STUN server address. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>stun_cfg</em>&nbsp;</td><td>A structure containing various STUN configurations, such as the ioqueue and timer heap instance used to receive network I/O and timer events. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>user_data</em>&nbsp;</td><td>Application data, which will be returned back in the callback. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Callback to be registered to receive notification about detection result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If this function returns PJ_SUCCESS, the procedure will complete asynchronously and callback will be called when it completes. For other return values, it means that an error has occured and the procedure did not start. </dd></dl>

</div>
</div>
<a class="anchor" id="gae72cbbfff503591258e3f3ad5d6b744b"></a><!-- doxytag: member="nat_detect.h::pj_stun_get_nat_name" ref="gae72cbbfff503591258e3f3ad5d6b744b" args="(pj_stun_nat_type type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* pj_stun_get_nat_name </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__NAT__DETECT.htm#ga07c3bec1eee4e02ea2fd5f03299d913d">pj_stun_nat_type</a>&nbsp;</td>
          <td class="paramname"> <em>type</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the NAT name from the specified NAT type.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>NAT type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>NAT name. </dd></dl>

</div>
</div>
</div>
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
