<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Example: List Manipulation (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div><div class="header">
  <div class="headertitle"><div class="title">Example: List Manipulation </div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p >Below is sample program to demonstrate how to manipulate linked list.</p>
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/* </span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> *</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> * it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment"> * (at your option) any later version.</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment"> *</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment"> * This program is distributed in the hope that it will be useful,</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"> * GNU General Public License for more details.</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment"> *</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"> * You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment"> * along with this program; if not, write to the Free Software</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment"> */</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#include &lt;<a class="code" href="list_8h.htm">pj/list.h</a>&gt;</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#include &lt;<a class="code" href="assert_8h.htm">pj/assert.h</a>&gt;</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">#include &lt;<a class="code" href="log_8h.htm">pj/log.h</a>&gt;</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="keyword">struct </span><a class="code hl_struct" href="structmy__node.htm">my_node</a></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>{</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="comment">// This must be the first member declared in the struct!</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    PJ_DECL_LIST_MEMBER(<span class="keyword">struct</span> <a class="code hl_struct" href="structmy__node.htm">my_node</a>);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <span class="keywordtype">int</span> value;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>};</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keywordtype">int</span> main()</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    <span class="keyword">struct </span><a class="code hl_struct" href="structmy__node.htm">my_node</a> nodes[10];</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <span class="keyword">struct </span><a class="code hl_struct" href="structmy__node.htm">my_node</a> list;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keyword">struct </span><a class="code hl_struct" href="structmy__node.htm">my_node</a> *it;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keywordtype">int</span> i;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <span class="comment">// Initialize the list as empty.</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <a class="code hl_function" href="group__PJ__LIST.htm#ga0f39ad164f2124e6d42d1c2e7a5926dc">pj_list_init</a>(&amp;list);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <span class="comment">// Insert nodes.</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="keywordflow">for</span> (i=0; i&lt;10; ++i) {</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>        nodes[i].value = i;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>        <a class="code hl_function" href="group__PJ__LIST.htm#gace71471e1fecac2cef8416c144925176">pj_list_insert_before</a>(&amp;list, &amp;nodes[i]);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    }</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    <span class="comment">// Iterate list nodes.</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    it = list.next;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    <span class="keywordflow">while</span> (it != &amp;list) {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>        <a class="code hl_define" href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(3,(<span class="stringliteral">&quot;list&quot;</span>, <span class="stringliteral">&quot;value = %d&quot;</span>, it-&gt;value));</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>        it = it-&gt;next;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    }</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    <span class="comment">// Erase all nodes.</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    <span class="keywordflow">for</span> (i=0; i&lt;10; ++i) {</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>        <a class="code hl_function" href="group__PJ__LIST.htm#ga2781509d8fc3708b88f897482bf85207">pj_list_erase</a>(&amp;nodes[i]);</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    }</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="comment">// List must be empty by now.</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <a class="code hl_define" href="group__pj__assert.htm#ga981d47a5e9d7e9655473244839f0f5d3">pj_assert</a>( <a class="code hl_function" href="group__PJ__LIST.htm#ga73af60d46c342d0f4f837fffcd327ded">pj_list_empty</a>(&amp;list) );</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>};</div>
<div class="ttc" id="aassert_8h_htm"><div class="ttname"><a href="assert_8h.htm">assert.h</a></div><div class="ttdoc">Assertion macro pj_assert().</div></div>
<div class="ttc" id="agroup__PJ__LIST_htm_ga0f39ad164f2124e6d42d1c2e7a5926dc"><div class="ttname"><a href="group__PJ__LIST.htm#ga0f39ad164f2124e6d42d1c2e7a5926dc">pj_list_init</a></div><div class="ttdeci">void pj_list_init(pj_list_type *node)</div><div class="ttdef"><b>Definition:</b> list.h:87</div></div>
<div class="ttc" id="agroup__PJ__LIST_htm_ga2781509d8fc3708b88f897482bf85207"><div class="ttname"><a href="group__PJ__LIST.htm#ga2781509d8fc3708b88f897482bf85207">pj_list_erase</a></div><div class="ttdeci">void pj_list_erase(pj_list_type *node)</div></div>
<div class="ttc" id="agroup__PJ__LIST_htm_ga73af60d46c342d0f4f837fffcd327ded"><div class="ttname"><a href="group__PJ__LIST.htm#ga73af60d46c342d0f4f837fffcd327ded">pj_list_empty</a></div><div class="ttdeci">int pj_list_empty(const pj_list_type *node)</div><div class="ttdef"><b>Definition:</b> list.h:101</div></div>
<div class="ttc" id="agroup__PJ__LIST_htm_gace71471e1fecac2cef8416c144925176"><div class="ttname"><a href="group__PJ__LIST.htm#gace71471e1fecac2cef8416c144925176">pj_list_insert_before</a></div><div class="ttdeci">void pj_list_insert_before(pj_list_type *pos, pj_list_type *node)</div></div>
<div class="ttc" id="agroup__PJ__LOG_htm_ga767b9231bf7c2b57274771cdc4bca818"><div class="ttname"><a href="group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a></div><div class="ttdeci">#define PJ_LOG(level, arg)</div><div class="ttdef"><b>Definition:</b> log.h:106</div></div>
<div class="ttc" id="agroup__pj__assert_htm_ga981d47a5e9d7e9655473244839f0f5d3"><div class="ttname"><a href="group__pj__assert.htm#ga981d47a5e9d7e9655473244839f0f5d3">pj_assert</a></div><div class="ttdeci">#define pj_assert(expr)</div><div class="ttdef"><b>Definition:</b> assert.h:48</div></div>
<div class="ttc" id="alist_8h_htm"><div class="ttname"><a href="list_8h.htm">list.h</a></div><div class="ttdoc">Linked List data structure.</div></div>
<div class="ttc" id="alog_8h_htm"><div class="ttname"><a href="log_8h.htm">log.h</a></div><div class="ttdoc">Logging Utility.</div></div>
<div class="ttc" id="astructmy__node_htm"><div class="ttname"><a href="structmy__node.htm">my_node</a></div><div class="ttdef"><b>Definition:</b> pjlib-samples/list.c:32</div></div>
</div><!-- fragment --> </div></div><!-- contents -->
</div><!-- PageDoc -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
