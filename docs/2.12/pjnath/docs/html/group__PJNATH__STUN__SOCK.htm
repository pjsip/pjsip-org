<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>STUN-aware socket transport (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">STUN-aware socket transport<div class="ingroups"><a class="el" href="group__PJNATH.htm">NAT Traversal Helper Library</a> &raquo; <a class="el" href="group__PJNATH__STUN.htm">STUN: Session Traversal Utilities for NAT</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>STUN aware UDP socket transport.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__sock__cb.htm">pj_stun_sock_cb</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__sock__info.htm">pj_stun_sock_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__sock__cfg.htm">pj_stun_sock_cfg</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gae0a67f4de992eb435dcc8da574b73781"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a></td></tr>
<tr class="separator:gae0a67f4de992eb435dcc8da574b73781"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gae063dc49f90e760f150785b67407341b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae063dc49f90e760f150785b67407341b">pj_stun_sock_op</a> { <br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SOCK.htm#ggae063dc49f90e760f150785b67407341ba7aa069a8f6da2dbe21f9a491468ebe79">PJ_STUN_SOCK_DNS_OP</a> = 1, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SOCK.htm#ggae063dc49f90e760f150785b67407341bad5d8ad3ab9e604e1d27b999e056b483d">PJ_STUN_SOCK_BINDING_OP</a>, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SOCK.htm#ggae063dc49f90e760f150785b67407341ba9712eb5343be397005a55d8ffdd2fb0b">PJ_STUN_SOCK_KEEP_ALIVE_OP</a>, 
<br />
&#160;&#160;<a class="el" href="group__PJNATH__STUN__SOCK.htm#ggae063dc49f90e760f150785b67407341ba0056b45017c23f0cdc015cbc6d7ac683">PJ_STUN_SOCK_MAPPED_ADDR_CHANGE</a>
<br />
 }</td></tr>
<tr class="separator:gae063dc49f90e760f150785b67407341b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga1d58f1d753e51c2440b95aad690f30ae"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga1d58f1d753e51c2440b95aad690f30ae">pj_stun_sock_op_name</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae063dc49f90e760f150785b67407341b">pj_stun_sock_op</a> op)</td></tr>
<tr class="separator:ga1d58f1d753e51c2440b95aad690f30ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35ddfbdad31fb56cf2e136722c3a0530"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga35ddfbdad31fb56cf2e136722c3a0530">pj_stun_sock_cfg_default</a> (<a class="el" href="structpj__stun__sock__cfg.htm">pj_stun_sock_cfg</a> *cfg)</td></tr>
<tr class="separator:ga35ddfbdad31fb56cf2e136722c3a0530"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2bdf2dc635cb5bd59e4860a2f19a6611"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga2bdf2dc635cb5bd59e4860a2f19a6611">pj_stun_sock_create</a> (<a class="el" href="structpj__stun__config.htm">pj_stun_config</a> *stun_cfg, const char *name, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> af, const <a class="el" href="structpj__stun__sock__cb.htm">pj_stun_sock_cb</a> *cb, const <a class="el" href="structpj__stun__sock__cfg.htm">pj_stun_sock_cfg</a> *cfg, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> **p_sock)</td></tr>
<tr class="separator:ga2bdf2dc635cb5bd59e4860a2f19a6611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8497322d8467614089b91ea712d67bf0"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga8497322d8467614089b91ea712d67bf0">pj_stun_sock_start</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *domain, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga47506d8dde1056c5c96d62f0df6ddf28">pj_uint16_t</a> default_port, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib-util/docs/pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> *resolver)</td></tr>
<tr class="separator:ga8497322d8467614089b91ea712d67bf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad58f8a7d91dd6a2df3aaae9a88050ef9"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gad58f8a7d91dd6a2df3aaae9a88050ef9">pj_stun_sock_destroy</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *sock)</td></tr>
<tr class="separator:gad58f8a7d91dd6a2df3aaae9a88050ef9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68bb39e524e1b6fc2be7920d21c824e6"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga68bb39e524e1b6fc2be7920d21c824e6">pj_stun_sock_set_user_data</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>)</td></tr>
<tr class="separator:ga68bb39e524e1b6fc2be7920d21c824e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9baefba513aa1c17cfe8c34d0ec7bfff"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga9baefba513aa1c17cfe8c34d0ec7bfff">pj_stun_sock_get_user_data</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock)</td></tr>
<tr class="separator:ga9baefba513aa1c17cfe8c34d0ec7bfff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga103824d5e4a47280eb1c209cf821eee2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga103824d5e4a47280eb1c209cf821eee2">pj_stun_sock_get_grp_lock</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock)</td></tr>
<tr class="separator:ga103824d5e4a47280eb1c209cf821eee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa49347bd571d86ee780a0ba9f634ebfe"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gaa49347bd571d86ee780a0ba9f634ebfe">pj_stun_sock_get_info</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, <a class="el" href="structpj__stun__sock__info.htm">pj_stun_sock_info</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#ga5fdc2ee11d7ed4e87245acd50a87a838">info</a>)</td></tr>
<tr class="separator:gaa49347bd571d86ee780a0ba9f634ebfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b1ad63c5e8a8f0fa5667d2eb3b9e81a"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__SOCK.htm#ga7b1ad63c5e8a8f0fa5667d2eb3b9e81a">pj_stun_sock_sendto</a> (<a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *stun_sock, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structsend__key.htm">send_key</a>, const void *pkt, unsigned pkt_len, unsigned flag, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td></tr>
<tr class="separator:ga7b1ad63c5e8a8f0fa5667d2eb3b9e81a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The STUN transport provides asynchronous UDP like socket transport with the additional STUN capability. It has the following features:</p>
<ul>
<li>API to send and receive UDP packets</li>
<li>multiplex STUN and non-STUN incoming packets and distinguish between STUN responses that belong to internal requests with application data (the application data may be STUN packets as well)</li>
<li>DNS SRV resolution to the STUN server (if wanted), along with fallback to DNS A resolution if SRV record is not found.</li>
<li>STUN keep-alive maintenance, and handle changes to the mapped address (when the NAT binding changes) </li>
</ul>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gae0a67f4de992eb435dcc8da574b73781"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae0a67f4de992eb435dcc8da574b73781">&#9670;&nbsp;</a></span>pj_stun_sock</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> <a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Opaque type to represent a STUN transport. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gae063dc49f90e760f150785b67407341b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae063dc49f90e760f150785b67407341b">&#9670;&nbsp;</a></span>pj_stun_sock_op</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__SOCK.htm#gae063dc49f90e760f150785b67407341b">pj_stun_sock_op</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Types of operation being reported in <em>on_status()</em> callback of <a class="el" href="structpj__stun__sock__cb.htm">pj_stun_sock_cb</a>. Application may retrieve the string representation of these constants with <a class="el" href="group__PJNATH__STUN__SOCK.htm#ga1d58f1d753e51c2440b95aad690f30ae">pj_stun_sock_op_name()</a>. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggae063dc49f90e760f150785b67407341ba7aa069a8f6da2dbe21f9a491468ebe79"></a>PJ_STUN_SOCK_DNS_OP&#160;</td><td class="fielddoc"><p>Asynchronous DNS resolution. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggae063dc49f90e760f150785b67407341bad5d8ad3ab9e604e1d27b999e056b483d"></a>PJ_STUN_SOCK_BINDING_OP&#160;</td><td class="fielddoc"><p>Initial STUN Binding request. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggae063dc49f90e760f150785b67407341ba9712eb5343be397005a55d8ffdd2fb0b"></a>PJ_STUN_SOCK_KEEP_ALIVE_OP&#160;</td><td class="fielddoc"><p>Subsequent STUN Binding request for keeping the binding alive. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggae063dc49f90e760f150785b67407341ba0056b45017c23f0cdc015cbc6d7ac683"></a>PJ_STUN_SOCK_MAPPED_ADDR_CHANGE&#160;</td><td class="fielddoc"><p>IP address change notification from the keep-alive operation. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga35ddfbdad31fb56cf2e136722c3a0530"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga35ddfbdad31fb56cf2e136722c3a0530">&#9670;&nbsp;</a></span>pj_stun_sock_cfg_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_stun_sock_cfg_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__sock__cfg.htm">pj_stun_sock_cfg</a> *&#160;</td>
          <td class="paramname"><em>cfg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initialize the STUN transport setting with its default values.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfg</td><td>The STUN transport config. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga2bdf2dc635cb5bd59e4860a2f19a6611"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2bdf2dc635cb5bd59e4860a2f19a6611">&#9670;&nbsp;</a></span>pj_stun_sock_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_sock_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__config.htm">pj_stun_config</a> *&#160;</td>
          <td class="paramname"><em>stun_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>af</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__sock__cb.htm">pj_stun_sock_cb</a> *&#160;</td>
          <td class="paramname"><em>cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__sock__cfg.htm">pj_stun_sock_cfg</a> *&#160;</td>
          <td class="paramname"><em>cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> **&#160;</td>
          <td class="paramname"><em>p_sock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create the STUN transport using the specified configuration. Once the STUN transport has been create, application should call <a class="el" href="group__PJNATH__STUN__SOCK.htm#ga8497322d8467614089b91ea712d67bf0">pj_stun_sock_start()</a> to start the transport.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stun_cfg</td><td>The STUN configuration which contains among other things the ioqueue and timer heap instance for the operation of this transport. </td></tr>
    <tr><td class="paramname">af</td><td>Address family of socket. Currently <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SOCK.htm#ga8ea303b95fe973432a361e47e0459086">pj_AF_INET()</a> and <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SOCK.htm#ga60a867be35581f776aa88156505309de">pj_AF_INET6()</a> are supported. </td></tr>
    <tr><td class="paramname">name</td><td>Optional name to be given to this transport to assist debugging. </td></tr>
    <tr><td class="paramname">cb</td><td>Callback to receive events/data from the transport. </td></tr>
    <tr><td class="paramname">cfg</td><td>Optional transport settings. </td></tr>
    <tr><td class="paramname">user_data</td><td>Arbitrary application data to be associated with this transport. </td></tr>
    <tr><td class="paramname">p_sock</td><td>Pointer to receive the created transport instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the operation has been successful, or the appropriate error code on failure. </dd></dl>

</div>
</div>
<a id="gad58f8a7d91dd6a2df3aaae9a88050ef9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad58f8a7d91dd6a2df3aaae9a88050ef9">&#9670;&nbsp;</a></span>pj_stun_sock_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_sock_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *&#160;</td>
          <td class="paramname"><em>sock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroy the STUN transport.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sock</td><td>The STUN transport socket.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the operation has been successful, or the appropriate error code on failure. </dd></dl>

</div>
</div>
<a id="ga103824d5e4a47280eb1c209cf821eee2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga103824d5e4a47280eb1c209cf821eee2">&#9670;&nbsp;</a></span>pj_stun_sock_get_grp_lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a>* pj_stun_sock_get_grp_lock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *&#160;</td>
          <td class="paramname"><em>stun_sock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the group lock for this STUN transport.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stun_sock</td><td>The STUN transport instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The group lock. </dd></dl>

</div>
</div>
<a id="gaa49347bd571d86ee780a0ba9f634ebfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa49347bd571d86ee780a0ba9f634ebfe">&#9670;&nbsp;</a></span>pj_stun_sock_get_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_sock_get_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *&#160;</td>
          <td class="paramname"><em>stun_sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__sock__info.htm">pj_stun_sock_info</a> *&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the STUN transport info. The transport info contains, among other things, the allocated relay address.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stun_sock</td><td>The STUN transport instance. </td></tr>
    <tr><td class="paramname">info</td><td>Pointer to be filled with STUN transport info.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the operation has been successful, or the appropriate error code on failure. </dd></dl>

</div>
</div>
<a id="ga9baefba513aa1c17cfe8c34d0ec7bfff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9baefba513aa1c17cfe8c34d0ec7bfff">&#9670;&nbsp;</a></span>pj_stun_sock_get_user_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* pj_stun_sock_get_user_data </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *&#160;</td>
          <td class="paramname"><em>stun_sock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieve the previously assigned user data associated with this STUN transport.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stun_sock</td><td>The STUN transport instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The user/application data. </dd></dl>

</div>
</div>
<a id="ga1d58f1d753e51c2440b95aad690f30ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d58f1d753e51c2440b95aad690f30ae">&#9670;&nbsp;</a></span>pj_stun_sock_op_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* pj_stun_sock_op_name </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae063dc49f90e760f150785b67407341b">pj_stun_sock_op</a>&#160;</td>
          <td class="paramname"><em>op</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieve the name representing the specified operation. </p>

</div>
</div>
<a id="ga7b1ad63c5e8a8f0fa5667d2eb3b9e81a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7b1ad63c5e8a8f0fa5667d2eb3b9e81a">&#9670;&nbsp;</a></span>pj_stun_sock_sendto()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_sock_sendto </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *&#160;</td>
          <td class="paramname"><em>stun_sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *&#160;</td>
          <td class="paramname"><em>send_key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pkt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>pkt_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>flag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *&#160;</td>
          <td class="paramname"><em>dst_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>addr_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Send a data to the specified address. This function may complete asynchronously and in this case <em>on_data_sent()</em> will be called.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stun_sock</td><td>The STUN transport instance. </td></tr>
    <tr><td class="paramname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structsend__key.htm">send_key</a></td><td>Optional send key for sending the packet down to the ioqueue. This value will be given back to <em>on_data_sent()</em> callback </td></tr>
    <tr><td class="paramname">pkt</td><td>The data/packet to be sent to peer. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>Length of the data. </td></tr>
    <tr><td class="paramname">flag</td><td><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gad9eaa7c7b2668255d6ee1a0bf3afb007">pj_ioqueue_sendto()</a> flag. </td></tr>
    <tr><td class="paramname">dst_addr</td><td>The remote address. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if data has been sent immediately, or PJ_EPENDING if data cannot be sent immediately. In this case the <em>on_data_sent()</em> callback will be called when data is actually sent. Any other return value indicates error condition. </dd></dl>

</div>
</div>
<a id="ga68bb39e524e1b6fc2be7920d21c824e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga68bb39e524e1b6fc2be7920d21c824e6">&#9670;&nbsp;</a></span>pj_stun_sock_set_user_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_sock_set_user_data </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *&#160;</td>
          <td class="paramname"><em>stun_sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Associate a user data with this STUN transport. The user data may then be retrieved later with <a class="el" href="group__PJNATH__STUN__SOCK.htm#ga9baefba513aa1c17cfe8c34d0ec7bfff">pj_stun_sock_get_user_data()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stun_sock</td><td>The STUN transport instance. </td></tr>
    <tr><td class="paramname">user_data</td><td>Arbitrary data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the operation has been successful, or the appropriate error code on failure. </dd></dl>

</div>
</div>
<a id="ga8497322d8467614089b91ea712d67bf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8497322d8467614089b91ea712d67bf0">&#9670;&nbsp;</a></span>pj_stun_sock_start()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_stun_sock_start </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__STUN__SOCK.htm#gae0a67f4de992eb435dcc8da574b73781">pj_stun_sock</a> *&#160;</td>
          <td class="paramname"><em>stun_sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga47506d8dde1056c5c96d62f0df6ddf28">pj_uint16_t</a>&#160;</td>
          <td class="paramname"><em>default_port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib-util/docs/pjlib-util.tag:../../../pjlib-util/docs/html/" href="../../../pjlib-util/docs/html/group__PJ__DNS__RESOLVER.htm#gaa120673c1218fc146a1d7bd340e4ed95">pj_dns_resolver</a> *&#160;</td>
          <td class="paramname"><em>resolver</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Start the STUN transport. This will start the DNS SRV resolution for the STUN server (if desired), and once the server is resolved, STUN Binding request will be sent to resolve the publicly mapped address. Once the initial STUN Binding response is received, the keep-alive timer will be started.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stun_sock</td><td>The STUN transport instance. </td></tr>
    <tr><td class="paramname">domain</td><td>The domain, hostname, or IP address of the STUN server. When this parameter contains domain name, the <em>resolver</em> parameter must be set to activate DNS SRV resolution. </td></tr>
    <tr><td class="paramname">default_port</td><td>The default STUN port number to use when DNS SRV resolution is not used. If DNS SRV resolution is used, the server port number will be set from the DNS SRV records. The recommended value for this parameter is PJ_STUN_PORT. </td></tr>
    <tr><td class="paramname">resolver</td><td>If this parameter is not NULL, then the <em>domain</em> parameter will be first resolved with DNS SRV and then fallback to using DNS A/AAAA resolution when DNS SRV resolution fails. If this parameter is NULL, the <em>domain</em> parameter will be resolved as hostname.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS if the operation has been successfully queued, or the appropriate error code on failure. When this function returns PJ_SUCCESS, the final result of the allocation process will be notified to application in <em>on_status()</em> callback. </dd></dl>

</div>
</div>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
