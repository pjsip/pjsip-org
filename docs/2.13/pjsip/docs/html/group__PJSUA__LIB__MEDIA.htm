<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJSUA-API Media Manipulation (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">PJSUA-API Media Manipulation<div class="ingroups"><a class="el" href="group__PJSUA__LIB.htm">PJSUA API - High Level Softphone API</a></div></div></div>
</div><!--header-->
<div class="contents">

<p>Media manipulation.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__media__config.htm">pjsua_media_config</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__codec__info.htm">pjsua_codec_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__conf__port__info.htm">pjsua_conf_port_info</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__media__transport.htm">pjsua_media_transport</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpjsua__conf__connect__param.htm">pjsua_conf_connect_param</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga70cd87eb5b7e97d985674ec53d45d09b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga70cd87eb5b7e97d985674ec53d45d09b">PJSUA_MEDIA_HAS_PJMEDIA</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga70cd87eb5b7e97d985674ec53d45d09b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5fc0655a88ffd34fbfcf0d67cd533165"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga5fc0655a88ffd34fbfcf0d67cd533165">PJSUA_THIRD_PARTY_STREAM_HAS_GET_INFO</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga5fc0655a88ffd34fbfcf0d67cd533165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a7f211481c711f53e6523222dba3cc5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1a7f211481c711f53e6523222dba3cc5">PJSUA_THIRD_PARTY_STREAM_HAS_GET_STAT</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga1a7f211481c711f53e6523222dba3cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef7c7edcc084de48a7b890be2c1339de"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaef7c7edcc084de48a7b890be2c1339de">PJSUA_MAX_CONF_PORTS</a>&#160;&#160;&#160;254</td></tr>
<tr class="separator:gaef7c7edcc084de48a7b890be2c1339de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga37166fc3cd0776a02bc24edcc1093ec8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga37166fc3cd0776a02bc24edcc1093ec8">PJSUA_DEFAULT_CLOCK_RATE</a>&#160;&#160;&#160;16000</td></tr>
<tr class="separator:ga37166fc3cd0776a02bc24edcc1093ec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3866f7b2fb36533a4c2cd70ad91ff9a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaf3866f7b2fb36533a4c2cd70ad91ff9a">PJSUA_DEFAULT_AUDIO_FRAME_PTIME</a>&#160;&#160;&#160;20</td></tr>
<tr class="separator:gaf3866f7b2fb36533a4c2cd70ad91ff9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1eca644ccce6adf88470cf4fd895aa1a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1eca644ccce6adf88470cf4fd895aa1a">PJSUA_DEFAULT_CODEC_QUALITY</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:ga1eca644ccce6adf88470cf4fd895aa1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf419882161328beb2217f8a167363ccc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaf419882161328beb2217f8a167363ccc">PJSUA_DEFAULT_ILBC_MODE</a>&#160;&#160;&#160;30</td></tr>
<tr class="separator:gaf419882161328beb2217f8a167363ccc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6ed3ac29d44b961dec610eb60635e5a1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga6ed3ac29d44b961dec610eb60635e5a1">PJSUA_DEFAULT_EC_TAIL_LEN</a>&#160;&#160;&#160;200</td></tr>
<tr class="separator:ga6ed3ac29d44b961dec610eb60635e5a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga122db6ebfc5e92239a3a3dec045ddd73"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga122db6ebfc5e92239a3a3dec045ddd73">PJSUA_MAX_PLAYERS</a>&#160;&#160;&#160;32</td></tr>
<tr class="separator:ga122db6ebfc5e92239a3a3dec045ddd73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44617c34520b1046eeab1774db3105eb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga44617c34520b1046eeab1774db3105eb">PJSUA_MAX_RECORDERS</a>&#160;&#160;&#160;32</td></tr>
<tr class="separator:ga44617c34520b1046eeab1774db3105eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad5a2bf94a231e10ad49fa789cbacf2e1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad5a2bf94a231e10ad49fa789cbacf2e1">PJSUA_SDP_SESS_HAS_CONN</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gad5a2bf94a231e10ad49fa789cbacf2e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4ccfc90ef855ab5862cec63a1edf951"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gae4ccfc90ef855ab5862cec63a1edf951">PJSUA_TRANSPORT_RESTART_DELAY_TIME</a>&#160;&#160;&#160;10</td></tr>
<tr class="separator:gae4ccfc90ef855ab5862cec63a1edf951"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga1b9a612f6045f76bfd6e90b6982d1b0a"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a></td></tr>
<tr class="separator:ga1b9a612f6045f76bfd6e90b6982d1b0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga7fb44c7699a910b90ecf44f6e6505da4"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga7fb44c7699a910b90ecf44f6e6505da4">pjsua_snd_dev_id</a> { <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gga7fb44c7699a910b90ecf44f6e6505da4a15a6bccf75634be5a0f683b93c7ae217">PJSUA_SND_DEFAULT_CAPTURE_DEV</a> = PJMEDIA_AUD_DEFAULT_CAPTURE_DEV
, <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gga7fb44c7699a910b90ecf44f6e6505da4aee90fb29963a7e63c192c6876a435935">PJSUA_SND_DEFAULT_PLAYBACK_DEV</a> = PJMEDIA_AUD_DEFAULT_PLAYBACK_DEV
, <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gga7fb44c7699a910b90ecf44f6e6505da4a04264a4073463751063060dc3294b1ac">PJSUA_SND_NO_DEV</a> = PJMEDIA_AUD_INVALID_DEV
, <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gga7fb44c7699a910b90ecf44f6e6505da4a0a4585ebe3c0ed65c39a30261c21c04c">PJSUA_SND_NULL_DEV</a> = -99
 }</td></tr>
<tr class="separator:ga7fb44c7699a910b90ecf44f6e6505da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0bb1b2a012780345daf4bb0bb1d73437"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga0bb1b2a012780345daf4bb0bb1d73437">pjsua_snd_dev_mode</a> { <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gga0bb1b2a012780345daf4bb0bb1d73437a2fdc82f554f5b848447ae95fccef0bdd">PJSUA_SND_DEV_SPEAKER_ONLY</a> = 1
, <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gga0bb1b2a012780345daf4bb0bb1d73437ad0f13c16414c6f704438decbd8c806cc">PJSUA_SND_DEV_NO_IMMEDIATE_OPEN</a> = 2
 }</td></tr>
<tr class="separator:ga0bb1b2a012780345daf4bb0bb1d73437"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga6e52551f2fd68d2d2c8aa1e233579670"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga6e52551f2fd68d2d2c8aa1e233579670">pjsua_media_config_default</a> (<a class="el" href="structpjsua__media__config.htm">pjsua_media_config</a> *cfg)</td></tr>
<tr class="separator:ga6e52551f2fd68d2d2c8aa1e233579670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e17d96ceb00a29c0a567f26aa946ba2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga6e17d96ceb00a29c0a567f26aa946ba2">pjsua_snd_dev_param_default</a> (<a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a> *prm)</td></tr>
<tr class="separator:ga6e17d96ceb00a29c0a567f26aa946ba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace2a30e6c07ad96a21af6ea04a369ca4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gace2a30e6c07ad96a21af6ea04a369ca4">pjsua_conf_connect_param_default</a> (<a class="el" href="structpjsua__conf__connect__param.htm">pjsua_conf_connect_param</a> *prm)</td></tr>
<tr class="separator:gace2a30e6c07ad96a21af6ea04a369ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga002432331e9c916ea962794688f5a294"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga002432331e9c916ea962794688f5a294">pjsua_conf_get_max_ports</a> (void)</td></tr>
<tr class="separator:ga002432331e9c916ea962794688f5a294"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f9bdc996f224de15979191605ae99a0"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga9f9bdc996f224de15979191605ae99a0">pjsua_conf_get_active_ports</a> (void)</td></tr>
<tr class="separator:ga9f9bdc996f224de15979191605ae99a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7171af5a82fdbadb9f3ca6b89ace9963"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga7171af5a82fdbadb9f3ca6b89ace9963">pjsua_enum_conf_ports</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> id[], unsigned *count)</td></tr>
<tr class="separator:ga7171af5a82fdbadb9f3ca6b89ace9963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13c9cb1eef3109a1a2e0222f30639995"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga13c9cb1eef3109a1a2e0222f30639995">pjsua_conf_get_port_info</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> port_id, <a class="el" href="structpjsua__conf__port__info.htm">pjsua_conf_port_info</a> *info)</td></tr>
<tr class="separator:ga13c9cb1eef3109a1a2e0222f30639995"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga833528c1019f4ab5c8fb216b4b5f788b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga833528c1019f4ab5c8fb216b4b5f788b">pjsua_conf_add_port</a> (<a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> *port, <a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> *p_id)</td></tr>
<tr class="separator:ga833528c1019f4ab5c8fb216b4b5f788b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga399b2c6156f032e2b665d5a21bc6e912"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga399b2c6156f032e2b665d5a21bc6e912">pjsua_conf_remove_port</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> port_id)</td></tr>
<tr class="separator:ga399b2c6156f032e2b665d5a21bc6e912"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3451304d677e013130dfb9e6b37e3ee6"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga3451304d677e013130dfb9e6b37e3ee6">pjsua_conf_connect</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> source, <a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> sink)</td></tr>
<tr class="separator:ga3451304d677e013130dfb9e6b37e3ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga661f45f646989b019aac5c39a9ec1ddc"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga661f45f646989b019aac5c39a9ec1ddc">pjsua_conf_connect2</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> source, <a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> sink, const <a class="el" href="structpjsua__conf__connect__param.htm">pjsua_conf_connect_param</a> *prm)</td></tr>
<tr class="separator:ga661f45f646989b019aac5c39a9ec1ddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca833a07e258123679ef98fe139225dc"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaca833a07e258123679ef98fe139225dc">pjsua_conf_disconnect</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> source, <a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> sink)</td></tr>
<tr class="separator:gaca833a07e258123679ef98fe139225dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad828a91a6ee5d361ecb07fa818e17e41"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad828a91a6ee5d361ecb07fa818e17e41">pjsua_conf_adjust_tx_level</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> slot, float level)</td></tr>
<tr class="separator:gad828a91a6ee5d361ecb07fa818e17e41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac62b6ef2ec5dd2f8717809548201e89"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaac62b6ef2ec5dd2f8717809548201e89">pjsua_conf_adjust_rx_level</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> slot, float level)</td></tr>
<tr class="separator:gaac62b6ef2ec5dd2f8717809548201e89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga110641655c8bb8f5009683eefae995e4"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga110641655c8bb8f5009683eefae995e4">pjsua_conf_get_signal_level</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> slot, unsigned *tx_level, unsigned *rx_level)</td></tr>
<tr class="separator:ga110641655c8bb8f5009683eefae995e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90a2ec9c8516b5ad13b061a46ae1d07a"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga90a2ec9c8516b5ad13b061a46ae1d07a">pjsua_player_create</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *filename, unsigned options, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> *p_id)</td></tr>
<tr class="separator:ga90a2ec9c8516b5ad13b061a46ae1d07a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74d15f94fa6ec04e1417d9d908bc24f8"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga74d15f94fa6ec04e1417d9d908bc24f8">pjsua_playlist_create</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> file_names[], unsigned file_count, const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *label, unsigned options, <a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> *p_id)</td></tr>
<tr class="separator:ga74d15f94fa6ec04e1417d9d908bc24f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b7a4ad09c9edad41ae516cea468819c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga4b7a4ad09c9edad41ae516cea468819c">pjsua_player_get_conf_port</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> id)</td></tr>
<tr class="separator:ga4b7a4ad09c9edad41ae516cea468819c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19ec871dc458d07deabd1d7da16d1f98"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga19ec871dc458d07deabd1d7da16d1f98">pjsua_player_get_port</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> id, <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> **p_port)</td></tr>
<tr class="separator:ga19ec871dc458d07deabd1d7da16d1f98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeaa1f5fee3f42fbacd799de31ed0a64b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaeaa1f5fee3f42fbacd799de31ed0a64b">pjsua_player_get_info</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> id, <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__wav__player__info.htm">pjmedia_wav_player_info</a> *info)</td></tr>
<tr class="separator:gaeaa1f5fee3f42fbacd799de31ed0a64b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16f52dad95d3fb1aa620f08fa2159a38"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga16f52dad95d3fb1aa620f08fa2159a38">pjsua_player_get_pos</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> id)</td></tr>
<tr class="separator:ga16f52dad95d3fb1aa620f08fa2159a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54b0878a16f838b47e663749b00df27f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga54b0878a16f838b47e663749b00df27f">pjsua_player_set_pos</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> id, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> samples)</td></tr>
<tr class="separator:ga54b0878a16f838b47e663749b00df27f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e050f65aeb5997994fa36af24d9e6db"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga8e050f65aeb5997994fa36af24d9e6db">pjsua_player_destroy</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> id)</td></tr>
<tr class="separator:ga8e050f65aeb5997994fa36af24d9e6db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58ed7a8fe6fadde669aa34f3d468f73b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga58ed7a8fe6fadde669aa34f3d468f73b">pjsua_recorder_create</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *filename, unsigned enc_type, void *enc_param, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> max_size, unsigned options, <a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a> *p_id)</td></tr>
<tr class="separator:ga58ed7a8fe6fadde669aa34f3d468f73b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga335b6f11c54190f876539899424d64e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga335b6f11c54190f876539899424d64e1">pjsua_recorder_get_conf_port</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a> id)</td></tr>
<tr class="separator:ga335b6f11c54190f876539899424d64e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadebc4a42cbb4a40144107f8a1f70fb16"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gadebc4a42cbb4a40144107f8a1f70fb16">pjsua_recorder_get_port</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a> id, <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> **p_port)</td></tr>
<tr class="separator:gadebc4a42cbb4a40144107f8a1f70fb16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad482170437b9963e2c7b29c746cdff0"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaad482170437b9963e2c7b29c746cdff0">pjsua_recorder_destroy</a> (<a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a> id)</td></tr>
<tr class="separator:gaad482170437b9963e2c7b29c746cdff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga71374138c82b35631a8ad48d14414447"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga71374138c82b35631a8ad48d14414447">pjsua_enum_aud_devs</a> (<a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__aud__dev__info.htm">pjmedia_aud_dev_info</a> info[], unsigned *count)</td></tr>
<tr class="separator:ga71374138c82b35631a8ad48d14414447"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga706208e7f609bd820321a3943cfeba47"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga706208e7f609bd820321a3943cfeba47">pjsua_enum_snd_devs</a> (<a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__snd__dev__info.htm">pjmedia_snd_dev_info</a> info[], unsigned *count)</td></tr>
<tr class="separator:ga706208e7f609bd820321a3943cfeba47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga588e687161fb9db8dff3921e98fb548d"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga588e687161fb9db8dff3921e98fb548d">pjsua_get_snd_dev</a> (int *capture_dev, int *playback_dev)</td></tr>
<tr class="separator:ga588e687161fb9db8dff3921e98fb548d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga983cbb58378280ad83e0705e4d263b09"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga983cbb58378280ad83e0705e4d263b09">pjsua_set_snd_dev</a> (int capture_dev, int playback_dev)</td></tr>
<tr class="separator:ga983cbb58378280ad83e0705e4d263b09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e0ceb5cb58bcea340e1494dfff3456c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga2e0ceb5cb58bcea340e1494dfff3456c">pjsua_get_snd_dev2</a> (<a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a> *snd_param)</td></tr>
<tr class="separator:ga2e0ceb5cb58bcea340e1494dfff3456c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3eee6537a5caa5f85d94d66f1bd850f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad3eee6537a5caa5f85d94d66f1bd850f">pjsua_set_snd_dev2</a> (const <a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a> *snd_param)</td></tr>
<tr class="separator:gad3eee6537a5caa5f85d94d66f1bd850f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e6cb631c6ca40d30973cc5ebeaba255"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga2e6cb631c6ca40d30973cc5ebeaba255">pjsua_set_null_snd_dev</a> (void)</td></tr>
<tr class="separator:ga2e6cb631c6ca40d30973cc5ebeaba255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae91073d7be8287daa229589946899522"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gae91073d7be8287daa229589946899522">pjsua_set_no_snd_dev</a> (void)</td></tr>
<tr class="separator:gae91073d7be8287daa229589946899522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafa70df7a2298b8c80343ae69380c701c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gafa70df7a2298b8c80343ae69380c701c">pjsua_set_ec</a> (unsigned tail_ms, unsigned options)</td></tr>
<tr class="separator:gafa70df7a2298b8c80343ae69380c701c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac159d0de7848d4ac4a9c67f586f32a42"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gac159d0de7848d4ac4a9c67f586f32a42">pjsua_get_ec_tail</a> (unsigned *p_tail_ms)</td></tr>
<tr class="separator:gac159d0de7848d4ac4a9c67f586f32a42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f152c39a6a9c9b4079555ca3105f97c"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga7f152c39a6a9c9b4079555ca3105f97c">pjsua_get_ec_stat</a> (<a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__echo__stat.htm">pjmedia_echo_stat</a> *p_stat)</td></tr>
<tr class="separator:ga7f152c39a6a9c9b4079555ca3105f97c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed1da92f14e984b8df8dad9b6057da43"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaed1da92f14e984b8df8dad9b6057da43">pjsua_snd_is_active</a> (void)</td></tr>
<tr class="separator:gaed1da92f14e984b8df8dad9b6057da43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga80e875e32ccc90dc10dd623355aac129"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga80e875e32ccc90dc10dd623355aac129">pjsua_snd_set_setting</a> (<a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__AUDIODEV__API.htm#gac0056b89f06893c8a67885c4307e0737">pjmedia_aud_dev_cap</a> cap, const void *pval, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> keep)</td></tr>
<tr class="separator:ga80e875e32ccc90dc10dd623355aac129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b094f54bab1ea94e9b4a630f9c39977"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga8b094f54bab1ea94e9b4a630f9c39977">pjsua_snd_get_setting</a> (<a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__AUDIODEV__API.htm#gac0056b89f06893c8a67885c4307e0737">pjmedia_aud_dev_cap</a> cap, void *pval)</td></tr>
<tr class="separator:ga8b094f54bab1ea94e9b4a630f9c39977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga917653182664ac8b027350e55f969239"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga917653182664ac8b027350e55f969239">pjsua_ext_snd_dev_create</a> (<a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__snd__port__param.htm">pjmedia_snd_port_param</a> *param, <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> **p_snd)</td></tr>
<tr class="separator:ga917653182664ac8b027350e55f969239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf98afec9a5fcc0b02a83e3a03d0ab55f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaf98afec9a5fcc0b02a83e3a03d0ab55f">pjsua_ext_snd_dev_destroy</a> (<a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> *snd)</td></tr>
<tr class="separator:gaf98afec9a5fcc0b02a83e3a03d0ab55f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18c4cc9e33c5a407804d61b88596500b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjmedia/docs/html/group__PJMED__SND__PORT.htm#gaf747a635d331877d0025e182faa3f1a2">pjmedia_snd_port</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga18c4cc9e33c5a407804d61b88596500b">pjsua_ext_snd_dev_get_snd_port</a> (<a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> *snd)</td></tr>
<tr class="separator:ga18c4cc9e33c5a407804d61b88596500b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab60c6b24c05afcaad194e5f629bf615e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gab60c6b24c05afcaad194e5f629bf615e">pjsua_ext_snd_dev_get_conf_port</a> (<a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> *snd)</td></tr>
<tr class="separator:gab60c6b24c05afcaad194e5f629bf615e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacf5c9734d9c7a7f4f16c0f9013bef02f"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gacf5c9734d9c7a7f4f16c0f9013bef02f">pjsua_enum_codecs</a> (<a class="el" href="structpjsua__codec__info.htm">pjsua_codec_info</a> id[], unsigned *count)</td></tr>
<tr class="separator:gacf5c9734d9c7a7f4f16c0f9013bef02f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6ec502e5898fafc8d697010f44401b2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaf6ec502e5898fafc8d697010f44401b2">pjsua_codec_set_priority</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *codec_id, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> priority)</td></tr>
<tr class="separator:gaf6ec502e5898fafc8d697010f44401b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28cfde094146388653e1f7b60235bcd2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga28cfde094146388653e1f7b60235bcd2">pjsua_codec_get_param</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *codec_id, <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td></tr>
<tr class="separator:ga28cfde094146388653e1f7b60235bcd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5a78d3b880d47636abfa9c2077eabd0"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#gab5a78d3b880d47636abfa9c2077eabd0">pjsua_codec_set_param</a> (const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *codec_id, const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__codec__param.htm">pjmedia_codec_param</a> *param)</td></tr>
<tr class="separator:gab5a78d3b880d47636abfa9c2077eabd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >PJSUA has rather powerful media features, which are built around the PJMEDIA conference bridge. Basically, all media "ports" (such as calls, WAV players, WAV playlist, file recorders, sound device, tone generators, etc) are terminated in the conference bridge, and application can manipulate the interconnection between these terminations freely.</p>
<p >The conference bridge provides powerful switching and mixing functionality for application. With the conference bridge, each conference slot (e.g. a call) can transmit to multiple destinations, and one destination can receive from multiple sources. If more than one media terminations are terminated in the same slot, the conference bridge will mix the signal automatically.</p>
<p >Application connects one media termination/slot to another by calling <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga3451304d677e013130dfb9e6b37e3ee6">pjsua_conf_connect()</a> function. This will establish <b>unidirectional</b> media flow from the source termination to the sink termination. To establish bidirectional media flow, application wound need to make another call to <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga3451304d677e013130dfb9e6b37e3ee6">pjsua_conf_connect()</a>, this time inverting the source and destination slots in the parameter.</p>
<p >For example, to stream a WAV file to remote call, application may use the following steps:</p>
<div class="fragment"><div class="line"><a class="code hl_typedefRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> stream_to_call( <a class="code hl_typedef" href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a> call_id )</div>
<div class="line">{</div>
<div class="line">   <a class="code hl_typedef" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> player_id;</div>
<div class="line">   </div>
<div class="line">   status = <a class="code hl_function" href="group__PJSUA__LIB__MEDIA.htm#ga90a2ec9c8516b5ad13b061a46ae1d07a">pjsua_player_create</a>(<span class="stringliteral">&quot;mysong.wav&quot;</span>, 0, &amp;player_id);</div>
<div class="line">   <span class="keywordflow">if</span> (status != <a class="code hl_variableRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a>)</div>
<div class="line">      <span class="keywordflow">return</span> status;</div>
<div class="line"> </div>
<div class="line">   status = <a class="code hl_function" href="group__PJSUA__LIB__MEDIA.htm#ga3451304d677e013130dfb9e6b37e3ee6">pjsua_conf_connect</a>( <a class="code hl_function" href="group__PJSUA__LIB__MEDIA.htm#ga4b7a4ad09c9edad41ae516cea468819c">pjsua_player_get_conf_port</a>(),</div>
<div class="line">                                <a class="code hl_function" href="group__PJSUA__LIB__CALL.htm#ga90c100b6e00d146ba824145fe6861aef">pjsua_call_get_conf_port</a>() );</div>
<div class="line">}</div>
<div class="ttc" id="agroup__PJSUA__LIB__BASE_htm_ga266a56483961431df7a5ebae457b9f3f"><div class="ttname"><a href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a></div><div class="ttdeci">int pjsua_player_id</div><div class="ttdef"><b>Definition:</b> pjsua-lib/pjsua.h:271</div></div>
<div class="ttc" id="agroup__PJSUA__LIB__BASE_htm_gad4eb99a78c98ddbd83aecf7e933fc684"><div class="ttname"><a href="group__PJSUA__LIB__BASE.htm#gad4eb99a78c98ddbd83aecf7e933fc684">pjsua_call_id</a></div><div class="ttdeci">int pjsua_call_id</div><div class="ttdef"><b>Definition:</b> pjsua-lib/pjsua.h:262</div></div>
<div class="ttc" id="agroup__PJSUA__LIB__CALL_htm_ga90c100b6e00d146ba824145fe6861aef"><div class="ttname"><a href="group__PJSUA__LIB__CALL.htm#ga90c100b6e00d146ba824145fe6861aef">pjsua_call_get_conf_port</a></div><div class="ttdeci">pjsua_conf_port_id pjsua_call_get_conf_port(pjsua_call_id call_id)</div></div>
<div class="ttc" id="agroup__PJSUA__LIB__MEDIA_htm_ga3451304d677e013130dfb9e6b37e3ee6"><div class="ttname"><a href="group__PJSUA__LIB__MEDIA.htm#ga3451304d677e013130dfb9e6b37e3ee6">pjsua_conf_connect</a></div><div class="ttdeci">pj_status_t pjsua_conf_connect(pjsua_conf_port_id source, pjsua_conf_port_id sink)</div></div>
<div class="ttc" id="agroup__PJSUA__LIB__MEDIA_htm_ga4b7a4ad09c9edad41ae516cea468819c"><div class="ttname"><a href="group__PJSUA__LIB__MEDIA.htm#ga4b7a4ad09c9edad41ae516cea468819c">pjsua_player_get_conf_port</a></div><div class="ttdeci">pjsua_conf_port_id pjsua_player_get_conf_port(pjsua_player_id id)</div></div>
<div class="ttc" id="agroup__PJSUA__LIB__MEDIA_htm_ga90a2ec9c8516b5ad13b061a46ae1d07a"><div class="ttname"><a href="group__PJSUA__LIB__MEDIA.htm#ga90a2ec9c8516b5ad13b061a46ae1d07a">pjsua_player_create</a></div><div class="ttdeci">pj_status_t pjsua_player_create(const pj_str_t *filename, unsigned options, pjsua_player_id *p_id)</div></div>
<div class="ttc" id="agroup__PJ__BASIC_htm_gab43ba3167bd2a2ab4580509dbf79200e"><div class="ttname"><a href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a></div><div class="ttdeci">int pj_status_t</div></div>
<div class="ttc" id="agroup__PJ__BASIC_htm_gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935"><div class="ttname"><a href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gga65c74a186d2c92fe9f088f3e1e8688bea312497101cf4a5d856e77d5302059935">PJ_SUCCESS</a></div><div class="ttdeci">PJ_SUCCESS</div></div>
</div><!-- fragment --><p >Other features of PJSUA media:</p><ul>
<li>efficient N to M interconnections between media terminations.</li>
<li>media termination can be connected to itself to create loopback media.</li>
<li>the media termination may have different clock rates, and resampling will be done automatically by conference bridge.</li>
<li>media terminations may also have different frame time; the conference bridge will perform the necessary bufferring to adjust the difference between terminations.</li>
<li>interconnections are removed automatically when media termination is removed from the bridge.</li>
<li>sound device may be changed even when there are active media interconnections.</li>
<li>correctly report call's media quality (in <a class="el" href="group__PJSUA__LIB__CALL.htm#gaf7f4bd53735fd3121ee2977e7245ed17">pjsua_call_dump()</a>) from RTCP packet exchange. </li>
</ul>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga70cd87eb5b7e97d985674ec53d45d09b" name="ga70cd87eb5b7e97d985674ec53d45d09b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga70cd87eb5b7e97d985674ec53d45d09b">&#9670;&nbsp;</a></span>PJSUA_MEDIA_HAS_PJMEDIA</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_MEDIA_HAS_PJMEDIA&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Use PJMEDIA for media? Set this to zero when using third party media stack. </p>

</div>
</div>
<a id="ga5fc0655a88ffd34fbfcf0d67cd533165" name="ga5fc0655a88ffd34fbfcf0d67cd533165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5fc0655a88ffd34fbfcf0d67cd533165">&#9670;&nbsp;</a></span>PJSUA_THIRD_PARTY_STREAM_HAS_GET_INFO</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_THIRD_PARTY_STREAM_HAS_GET_INFO&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Specify whether the third party stream has the capability of retrieving the stream info, i.e: <a class="elRef" href="../../../pjmedia/docs/html/group__PJMED__STRM.htm#ga54c3836e9b18c497990f355e4c950558">pjmedia_stream_get_info()</a> and <a class="elRef" href="../../../pjmedia/docs/html/group__PJMED__VID__STRM.htm#gabe8471702cd15083abcc8ef2011c6d33">pjmedia_vid_stream_get_info()</a>. Currently this capability is required by smart media update and call dump. </p>

</div>
</div>
<a id="ga1a7f211481c711f53e6523222dba3cc5" name="ga1a7f211481c711f53e6523222dba3cc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1a7f211481c711f53e6523222dba3cc5">&#9670;&nbsp;</a></span>PJSUA_THIRD_PARTY_STREAM_HAS_GET_STAT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_THIRD_PARTY_STREAM_HAS_GET_STAT&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Specify whether the third party stream has the capability of retrieving the stream statistics, i.e: <a class="elRef" href="../../../pjmedia/docs/html/group__PJMED__STRM.htm#ga10eef122bc961cead72f983ced0f6241">pjmedia_stream_get_stat()</a> and <a class="elRef" href="../../../pjmedia/docs/html/group__PJMED__VID__STRM.htm#gadfe74f5447e2997c0bb4b01f7938f9e7">pjmedia_vid_stream_get_stat()</a>. Currently this capability is required by call dump. </p>

</div>
</div>
<a id="gaef7c7edcc084de48a7b890be2c1339de" name="gaef7c7edcc084de48a7b890be2c1339de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaef7c7edcc084de48a7b890be2c1339de">&#9670;&nbsp;</a></span>PJSUA_MAX_CONF_PORTS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_MAX_CONF_PORTS&#160;&#160;&#160;254</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Max ports in the conference bridge. This setting is the default value for <a class="el" href="structpjsua__media__config.htm#a4d396d59675a3c0730c5f1b5384ec55f">pjsua_media_config.max_media_ports</a>. </p>

</div>
</div>
<a id="ga37166fc3cd0776a02bc24edcc1093ec8" name="ga37166fc3cd0776a02bc24edcc1093ec8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga37166fc3cd0776a02bc24edcc1093ec8">&#9670;&nbsp;</a></span>PJSUA_DEFAULT_CLOCK_RATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_DEFAULT_CLOCK_RATE&#160;&#160;&#160;16000</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The default clock rate to be used by the conference bridge. This setting is the default value for <a class="el" href="structpjsua__media__config.htm#a24792c277d6c6c309eccda9047f641a5">pjsua_media_config.clock_rate</a>. </p>

</div>
</div>
<a id="gaf3866f7b2fb36533a4c2cd70ad91ff9a" name="gaf3866f7b2fb36533a4c2cd70ad91ff9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf3866f7b2fb36533a4c2cd70ad91ff9a">&#9670;&nbsp;</a></span>PJSUA_DEFAULT_AUDIO_FRAME_PTIME</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_DEFAULT_AUDIO_FRAME_PTIME&#160;&#160;&#160;20</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Default frame length in the conference bridge. This setting is the default value for <a class="el" href="structpjsua__media__config.htm#ac6e637f5fdd868c8e77a1d1f5e9d1a51">pjsua_media_config.audio_frame_ptime</a>. </p>

</div>
</div>
<a id="ga1eca644ccce6adf88470cf4fd895aa1a" name="ga1eca644ccce6adf88470cf4fd895aa1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1eca644ccce6adf88470cf4fd895aa1a">&#9670;&nbsp;</a></span>PJSUA_DEFAULT_CODEC_QUALITY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_DEFAULT_CODEC_QUALITY&#160;&#160;&#160;8</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Default codec quality settings. This setting is the default value for <a class="el" href="structpjsua__media__config.htm#a4cada00a781ce06cd536c4e56a522065">pjsua_media_config.quality</a>. </p>

</div>
</div>
<a id="gaf419882161328beb2217f8a167363ccc" name="gaf419882161328beb2217f8a167363ccc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf419882161328beb2217f8a167363ccc">&#9670;&nbsp;</a></span>PJSUA_DEFAULT_ILBC_MODE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_DEFAULT_ILBC_MODE&#160;&#160;&#160;30</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Default iLBC mode. This setting is the default value for <a class="el" href="structpjsua__media__config.htm#a99ec4e98f7df56f1b765b4e3534cab14">pjsua_media_config.ilbc_mode</a>. </p>

</div>
</div>
<a id="ga6ed3ac29d44b961dec610eb60635e5a1" name="ga6ed3ac29d44b961dec610eb60635e5a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6ed3ac29d44b961dec610eb60635e5a1">&#9670;&nbsp;</a></span>PJSUA_DEFAULT_EC_TAIL_LEN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_DEFAULT_EC_TAIL_LEN&#160;&#160;&#160;200</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The default echo canceller tail length. This setting is the default value for <a class="el" href="structpjsua__media__config.htm#a82c1cf18d42f5ec0a645ed2bdd6ae955">pjsua_media_config.ec_tail_len</a>. </p>

</div>
</div>
<a id="ga122db6ebfc5e92239a3a3dec045ddd73" name="ga122db6ebfc5e92239a3a3dec045ddd73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga122db6ebfc5e92239a3a3dec045ddd73">&#9670;&nbsp;</a></span>PJSUA_MAX_PLAYERS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_MAX_PLAYERS&#160;&#160;&#160;32</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The maximum file player. </p>

</div>
</div>
<a id="ga44617c34520b1046eeab1774db3105eb" name="ga44617c34520b1046eeab1774db3105eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga44617c34520b1046eeab1774db3105eb">&#9670;&nbsp;</a></span>PJSUA_MAX_RECORDERS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_MAX_RECORDERS&#160;&#160;&#160;32</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >The maximum file player. </p>

</div>
</div>
<a id="gad5a2bf94a231e10ad49fa789cbacf2e1" name="gad5a2bf94a231e10ad49fa789cbacf2e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad5a2bf94a231e10ad49fa789cbacf2e1">&#9670;&nbsp;</a></span>PJSUA_SDP_SESS_HAS_CONN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_SDP_SESS_HAS_CONN&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enable/disable "c=" line in SDP session level. Set to zero to disable it. </p>

</div>
</div>
<a id="gae4ccfc90ef855ab5862cec63a1edf951" name="gae4ccfc90ef855ab5862cec63a1edf951"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae4ccfc90ef855ab5862cec63a1edf951">&#9670;&nbsp;</a></span>PJSUA_TRANSPORT_RESTART_DELAY_TIME</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJSUA_TRANSPORT_RESTART_DELAY_TIME&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Specify the delay needed when restarting the transport/listener. e.g: 10 msec on Linux or Android, and 0 on the other platforms. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga1b9a612f6045f76bfd6e90b6982d1b0a" name="ga1b9a612f6045f76bfd6e90b6982d1b0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1b9a612f6045f76bfd6e90b6982d1b0a">&#9670;&nbsp;</a></span>pjsua_ext_snd_dev</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Opaque type of extra sound device, an additional sound device beside the primary sound device (the one instantiated via <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga983cbb58378280ad83e0705e4d263b09">pjsua_set_snd_dev()</a> or <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad3eee6537a5caa5f85d94d66f1bd850f">pjsua_set_snd_dev2()</a>). This sound device is also registered to conference bridge so it can be used as a normal conference bridge port, e.g: connect it to/from other ports, adjust/check audio level, etc. The conference bridge port ID can be queried using <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gab60c6b24c05afcaad194e5f629bf615e">pjsua_ext_snd_dev_get_conf_port()</a>.</p>
<p >Application may also use this API to improve media clock. Normally media clock is driven by sound device in master port, but unfortunately some sound devices may produce jittery clock. To improve media clock, application can install Null Sound Device (i.e: using <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga2e6cb631c6ca40d30973cc5ebeaba255">pjsua_set_null_snd_dev()</a>), which will act as a master port, and instantiate the sound device as extra sound device.</p>
<p >Note that extra sound device will not have auto-close upon idle feature. Also note that currently extra sound device only supports mono channel. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga7fb44c7699a910b90ecf44f6e6505da4" name="ga7fb44c7699a910b90ecf44f6e6505da4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7fb44c7699a910b90ecf44f6e6505da4">&#9670;&nbsp;</a></span>pjsua_snd_dev_id</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga7fb44c7699a910b90ecf44f6e6505da4">pjsua_snd_dev_id</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Sound device index constants. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga7fb44c7699a910b90ecf44f6e6505da4a15a6bccf75634be5a0f683b93c7ae217" name="gga7fb44c7699a910b90ecf44f6e6505da4a15a6bccf75634be5a0f683b93c7ae217"></a>PJSUA_SND_DEFAULT_CAPTURE_DEV&#160;</td><td class="fielddoc"><p >Constant to denote default capture device. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7fb44c7699a910b90ecf44f6e6505da4aee90fb29963a7e63c192c6876a435935" name="gga7fb44c7699a910b90ecf44f6e6505da4aee90fb29963a7e63c192c6876a435935"></a>PJSUA_SND_DEFAULT_PLAYBACK_DEV&#160;</td><td class="fielddoc"><p >Constant to denote default playback device. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7fb44c7699a910b90ecf44f6e6505da4a04264a4073463751063060dc3294b1ac" name="gga7fb44c7699a910b90ecf44f6e6505da4a04264a4073463751063060dc3294b1ac"></a>PJSUA_SND_NO_DEV&#160;</td><td class="fielddoc"><p >Constant to denote that no sound device is being used. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga7fb44c7699a910b90ecf44f6e6505da4a0a4585ebe3c0ed65c39a30261c21c04c" name="gga7fb44c7699a910b90ecf44f6e6505da4a0a4585ebe3c0ed65c39a30261c21c04c"></a>PJSUA_SND_NULL_DEV&#160;</td><td class="fielddoc"><p >Constant to denote null sound device. </p>
</td></tr>
</table>

</div>
</div>
<a id="ga0bb1b2a012780345daf4bb0bb1d73437" name="ga0bb1b2a012780345daf4bb0bb1d73437"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0bb1b2a012780345daf4bb0bb1d73437">&#9670;&nbsp;</a></span>pjsua_snd_dev_mode</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga0bb1b2a012780345daf4bb0bb1d73437">pjsua_snd_dev_mode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This enumeration specifies the sound device mode. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga0bb1b2a012780345daf4bb0bb1d73437a2fdc82f554f5b848447ae95fccef0bdd" name="gga0bb1b2a012780345daf4bb0bb1d73437a2fdc82f554f5b848447ae95fccef0bdd"></a>PJSUA_SND_DEV_SPEAKER_ONLY&#160;</td><td class="fielddoc"><p >Open sound device without mic (speaker only). </p>
</td></tr>
<tr><td class="fieldname"><a id="gga0bb1b2a012780345daf4bb0bb1d73437ad0f13c16414c6f704438decbd8c806cc" name="gga0bb1b2a012780345daf4bb0bb1d73437ad0f13c16414c6f704438decbd8c806cc"></a>PJSUA_SND_DEV_NO_IMMEDIATE_OPEN&#160;</td><td class="fielddoc"><p >Do not open sound device, after setting the sound device. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga6e52551f2fd68d2d2c8aa1e233579670" name="ga6e52551f2fd68d2d2c8aa1e233579670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e52551f2fd68d2d2c8aa1e233579670">&#9670;&nbsp;</a></span>pjsua_media_config_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_media_config_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__media__config.htm">pjsua_media_config</a> *&#160;</td>
          <td class="paramname"><em>cfg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Use this function to initialize media config.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfg</td><td>The media config to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga6e17d96ceb00a29c0a567f26aa946ba2" name="ga6e17d96ceb00a29c0a567f26aa946ba2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e17d96ceb00a29c0a567f26aa946ba2">&#9670;&nbsp;</a></span>pjsua_snd_dev_param_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_snd_dev_param_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a> *&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Initialize <a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a> with default values.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>The parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gace2a30e6c07ad96a21af6ea04a369ca4" name="gace2a30e6c07ad96a21af6ea04a369ca4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gace2a30e6c07ad96a21af6ea04a369ca4">&#9670;&nbsp;</a></span>pjsua_conf_connect_param_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pjsua_conf_connect_param_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__conf__connect__param.htm">pjsua_conf_connect_param</a> *&#160;</td>
          <td class="paramname"><em>prm</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Initialize <a class="el" href="structpjsua__conf__connect__param.htm">pjsua_conf_connect_param</a> with default values.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">prm</td><td>The parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga002432331e9c916ea962794688f5a294" name="ga002432331e9c916ea962794688f5a294"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga002432331e9c916ea962794688f5a294">&#9670;&nbsp;</a></span>pjsua_conf_get_max_ports()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pjsua_conf_get_max_ports </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get maxinum number of conference ports.</p>
<dl class="section return"><dt>Returns</dt><dd>Maximum number of ports in the conference bridge. </dd></dl>

</div>
</div>
<a id="ga9f9bdc996f224de15979191605ae99a0" name="ga9f9bdc996f224de15979191605ae99a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f9bdc996f224de15979191605ae99a0">&#9670;&nbsp;</a></span>pjsua_conf_get_active_ports()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned pjsua_conf_get_active_ports </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get current number of active ports in the bridge.</p>
<dl class="section return"><dt>Returns</dt><dd>The number. </dd></dl>

</div>
</div>
<a id="ga7171af5a82fdbadb9f3ca6b89ace9963" name="ga7171af5a82fdbadb9f3ca6b89ace9963"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7171af5a82fdbadb9f3ca6b89ace9963">&#9670;&nbsp;</a></span>pjsua_enum_conf_ports()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_enum_conf_ports </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enumerate all conference ports.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Array of conference port ID to be initialized. </td></tr>
    <tr><td class="paramname">count</td><td>On input, specifies max elements in the array. On return, it contains actual number of elements that have been initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga13c9cb1eef3109a1a2e0222f30639995" name="ga13c9cb1eef3109a1a2e0222f30639995"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga13c9cb1eef3109a1a2e0222f30639995">&#9670;&nbsp;</a></span>pjsua_conf_get_port_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_get_port_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>port_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjsua__conf__port__info.htm">pjsua_conf_port_info</a> *&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get information about the specified conference port</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port_id</td><td>Port identification. </td></tr>
    <tr><td class="paramname">info</td><td>Pointer to store the port info.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga833528c1019f4ab5c8fb216b4b5f788b" name="ga833528c1019f4ab5c8fb216b4b5f788b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga833528c1019f4ab5c8fb216b4b5f788b">&#9670;&nbsp;</a></span>pjsua_conf_add_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_add_port </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> *&#160;</td>
          <td class="paramname"><em>p_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Add arbitrary media port to PJSUA's conference bridge. Application can use this function to add the media port that it creates. For media ports that are created by PJSUA-LIB (such as calls, file player, or file recorder), PJSUA-LIB will automatically add the port to the bridge.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to use. </td></tr>
    <tr><td class="paramname">port</td><td>Media port to be added to the bridge. </td></tr>
    <tr><td class="paramname">p_id</td><td>Optional pointer to receive the conference slot id.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga399b2c6156f032e2b665d5a21bc6e912" name="ga399b2c6156f032e2b665d5a21bc6e912"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga399b2c6156f032e2b665d5a21bc6e912">&#9670;&nbsp;</a></span>pjsua_conf_remove_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_remove_port </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>port_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Remove arbitrary slot from the conference bridge. Application should only call this function if it registered the port manually with previous call to <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga833528c1019f4ab5c8fb216b4b5f788b">pjsua_conf_add_port()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port_id</td><td>The slot id of the port to be removed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga3451304d677e013130dfb9e6b37e3ee6" name="ga3451304d677e013130dfb9e6b37e3ee6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3451304d677e013130dfb9e6b37e3ee6">&#9670;&nbsp;</a></span>pjsua_conf_connect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_connect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>sink</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Establish unidirectional media flow from souce to sink. One source may transmit to multiple destinations/sink. And if multiple sources are transmitting to the same sink, the media will be mixed together. Source and sink may refer to the same ID, effectively looping the media.</p>
<p >If bidirectional media flow is desired, application needs to call this function twice, with the second one having the arguments reversed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>Port ID of the source media/transmitter. </td></tr>
    <tr><td class="paramname">sink</td><td>Port ID of the destination media/received.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga661f45f646989b019aac5c39a9ec1ddc" name="ga661f45f646989b019aac5c39a9ec1ddc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga661f45f646989b019aac5c39a9ec1ddc">&#9670;&nbsp;</a></span>pjsua_conf_connect2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_connect2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>sink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpjsua__conf__connect__param.htm">pjsua_conf_connect_param</a> *&#160;</td>
          <td class="paramname"><em>prm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Establish unidirectional media flow from source to sink. One source may transmit to multiple destinations/sink. And if multiple sources are transmitting to the same sink, the media will be mixed together. Source and sink may refer to the same ID, effectively looping the media.</p>
<p >Signal level from the source to the sink can be adjusted by making it louder or quieter via the parameter param. The level adjustment will apply to a specific connection only (i.e. only for the signal from the source to the sink), as compared to <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad828a91a6ee5d361ecb07fa818e17e41">pjsua_conf_adjust_tx_level()</a>/pjsua_conf_adjust_rx_level() which applies to all signals from/to that port. The signal adjustment will be cumulative, in this following order: signal from the source will be adjusted with the level specified in <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gaac62b6ef2ec5dd2f8717809548201e89">pjsua_conf_adjust_rx_level()</a>, then with the level specified via this API, and finally with the level specified to the sink's <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad828a91a6ee5d361ecb07fa818e17e41">pjsua_conf_adjust_tx_level()</a>.</p>
<p >If bidirectional media flow is desired, application needs to call this function twice, with the second one having the arguments reversed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>Port ID of the source media/transmitter. </td></tr>
    <tr><td class="paramname">sink</td><td>Port ID of the destination media/received. </td></tr>
    <tr><td class="paramname">prm</td><td>Conference port connection param. If set to NULL, default values will be used.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaca833a07e258123679ef98fe139225dc" name="gaca833a07e258123679ef98fe139225dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaca833a07e258123679ef98fe139225dc">&#9670;&nbsp;</a></span>pjsua_conf_disconnect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_disconnect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>sink</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Disconnect media flow from the source to destination port.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>Port ID of the source media/transmitter. </td></tr>
    <tr><td class="paramname">sink</td><td>Port ID of the destination media/received.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gad828a91a6ee5d361ecb07fa818e17e41" name="gad828a91a6ee5d361ecb07fa818e17e41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad828a91a6ee5d361ecb07fa818e17e41">&#9670;&nbsp;</a></span>pjsua_conf_adjust_tx_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_adjust_tx_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>slot</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Adjust the signal level to be transmitted from the bridge to the specified port by making it louder or quieter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">slot</td><td>The conference bridge slot number. </td></tr>
    <tr><td class="paramname">level</td><td>Signal level adjustment. Value 1.0 means no level adjustment, while value 0 means to mute the port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaac62b6ef2ec5dd2f8717809548201e89" name="gaac62b6ef2ec5dd2f8717809548201e89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaac62b6ef2ec5dd2f8717809548201e89">&#9670;&nbsp;</a></span>pjsua_conf_adjust_rx_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_adjust_rx_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>slot</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Adjust the signal level to be received from the specified port (to the bridge) by making it louder or quieter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">slot</td><td>The conference bridge slot number. </td></tr>
    <tr><td class="paramname">level</td><td>Signal level adjustment. Value 1.0 means no level adjustment, while value 0 means to mute the port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga110641655c8bb8f5009683eefae995e4" name="ga110641655c8bb8f5009683eefae995e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga110641655c8bb8f5009683eefae995e4">&#9670;&nbsp;</a></span>pjsua_conf_get_signal_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_conf_get_signal_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a>&#160;</td>
          <td class="paramname"><em>slot</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>tx_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>rx_level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get last signal level transmitted to or received from the specified port. The signal level is an integer value in zero to 255, with zero indicates no signal, and 255 indicates the loudest signal level.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">slot</td><td>The conference bridge slot number. </td></tr>
    <tr><td class="paramname">tx_level</td><td>Optional argument to receive the level of signal transmitted to the specified port (i.e. the direction is from the bridge to the port). </td></tr>
    <tr><td class="paramname">rx_level</td><td>Optional argument to receive the level of signal received from the port (i.e. the direction is from the port to the bridge).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga90a2ec9c8516b5ad13b061a46ae1d07a" name="ga90a2ec9c8516b5ad13b061a46ae1d07a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga90a2ec9c8516b5ad13b061a46ae1d07a">&#9670;&nbsp;</a></span>pjsua_player_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_player_create </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> *&#160;</td>
          <td class="paramname"><em>p_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a file player, and automatically add this player to the conference bridge.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>The filename to be played. Currently only WAV files are supported, and the WAV file MUST be formatted as 16bit PCM mono/single channel (any clock rate is supported). Filename's length must be smaller than PJ_MAXPATH. </td></tr>
    <tr><td class="paramname">options</td><td>Optional option flag. Application may specify PJMEDIA_FILE_NO_LOOP to prevent playback loop. </td></tr>
    <tr><td class="paramname">p_id</td><td>Pointer to receive player ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga74d15f94fa6ec04e1417d9d908bc24f8" name="ga74d15f94fa6ec04e1417d9d908bc24f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga74d15f94fa6ec04e1417d9d908bc24f8">&#9670;&nbsp;</a></span>pjsua_playlist_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_playlist_create </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a>&#160;</td>
          <td class="paramname"><em>file_names</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>file_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a> *&#160;</td>
          <td class="paramname"><em>p_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a file playlist media port, and automatically add the port to the conference bridge.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">file_names</td><td>Array of file names to be added to the play list. Note that the files must have the same clock rate, number of channels, and number of bits per sample. Each filename's length must be smaller than PJ_MAXPATH. </td></tr>
    <tr><td class="paramname">file_count</td><td>Number of files in the array. </td></tr>
    <tr><td class="paramname">label</td><td>Optional label to be set for the media port. </td></tr>
    <tr><td class="paramname">options</td><td>Optional option flag. Application may specify PJMEDIA_FILE_NO_LOOP to prevent looping. </td></tr>
    <tr><td class="paramname">p_id</td><td>Optional pointer to receive player ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga4b7a4ad09c9edad41ae516cea468819c" name="ga4b7a4ad09c9edad41ae516cea468819c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4b7a4ad09c9edad41ae516cea468819c">&#9670;&nbsp;</a></span>pjsua_player_get_conf_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> pjsua_player_get_conf_port </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get conference port ID associated with player or playlist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The file player ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Conference port ID associated with this player. </dd></dl>

</div>
</div>
<a id="ga19ec871dc458d07deabd1d7da16d1f98" name="ga19ec871dc458d07deabd1d7da16d1f98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga19ec871dc458d07deabd1d7da16d1f98">&#9670;&nbsp;</a></span>pjsua_player_get_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_player_get_port </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> **&#160;</td>
          <td class="paramname"><em>p_port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the media port for the player or playlist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The player ID. </td></tr>
    <tr><td class="paramname">p_port</td><td>The media port associated with the player.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gaeaa1f5fee3f42fbacd799de31ed0a64b" name="gaeaa1f5fee3f42fbacd799de31ed0a64b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeaa1f5fee3f42fbacd799de31ed0a64b">&#9670;&nbsp;</a></span>pjsua_player_get_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_player_get_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__wav__player__info.htm">pjmedia_wav_player_info</a> *&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get additional info about the file player. This operation is not valid for playlist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The file player ID. </td></tr>
    <tr><td class="paramname">info</td><td>The info.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga16f52dad95d3fb1aa620f08fa2159a38" name="ga16f52dad95d3fb1aa620f08fa2159a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga16f52dad95d3fb1aa620f08fa2159a38">&#9670;&nbsp;</a></span>pjsua_player_get_pos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> pjsua_player_get_pos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get playback position. This operation is not valid for playlist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The file player ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The current playback position, in samples. On error, return the error code as negative value. </dd></dl>

</div>
</div>
<a id="ga54b0878a16f838b47e663749b00df27f" name="ga54b0878a16f838b47e663749b00df27f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga54b0878a16f838b47e663749b00df27f">&#9670;&nbsp;</a></span>pjsua_player_set_pos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_player_set_pos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a>&#160;</td>
          <td class="paramname"><em>samples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set playback position. This operation is not valid for playlist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The file player ID. </td></tr>
    <tr><td class="paramname">samples</td><td>The playback position, in samples. Application can specify zero to re-start the playback.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga8e050f65aeb5997994fa36af24d9e6db" name="ga8e050f65aeb5997994fa36af24d9e6db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8e050f65aeb5997994fa36af24d9e6db">&#9670;&nbsp;</a></span>pjsua_player_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_player_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#ga266a56483961431df7a5ebae457b9f3f">pjsua_player_id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Close the file of playlist, remove the player from the bridge, and free resources associated with the file player or playlist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The file player ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga58ed7a8fe6fadde669aa34f3d468f73b" name="ga58ed7a8fe6fadde669aa34f3d468f73b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga58ed7a8fe6fadde669aa34f3d468f73b">&#9670;&nbsp;</a></span>pjsua_recorder_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_recorder_create </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>enc_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>enc_param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a>&#160;</td>
          <td class="paramname"><em>max_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a> *&#160;</td>
          <td class="paramname"><em>p_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create a file recorder, and automatically connect this recorder to the conference bridge. The recorder currently supports recording WAV file. The type of the recorder to use is determined by the extension of the file (e.g. ".wav").</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Output file name. The function will determine the default format to be used based on the file extension. Currently ".wav" is supported on all platforms. Filename's length must be smaller than PJ_MAXPATH. </td></tr>
    <tr><td class="paramname">enc_type</td><td>Optionally specify the type of encoder to be used to compress the media, if the file can support different encodings. This value must be zero for now. </td></tr>
    <tr><td class="paramname">enc_param</td><td>Optionally specify codec specific parameter to be passed to the file writer. For .WAV recorder, this value must be NULL. </td></tr>
    <tr><td class="paramname">max_size</td><td>Maximum file size. Specify zero or -1 to remove size limitation. This value must be zero or -1 for now. </td></tr>
    <tr><td class="paramname">options</td><td>Optional options. </td></tr>
    <tr><td class="paramname">p_id</td><td>Pointer to receive the recorder instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga335b6f11c54190f876539899424d64e1" name="ga335b6f11c54190f876539899424d64e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga335b6f11c54190f876539899424d64e1">&#9670;&nbsp;</a></span>pjsua_recorder_get_conf_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> pjsua_recorder_get_conf_port </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get conference port associated with recorder.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The recorder ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Conference port ID associated with this recorder. </dd></dl>

</div>
</div>
<a id="gadebc4a42cbb4a40144107f8a1f70fb16" name="gadebc4a42cbb4a40144107f8a1f70fb16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadebc4a42cbb4a40144107f8a1f70fb16">&#9670;&nbsp;</a></span>pjsua_recorder_get_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_recorder_get_port </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> **&#160;</td>
          <td class="paramname"><em>p_port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get the media port for the recorder.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The recorder ID. </td></tr>
    <tr><td class="paramname">p_port</td><td>The media port associated with the recorder.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gaad482170437b9963e2c7b29c746cdff0" name="gaad482170437b9963e2c7b29c746cdff0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaad482170437b9963e2c7b29c746cdff0">&#9670;&nbsp;</a></span>pjsua_recorder_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_recorder_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__BASE.htm#gad050f73ecac9a0ebbbcfc029ae483118">pjsua_recorder_id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destroy recorder (this will complete recording).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The recorder ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga71374138c82b35631a8ad48d14414447" name="ga71374138c82b35631a8ad48d14414447"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga71374138c82b35631a8ad48d14414447">&#9670;&nbsp;</a></span>pjsua_enum_aud_devs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_enum_aud_devs </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__aud__dev__info.htm">pjmedia_aud_dev_info</a>&#160;</td>
          <td class="paramname"><em>info</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enum all audio devices installed in the system.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">info</td><td>Array of info to be initialized. </td></tr>
    <tr><td class="paramname">count</td><td>On input, specifies max elements in the array. On return, it contains actual number of elements that have been initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga706208e7f609bd820321a3943cfeba47" name="ga706208e7f609bd820321a3943cfeba47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga706208e7f609bd820321a3943cfeba47">&#9670;&nbsp;</a></span>pjsua_enum_snd_devs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_enum_snd_devs </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__snd__dev__info.htm">pjmedia_snd_dev_info</a>&#160;</td>
          <td class="paramname"><em>info</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enum all sound devices installed in the system (old API).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">info</td><td>Array of info to be initialized. </td></tr>
    <tr><td class="paramname">count</td><td>On input, specifies max elements in the array. On return, it contains actual number of elements that have been initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga588e687161fb9db8dff3921e98fb548d" name="ga588e687161fb9db8dff3921e98fb548d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga588e687161fb9db8dff3921e98fb548d">&#9670;&nbsp;</a></span>pjsua_get_snd_dev()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_get_snd_dev </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>capture_dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>playback_dev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get currently active sound devices. If sound devices has not been created (for example when <a class="el" href="group__PJSUA__LIB__BASE.htm#ga82f9b09d515c56288a2ad11f4fbdae3f">pjsua_start()</a> is not called), it is possible that the function returns PJ_SUCCESS with -1 as device IDs. See also <a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga7fb44c7699a910b90ecf44f6e6505da4">pjsua_snd_dev_id</a> constants.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">capture_dev</td><td>On return it will be filled with device ID of the capture device. </td></tr>
    <tr><td class="paramname">playback_dev</td><td>On return it will be filled with device ID of the device ID of the playback device.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga983cbb58378280ad83e0705e4d263b09" name="ga983cbb58378280ad83e0705e4d263b09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga983cbb58378280ad83e0705e4d263b09">&#9670;&nbsp;</a></span>pjsua_set_snd_dev()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_set_snd_dev </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>capture_dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>playback_dev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Select or change sound device. Application may call this function at any time to replace current sound device.</p>
<p >Note that this function will always try to open the sound device immediately. If immediate open is not preferred, use <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad3eee6537a5caa5f85d94d66f1bd850f">pjsua_set_snd_dev2()</a> with PJSUA_SND_DEV_NO_IMMEDIATE_OPEN flag.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">capture_dev</td><td>Device ID of the capture device. </td></tr>
    <tr><td class="paramname">playback_dev</td><td>Device ID of the playback device.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga2e0ceb5cb58bcea340e1494dfff3456c" name="ga2e0ceb5cb58bcea340e1494dfff3456c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2e0ceb5cb58bcea340e1494dfff3456c">&#9670;&nbsp;</a></span>pjsua_get_snd_dev2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_get_snd_dev2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a> *&#160;</td>
          <td class="paramname"><em>snd_param</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get sound device parameters such as playback &amp; capture device IDs and mode.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">snd_param</td><td>On return, it is set with sound device param.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gad3eee6537a5caa5f85d94d66f1bd850f" name="gad3eee6537a5caa5f85d94d66f1bd850f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad3eee6537a5caa5f85d94d66f1bd850f">&#9670;&nbsp;</a></span>pjsua_set_snd_dev2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_set_snd_dev2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpjsua__snd__dev__param.htm">pjsua_snd_dev_param</a> *&#160;</td>
          <td class="paramname"><em>snd_param</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Select or change sound device according to the specified param.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">snd_param</td><td>Sound device param.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga2e6cb631c6ca40d30973cc5ebeaba255" name="ga2e6cb631c6ca40d30973cc5ebeaba255"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2e6cb631c6ca40d30973cc5ebeaba255">&#9670;&nbsp;</a></span>pjsua_set_null_snd_dev()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_set_null_snd_dev </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set pjsua to use null sound device. The null sound device only provides the timing needed by the conference bridge, and will not interract with any hardware.</p>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gae91073d7be8287daa229589946899522" name="gae91073d7be8287daa229589946899522"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae91073d7be8287daa229589946899522">&#9670;&nbsp;</a></span>pjsua_set_no_snd_dev()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__port.htm">pjmedia_port</a> * pjsua_set_no_snd_dev </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Disconnect the main conference bridge from any sound devices, and let application connect the bridge to it's own sound device/master port.</p>
<dl class="section return"><dt>Returns</dt><dd>The port interface of the conference bridge, so that application can connect this to it's own sound device or master port. </dd></dl>

</div>
</div>
<a id="gafa70df7a2298b8c80343ae69380c701c" name="gafa70df7a2298b8c80343ae69380c701c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafa70df7a2298b8c80343ae69380c701c">&#9670;&nbsp;</a></span>pjsua_set_ec()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_set_ec </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>tail_ms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Change the echo cancellation settings.</p>
<p >The behavior of this function depends on whether the sound device is currently active, and if it is, whether device or software AEC is being used.</p>
<p >If the sound device is currently active, and if the device supports AEC, this function will forward the change request to the device and it will be up to the device on whether support the request. If software AEC is being used (the software EC will be used if the device does not support AEC), this function will change the software EC settings. In all cases, the setting will be saved for future opening of the sound device.</p>
<p >If the sound device is not currently active, this will only change the default AEC settings and the setting will be applied next time the sound device is opened.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tail_ms</td><td>The tail length, in miliseconds. Set to zero to disable AEC. </td></tr>
    <tr><td class="paramname">options</td><td>Options to be passed to <a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__Echo__Cancel.htm#ga6b2a27be70d96eb16fac66f19b6913d3">pjmedia_echo_create()</a>. Normally the value should be zero.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="gac159d0de7848d4ac4a9c67f586f32a42" name="gac159d0de7848d4ac4a9c67f586f32a42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac159d0de7848d4ac4a9c67f586f32a42">&#9670;&nbsp;</a></span>pjsua_get_ec_tail()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_get_ec_tail </td>
          <td>(</td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>p_tail_ms</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get current echo canceller tail length.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_tail_ms</td><td>Pointer to receive the tail length, in miliseconds. If AEC is disabled, the value will be zero.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga7f152c39a6a9c9b4079555ca3105f97c" name="ga7f152c39a6a9c9b4079555ca3105f97c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7f152c39a6a9c9b4079555ca3105f97c">&#9670;&nbsp;</a></span>pjsua_get_ec_stat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_get_ec_stat </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__echo__stat.htm">pjmedia_echo_stat</a> *&#160;</td>
          <td class="paramname"><em>p_stat</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get echo canceller statistics.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_stat</td><td>Pointer to receive the stat.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaed1da92f14e984b8df8dad9b6057da43" name="gaed1da92f14e984b8df8dad9b6057da43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed1da92f14e984b8df8dad9b6057da43">&#9670;&nbsp;</a></span>pjsua_snd_is_active()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> pjsua_snd_is_active </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Check whether the sound device is currently active. The sound device may be inactive if the application has set the auto close feature to non-zero (the snd_auto_close_time setting in <a class="el" href="structpjsua__media__config.htm">pjsua_media_config</a>), or if null sound device or no sound device has been configured via the <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gae91073d7be8287daa229589946899522">pjsua_set_no_snd_dev()</a> function. </p>

</div>
</div>
<a id="ga80e875e32ccc90dc10dd623355aac129" name="ga80e875e32ccc90dc10dd623355aac129"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga80e875e32ccc90dc10dd623355aac129">&#9670;&nbsp;</a></span>pjsua_snd_set_setting()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_snd_set_setting </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__AUDIODEV__API.htm#gac0056b89f06893c8a67885c4307e0737">pjmedia_aud_dev_cap</a>&#160;</td>
          <td class="paramname"><em>cap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>&#160;</td>
          <td class="paramname"><em>keep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Configure sound device setting to the sound device being used. If sound device is currently active, the function will forward the setting to the sound device instance to be applied immediately, if it supports it.</p>
<p >The setting will be saved for future opening of the sound device, if the "keep" argument is set to non-zero. If the sound device is currently inactive, and the "keep" argument is false, this function will return error.</p>
<p >Note that in case the setting is kept for future use, it will be applied to any devices, even when application has changed the sound device to be used. To reset the setting, application can call <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gad3eee6537a5caa5f85d94d66f1bd850f">pjsua_set_snd_dev2()</a> with <em>use_default_settings</em> set to PJ_TRUE.</p>
<p >Note also that the echo cancellation setting should be set with <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gafa70df7a2298b8c80343ae69380c701c">pjsua_set_ec()</a> API instead.</p>
<p >See also <a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__AUDIODEV__API.htm#gaad35cd06ce7833540778eaa6b532422a">pjmedia_aud_stream_set_cap()</a> for more information about setting an audio device capability.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cap</td><td>The sound device setting to change. </td></tr>
    <tr><td class="paramname">pval</td><td>Pointer to value. Please see <a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__AUDIODEV__API.htm#gac0056b89f06893c8a67885c4307e0737">pjmedia_aud_dev_cap</a> documentation about the type of value to be supplied for each setting. </td></tr>
    <tr><td class="paramname">keep</td><td>Specify whether the setting is to be kept for future use.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga8b094f54bab1ea94e9b4a630f9c39977" name="ga8b094f54bab1ea94e9b4a630f9c39977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8b094f54bab1ea94e9b4a630f9c39977">&#9670;&nbsp;</a></span>pjsua_snd_get_setting()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_snd_get_setting </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__AUDIODEV__API.htm#gac0056b89f06893c8a67885c4307e0737">pjmedia_aud_dev_cap</a>&#160;</td>
          <td class="paramname"><em>cap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pval</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Retrieve a sound device setting. If sound device is currently active, the function will forward the request to the sound device. If sound device is currently inactive, and if application had previously set the setting and mark the setting as kept, then that setting will be returned. Otherwise, this function will return error.</p>
<p >Note that echo cancellation settings should be retrieved with <a class="el" href="group__PJSUA__LIB__MEDIA.htm#gac159d0de7848d4ac4a9c67f586f32a42">pjsua_get_ec_tail()</a> API instead.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cap</td><td>The sound device setting to retrieve. </td></tr>
    <tr><td class="paramname">pval</td><td>Pointer to receive the value. Please see <a class="elRef" href="../../../pjmedia/docs/html/group__PJMEDIA__AUDIODEV__API.htm#gac0056b89f06893c8a67885c4307e0737">pjmedia_aud_dev_cap</a> documentation about the type of value to be supplied for each setting.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga917653182664ac8b027350e55f969239" name="ga917653182664ac8b027350e55f969239"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga917653182664ac8b027350e55f969239">&#9670;&nbsp;</a></span>pjsua_ext_snd_dev_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_ext_snd_dev_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__snd__port__param.htm">pjmedia_snd_port_param</a> *&#160;</td>
          <td class="paramname"><em>param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> **&#160;</td>
          <td class="paramname"><em>p_snd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Create an extra sound device and register it to conference bridge.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">param</td><td>Sound device port param. Currently this only supports mono channel, so channel count must be set to 1. </td></tr>
    <tr><td class="paramname">p_snd</td><td>The extra sound device instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaf98afec9a5fcc0b02a83e3a03d0ab55f" name="gaf98afec9a5fcc0b02a83e3a03d0ab55f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf98afec9a5fcc0b02a83e3a03d0ab55f">&#9670;&nbsp;</a></span>pjsua_ext_snd_dev_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_ext_snd_dev_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> *&#160;</td>
          <td class="paramname"><em>snd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Destroy an extra sound device and unregister it from conference bridge.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">snd</td><td>The extra sound device instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga18c4cc9e33c5a407804d61b88596500b" name="ga18c4cc9e33c5a407804d61b88596500b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga18c4cc9e33c5a407804d61b88596500b">&#9670;&nbsp;</a></span>pjsua_ext_snd_dev_get_snd_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjmedia/docs/html/group__PJMED__SND__PORT.htm#gaf747a635d331877d0025e182faa3f1a2">pjmedia_snd_port</a> * pjsua_ext_snd_dev_get_snd_port </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> *&#160;</td>
          <td class="paramname"><em>snd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get sound port instance of an extra sound device.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">snd</td><td>The extra sound device instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The sound port instance. </dd></dl>

</div>
</div>
<a id="gab60c6b24c05afcaad194e5f629bf615e" name="gab60c6b24c05afcaad194e5f629bf615e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab60c6b24c05afcaad194e5f629bf615e">&#9670;&nbsp;</a></span>pjsua_ext_snd_dev_get_conf_port()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJSUA__LIB__BASE.htm#gaf5d44947e4e62dc31dfde88884534385">pjsua_conf_port_id</a> pjsua_ext_snd_dev_get_conf_port </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJSUA__LIB__MEDIA.htm#ga1b9a612f6045f76bfd6e90b6982d1b0a">pjsua_ext_snd_dev</a> *&#160;</td>
          <td class="paramname"><em>snd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get conference port ID of an extra sound device.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">snd</td><td>The extra sound device instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The conference port ID. </dd></dl>

</div>
</div>
<a id="gacf5c9734d9c7a7f4f16c0f9013bef02f" name="gacf5c9734d9c7a7f4f16c0f9013bef02f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacf5c9734d9c7a7f4f16c0f9013bef02f">&#9670;&nbsp;</a></span>pjsua_enum_codecs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_enum_codecs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjsua__codec__info.htm">pjsua_codec_info</a>&#160;</td>
          <td class="paramname"><em>id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Enum all supported codecs in the system.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Array of ID to be initialized. </td></tr>
    <tr><td class="paramname">count</td><td>On input, specifies max elements in the array. On return, it contains actual number of elements that have been initialized.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaf6ec502e5898fafc8d697010f44401b2" name="gaf6ec502e5898fafc8d697010f44401b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf6ec502e5898fafc8d697010f44401b2">&#9670;&nbsp;</a></span>pjsua_codec_set_priority()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_codec_set_priority </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a>&#160;</td>
          <td class="paramname"><em>priority</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Change codec priority.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID, which is a string that uniquely identify the codec (such as "speex/8000"). Please see pjsua manual or pjmedia codec reference for details. </td></tr>
    <tr><td class="paramname">priority</td><td>Codec priority, 0-255, where zero means to disable the codec.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga28cfde094146388653e1f7b60235bcd2" name="ga28cfde094146388653e1f7b60235bcd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga28cfde094146388653e1f7b60235bcd2">&#9670;&nbsp;</a></span>pjsua_codec_get_param()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_codec_get_param </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__codec__param.htm">pjmedia_codec_param</a> *&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Get codec parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID. </td></tr>
    <tr><td class="paramname">param</td><td>Structure to receive codec parameters.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gab5a78d3b880d47636abfa9c2077eabd0" name="gab5a78d3b880d47636abfa9c2077eabd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab5a78d3b880d47636abfa9c2077eabd0">&#9670;&nbsp;</a></span>pjsua_codec_set_param()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjsua_codec_set_param </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/structpj__str__t.htm">pj_str_t</a> *&#160;</td>
          <td class="paramname"><em>codec_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjmedia/docs/html/structpjmedia__codec__param.htm">pjmedia_codec_param</a> *&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Set codec parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">codec_id</td><td>Codec ID. </td></tr>
    <tr><td class="paramname">param</td><td>Codec parameter to set. Set to NULL to reset codec parameter to library default settings.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
