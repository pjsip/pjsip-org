<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJMEDIA Reference: Samples: Benchmarking Conference Bridge (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->

	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<h1>Samples: Benchmarking Conference Bridge </h1>  </div>
</div>
<div class="contents">
<p>Benchmarking pjmedia (conference bridge+resample). For my use only, and it only works in Win32.</p>
<p>This file is pjsip-apps/src/samples/confbench.c</p>
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: confbench.c 3553 2011-05-05 06:14:19Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;<a class="code" href="pjmedia_8h.htm" title="PJMEDIA main header file.">pjmedia.h</a>&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;pjlib-util.h&gt;</span> <span class="comment">/* pj_getopt */</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;pjlib.h&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>     <span class="comment">/* atoi() */</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &lt;windows.h&gt;</span>
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="comment">/* For logging purpose. */</span>
<a name="l00042"></a>00042 <span class="preprocessor">#define THIS_FILE   &quot;confsample.c&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="comment">/* Configurable:</span>
<a name="l00046"></a>00046 <span class="comment"> *   LARGE_SET will create in total of about 232 ports.</span>
<a name="l00047"></a>00047 <span class="comment"> *   HAS_RESAMPLE will activate resampling on about half</span>
<a name="l00048"></a>00048 <span class="comment"> *     the port.</span>
<a name="l00049"></a>00049 <span class="comment"> */</span>
<a name="l00050"></a>00050 <span class="preprocessor">#define TEST_SET            LARGE_SET</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span><span class="preprocessor">#define HAS_RESAMPLE        0</span>
<a name="l00052"></a>00052 <span class="preprocessor"></span>
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 <span class="preprocessor">#define SMALL_SET           16</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span><span class="preprocessor">#define LARGE_SET           100</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span>
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 <span class="preprocessor">#define PORT_COUNT          254</span>
<a name="l00059"></a>00059 <span class="preprocessor"></span><span class="preprocessor">#define CLOCK_RATE          16000</span>
<a name="l00060"></a>00060 <span class="preprocessor"></span><span class="preprocessor">#define SAMPLES_PER_FRAME   (CLOCK_RATE/100)</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span><span class="preprocessor">#if HAS_RESAMPLE</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span><span class="preprocessor">#  define SINE_CLOCK        32000</span>
<a name="l00063"></a>00063 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00064"></a>00064 <span class="preprocessor"></span><span class="preprocessor">#  define SINE_CLOCK        CLOCK_RATE</span>
<a name="l00065"></a>00065 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00066"></a>00066 <span class="preprocessor"></span><span class="preprocessor">#define SINE_PTIME          20</span>
<a name="l00067"></a>00067 <span class="preprocessor"></span><span class="preprocessor">#define DURATION            10</span>
<a name="l00068"></a>00068 <span class="preprocessor"></span>
<a name="l00069"></a>00069 <span class="preprocessor">#define SINE_COUNT          TEST_SET</span>
<a name="l00070"></a>00070 <span class="preprocessor"></span><span class="preprocessor">#define NULL_COUNT          TEST_SET</span>
<a name="l00071"></a>00071 <span class="preprocessor"></span><span class="preprocessor">#define IDLE_COUNT          32</span>
<a name="l00072"></a>00072 <span class="preprocessor"></span>
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="keyword">static</span> <span class="keywordtype">void</span> app_perror(<span class="keyword">const</span> <span class="keywordtype">char</span> *sender, <span class="keyword">const</span> <span class="keywordtype">char</span> *title, <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status)
<a name="l00075"></a>00075 {
<a name="l00076"></a>00076     <span class="keywordtype">char</span> errmsg[PJ_ERR_MSG_SIZE];
<a name="l00077"></a>00077 
<a name="l00078"></a>00078     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__errno.htm#ga7d2616aded0d61924fb31f4fd6ee45c0">pj_strerror</a>(status, errmsg, <span class="keyword">sizeof</span>(errmsg));
<a name="l00079"></a>00079     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#ga767b9231bf7c2b57274771cdc4bca818">PJ_LOG</a>(1,(sender, <span class="stringliteral">&quot;%s: %s&quot;</span>, title, errmsg));
<a name="l00080"></a>00080 }
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 
<a name="l00083"></a>00083 <span class="keyword">struct </span><a class="code" href="structTimes.htm">Times</a>
<a name="l00084"></a>00084 {
<a name="l00085"></a>00085     FILETIME        kernel_time;
<a name="l00086"></a>00086     ULARGE_INTEGER  u_kernel_time;
<a name="l00087"></a>00087     FILETIME        user_time;
<a name="l00088"></a>00088     ULARGE_INTEGER  u_user_time;
<a name="l00089"></a>00089     ULARGE_INTEGER  u_total;
<a name="l00090"></a>00090 };
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 <span class="keyword">static</span> <span class="keywordtype">void</span> process(<span class="keyword">struct</span> <a class="code" href="structTimes.htm">Times</a> *t)
<a name="l00093"></a>00093 {
<a name="l00094"></a>00094     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga38d0ee03a9c582c627d44bfcb35fb6a8">pj_memcpy</a>(&amp;t-&gt;u_kernel_time, &amp;t-&gt;kernel_time, <span class="keyword">sizeof</span>(FILETIME));
<a name="l00095"></a>00095     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga38d0ee03a9c582c627d44bfcb35fb6a8">pj_memcpy</a>(&amp;t-&gt;u_user_time, &amp;t-&gt;user_time, <span class="keyword">sizeof</span>(FILETIME));
<a name="l00096"></a>00096     t-&gt;u_total.QuadPart = t-&gt;u_kernel_time.QuadPart + t-&gt;u_user_time.QuadPart;
<a name="l00097"></a>00097 }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 <span class="keyword">static</span> <span class="keywordtype">void</span> benchmark(<span class="keywordtype">void</span>)
<a name="l00100"></a>00100 {
<a name="l00101"></a>00101     FILETIME creation_time, exit_time;
<a name="l00102"></a>00102     <span class="keyword">struct </span><a class="code" href="structTimes.htm">Times</a> start, end;
<a name="l00103"></a>00103     DWORD ts, te;
<a name="l00104"></a>00104     LARGE_INTEGER elapsed;
<a name="l00105"></a>00105     BOOL rc;
<a name="l00106"></a>00106     <span class="keywordtype">int</span> i;
<a name="l00107"></a>00107     <span class="keywordtype">double</span> pct;
<a name="l00108"></a>00108 
<a name="l00109"></a>00109     puts(<span class="stringliteral">&quot;Test started!&quot;</span>); fflush(stdout);
<a name="l00110"></a>00110 
<a name="l00111"></a>00111     ts = GetTickCount();
<a name="l00112"></a>00112     rc = GetProcessTimes(GetCurrentProcess(), &amp;creation_time, &amp;exit_time,
<a name="l00113"></a>00113                          &amp;start.kernel_time, &amp;start.user_time);
<a name="l00114"></a>00114     <span class="keywordflow">for</span> (i=DURATION; i&gt;0; --i) {
<a name="l00115"></a>00115         printf(<span class="stringliteral">&quot;\r%d &quot;</span>, i); fflush(stdout);
<a name="l00116"></a>00116         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep</a>(1000);
<a name="l00117"></a>00117     }
<a name="l00118"></a>00118     rc = GetProcessTimes(GetCurrentProcess(), &amp;creation_time, &amp;exit_time,
<a name="l00119"></a>00119                          &amp;end.kernel_time, &amp;end.user_time);
<a name="l00120"></a>00120     te = GetTickCount();
<a name="l00121"></a>00121 
<a name="l00122"></a>00122     process(&amp;start);
<a name="l00123"></a>00123     process(&amp;end);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125     elapsed.QuadPart = end.u_total.QuadPart - start.u_total.QuadPart;
<a name="l00126"></a>00126 
<a name="l00127"></a>00127     pct = elapsed.QuadPart * 100.0 / ((te-ts)*10000.0);
<a name="l00128"></a>00128 
<a name="l00129"></a>00129     printf(<span class="stringliteral">&quot;CPU usage=%6.4f%%\n&quot;</span>, pct); fflush(stdout);
<a name="l00130"></a>00130 }
<a name="l00131"></a>00131 
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 
<a name="l00134"></a>00134 <span class="comment">/* Struct attached to sine generator */</span>
<a name="l00135"></a>00135 <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00136"></a>00136 {
<a name="l00137"></a>00137     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1bc332ac2d70cd1a23adef144571790f">pj_int16_t</a>  *samples;       <span class="comment">/* Sine samples.    */</span>
<a name="l00138"></a>00138 } <a class="code" href="structport__data.htm">port_data</a>;
<a name="l00139"></a>00139 
<a name="l00140"></a>00140 
<a name="l00141"></a>00141 <span class="comment">/* This callback is called to feed more samples */</span>
<a name="l00142"></a>00142 <span class="keyword">static</span> <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> sine_get_frame( <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *port, 
<a name="l00143"></a>00143                                    <a class="code" href="structpjmedia__frame.htm">pjmedia_frame</a> *frame)
<a name="l00144"></a>00144 {
<a name="l00145"></a>00145     <a class="code" href="structport__data.htm">port_data</a> *sine = port-&gt;<a class="code" href="structpjmedia__port.htm#ab688ca206f40f233e183248a35c1becd">port_data</a>.<a class="code" href="structpjmedia__port_1_1port__data.htm#aa88bbfd5b899a39e068477f48b6a872f">pdata</a>;
<a name="l00146"></a>00146     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1bc332ac2d70cd1a23adef144571790f">pj_int16_t</a> *samples = frame-&gt;<a class="code" href="structpjmedia__frame.htm#adaef949faa0309df6383c2955d4405af">buf</a>;
<a name="l00147"></a>00147     <span class="keywordtype">unsigned</span> i, count, left, right;
<a name="l00148"></a>00148 
<a name="l00149"></a>00149     <span class="comment">/* Get number of samples */</span>
<a name="l00150"></a>00150     count = frame-&gt;<a class="code" href="structpjmedia__frame.htm#aef71e5daee31e30f0222aaca74819792">size</a> / 2 / port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a>;
<a name="l00151"></a>00151 
<a name="l00152"></a>00152     left = 0;
<a name="l00153"></a>00153     right = 0;
<a name="l00154"></a>00154 
<a name="l00155"></a>00155     <span class="keywordflow">for</span> (i=0; i&lt;count; ++i) {
<a name="l00156"></a>00156         *samples++ = sine-&gt;samples[left];
<a name="l00157"></a>00157         ++left;
<a name="l00158"></a>00158 
<a name="l00159"></a>00159         <span class="keywordflow">if</span> (port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a> == 2) {
<a name="l00160"></a>00160             *samples++ = sine-&gt;samples[right];
<a name="l00161"></a>00161             right += 2; <span class="comment">/* higher pitch so we can distinguish left and right. */</span>
<a name="l00162"></a>00162             <span class="keywordflow">if</span> (right &gt;= count)
<a name="l00163"></a>00163                 right = 0;
<a name="l00164"></a>00164         }
<a name="l00165"></a>00165     }
<a name="l00166"></a>00166 
<a name="l00167"></a>00167     <span class="comment">/* Must set frame-&gt;type correctly, otherwise the sound device</span>
<a name="l00168"></a>00168 <span class="comment">     * will refuse to play.</span>
<a name="l00169"></a>00169 <span class="comment">     */</span>
<a name="l00170"></a>00170     frame-&gt;<a class="code" href="structpjmedia__frame.htm#a7b4e62af4cbe9e40aa9ef276b43f61dc">type</a> = PJMEDIA_FRAME_TYPE_AUDIO;
<a name="l00171"></a>00171 
<a name="l00172"></a>00172     <span class="keywordflow">return</span> PJ_SUCCESS;
<a name="l00173"></a>00173 }
<a name="l00174"></a>00174 
<a name="l00175"></a>00175 <span class="preprocessor">#ifndef M_PI</span>
<a name="l00176"></a>00176 <span class="preprocessor"></span><span class="preprocessor">#define M_PI  (3.14159265)</span>
<a name="l00177"></a>00177 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00178"></a>00178 <span class="preprocessor"></span>
<a name="l00179"></a>00179 <span class="comment">/*</span>
<a name="l00180"></a>00180 <span class="comment"> * Create a media port to generate sine wave samples.</span>
<a name="l00181"></a>00181 <span class="comment"> */</span>
<a name="l00182"></a>00182 <span class="keyword">static</span> <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> create_sine_port(<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00183"></a>00183                                     <span class="keywordtype">unsigned</span> sampling_rate,
<a name="l00184"></a>00184                                     <span class="keywordtype">unsigned</span> channel_count,
<a name="l00185"></a>00185                                     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> **p_port)
<a name="l00186"></a>00186 {
<a name="l00187"></a>00187     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *port;
<a name="l00188"></a>00188     <span class="keywordtype">unsigned</span> i;
<a name="l00189"></a>00189     <span class="keywordtype">unsigned</span> count;
<a name="l00190"></a>00190     <a class="code" href="structport__data.htm">port_data</a> *sine;
<a name="l00191"></a>00191 
<a name="l00192"></a>00192     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(pool &amp;&amp; channel_count &gt; 0 &amp;&amp; channel_count &lt;= 2, 
<a name="l00193"></a>00193                      PJ_EINVAL);
<a name="l00194"></a>00194 
<a name="l00195"></a>00195     port = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#ga4ecb4c956f18e49b20308ffd075b0b40">pj_pool_zalloc</a>(pool, <span class="keyword">sizeof</span>(<a class="code" href="structpjmedia__port.htm">pjmedia_port</a>));
<a name="l00196"></a>00196     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(port != NULL, PJ_ENOMEM);
<a name="l00197"></a>00197 
<a name="l00198"></a>00198     <span class="comment">/* Fill in port info. */</span>
<a name="l00199"></a>00199     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a604c79a6c2a4afd930abd1323e8e8d31">bits_per_sample</a> = 16;
<a name="l00200"></a>00200     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a8e49e273b80f0a914e34358c8b0356b0">channel_count</a> = channel_count;
<a name="l00201"></a>00201     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a1a90e876eb5e9f117dc7246aa3134bac">encoding_name</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga20fa0c4d9ccddd0822a775730cf4a867">pj_str</a>(<span class="stringliteral">&quot;pcm&quot;</span>);
<a name="l00202"></a>00202     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a6922b0e64a6595be4dca33c742549350">has_info</a> = 1;
<a name="l00203"></a>00203     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a4e8fe61807770607ff632146afecaf76">name</a> = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__PSTR.htm#ga20fa0c4d9ccddd0822a775730cf4a867">pj_str</a>(<span class="stringliteral">&quot;sine generator&quot;</span>);
<a name="l00204"></a>00204     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#af6155abc2f7f2b47f93f95def0ce0b91">need_info</a> = 0;
<a name="l00205"></a>00205     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a01402c39fc92d938891f8a80cdffc679">pt</a> = 0xFF;
<a name="l00206"></a>00206     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a67150be4ab8cf4855fe8ca75156d9f61">clock_rate</a> = sampling_rate;
<a name="l00207"></a>00207     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> = sampling_rate * SINE_PTIME / 1000 * channel_count;
<a name="l00208"></a>00208     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a7dc0811a999459f8be36fe47d9aba167">bytes_per_frame</a> = port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> * 2;
<a name="l00209"></a>00209     port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#a447e570e74a04d50d0c23740f1bfe91f">type</a> = PJMEDIA_TYPE_AUDIO;
<a name="l00210"></a>00210     
<a name="l00211"></a>00211     <span class="comment">/* Set the function to feed frame */</span>
<a name="l00212"></a>00212     port-&gt;<a class="code" href="structpjmedia__port.htm#a7dece458019b0dc274ce49625073b98b">get_frame</a> = &amp;sine_get_frame;
<a name="l00213"></a>00213 
<a name="l00214"></a>00214     <span class="comment">/* Create sine port data */</span>
<a name="l00215"></a>00215     port-&gt;<a class="code" href="structpjmedia__port.htm#ab688ca206f40f233e183248a35c1becd">port_data</a>.<a class="code" href="structpjmedia__port_1_1port__data.htm#aa88bbfd5b899a39e068477f48b6a872f">pdata</a> = sine = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#ga4ecb4c956f18e49b20308ffd075b0b40">pj_pool_zalloc</a>(pool, <span class="keyword">sizeof</span>(<a class="code" href="structport__data.htm">port_data</a>));
<a name="l00216"></a>00216 
<a name="l00217"></a>00217     <span class="comment">/* Create samples */</span>
<a name="l00218"></a>00218     count = port-&gt;<a class="code" href="structpjmedia__port.htm#a1003b9085848f0a1ad3a3af9a760cbdb">info</a>.<a class="code" href="structpjmedia__port__info.htm#afd0e1dca00660c509808a09ba3135e5c">samples_per_frame</a> / channel_count;
<a name="l00219"></a>00219     sine-&gt;samples = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#ga865b3702766960869d1c58429e213cf4">pj_pool_alloc</a>(pool, count * <span class="keyword">sizeof</span>(<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga1bc332ac2d70cd1a23adef144571790f">pj_int16_t</a>));
<a name="l00220"></a>00220     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(sine-&gt;samples != NULL, PJ_ENOMEM);
<a name="l00221"></a>00221 
<a name="l00222"></a>00222     <span class="comment">/* initialise sinusoidal wavetable */</span>
<a name="l00223"></a>00223     <span class="keywordflow">for</span>( i=0; i&lt;count; i++ )
<a name="l00224"></a>00224     {
<a name="l00225"></a>00225         sine-&gt;samples[i] = (pj_int16_t) (10000.0 * 
<a name="l00226"></a>00226                 sin(((<span class="keywordtype">double</span>)i/(<span class="keywordtype">double</span>)count) * M_PI * 8.) );
<a name="l00227"></a>00227     }
<a name="l00228"></a>00228 
<a name="l00229"></a>00229     *p_port = port;
<a name="l00230"></a>00230 
<a name="l00231"></a>00231     <span class="keywordflow">return</span> PJ_SUCCESS;
<a name="l00232"></a>00232 }
<a name="l00233"></a>00233 
<a name="l00234"></a>00234 <span class="keywordtype">int</span> main()
<a name="l00235"></a>00235 {
<a name="l00236"></a>00236     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm">pj_caching_pool</a> cp;
<a name="l00237"></a>00237     <a class="code" href="group__PJMEDIA__TYPES.htm#ga7c3623d8e90e22b7184a6e42dc24f6f5">pjmedia_endpt</a> *med_endpt;
<a name="l00238"></a>00238     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool;
<a name="l00239"></a>00239     <a class="code" href="group__PJMEDIA__CONF.htm#ga7af91147cffd957784f2e51b72d19edd">pjmedia_conf</a> *conf;
<a name="l00240"></a>00240     <span class="keywordtype">int</span> i;
<a name="l00241"></a>00241     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *sine_port[SINE_COUNT], *null_port, *conf_port;
<a name="l00242"></a>00242     <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *nulls[NULL_COUNT];
<a name="l00243"></a>00243     <span class="keywordtype">unsigned</span> null_slots[NULL_COUNT];
<a name="l00244"></a>00244     <a class="code" href="group__PJMEDIA__MASTER__PORT.htm#gaa6c3fca2fe613fbb30bf676efe45d9fc">pjmedia_master_port</a> *master_port;
<a name="l00245"></a>00245     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status;
<a name="l00246"></a>00246 
<a name="l00247"></a>00247 
<a name="l00248"></a>00248     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__LOG.htm#gab8f76697c525b7ce55a85da16442d0c1">pj_log_set_level</a>(3);
<a name="l00249"></a>00249 
<a name="l00250"></a>00250     status = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga069615152140fa2df009cebc8a36b769">pj_init</a>();
<a name="l00251"></a>00251     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00252"></a>00252 
<a name="l00253"></a>00253     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__CACHING__POOL.htm#gafbf5400f191e2095240bc6472754e94f">pj_caching_pool_init</a>(&amp;cp, &amp;<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL__FACTORY.htm#ga98cf758eafb888f318a8de7f396f47ca">pj_pool_factory_default_policy</a>, 0);
<a name="l00254"></a>00254     pool = <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__POOL.htm#gaf58c3ba26a1314c0e0be103960ba4a5e">pj_pool_create</a>( &amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>,     <span class="comment">/* pool factory         */</span>
<a name="l00255"></a>00255                            <span class="stringliteral">&quot;wav&quot;</span>,           <span class="comment">/* pool name.           */</span>
<a name="l00256"></a>00256                            4000,            <span class="comment">/* init size            */</span>
<a name="l00257"></a>00257                            4000,            <span class="comment">/* increment size       */</span>
<a name="l00258"></a>00258                            NULL             <span class="comment">/* callback on error    */</span>
<a name="l00259"></a>00259                            );
<a name="l00260"></a>00260 
<a name="l00261"></a>00261     status = <a class="code" href="group__PJMED__ENDPT.htm#ga2865efcd255dbcb05ede33dbae5c27f5">pjmedia_endpt_create</a>(&amp;cp.<a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__caching__pool.htm#a0849ace123d8760dfab52418c2732af3">factory</a>, NULL, 1, &amp;med_endpt);
<a name="l00262"></a>00262     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00263"></a>00263 
<a name="l00264"></a>00264 
<a name="l00265"></a>00265 
<a name="l00266"></a>00266     status = <a class="code" href="group__PJMEDIA__CONF.htm#gad5472b9cfd45952fa209e830188b63ae">pjmedia_conf_create</a>( pool,
<a name="l00267"></a>00267                                   PORT_COUNT,
<a name="l00268"></a>00268                                   CLOCK_RATE,
<a name="l00269"></a>00269                                   1, SAMPLES_PER_FRAME, 16,
<a name="l00270"></a>00270                                   <a class="code" href="group__PJMEDIA__CONF.htm#gga95e1f5fd21e35d6317cc218844c2e0baaca6d818006ba08b360cdf63e5f14ed01">PJMEDIA_CONF_NO_DEVICE</a>,
<a name="l00271"></a>00271                                   &amp;conf);
<a name="l00272"></a>00272     <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00273"></a>00273         app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to create conference bridge&quot;</span>, status);
<a name="l00274"></a>00274         <span class="keywordflow">return</span> 1;
<a name="l00275"></a>00275     }
<a name="l00276"></a>00276 
<a name="l00277"></a>00277     printf(<span class="stringliteral">&quot;Resampling is %s\n&quot;</span>, (HAS_RESAMPLE?<span class="stringliteral">&quot;active&quot;</span>:<span class="stringliteral">&quot;disabled&quot;</span>));
<a name="l00278"></a>00278 
<a name="l00279"></a>00279     <span class="comment">/* Create Null ports */</span>
<a name="l00280"></a>00280     printf(<span class="stringliteral">&quot;Creating %d null ports..\n&quot;</span>, NULL_COUNT);
<a name="l00281"></a>00281     <span class="keywordflow">for</span> (i=0; i&lt;NULL_COUNT; ++i) {
<a name="l00282"></a>00282         status = <a class="code" href="group__PJMEDIA__NULL__PORT.htm#ga6bd98db52bf6a3aea192430df85d583c">pjmedia_null_port_create</a>(pool, CLOCK_RATE, 1, SAMPLES_PER_FRAME*2, 16, &amp;nulls[i]);
<a name="l00283"></a>00283         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00284"></a>00284 
<a name="l00285"></a>00285         status = <a class="code" href="group__PJMEDIA__CONF.htm#ga9d056daff78457a4b770b479df15f657">pjmedia_conf_add_port</a>(conf, pool, nulls[i], NULL, &amp;null_slots[i]);
<a name="l00286"></a>00286         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00287"></a>00287     }
<a name="l00288"></a>00288 
<a name="l00289"></a>00289     <span class="comment">/* Create sine ports. */</span>
<a name="l00290"></a>00290     printf(<span class="stringliteral">&quot;Creating %d sine generator ports..\n&quot;</span>, SINE_COUNT);
<a name="l00291"></a>00291     <span class="keywordflow">for</span> (i=0; i&lt;SINE_COUNT; ++i) {
<a name="l00292"></a>00292         <span class="keywordtype">unsigned</span> j, slot;
<a name="l00293"></a>00293 
<a name="l00294"></a>00294         <span class="comment">/* Load the WAV file to file port. */</span>
<a name="l00295"></a>00295         status = create_sine_port(pool, SINE_CLOCK, 1, &amp;sine_port[i]);
<a name="l00296"></a>00296         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00297"></a>00297 
<a name="l00298"></a>00298         <span class="comment">/* Add the file port to conference bridge */</span>
<a name="l00299"></a>00299         status = <a class="code" href="group__PJMEDIA__CONF.htm#ga9d056daff78457a4b770b479df15f657">pjmedia_conf_add_port</a>( conf,           <span class="comment">/* The bridge       */</span>
<a name="l00300"></a>00300                                         pool,           <span class="comment">/* pool             */</span>
<a name="l00301"></a>00301                                         sine_port[i],   <span class="comment">/* port to connect  */</span>
<a name="l00302"></a>00302                                         NULL,           <span class="comment">/* Use port&#39;s name  */</span>
<a name="l00303"></a>00303                                         &amp;slot           <span class="comment">/* ptr for slot #   */</span>
<a name="l00304"></a>00304                                         );
<a name="l00305"></a>00305         <span class="keywordflow">if</span> (status != PJ_SUCCESS) {
<a name="l00306"></a>00306             app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to add conference port&quot;</span>, status);
<a name="l00307"></a>00307             <span class="keywordflow">return</span> 1;
<a name="l00308"></a>00308         }
<a name="l00309"></a>00309 
<a name="l00310"></a>00310         status = <a class="code" href="group__PJMEDIA__CONF.htm#ga2cb7faa6a252f2ed9b95c845347f915b">pjmedia_conf_connect_port</a>(conf, slot, 0, 0);
<a name="l00311"></a>00311         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00312"></a>00312 
<a name="l00313"></a>00313         <span class="keywordflow">for</span> (j=0; j&lt;NULL_COUNT; ++j) {
<a name="l00314"></a>00314             status = <a class="code" href="group__PJMEDIA__CONF.htm#ga2cb7faa6a252f2ed9b95c845347f915b">pjmedia_conf_connect_port</a>(conf, slot, null_slots[j], 0);
<a name="l00315"></a>00315             <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00316"></a>00316         }
<a name="l00317"></a>00317     }
<a name="l00318"></a>00318 
<a name="l00319"></a>00319     <span class="comment">/* Create idle ports */</span>
<a name="l00320"></a>00320     printf(<span class="stringliteral">&quot;Creating %d idle ports..\n&quot;</span>, IDLE_COUNT);
<a name="l00321"></a>00321     <span class="keywordflow">for</span> (i=0; i&lt;IDLE_COUNT; ++i) {
<a name="l00322"></a>00322         <a class="code" href="structpjmedia__port.htm">pjmedia_port</a> *dummy;
<a name="l00323"></a>00323         status = <a class="code" href="group__PJMEDIA__NULL__PORT.htm#ga6bd98db52bf6a3aea192430df85d583c">pjmedia_null_port_create</a>(pool, CLOCK_RATE, 1, SAMPLES_PER_FRAME, 16, &amp;dummy);
<a name="l00324"></a>00324         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00325"></a>00325         status = <a class="code" href="group__PJMEDIA__CONF.htm#ga9d056daff78457a4b770b479df15f657">pjmedia_conf_add_port</a>(conf, pool, dummy, NULL, NULL);
<a name="l00326"></a>00326         <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00327"></a>00327     }
<a name="l00328"></a>00328 
<a name="l00329"></a>00329     <span class="comment">/* Create null port */</span>
<a name="l00330"></a>00330     status = <a class="code" href="group__PJMEDIA__NULL__PORT.htm#ga6bd98db52bf6a3aea192430df85d583c">pjmedia_null_port_create</a>(pool, CLOCK_RATE, 1, SAMPLES_PER_FRAME, 16,
<a name="l00331"></a>00331                                       &amp;null_port);
<a name="l00332"></a>00332     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__pj__assert.htm#gac98bea768b573f53432076a387864fb3">PJ_ASSERT_RETURN</a>(status == PJ_SUCCESS, 1);
<a name="l00333"></a>00333 
<a name="l00334"></a>00334     conf_port = <a class="code" href="group__PJMEDIA__CONF.htm#gafcac2438fa076eb94571de14e51835cb">pjmedia_conf_get_master_port</a>(conf);
<a name="l00335"></a>00335 
<a name="l00336"></a>00336     <span class="comment">/* Create master port */</span>
<a name="l00337"></a>00337     status = <a class="code" href="group__PJMEDIA__MASTER__PORT.htm#ga7ab1d32c6bf44baadc3976f4dbd08b40">pjmedia_master_port_create</a>(pool, null_port, conf_port, 0, &amp;master_port);
<a name="l00338"></a>00338 
<a name="l00339"></a>00339 
<a name="l00340"></a>00340     <a class="code" href="group__PJMEDIA__MASTER__PORT.htm#gaa1ccae69996b486e460142bc0931f72b">pjmedia_master_port_start</a>(master_port);
<a name="l00341"></a>00341 
<a name="l00342"></a>00342     puts(<span class="stringliteral">&quot;Waiting to settle..&quot;</span>); fflush(stdout);
<a name="l00343"></a>00343     <a class="codeRef" doxygen="pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__THREAD.htm#gad59cd6fd7390711758afcc0bde375d68">pj_thread_sleep</a>(5000);
<a name="l00344"></a>00344 
<a name="l00345"></a>00345 
<a name="l00346"></a>00346     benchmark();
<a name="l00347"></a>00347 
<a name="l00348"></a>00348 
<a name="l00349"></a>00349     <span class="comment">/* Done. */</span>
<a name="l00350"></a>00350     <span class="keywordflow">return</span> 0;
<a name="l00351"></a>00351 }
<a name="l00352"></a>00352 
<a name="l00353"></a>00353 
</pre></div> </div>
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
