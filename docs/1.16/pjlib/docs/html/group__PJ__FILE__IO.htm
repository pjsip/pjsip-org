<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: File I/O (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>File I/O<br/>
<small>
[<a class="el" href="group__PJ__IO.htm">Input/Output</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#gab4da43401cbfb4dd1a45230572221351">pj_file_access</a> { <a class="el" href="group__PJ__FILE__IO.htm#ggab4da43401cbfb4dd1a45230572221351acaeeb06206b11cf4f9c18381cce41f1f">PJ_O_RDONLY</a> =  0x1101, 
<a class="el" href="group__PJ__FILE__IO.htm#ggab4da43401cbfb4dd1a45230572221351a91300903426178cb96024e7b1da5cc34">PJ_O_WRONLY</a> =  0x1102, 
<a class="el" href="group__PJ__FILE__IO.htm#ggab4da43401cbfb4dd1a45230572221351aff6ba93222c2953c65bd01744fc8a50e">PJ_O_RDWR</a> =  0x1103, 
<a class="el" href="group__PJ__FILE__IO.htm#ggab4da43401cbfb4dd1a45230572221351a84bcf134d9b0b67366905af31d8f1b77">PJ_O_APPEND</a> =  0x1108
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#ga0442593ede4fe1f9a6c2e0c18ff8b2d0">pj_file_seek_type</a> { <a class="el" href="group__PJ__FILE__IO.htm#gga0442593ede4fe1f9a6c2e0c18ff8b2d0a6d9a77c8353981f9f8a2e00874cb7dae">PJ_SEEK_SET</a> =  0x1201, 
<a class="el" href="group__PJ__FILE__IO.htm#gga0442593ede4fe1f9a6c2e0c18ff8b2d0aba46507913c267cdb61ebe19e8e7304e">PJ_SEEK_CUR</a> =  0x1202, 
<a class="el" href="group__PJ__FILE__IO.htm#gga0442593ede4fe1f9a6c2e0c18ff8b2d0af381d47072e7e716d531ad4bd5e3bc06">PJ_SEEK_END</a> =  0x1203
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#ga03dc925d3ff56955503c67f7e9de1191">pj_file_open</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const char *pathname, unsigned flags, <a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> *fd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#ga309236d0df49788852b9a1ca18f13cb4">pj_file_close</a> (<a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> fd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#ga2fb409b89b42512475410aba36fece8e">pj_file_write</a> (<a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> fd, const void *data, <a class="el" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#ga2beecfdc10c7ca59de51707a28f36156">pj_file_read</a> (<a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> fd, void *data, <a class="el" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#gaca19dc8a9487e49a3a89c5427e64ab57">pj_file_setpos</a> (<a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> fd, <a class="el" href="group__PJ__BASIC.htm#gaee09d2031ae1b8f517b2966533dcf21e">pj_off_t</a> offset, enum <a class="el" href="group__PJ__FILE__IO.htm#ga0442593ede4fe1f9a6c2e0c18ff8b2d0">pj_file_seek_type</a> whence)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#gadb1e5f1fbe17fcb1851370ed09ab1f7d">pj_file_getpos</a> (<a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> fd, <a class="el" href="group__PJ__BASIC.htm#gaee09d2031ae1b8f517b2966533dcf21e">pj_off_t</a> *pos)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__FILE__IO.htm#gab6852cce29b6f456433a5c8a9c5b0032">pj_file_flush</a> (<a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> fd)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This file contains functionalities to perform file I/O. The file I/O can be implemented with various back-end, either using native file API or ANSI stream.</p>
<h2><a class="anchor" id="pj_file_size_limit_sec"></a>
Size Limits</h2>
<p>There may be limitation on the size that can be handled by the <a class="el" href="group__PJ__FILE__IO.htm#gaca19dc8a9487e49a3a89c5427e64ab57">pj_file_setpos()</a> or <a class="el" href="group__PJ__FILE__IO.htm#gadb1e5f1fbe17fcb1851370ed09ab1f7d">pj_file_getpos()</a> functions. The API itself uses 64-bit integer for the file offset/position (where available); however some backends (such as ANSI) may only support signed 32-bit offset resolution.</p>
<p>Reading and writing operation uses signed 32-bit integer to indicate the size. </p>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="gab4da43401cbfb4dd1a45230572221351"></a><!-- doxytag: member="file_io.h::pj_file_access" ref="gab4da43401cbfb4dd1a45230572221351" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJ__FILE__IO.htm#gab4da43401cbfb4dd1a45230572221351">pj_file_access</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>These enumerations are used when opening file. Values PJ_O_RDONLY, PJ_O_WRONLY, and PJ_O_RDWR are mutually exclusive. Value PJ_O_APPEND can only be used when the file is opened for writing. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggab4da43401cbfb4dd1a45230572221351acaeeb06206b11cf4f9c18381cce41f1f"></a><!-- doxytag: member="PJ_O_RDONLY" ref="ggab4da43401cbfb4dd1a45230572221351acaeeb06206b11cf4f9c18381cce41f1f" args="" -->PJ_O_RDONLY</em>&nbsp;</td><td>
<p>Open file for reading. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggab4da43401cbfb4dd1a45230572221351a91300903426178cb96024e7b1da5cc34"></a><!-- doxytag: member="PJ_O_WRONLY" ref="ggab4da43401cbfb4dd1a45230572221351a91300903426178cb96024e7b1da5cc34" args="" -->PJ_O_WRONLY</em>&nbsp;</td><td>
<p>Open file for writing. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggab4da43401cbfb4dd1a45230572221351aff6ba93222c2953c65bd01744fc8a50e"></a><!-- doxytag: member="PJ_O_RDWR" ref="ggab4da43401cbfb4dd1a45230572221351aff6ba93222c2953c65bd01744fc8a50e" args="" -->PJ_O_RDWR</em>&nbsp;</td><td>
<p>Open file for reading and writing. File will be truncated. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggab4da43401cbfb4dd1a45230572221351a84bcf134d9b0b67366905af31d8f1b77"></a><!-- doxytag: member="PJ_O_APPEND" ref="ggab4da43401cbfb4dd1a45230572221351a84bcf134d9b0b67366905af31d8f1b77" args="" -->PJ_O_APPEND</em>&nbsp;</td><td>
<p>Append to existing file. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga0442593ede4fe1f9a6c2e0c18ff8b2d0"></a><!-- doxytag: member="file_io.h::pj_file_seek_type" ref="ga0442593ede4fe1f9a6c2e0c18ff8b2d0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJ__FILE__IO.htm#ga0442593ede4fe1f9a6c2e0c18ff8b2d0">pj_file_seek_type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The seek directive when setting the file position with <a class="el" href="group__PJ__FILE__IO.htm#gaca19dc8a9487e49a3a89c5427e64ab57">pj_file_setpos</a>. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga0442593ede4fe1f9a6c2e0c18ff8b2d0a6d9a77c8353981f9f8a2e00874cb7dae"></a><!-- doxytag: member="PJ_SEEK_SET" ref="gga0442593ede4fe1f9a6c2e0c18ff8b2d0a6d9a77c8353981f9f8a2e00874cb7dae" args="" -->PJ_SEEK_SET</em>&nbsp;</td><td>
<p>Offset from beginning of the file. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga0442593ede4fe1f9a6c2e0c18ff8b2d0aba46507913c267cdb61ebe19e8e7304e"></a><!-- doxytag: member="PJ_SEEK_CUR" ref="gga0442593ede4fe1f9a6c2e0c18ff8b2d0aba46507913c267cdb61ebe19e8e7304e" args="" -->PJ_SEEK_CUR</em>&nbsp;</td><td>
<p>Offset from current position. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga0442593ede4fe1f9a6c2e0c18ff8b2d0af381d47072e7e716d531ad4bd5e3bc06"></a><!-- doxytag: member="PJ_SEEK_END" ref="gga0442593ede4fe1f9a6c2e0c18ff8b2d0af381d47072e7e716d531ad4bd5e3bc06" args="" -->PJ_SEEK_END</em>&nbsp;</td><td>
<p>Size of the file plus offset. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga309236d0df49788852b9a1ca18f13cb4"></a><!-- doxytag: member="file_io.h::pj_file_close" ref="ga309236d0df49788852b9a1ca18f13cb4" args="(pj_oshandle_t fd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_file_close </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a>&nbsp;</td>
          <td class="paramname"> <em>fd</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Close an opened file descriptor.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fd</em>&nbsp;</td><td>The file descriptor.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code on error. </dd></dl>

</div>
</div>
<a class="anchor" id="gab6852cce29b6f456433a5c8a9c5b0032"></a><!-- doxytag: member="file_io.h::pj_file_flush" ref="gab6852cce29b6f456433a5c8a9c5b0032" args="(pj_oshandle_t fd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_file_flush </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a>&nbsp;</td>
          <td class="paramname"> <em>fd</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Flush file buffers.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fd</em>&nbsp;</td><td>The file descriptor.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code on error. </dd></dl>

</div>
</div>
<a class="anchor" id="gadb1e5f1fbe17fcb1851370ed09ab1f7d"></a><!-- doxytag: member="file_io.h::pj_file_getpos" ref="gadb1e5f1fbe17fcb1851370ed09ab1f7d" args="(pj_oshandle_t fd, pj_off_t *pos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_file_getpos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a>&nbsp;</td>
          <td class="paramname"> <em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gaee09d2031ae1b8f517b2966533dcf21e">pj_off_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pos</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get current file position.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fd</em>&nbsp;</td><td>The file descriptor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pos</em>&nbsp;</td><td>On return contains the file position as measured from the beginning of the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code on error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga03dc925d3ff56955503c67f7e9de1191"></a><!-- doxytag: member="file_io.h::pj_file_open" ref="ga03dc925d3ff56955503c67f7e9de1191" args="(pj_pool_t *pool, const char *pathname, unsigned flags, pj_oshandle_t *fd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_file_open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&nbsp;</td>
          <td class="paramname"> <em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>pathname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a> *&nbsp;</td>
          <td class="paramname"> <em>fd</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Open the file as specified in <code>pathname</code> with the specified mode, and return the handle in <code>fd</code>. All files will be opened as binary.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pool</em>&nbsp;</td><td>Pool to allocate memory for the new file descriptor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pathname</em>&nbsp;</td><td>The file name to open. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Open flags, which is bitmask combination of <a class="el" href="group__PJ__FILE__IO.htm#gab4da43401cbfb4dd1a45230572221351">pj_file_access</a> enum. The flag must be either PJ_O_RDONLY, PJ_O_WRONLY, or PJ_O_RDWR. When file writing is specified, existing file will be truncated unless PJ_O_APPEND is specified. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>fd</em>&nbsp;</td><td>The returned descriptor.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code on error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2beecfdc10c7ca59de51707a28f36156"></a><!-- doxytag: member="file_io.h::pj_file_read" ref="ga2beecfdc10c7ca59de51707a28f36156" args="(pj_oshandle_t fd, void *data, pj_ssize_t *size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_file_read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a>&nbsp;</td>
          <td class="paramname"> <em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Read data from the specified file. When end-of-file condition is set, this function will return PJ_SUCCESS but the size will contain zero.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fd</em>&nbsp;</td><td>The file descriptor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>Pointer to buffer to receive the data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>On input, specifies the maximum number of data to read from the file. On output, it contains the size of data actually read from the file. It will contain zero when EOF occurs.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code on error. When EOF occurs, the return is PJ_SUCCESS but size will report zero. </dd></dl>

</div>
</div>
<a class="anchor" id="gaca19dc8a9487e49a3a89c5427e64ab57"></a><!-- doxytag: member="file_io.h::pj_file_setpos" ref="gaca19dc8a9487e49a3a89c5427e64ab57" args="(pj_oshandle_t fd, pj_off_t offset, enum pj_file_seek_type whence)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_file_setpos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a>&nbsp;</td>
          <td class="paramname"> <em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gaee09d2031ae1b8f517b2966533dcf21e">pj_off_t</a>&nbsp;</td>
          <td class="paramname"> <em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="group__PJ__FILE__IO.htm#ga0442593ede4fe1f9a6c2e0c18ff8b2d0">pj_file_seek_type</a>&nbsp;</td>
          <td class="paramname"> <em>whence</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set file position to new offset according to directive <code>whence</code>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fd</em>&nbsp;</td><td>The file descriptor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>offset</em>&nbsp;</td><td>The new file position to set. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>whence</em>&nbsp;</td><td>The directive.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code on error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2fb409b89b42512475410aba36fece8e"></a><!-- doxytag: member="file_io.h::pj_file_write" ref="ga2fb409b89b42512475410aba36fece8e" args="(pj_oshandle_t fd, const void *data, pj_ssize_t *size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_file_write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3ddf6bbb168d4486a2fc42db269347fb">pj_oshandle_t</a>&nbsp;</td>
          <td class="paramname"> <em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&nbsp;</td>
          <td class="paramname"> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Write data with the specified size to an opened file.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>fd</em>&nbsp;</td><td>The file descriptor. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>Data to be written to the file. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>On input, specifies the size of data to be written. On return, it contains the number of data actually written to the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS or the appropriate error code on error. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
