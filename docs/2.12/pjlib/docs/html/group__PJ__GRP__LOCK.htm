<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Group Lock (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Group Lock<div class="ingroups"><a class="el" href="group__PJ__OS.htm">Operating System Dependent Functionality.</a> &raquo; <a class="el" href="group__PJ__LOCK.htm">Lock Objects</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__grp__lock__config.htm">pj_grp_lock_config</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga9e80916d2d9f1b4e6835e772ed5baa57"><td class="memItemLeft" align="right" valign="top"><a id="ga9e80916d2d9f1b4e6835e772ed5baa57"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>pj_grp_lock_add_ref_dbg</b>(grp_lock,  x,  y)&#160;&#160;&#160;<a class="el" href="group__PJ__GRP__LOCK.htm#ga59dafa5a6574b8fa4f5d4d33a480ee47">pj_grp_lock_add_ref</a>(grp_lock)</td></tr>
<tr class="separator:ga9e80916d2d9f1b4e6835e772ed5baa57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacbe25ca6f58c195497b69535ccd27f0a"><td class="memItemLeft" align="right" valign="top"><a id="gacbe25ca6f58c195497b69535ccd27f0a"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>pj_grp_lock_dec_ref_dbg</b>(grp_lock,  x,  y)&#160;&#160;&#160;<a class="el" href="group__PJ__GRP__LOCK.htm#gaf5cdad52464deb4fb8e5956180e428d0">pj_grp_lock_dec_ref</a>(grp_lock)</td></tr>
<tr class="separator:gacbe25ca6f58c195497b69535ccd27f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga89dc8ec4916876fab51db5178209a7dd"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga89dc8ec4916876fab51db5178209a7dd">pj_grp_lock_handler</a>) (void *member)</td></tr>
<tr class="separator:ga89dc8ec4916876fab51db5178209a7dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga033b547ddefdd6449ddf7b01db82f901"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga033b547ddefdd6449ddf7b01db82f901">pj_grp_lock_config_default</a> (<a class="el" href="structpj__grp__lock__config.htm">pj_grp_lock_config</a> *cfg)</td></tr>
<tr class="separator:ga033b547ddefdd6449ddf7b01db82f901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfecdfab9f40cf249b32542fbe6e1d05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#gacfecdfab9f40cf249b32542fbe6e1d05">pj_grp_lock_create</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpj__grp__lock__config.htm">pj_grp_lock_config</a> *cfg, <a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> **p_grp_lock)</td></tr>
<tr class="separator:gacfecdfab9f40cf249b32542fbe6e1d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0805403aa3937b5d0a52e351e6b39377"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga0805403aa3937b5d0a52e351e6b39377">pj_grp_lock_create_w_handler</a> (<a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, const <a class="el" href="structpj__grp__lock__config.htm">pj_grp_lock_config</a> *cfg, void *member, <a class="el" href="group__PJ__GRP__LOCK.htm#ga89dc8ec4916876fab51db5178209a7dd">pj_grp_lock_handler</a> handler, <a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> **p_grp_lock)</td></tr>
<tr class="separator:ga0805403aa3937b5d0a52e351e6b39377"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf47ce2180ef7d08e4e81dc848fb7362"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#gabf47ce2180ef7d08e4e81dc848fb7362">pj_grp_lock_destroy</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:gabf47ce2180ef7d08e4e81dc848fb7362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5536e9d233786e753e6216eee384dfc8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga5536e9d233786e753e6216eee384dfc8">pj_grp_lock_replace</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *old_lock, <a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *new_lock)</td></tr>
<tr class="separator:ga5536e9d233786e753e6216eee384dfc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga93a5dde851bf4e852b43d0298dbd055e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga93a5dde851bf4e852b43d0298dbd055e">pj_grp_lock_acquire</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:ga93a5dde851bf4e852b43d0298dbd055e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafda64d63296192a206562f24d681676f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#gafda64d63296192a206562f24d681676f">pj_grp_lock_tryacquire</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:gafda64d63296192a206562f24d681676f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ff3290d951568537f1eff9b4342de7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga3ff3290d951568537f1eff9b4342de7b">pj_grp_lock_release</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:ga3ff3290d951568537f1eff9b4342de7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4bdf4f69f4f54337cc51765779983b9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga4bdf4f69f4f54337cc51765779983b9c">pj_grp_lock_add_handler</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock, <a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *pool, void *member, <a class="el" href="group__PJ__GRP__LOCK.htm#ga89dc8ec4916876fab51db5178209a7dd">pj_grp_lock_handler</a> handler)</td></tr>
<tr class="separator:ga4bdf4f69f4f54337cc51765779983b9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34c2f8f49c079600e47341886f7983a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga34c2f8f49c079600e47341886f7983a7">pj_grp_lock_del_handler</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock, void *member, <a class="el" href="group__PJ__GRP__LOCK.htm#ga89dc8ec4916876fab51db5178209a7dd">pj_grp_lock_handler</a> handler)</td></tr>
<tr class="separator:ga34c2f8f49c079600e47341886f7983a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59dafa5a6574b8fa4f5d4d33a480ee47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga59dafa5a6574b8fa4f5d4d33a480ee47">pj_grp_lock_add_ref</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:ga59dafa5a6574b8fa4f5d4d33a480ee47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5cdad52464deb4fb8e5956180e428d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#gaf5cdad52464deb4fb8e5956180e428d0">pj_grp_lock_dec_ref</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:gaf5cdad52464deb4fb8e5956180e428d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga992c742c8092d8733435d889d6b88a11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga992c742c8092d8733435d889d6b88a11">pj_grp_lock_get_ref</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:ga992c742c8092d8733435d889d6b88a11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed1875cde9dac7aaf41ac7a8d5bc6fa5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#gaed1875cde9dac7aaf41ac7a8d5bc6fa5">pj_grp_lock_dump</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock)</td></tr>
<tr class="separator:gaed1875cde9dac7aaf41ac7a8d5bc6fa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a4280c073b3629a8133356cbf5ab498"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#ga1a4280c073b3629a8133356cbf5ab498">pj_grp_lock_chain_lock</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock, <a class="el" href="group__PJ__BASIC.htm#ga3dc49084043901d31c7b12e5afc9fb2f">pj_lock_t</a> *ext_lock, <a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pos)</td></tr>
<tr class="separator:ga1a4280c073b3629a8133356cbf5ab498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac0884a088a94b757ded16c5cb9e5c6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__GRP__LOCK.htm#gaac0884a088a94b757ded16c5cb9e5c6e">pj_grp_lock_unchain_lock</a> (<a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *grp_lock, <a class="el" href="group__PJ__BASIC.htm#ga3dc49084043901d31c7b12e5afc9fb2f">pj_lock_t</a> *ext_lock)</td></tr>
<tr class="separator:gaac0884a088a94b757ded16c5cb9e5c6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Group lock is a synchronization object to manage concurrency among members within the same logical group. Example of such groups are:</p>
<ul>
<li>dialog, which has members such as the dialog itself, an invite session, and several transactions</li>
<li>ICE, which has members such as ICE stream transport, ICE session, STUN socket, TURN socket, and down to ioqueue key</li>
</ul>
<p>Group lock has three functions:</p>
<ul>
<li>mutual exclusion: to protect resources from being accessed by more than one threads at the same time</li>
<li>session management: to make sure that the resource is not destroyed while others are still using or about to use it.</li>
<li>lock coordinator: to provide uniform lock ordering among more than one lock objects, which is necessary to avoid deadlock.</li>
</ul>
<p>The requirements of the group lock are:</p>
<ul>
<li>must satisfy all the functions above</li>
<li>must allow members to join or leave the group (for example, transaction may be added or removed from a dialog)</li>
<li>must be able to synchronize with external lock (for example, a dialog lock must be able to sync itself with PJSUA lock)</li>
</ul>
<p>Please see <a href="https://trac.pjsip.org/repos/wiki/Group_Lock">https://trac.pjsip.org/repos/wiki/Group_Lock</a> for more info. </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga89dc8ec4916876fab51db5178209a7dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga89dc8ec4916876fab51db5178209a7dd">&#9670;&nbsp;</a></span>pj_grp_lock_handler</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* pj_grp_lock_handler) (void *member)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The group lock destroy handler, a destructor function called when a group lock is about to be destroyed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>A pointer to be passed to the handler. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga93a5dde851bf4e852b43d0298dbd055e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga93a5dde851bf4e852b43d0298dbd055e">&#9670;&nbsp;</a></span>pj_grp_lock_acquire()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_acquire </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Acquire lock on the specified group lock.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga4bdf4f69f4f54337cc51765779983b9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4bdf4f69f4f54337cc51765779983b9c">&#9670;&nbsp;</a></span>pj_grp_lock_add_handler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_add_handler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__GRP__LOCK.htm#ga89dc8ec4916876fab51db5178209a7dd">pj_grp_lock_handler</a>&#160;</td>
          <td class="paramname"><em>handler</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a destructor handler, to be called by the group lock when it is about to be destroyed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to allocate memory for the handler. </td></tr>
    <tr><td class="paramname">member</td><td>A pointer to be passed to the handler. </td></tr>
    <tr><td class="paramname">handler</td><td>The destroy handler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga59dafa5a6574b8fa4f5d4d33a480ee47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga59dafa5a6574b8fa4f5d4d33a480ee47">&#9670;&nbsp;</a></span>pj_grp_lock_add_ref()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_add_ref </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Increment reference counter to prevent the group lock grom being destroyed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga1a4280c073b3629a8133356cbf5ab498"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1a4280c073b3629a8133356cbf5ab498">&#9670;&nbsp;</a></span>pj_grp_lock_chain_lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_chain_lock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3dc49084043901d31c7b12e5afc9fb2f">pj_lock_t</a> *&#160;</td>
          <td class="paramname"><em>ext_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Synchronize an external lock with the group lock, by adding it to the list of locks to be acquired by the group lock when the group lock is acquired.</p>
<p>The ''pos'' argument specifies the lock order and also the relative position with regard to lock ordering against the group lock. Locks with lower ''pos'' value will be locked first, and those with negative value will be locked before the group lock (the group lock's ''pos'' value is zero).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock. </td></tr>
    <tr><td class="paramname">ext_lock</td><td>The external lock </td></tr>
    <tr><td class="paramname">pos</td><td>The position.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga033b547ddefdd6449ddf7b01db82f901"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga033b547ddefdd6449ddf7b01db82f901">&#9670;&nbsp;</a></span>pj_grp_lock_config_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_grp_lock_config_default </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__grp__lock__config.htm">pj_grp_lock_config</a> *&#160;</td>
          <td class="paramname"><em>cfg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initialize the config with the default values.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfg</td><td>The config to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gacfecdfab9f40cf249b32542fbe6e1d05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacfecdfab9f40cf249b32542fbe6e1d05">&#9670;&nbsp;</a></span>pj_grp_lock_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__grp__lock__config.htm">pj_grp_lock_config</a> *&#160;</td>
          <td class="paramname"><em>cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> **&#160;</td>
          <td class="paramname"><em>p_grp_lock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a group lock object. Initially the group lock will have reference counter of zero.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The group lock only uses the pool parameter to get the pool factory, from which it will create its own pool. </td></tr>
    <tr><td class="paramname">cfg</td><td>Optional configuration. </td></tr>
    <tr><td class="paramname">p_grp_lock</td><td>Pointer to receive the newly created group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga0805403aa3937b5d0a52e351e6b39377"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0805403aa3937b5d0a52e351e6b39377">&#9670;&nbsp;</a></span>pj_grp_lock_create_w_handler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_create_w_handler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__grp__lock__config.htm">pj_grp_lock_config</a> *&#160;</td>
          <td class="paramname"><em>cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__GRP__LOCK.htm#ga89dc8ec4916876fab51db5178209a7dd">pj_grp_lock_handler</a>&#160;</td>
          <td class="paramname"><em>handler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> **&#160;</td>
          <td class="paramname"><em>p_grp_lock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a group lock object, with the specified destructor handler, to be called by the group lock when it is about to be destroyed. Initially the group lock will have reference counter of zero.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The group lock only uses the pool parameter to get the pool factory, from which it will create its own pool. </td></tr>
    <tr><td class="paramname">cfg</td><td>Optional configuration. </td></tr>
    <tr><td class="paramname">member</td><td>A pointer to be passed to the handler. </td></tr>
    <tr><td class="paramname">handler</td><td>The destroy handler. </td></tr>
    <tr><td class="paramname">p_grp_lock</td><td>Pointer to receive the newly created group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaf5cdad52464deb4fb8e5956180e428d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf5cdad52464deb4fb8e5956180e428d0">&#9670;&nbsp;</a></span>pj_grp_lock_dec_ref()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_dec_ref </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Decrement the reference counter. When the counter value reaches zero, the group lock will be destroyed and all destructor handlers will be called.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga34c2f8f49c079600e47341886f7983a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga34c2f8f49c079600e47341886f7983a7">&#9670;&nbsp;</a></span>pj_grp_lock_del_handler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_del_handler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__GRP__LOCK.htm#ga89dc8ec4916876fab51db5178209a7dd">pj_grp_lock_handler</a>&#160;</td>
          <td class="paramname"><em>handler</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove previously registered handler. All parameters must be the same as when the handler was added.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock. </td></tr>
    <tr><td class="paramname">member</td><td>A pointer to be passed to the handler. </td></tr>
    <tr><td class="paramname">handler</td><td>The destroy handler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gabf47ce2180ef7d08e4e81dc848fb7362"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabf47ce2180ef7d08e4e81dc848fb7362">&#9670;&nbsp;</a></span>pj_grp_lock_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Forcibly destroy the group lock, ignoring the reference counter value.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaed1875cde9dac7aaf41ac7a8d5bc6fa5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaed1875cde9dac7aaf41ac7a8d5bc6fa5">&#9670;&nbsp;</a></span>pj_grp_lock_dump()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_grp_lock_dump </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Dump group lock info for debugging purpose. If group lock debugging is enabled (via PJ_GRP_LOCK_DEBUG) macro, this will print the group lock reference counter value along with the source file and line. If debugging is disabled, this will only print the reference counter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga992c742c8092d8733435d889d6b88a11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga992c742c8092d8733435d889d6b88a11">&#9670;&nbsp;</a></span>pj_grp_lock_get_ref()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__THREAD.htm#gab600dc33a20a0f36550a4538506d020e">int</a> pj_grp_lock_get_ref </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get current reference count value. This normally is only used for debugging purpose.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The reference count value. </dd></dl>

</div>
</div>
<a id="ga3ff3290d951568537f1eff9b4342de7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3ff3290d951568537f1eff9b4342de7b">&#9670;&nbsp;</a></span>pj_grp_lock_release()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_release </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Release the previously held lock. This may cause the group lock to be destroyed if it is the last one to hold the reference counter. In that case, the function will return PJ_EGONE.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="ga5536e9d233786e753e6216eee384dfc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5536e9d233786e753e6216eee384dfc8">&#9670;&nbsp;</a></span>pj_grp_lock_replace()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>old_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>new_lock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move the contents of the old lock to the new lock and destroy the old lock.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">old_lock</td><td>The old group lock to be destroyed. </td></tr>
    <tr><td class="paramname">new_lock</td><td>The new group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gafda64d63296192a206562f24d681676f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafda64d63296192a206562f24d681676f">&#9670;&nbsp;</a></span>pj_grp_lock_tryacquire()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_tryacquire </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Acquire lock on the specified group lock if it is available, otherwise return immediately wihout waiting.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
<a id="gaac0884a088a94b757ded16c5cb9e5c6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaac0884a088a94b757ded16c5cb9e5c6e">&#9670;&nbsp;</a></span>pj_grp_lock_unchain_lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_grp_lock_unchain_lock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#gadf42a33e518aa8df09d5a11429e8a41a">pj_grp_lock_t</a> *&#160;</td>
          <td class="paramname"><em>grp_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga3dc49084043901d31c7b12e5afc9fb2f">pj_lock_t</a> *&#160;</td>
          <td class="paramname"><em>ext_lock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove an external lock from group lock's list of synchronized locks.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grp_lock</td><td>The group lock. </td></tr>
    <tr><td class="paramname">ext_lock</td><td>The external lock</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS or the appropriate error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
