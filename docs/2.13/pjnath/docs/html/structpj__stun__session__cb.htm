<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj_stun_session_cb Struct Reference (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">pj_stun_session_cb Struct Reference<div class="ingroups"><a class="el" href="group__PJNATH.htm">NAT Traversal Helper Library</a> &raquo; <a class="el" href="group__PJNATH__STUN.htm">STUN: Session Traversal Utilities for NAT</a> &raquo; <a class="el" href="group__PJNATH__STUN__SESSION.htm">STUN session</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="stun__session_8h_source.htm">stun_session.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a56b3335c4a813c3c482f03a330a23227"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__session__cb.htm#a56b3335c4a813c3c482f03a330a23227">on_send_msg</a> )(<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, void *token, const void *pkt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pkt_size, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td></tr>
<tr class="separator:a56b3335c4a813c3c482f03a330a23227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a82b6e0856fea697814e7771ae3503"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__session__cb.htm#a66a82b6e0856fea697814e7771ae3503">on_rx_request</a> )(<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="el" href="structpj__stun__rx__data.htm">pj_stun_rx_data</a> *rdata, void *token, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned src_addr_len)</td></tr>
<tr class="separator:a66a82b6e0856fea697814e7771ae3503"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0303bcc97b19bdb9ac01e1ed7cce038"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__session__cb.htm#ac0303bcc97b19bdb9ac01e1ed7cce038">on_request_complete</a> )(<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, void *token, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *tdata, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *response, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned src_addr_len)</td></tr>
<tr class="separator:ac0303bcc97b19bdb9ac01e1ed7cce038"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb894b78eda4c7e6a3f4aecf23da58a5"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__session__cb.htm#acb894b78eda4c7e6a3f4aecf23da58a5">on_rx_indication</a> )(<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void *token, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned src_addr_len)</td></tr>
<tr class="separator:acb894b78eda4c7e6a3f4aecf23da58a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >This is the callback to be registered to pj_stun_session, to send outgoing message and to receive various notifications from the STUN session. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="ac0303bcc97b19bdb9ac01e1ed7cce038" name="ac0303bcc97b19bdb9ac01e1ed7cce038"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0303bcc97b19bdb9ac01e1ed7cce038">&#9670;&nbsp;</a></span>on_request_complete</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_stun_session_cb::on_request_complete) (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, void *token, <a class="el" href="structpj__stun__tx__data.htm">pj_stun_tx_data</a> *tdata, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *response, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned src_addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Callback to be called when response is received or the transaction has timed out. This callback is called either when application calls <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> with the packet containing a STUN response for the client transaction, or when the internal timer of the STUN client transaction has timed-out before a STUN response is received.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session. </td></tr>
    <tr><td class="paramname">status</td><td>Status of the request. If the value if not PJ_SUCCESS, the transaction has timed-out or other error has occurred, and the response argument may be NULL. Note that when the status is not success, the response may contain non-NULL value if the response contains STUN ERROR-CODE attribute. </td></tr>
    <tr><td class="paramname">token</td><td>The token that was set by the application when calling <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a> function. Please not that this token IS NOT the token that was given in <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a>. </td></tr>
    <tr><td class="paramname">tdata</td><td>The original STUN request. </td></tr>
    <tr><td class="paramname">response</td><td>The response message, on successful transaction, or otherwise MAY BE NULL if status is not success. Note that when the status is not success, this argument may contain non-NULL value if the response contains STUN ERROR-CODE attribute. </td></tr>
    <tr><td class="paramname">src_addr</td><td>The source address where the response was received, or NULL if the response is NULL. </td></tr>
    <tr><td class="paramname">src_addr_len</td><td>The length of the source address. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="acb894b78eda4c7e6a3f4aecf23da58a5" name="acb894b78eda4c7e6a3f4aecf23da58a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb894b78eda4c7e6a3f4aecf23da58a5">&#9670;&nbsp;</a></span>on_rx_indication</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_stun_session_cb::on_rx_indication) (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, void *token, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned src_addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Callback to be called on incoming STUN request message. This function is called when application calls <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> and when the STUN session has detected that the incoming STUN message is a STUN indication message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session. </td></tr>
    <tr><td class="paramname">pkt</td><td>Pointer to the original STUN packet. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>Length of the STUN packet. </td></tr>
    <tr><td class="paramname">msg</td><td>The parsed STUN indication. </td></tr>
    <tr><td class="paramname">token</td><td>The token that was set by the application when calling <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> function. </td></tr>
    <tr><td class="paramname">src_addr</td><td>Source address of the packet. </td></tr>
    <tr><td class="paramname">src_addr_len</td><td>Length of the source address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The return value of this callback will be returned back to <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> function. </dd></dl>

</div>
</div>
<a id="a66a82b6e0856fea697814e7771ae3503" name="a66a82b6e0856fea697814e7771ae3503"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66a82b6e0856fea697814e7771ae3503">&#9670;&nbsp;</a></span>on_rx_request</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_stun_session_cb::on_rx_request) (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="el" href="structpj__stun__rx__data.htm">pj_stun_rx_data</a> *rdata, void *token, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *src_addr, unsigned src_addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Callback to be called on incoming STUN request message. This function is called when application calls <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> and when the STUN session has detected that the incoming STUN message is a STUN request message. In the callback processing, application MUST create a response by calling pj_stun_session_create_response() function and send the response with <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a> function, before returning from the callback.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session. </td></tr>
    <tr><td class="paramname">pkt</td><td>Pointer to the original STUN packet. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>Length of the STUN packet. </td></tr>
    <tr><td class="paramname">rdata</td><td>Data containing incoming request message. </td></tr>
    <tr><td class="paramname">token</td><td>The token that was set by the application when calling <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> function. </td></tr>
    <tr><td class="paramname">src_addr</td><td>Source address of the packet. </td></tr>
    <tr><td class="paramname">src_addr_len</td><td>Length of the source address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The return value of this callback will be returned back to <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> function. </dd></dl>

</div>
</div>
<a id="a56b3335c4a813c3c482f03a330a23227" name="a56b3335c4a813c3c482f03a330a23227"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56b3335c4a813c3c482f03a330a23227">&#9670;&nbsp;</a></span>on_send_msg</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_stun_session_cb::on_send_msg) (<a class="el" href="group__PJNATH__STUN__SESSION.htm#gac3fc8c37c0d50c5daac0944b3c109cc9">pj_stun_session</a> *sess, void *token, const void *pkt, <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pkt_size, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Callback to be called by the STUN session to send outgoing message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The STUN session. </td></tr>
    <tr><td class="paramname">token</td><td>The token associated with this outgoing message and was set by the application. This token was set by application in <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga69d39f4165f0e54ee1806cf342b52f47">pj_stun_session_send_msg()</a> for outgoing messages that are initiated by the application, or in <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a> if this message is a response that was internally generated by the STUN session (for example, an 401/Unauthorized response). Application may use this facility for any purposes. </td></tr>
    <tr><td class="paramname">pkt</td><td>Packet to be sent. </td></tr>
    <tr><td class="paramname">pkt_size</td><td>Size of the packet to be sent. </td></tr>
    <tr><td class="paramname">dst_addr</td><td>The destination address. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of destination address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback should return the status of the packet sending. </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="stun__session_8h_source.htm">stun_session.h</a></li>
</ul>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
