<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>pj_turn_session_cb Struct Reference (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">pj_turn_session_cb Struct Reference<div class="ingroups"><a class="el" href="group__PJNATH.htm">NAT Traversal Helper Library</a> &raquo; <a class="el" href="group__PJNATH__TURN.htm">TURN: Traversal Using Relays around NAT</a> &raquo; <a class="el" href="group__PJNATH__TURN__SESSION.htm">TURN client session</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a38e5bab6f8272a6ddf12e5b710052950"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#a38e5bab6f8272a6ddf12e5b710052950">on_send_pkt</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td></tr>
<tr class="separator:a38e5bab6f8272a6ddf12e5b710052950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11678f52a4449412d12d901e80763ce9"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#a11678f52a4449412d12d901e80763ce9">on_stun_send_pkt</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td></tr>
<tr class="separator:a11678f52a4449412d12d901e80763ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b8a0a51d48998f27f300afa1e49bfc5"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#a6b8a0a51d48998f27f300afa1e49bfc5">on_channel_bound</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len, unsigned ch_num)</td></tr>
<tr class="separator:a6b8a0a51d48998f27f300afa1e49bfc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad17cf37112560d5a51897f86406e8129"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#ad17cf37112560d5a51897f86406e8129">on_rx_data</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, void *pkt, unsigned pkt_len, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td></tr>
<tr class="separator:ad17cf37112560d5a51897f86406e8129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb12a9cb15d1cb4f9f68d60200240f52"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#aeb12a9cb15d1cb4f9f68d60200240f52">on_state</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> old_state, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> new_state)</td></tr>
<tr class="separator:aeb12a9cb15d1cb4f9f68d60200240f52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76ce49fdbb85ffbbcc54d4398ef20cb6"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#a76ce49fdbb85ffbbcc54d4398ef20cb6">on_connection_attempt</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> conn_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td></tr>
<tr class="separator:a76ce49fdbb85ffbbcc54d4398ef20cb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09f1b7f8f44b682920e7e5442059ae2f"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#a09f1b7f8f44b682920e7e5442059ae2f">on_connection_bind_status</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> conn_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td></tr>
<tr class="separator:a09f1b7f8f44b682920e7e5442059ae2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a470b93dc219a75885cf61dd444a9e4aa"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__turn__session__cb.htm#a470b93dc219a75885cf61dd444a9e4aa">on_connect_complete</a> )(<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> conn_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td></tr>
<tr class="separator:a470b93dc219a75885cf61dd444a9e4aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Callback to receive events from TURN session. </p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a6b8a0a51d48998f27f300afa1e49bfc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b8a0a51d48998f27f300afa1e49bfc5">&#9670;&nbsp;</a></span>on_channel_bound</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_turn_session_cb::on_channel_bound) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len, unsigned ch_num)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification when peer address has been bound successfully to a channel number.</p>
<p>This callback is optional since the nature of this callback is for information only.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">peer_addr</td><td>The peer address. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the peer address. </td></tr>
    <tr><td class="paramname">ch_num</td><td>The channel number associated with this peer address. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a470b93dc219a75885cf61dd444a9e4aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a470b93dc219a75885cf61dd444a9e4aa">&#9670;&nbsp;</a></span>on_connect_complete</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_turn_session_cb::on_connect_complete) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> conn_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification for Connect request sent using <a class="el" href="group__PJNATH__TURN__SESSION.htm#gaadbaeba584ad3b600fa25f21f61d737d">pj_turn_session_connect()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">status</td><td>The status code. </td></tr>
    <tr><td class="paramname">conn_id</td><td>The connection ID. </td></tr>
    <tr><td class="paramname">peer_addr</td><td>Peer address. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the peer address. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a76ce49fdbb85ffbbcc54d4398ef20cb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76ce49fdbb85ffbbcc54d4398ef20cb6">&#9670;&nbsp;</a></span>on_connection_attempt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_turn_session_cb::on_connection_attempt) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> conn_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification when TURN client received a ConnectionAttempt Indication from the TURN server, which indicates that peer initiates a TCP connection to allocated slot in the TURN server. Application must implement this callback if it uses RFC 6062 (TURN TCP allocations).</p>
<p>After receiving this callback, application should establish a new TCP connection to the TURN server and send ConnectionBind request (using <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga25b9b67cedfbdf69c1b57dbfc85f2e37">pj_turn_session_connection_bind()</a>). After the connection binding succeeds, this new connection will become a data only connection.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">conn_id</td><td>The connection ID assigned by TURN server. </td></tr>
    <tr><td class="paramname">peer_addr</td><td>Peer address that tried to connect to the TURN server. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the peer address. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a09f1b7f8f44b682920e7e5442059ae2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09f1b7f8f44b682920e7e5442059ae2f">&#9670;&nbsp;</a></span>on_connection_bind_status</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_turn_session_cb::on_connection_bind_status) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> conn_id, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification for ConnectionBind request sent using <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga25b9b67cedfbdf69c1b57dbfc85f2e37">pj_turn_session_connection_bind()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">status</td><td>The status code. </td></tr>
    <tr><td class="paramname">conn_id</td><td>The connection ID. </td></tr>
    <tr><td class="paramname">peer_addr</td><td>Peer address. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the peer address. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad17cf37112560d5a51897f86406e8129"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad17cf37112560d5a51897f86406e8129">&#9670;&nbsp;</a></span>on_rx_data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_turn_session_cb::on_rx_data) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, void *pkt, unsigned pkt_len, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *peer_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification when incoming data has been received, either through Data indication or ChannelData message from the TURN server.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">pkt</td><td>The data/payload of the Data Indication or ChannelData packet. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>Length of the data/payload. </td></tr>
    <tr><td class="paramname">peer_addr</td><td>Peer address where this payload was received by the TURN server. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the peer address. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a38e5bab6f8272a6ddf12e5b710052950"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38e5bab6f8272a6ddf12e5b710052950">&#9670;&nbsp;</a></span>on_send_pkt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_turn_session_cb::on_send_pkt) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback will be called by the TURN session whenever it needs to send data or outgoing messages. Since the TURN session doesn't have a socket on its own, this callback must be implemented.</p>
<p>If the callback <em><a class="el" href="structpj__turn__session__cb.htm#a11678f52a4449412d12d901e80763ce9">on_stun_send_pkt()</a></em> is implemented, outgoing messages will use that callback instead.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">pkt</td><td>The packet/data to be sent. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>Length of the packet/data. </td></tr>
    <tr><td class="paramname">dst_addr</td><td>Destination address of the packet. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the destination address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback should return the status of the send operation. </dd></dl>

</div>
</div>
<a id="aeb12a9cb15d1cb4f9f68d60200240f52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb12a9cb15d1cb4f9f68d60200240f52">&#9670;&nbsp;</a></span>on_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* pj_turn_session_cb::on_state) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> old_state, <a class="el" href="group__PJNATH__TURN__SESSION.htm#ga763f751e1663de5a61b9e9013541530d">pj_turn_state_t</a> new_state)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Notification when TURN session state has changed. Application should implement this callback at least to know that the TURN session is going to be destroyed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">old_state</td><td>The previous state of the session. </td></tr>
    <tr><td class="paramname">new_state</td><td>The current state of the session. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a11678f52a4449412d12d901e80763ce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11678f52a4449412d12d901e80763ce9">&#9670;&nbsp;</a></span>on_stun_send_pkt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(* pj_turn_session_cb::on_stun_send_pkt) (<a class="el" href="group__PJNATH__TURN__SESSION.htm#ga6b1aed7eb13119538d38728b02ef6c83">pj_turn_session</a> *sess, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga03cd006c29b1d24580f5df4db912749e">pj_uint8_t</a> *pkt, unsigned pkt_len, const <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *dst_addr, unsigned addr_len)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This callback will be called by the TURN session whenever it needs to send outgoing STUN requests/messages for TURN signalling purposes (data sending will not invoke this callback). If this callback is not implemented, the callback <em><a class="el" href="structpj__turn__session__cb.htm#a38e5bab6f8272a6ddf12e5b710052950">on_send_pkt()</a></em> will be called instead.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sess</td><td>The TURN session. </td></tr>
    <tr><td class="paramname">pkt</td><td>The packet/data to be sent. </td></tr>
    <tr><td class="paramname">pkt_len</td><td>Length of the packet/data. </td></tr>
    <tr><td class="paramname">dst_addr</td><td>Destination address of the packet. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of the destination address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The callback should return the status of the send operation. </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="turn__session_8h_source.htm">turn_session.h</a></li>
</ul>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
