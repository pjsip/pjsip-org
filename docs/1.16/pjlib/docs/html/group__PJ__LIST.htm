<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: Linked List (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>Linked List<br/>
<small>
[<a class="el" href="group__PJ__DS.htm">Data Structure.</a>]</small>
</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__list.htm">pj_list</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga18f1e5604efeff83af34401b2c447d0a">PJ_DECL_LIST_MEMBER</a>(type)</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga0f39ad164f2124e6d42d1c2e7a5926dc">pj_list_init</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga73af60d46c342d0f4f837fffcd327ded">pj_list_empty</a> (const <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#gace71471e1fecac2cef8416c144925176">pj_list_insert_before</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *pos, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#gab2b4b1d6e67621db8c7dcc67a83ed45f">pj_list_push_back</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga45a5b9503ce73660eac3ad6872acf167">pj_list_insert_nodes_before</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *lst, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *nodes)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga64e9ace6bdf9ec204a52e88ae339bbfd">pj_list_insert_after</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *pos, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#gaeb508e431b405f056e4f70af23941b90">pj_list_push_front</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga4ec2b4196963bde8438a7ba2aafc58ae">pj_list_insert_nodes_after</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *lst, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *nodes)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga32f9998ff249bf9733ac9f9e9a6d8cd5">pj_list_merge_first</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list1, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#gaa362db05b7c9337b4159548dff385980">pj_list_merge_last</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list1, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga2781509d8fc3708b88f897482bf85207">pj_list_erase</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#gacba19f3dfca4142dc264372f0caa238c">pj_list_find_node</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list, <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#ga85a0e31896bedc6b47450d2e6f8220c2">pj_list_search</a> (<a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list, void *value, int(*comp)(void *value, const <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJ__LIST.htm#gadfccd8a988bb90c82c50c2c55d724c13">pj_list_size</a> (const <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *list)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>List in PJLIB is implemented as doubly-linked list, and it won't require dynamic memory allocation (just as all PJLIB data structures). The list here should be viewed more like a low level C list instead of high level C++ list (which normally are easier to use but require dynamic memory allocations), therefore all caveats with C list apply here too (such as you can NOT put a node in more than one lists).</p>
<h2><a class="anchor" id="pj_list_example_sec"></a>
Examples</h2>
<p>See below for examples on how to manipulate linked list:</p>
<ul>
<li><a class="el" href="page_pjlib_samples_list_c.htm">Example: List Manipulation</a></li>
<li><a class="el" href="page_pjlib_list_test.htm">Test: Linked List</a> </li>
</ul>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga18f1e5604efeff83af34401b2c447d0a"></a><!-- doxytag: member="list.h::PJ_DECL_LIST_MEMBER" ref="ga18f1e5604efeff83af34401b2c447d0a" args="(type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PJ_DECL_LIST_MEMBER</td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname">type</td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Use this macro in the start of the structure declaration to declare that the structure can be used in the linked list operation. This macro simply declares additional member <em>prev</em> and <em>next</em> to the structure. </p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga73af60d46c342d0f4f837fffcd327ded"></a><!-- doxytag: member="list.h::pj_list_empty" ref="ga73af60d46c342d0f4f837fffcd327ded" args="(const pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int pj_list_empty </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check that the list is empty.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The list head.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Non-zero if the list is empty, or zero if it is not empty. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2781509d8fc3708b88f897482bf85207"></a><!-- doxytag: member="list.h::pj_list_erase" ref="ga2781509d8fc3708b88f897482bf85207" args="(pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Erase the node from the list it currently belongs.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The element to be erased. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacba19f3dfca4142dc264372f0caa238c"></a><!-- doxytag: member="list.h::pj_list_find_node" ref="gacba19f3dfca4142dc264372f0caa238c" args="(pj_list_type *list, pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a>* pj_list_find_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find node in the list.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>The list head. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The node element to be searched.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The node itself if it is found in the list, or NULL if it is not found in the list. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0f39ad164f2124e6d42d1c2e7a5926dc"></a><!-- doxytag: member="list.h::pj_list_init" ref="ga0f39ad164f2124e6d42d1c2e7a5926dc" args="(pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize the list. Initially, the list will have no member, and function <a class="el" href="group__PJ__LIST.htm#ga73af60d46c342d0f4f837fffcd327ded">pj_list_empty()</a> will always return nonzero (which indicates TRUE) for the newly initialized list.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The list head. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga64e9ace6bdf9ec204a52e88ae339bbfd"></a><!-- doxytag: member="list.h::pj_list_insert_after" ref="ga64e9ace6bdf9ec204a52e88ae339bbfd" args="(pj_list_type *pos, pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_insert_after </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Insert a node to the list after the specified element position.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pos</em>&nbsp;</td><td>The element in the list which will precede the inserted element. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The element to be inserted after the position element.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>void. </dd></dl>

<p>Referenced by <a class="el" href="group__PJ__LIST.htm#gaeb508e431b405f056e4f70af23941b90">pj_list_push_front()</a>.</p>

</div>
</div>
<a class="anchor" id="gace71471e1fecac2cef8416c144925176"></a><!-- doxytag: member="list.h::pj_list_insert_before" ref="gace71471e1fecac2cef8416c144925176" args="(pj_list_type *pos, pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_insert_before </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Insert the node to the list before the specified element position.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pos</em>&nbsp;</td><td>The element to which the node will be inserted before. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The element to be inserted.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>void. </dd></dl>

<p>Referenced by <a class="el" href="group__PJ__LIST.htm#gab2b4b1d6e67621db8c7dcc67a83ed45f">pj_list_push_back()</a>.</p>

</div>
</div>
<a class="anchor" id="ga4ec2b4196963bde8438a7ba2aafc58ae"></a><!-- doxytag: member="list.h::pj_list_insert_nodes_after" ref="ga4ec2b4196963bde8438a7ba2aafc58ae" args="(pj_list_type *lst, pj_list_type *nodes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_insert_nodes_after </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>lst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>nodes</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Insert all nodes in <em>nodes</em> to the target list.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>lst</em>&nbsp;</td><td>The target list. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nodes</em>&nbsp;</td><td>Nodes list. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga45a5b9503ce73660eac3ad6872acf167"></a><!-- doxytag: member="list.h::pj_list_insert_nodes_before" ref="ga45a5b9503ce73660eac3ad6872acf167" args="(pj_list_type *lst, pj_list_type *nodes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_insert_nodes_before </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>lst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>nodes</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Inserts all nodes in <em>nodes</em> to the target list.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>lst</em>&nbsp;</td><td>The target list. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nodes</em>&nbsp;</td><td>Nodes list. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga32f9998ff249bf9733ac9f9e9a6d8cd5"></a><!-- doxytag: member="list.h::pj_list_merge_first" ref="ga32f9998ff249bf9733ac9f9e9a6d8cd5" args="(pj_list_type *list1, pj_list_type *list2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_merge_first </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remove elements from the source list, and insert them to the destination list. The elements of the source list will occupy the front elements of the target list. Note that the node pointed by <em>list2</em> itself is not considered as a node, but rather as the list descriptor, so it will not be inserted to the <em>list1</em>. The elements to be inserted starts at <em>list2-&gt;next</em>. If <em>list2</em> is to be included in the operation, use <em>pj_list_insert_nodes_before</em>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list1</em>&nbsp;</td><td>The destination list. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>list2</em>&nbsp;</td><td>The source list.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>void. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa362db05b7c9337b4159548dff385980"></a><!-- doxytag: member="list.h::pj_list_merge_last" ref="gaa362db05b7c9337b4159548dff385980" args="(pj_list_type *list1, pj_list_type *list2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_merge_last </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remove elements from the second list argument, and insert them to the list in the first argument. The elements from the second list will be appended to the first list. Note that the node pointed by <em>list2</em> itself is not considered as a node, but rather as the list descriptor, so it will not be inserted to the <em>list1</em>. The elements to be inserted starts at <em>list2-&gt;next</em>. If <em>list2</em> is to be included in the operation, use <em>pj_list_insert_nodes_before</em>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list1</em>&nbsp;</td><td>The element in the list which will precede the inserted element. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>list2</em>&nbsp;</td><td>The element in the list to be inserted.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>void. </dd></dl>

</div>
</div>
<a class="anchor" id="gab2b4b1d6e67621db8c7dcc67a83ed45f"></a><!-- doxytag: member="list.h::pj_list_push_back" ref="gab2b4b1d6e67621db8c7dcc67a83ed45f" args="(pj_list_type *list, pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_push_back </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Insert the node to the back of the list. This is just an alias for <a class="el" href="group__PJ__LIST.htm#gace71471e1fecac2cef8416c144925176">pj_list_insert_before()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>The list. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The element to be inserted. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="group__PJ__LIST.htm#gace71471e1fecac2cef8416c144925176">pj_list_insert_before()</a>.</p>

</div>
</div>
<a class="anchor" id="gaeb508e431b405f056e4f70af23941b90"></a><!-- doxytag: member="list.h::pj_list_push_front" ref="gaeb508e431b405f056e4f70af23941b90" args="(pj_list_type *list, pj_list_type *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pj_list_push_front </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>node</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Insert the node to the front of the list. This is just an alias for <a class="el" href="group__PJ__LIST.htm#ga64e9ace6bdf9ec204a52e88ae339bbfd">pj_list_insert_after()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>The list. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>The element to be inserted. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="group__PJ__LIST.htm#ga64e9ace6bdf9ec204a52e88ae339bbfd">pj_list_insert_after()</a>.</p>

</div>
</div>
<a class="anchor" id="ga85a0e31896bedc6b47450d2e6f8220c2"></a><!-- doxytag: member="list.h::pj_list_search" ref="ga85a0e31896bedc6b47450d2e6f8220c2" args="(pj_list_type *list, void *value, int(*comp)(void *value, const pj_list_type *node))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a>* pj_list_search </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(void *value, const <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *node)&nbsp;</td>
          <td class="paramname"> <em>comp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Search the list for the specified value, using the specified comparison function. This function iterates on nodes in the list, started with the first node, and call the user supplied comparison function until the comparison function returns ZERO.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>The list head. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>The user defined value to be passed in the comparison function </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>comp</em>&nbsp;</td><td>The comparison function, which should return ZERO to indicate that the searched value is found.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The first node that matched, or NULL if it is not found. </dd></dl>

</div>
</div>
<a class="anchor" id="gadfccd8a988bb90c82c50c2c55d724c13"></a><!-- doxytag: member="list.h::pj_list_size" ref="gadfccd8a988bb90c82c50c2c55d724c13" args="(const pj_list_type *list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pj_list_size </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJ__BASIC.htm#ga56842cba859dc628f0b2f8ba4754062d">pj_list_type</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Traverse the list to get the number of elements in the list.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>The list head.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Number of elements. </dd></dl>

</div>
</div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
