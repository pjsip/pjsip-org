<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Simple UPnP Client (2.13)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Simple UPnP Client</div></div>
</div><!--header-->
<div class="contents">

<p>A simple UPnP client implementation.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__upnp__init__param.htm">pj_upnp_init_param</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gae141622d5e137eb7da5e98bcbf99e49b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__UPNP.htm#gae141622d5e137eb7da5e98bcbf99e49b">pj_upnp_init</a> (const <a class="el" href="structpj__upnp__init__param.htm">pj_upnp_init_param</a> *param)</td></tr>
<tr class="separator:gae141622d5e137eb7da5e98bcbf99e49b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa518073a1ed544c45e6ecbf8851ca70b"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__UPNP.htm#gaa518073a1ed544c45e6ecbf8851ca70b">pj_upnp_deinit</a> (void)</td></tr>
<tr class="separator:gaa518073a1ed544c45e6ecbf8851ca70b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4477ef3cefb76c85e0a67ed9b6a02c30"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__UPNP.htm#ga4477ef3cefb76c85e0a67ed9b6a02c30">pj_upnp_add_port_mapping</a> (unsigned sock_cnt, const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock[], unsigned ext_port[], <a class="elRef" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> mapped_addr[])</td></tr>
<tr class="separator:ga4477ef3cefb76c85e0a67ed9b6a02c30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17f04ae5ff3213c93fac8a72aa714d09"><td class="memItemLeft" align="right" valign="top"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__UPNP.htm#ga17f04ae5ff3213c93fac8a72aa714d09">pj_upnp_del_port_mapping</a> (const <a class="elRef" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *mapped_addr)</td></tr>
<tr class="separator:ga17f04ae5ff3213c93fac8a72aa714d09"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p >This is a simple implementation of UPnP client. Its main function is to request a port mapping from an Internet Gateway Device (IGD), which will redirect communication received on a specified external port to a local socket. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga4477ef3cefb76c85e0a67ed9b6a02c30" name="ga4477ef3cefb76c85e0a67ed9b6a02c30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4477ef3cefb76c85e0a67ed9b6a02c30">&#9670;&nbsp;</a></span>pj_upnp_add_port_mapping()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_upnp_add_port_mapping </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>sock_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a>&#160;</td>
          <td class="paramname"><em>sock</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>ext_port</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a>&#160;</td>
          <td class="paramname"><em>mapped_addr</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >This is the main function to request a port mapping. If successful, the Internet Gateway Device will redirect communication received on the specified external ports to the local sockets.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sock_cnt</td><td>Number of sockets in the socket array. </td></tr>
    <tr><td class="paramname">sock</td><td>Array of local UDP sockets that will be mapped. </td></tr>
    <tr><td class="paramname">ext_port</td><td>(Optional) Array of external port numbers. If NULL, the external port numbers requested will be identical to the sockets' local port numbers. </td></tr>
    <tr><td class="paramname">mapped_addr</td><td>Array to receive the mapped public addresses and ports of the local UDP sockets, when the function returns PJ_SUCCESS.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error status. </dd></dl>

</div>
</div>
<a id="gaa518073a1ed544c45e6ecbf8851ca70b" name="gaa518073a1ed544c45e6ecbf8851ca70b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa518073a1ed544c45e6ecbf8851ca70b">&#9670;&nbsp;</a></span>pj_upnp_deinit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_upnp_deinit </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Deinitialize UPnP library.</p>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error status. </dd></dl>

</div>
</div>
<a id="ga17f04ae5ff3213c93fac8a72aa714d09" name="ga17f04ae5ff3213c93fac8a72aa714d09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga17f04ae5ff3213c93fac8a72aa714d09">&#9670;&nbsp;</a></span>pj_upnp_del_port_mapping()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_upnp_del_port_mapping </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" href="../../../pjlib/docs/html/unionpj__sockaddr.htm">pj_sockaddr</a> *&#160;</td>
          <td class="paramname"><em>mapped_addr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Send request to delete a port mapping.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mapped_addr</td><td>The public address and external port mapping to be deleted.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error status. </dd></dl>

<p class="reference">References <a class="elRef" href="../../../pjlib/docs/html/group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>.</p>

</div>
</div>
<a id="gae141622d5e137eb7da5e98bcbf99e49b" name="gae141622d5e137eb7da5e98bcbf99e49b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae141622d5e137eb7da5e98bcbf99e49b">&#9670;&nbsp;</a></span>pj_upnp_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pj_upnp_init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__upnp__init__param.htm">pj_upnp_init_param</a> *&#160;</td>
          <td class="paramname"><em>param</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >Initialize UPnP library and initiate the search for valid Internet Gateway Devices (IGD) in the network.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">param</td><td>The UPnP initialization parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success, or the appropriate error status. </dd></dl>

</div>
</div>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
