<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>PJLIB Reference: ioqueue.h Source File (1.16)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJLIB Reference</p>


<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.htm"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>ioqueue.h</h1>  </div>
</div>
<div class="contents">
<a href="ioqueue_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: ioqueue.h 3553 2011-05-05 06:14:19Z nanang $</span>
<a name="l00002"></a>00002 <span class="comment"> */</span>
<a name="l00003"></a>00003 <span class="comment">/* </span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00005"></a>00005 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00010"></a>00010 <span class="comment"> * (at your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00013"></a>00013 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00015"></a>00015 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef __PJ_IOQUEUE_H__</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define __PJ_IOQUEUE_H__</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;<a class="code" href="types_8h.htm" title="Declaration of basic types and utility.">pj/types.h</a>&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <a class="code" href="group__pj__config.htm#ga288f0f20eddba864219d6d9b3cd006e1">PJ_BEGIN_DECL</a>
<a name="l00032"></a>00032 
<a name="l00209"></a><a class="code" href="structpj__ioqueue__op__key__t.htm">00209</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a>
<a name="l00210"></a>00210 { 
<a name="l00211"></a><a class="code" href="structpj__ioqueue__op__key__t.htm#ad1bf906370f2644d4e9ae9c8e14fa8fd">00211</a>     <span class="keywordtype">void</span> *<a class="code" href="structpj__ioqueue__op__key__t.htm#ad1bf906370f2644d4e9ae9c8e14fa8fd">internal__</a>[32];           
<a name="l00212"></a><a class="code" href="group__PJ__IOQUEUE.htm#ga3ed26947c228ad86494baf4c0b9272de">00212</a>     <span class="keywordtype">void</span> *<a class="code" href="group__PJ__IOQUEUE.htm#ga3ed26947c228ad86494baf4c0b9272de">activesock_data</a>;          
<a name="l00213"></a><a class="code" href="group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">00213</a>     <span class="keywordtype">void</span> *<a class="code" href="group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>;                
<a name="l00214"></a>00214 } <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a>;
<a name="l00215"></a>00215 
<a name="l00220"></a><a class="code" href="structpj__ioqueue__callback.htm">00220</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__ioqueue__callback.htm">pj_ioqueue_callback</a>
<a name="l00221"></a>00221 {
<a name="l00233"></a><a class="code" href="structpj__ioqueue__callback.htm#aef60532d102c3174555e61127cf9ec1b">00233</a>     void (*<a class="code" href="structpj__ioqueue__callback.htm#aef60532d102c3174555e61127cf9ec1b">on_read_complete</a>)(<a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, 
<a name="l00234"></a>00234                              <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="code" href="structop__key.htm">op_key</a>, 
<a name="l00235"></a>00235                              <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> bytes_read);
<a name="l00236"></a>00236 
<a name="l00248"></a><a class="code" href="group__PJ__IOQUEUE.htm#gad79249d319b012a8366921e277299dc7">00248</a>     void (*<a class="code" href="group__PJ__IOQUEUE.htm#gad79249d319b012a8366921e277299dc7">on_write_complete</a>)(<a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, 
<a name="l00249"></a>00249                               <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="code" href="structop__key.htm">op_key</a>, 
<a name="l00250"></a>00250                               <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> bytes_sent);
<a name="l00251"></a>00251 
<a name="l00260"></a><a class="code" href="group__PJ__IOQUEUE.htm#ga4330720fb952bd7c256d2752418bcc66">00260</a>     void (*<a class="code" href="group__PJ__IOQUEUE.htm#ga4330720fb952bd7c256d2752418bcc66">on_accept_complete</a>)(<a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, 
<a name="l00261"></a>00261                                <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="code" href="structop__key.htm">op_key</a>, 
<a name="l00262"></a>00262                                <a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock, 
<a name="l00263"></a>00263                                <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status);
<a name="l00264"></a>00264 
<a name="l00271"></a><a class="code" href="group__PJ__IOQUEUE.htm#ga268a5bf548a9656a8652e35b567f7776">00271</a>     void (*<a class="code" href="group__PJ__IOQUEUE.htm#ga268a5bf548a9656a8652e35b567f7776">on_connect_complete</a>)(<a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key, 
<a name="l00272"></a>00272                                 <a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> status);
<a name="l00273"></a>00273 } <a class="code" href="structpj__ioqueue__callback.htm">pj_ioqueue_callback</a>;
<a name="l00274"></a>00274 
<a name="l00275"></a>00275 
<a name="l00280"></a><a class="code" href="group__PJ__IOQUEUE.htm#ga6ddc0236e7d3b92c6be3fed720bab47b">00280</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__PJ__IOQUEUE.htm#ga6ddc0236e7d3b92c6be3fed720bab47b">pj_ioqueue_operation_e</a>
<a name="l00281"></a>00281 {
<a name="l00282"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47bad1d58e0afc2e80cc0c7e0d669dd1cb95">00282</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47bad1d58e0afc2e80cc0c7e0d669dd1cb95">PJ_IOQUEUE_OP_NONE</a>          = 0,    
<a name="l00283"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba3c9e119e2669740ba965f724d8d7f5a7">00283</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba3c9e119e2669740ba965f724d8d7f5a7">PJ_IOQUEUE_OP_READ</a>          = 1,    
<a name="l00284"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba389865c07fc00b0d7fbd3fad52497715">00284</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba389865c07fc00b0d7fbd3fad52497715">PJ_IOQUEUE_OP_RECV</a>          = 2,    
<a name="l00285"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba399794bb902a9b7f8364eb4e76d26f7d">00285</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba399794bb902a9b7f8364eb4e76d26f7d">PJ_IOQUEUE_OP_RECV_FROM</a>     = 4,    
<a name="l00286"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba4af94279ce626c3a0767a49bdd0e5836">00286</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba4af94279ce626c3a0767a49bdd0e5836">PJ_IOQUEUE_OP_WRITE</a>         = 8,    
<a name="l00287"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba658b81e5d5a5308cc35e389b019d27ea">00287</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba658b81e5d5a5308cc35e389b019d27ea">PJ_IOQUEUE_OP_SEND</a>          = 16,   
<a name="l00288"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba08b34d4e6f387d8cf4d4c32fc6257c6a">00288</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba08b34d4e6f387d8cf4d4c32fc6257c6a">PJ_IOQUEUE_OP_SEND_TO</a>       = 32,   
<a name="l00289"></a>00289 <span class="preprocessor">#if defined(PJ_HAS_TCP) &amp;&amp; PJ_HAS_TCP != 0</span>
<a name="l00290"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba760ff32815e4f66b2cb847e19c057a25">00290</a> <span class="preprocessor"></span>    <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba760ff32815e4f66b2cb847e19c057a25">PJ_IOQUEUE_OP_ACCEPT</a>        = 64,   
<a name="l00291"></a><a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba89257623b7b5a70ee4762c7802aa288e">00291</a>     <a class="code" href="group__PJ__IOQUEUE.htm#gga6ddc0236e7d3b92c6be3fed720bab47ba89257623b7b5a70ee4762c7802aa288e">PJ_IOQUEUE_OP_CONNECT</a>       = 128   
<a name="l00292"></a>00292 <span class="preprocessor">#endif  </span><span class="comment">/* PJ_HAS_TCP */</span>
<a name="l00293"></a>00293 } pj_ioqueue_operation_e;
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 
<a name="l00302"></a>00302 <span class="preprocessor">#ifndef PJ_IOQUEUE_MAX_EVENTS_IN_SINGLE_POLL</span>
<a name="l00303"></a><a class="code" href="group__PJ__IOQUEUE.htm#gacdcf09fc8599097af2a8932d8df39f36">00303</a> <span class="preprocessor"></span><span class="preprocessor">#   define PJ_IOQUEUE_MAX_EVENTS_IN_SINGLE_POLL     (16)</span>
<a name="l00304"></a>00304 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00305"></a>00305 <span class="preprocessor"></span>
<a name="l00310"></a><a class="code" href="group__PJ__IOQUEUE.htm#ga64cc9963980016a7862bb89d1f9961ca">00310</a> <span class="preprocessor">#define PJ_IOQUEUE_ALWAYS_ASYNC     ((pj_uint32_t)1 &lt;&lt; (pj_uint32_t)31)</span>
<a name="l00311"></a>00311 <span class="preprocessor"></span>
<a name="l00317"></a>00317 PJ_DECL(<span class="keyword">const</span> <span class="keywordtype">char</span>*) <a class="code" href="group__PJ__IOQUEUE.htm#ga6179808511eccf51f35944c4b7de679e">pj_ioqueue_name</a>(<span class="keywordtype">void</span>);
<a name="l00318"></a>00318 
<a name="l00319"></a>00319 
<a name="l00330"></a>00330 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gaae188673e57ae841d586a738e53cffc5">pj_ioqueue_create</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool, 
<a name="l00331"></a>00331                                         <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> max_fd,
<a name="l00332"></a>00332                                         <a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> **ioqueue);
<a name="l00333"></a>00333 
<a name="l00341"></a>00341 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga59f004632b9ae20e43fa573e6b6cb237">pj_ioqueue_destroy</a>( <a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioque );
<a name="l00342"></a>00342 
<a name="l00358"></a>00358 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga983c8011148c497b1c7385370c9eb57b">pj_ioqueue_set_lock</a>( <a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioque, 
<a name="l00359"></a>00359                                           <a class="code" href="group__PJ__BASIC.htm#ga3dc49084043901d31c7b12e5afc9fb2f">pj_lock_t</a> *lock,
<a name="l00360"></a>00360                                           <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> auto_delete );
<a name="l00361"></a>00361 
<a name="l00377"></a>00377 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga61f080c7c8d52bcf5e2d955257fde21e">pj_ioqueue_set_default_concurrency</a>(<a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioqueue,
<a name="l00378"></a>00378                                                         <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> allow);
<a name="l00379"></a>00379 
<a name="l00400"></a>00400 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gada2faae3ca27a917b90f6fa39b758355">pj_ioqueue_register_sock</a>( <a class="code" href="structpj__pool__t.htm">pj_pool_t</a> *pool,
<a name="l00401"></a>00401                                                <a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioque,
<a name="l00402"></a>00402                                                <a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> sock,
<a name="l00403"></a>00403                                                <span class="keywordtype">void</span> *user_data,
<a name="l00404"></a>00404                                                const <a class="code" href="structpj__ioqueue__callback.htm">pj_ioqueue_callback</a> *cb,
<a name="l00405"></a>00405                                                <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> **key );
<a name="l00406"></a>00406 
<a name="l00428"></a>00428 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga7c05e3b02e71e7680679c90c2adbe230">pj_ioqueue_unregister</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key );
<a name="l00429"></a>00429 
<a name="l00430"></a>00430 
<a name="l00440"></a>00440 PJ_DECL(<span class="keywordtype">void</span>*) <a class="code" href="group__PJ__IOQUEUE.htm#ga238dc908101226262f8ba91393e12efc">pj_ioqueue_get_user_data</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key );
<a name="l00441"></a>00441 
<a name="l00452"></a>00452 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga4bc8e251b19facfe3b0bbcc65117155c">pj_ioqueue_set_user_data</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00453"></a>00453                                                <span class="keywordtype">void</span> *user_data,
<a name="l00454"></a>00454                                                <span class="keywordtype">void</span> **old_data);
<a name="l00455"></a>00455 
<a name="l00478"></a>00478 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gac9a11ef3e95391eb85193bb15284af93">pj_ioqueue_set_concurrency</a>(<a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00479"></a>00479                                                 <a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a> allow);
<a name="l00480"></a>00480 
<a name="l00491"></a>00491 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gad418678f2f2444232ad490d258ab3acc">pj_ioqueue_lock_key</a>(<a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key);
<a name="l00492"></a>00492 
<a name="l00500"></a>00500 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gaa5d5a7ce4360cc2506ef2557f4815522">pj_ioqueue_unlock_key</a>(<a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key);
<a name="l00501"></a>00501 
<a name="l00508"></a>00508 PJ_DECL(<span class="keywordtype">void</span>) <a class="code" href="group__PJ__IOQUEUE.htm#ga2ef6f3b6077c716793e2b4a488e03fe4">pj_ioqueue_op_key_init</a>( <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *<a class="code" href="structop__key.htm">op_key</a>,
<a name="l00509"></a>00509                                       <a class="code" href="group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> size );
<a name="l00510"></a>00510 
<a name="l00523"></a>00523 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#ga1dc7a356fb36bd2dee2bc7d6c7e817e4">pj_bool_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga740d28a04a46e6c1f7a4ae69ac0670bc">pj_ioqueue_is_pending</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00524"></a>00524                                           <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *op_key );
<a name="l00525"></a>00525 
<a name="l00526"></a>00526 
<a name="l00541"></a>00541 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gad3efb211e789eeb8899e41550bc99006">pj_ioqueue_post_completion</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00542"></a>00542                                                  <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *op_key,
<a name="l00543"></a>00543                                                  <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> bytes_status );
<a name="l00544"></a>00544 
<a name="l00545"></a>00545 
<a name="l00546"></a>00546 
<a name="l00547"></a>00547 <span class="preprocessor">#if defined(PJ_HAS_TCP) &amp;&amp; PJ_HAS_TCP != 0</span>
<a name="l00548"></a>00548 <span class="preprocessor"></span>
<a name="l00580"></a>00580 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gaf7505cc18b3031e43e68c5fd4a7a388e">pj_ioqueue_accept</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00581"></a>00581                                         <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *op_key,
<a name="l00582"></a>00582                                         <a class="code" href="group__PJ__BASIC.htm#ga5ccc87de27d1236bc31ae3673d153984">pj_sock_t</a> *new_sock,
<a name="l00583"></a>00583                                         <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *local,
<a name="l00584"></a>00584                                         <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *remote,
<a name="l00585"></a>00585                                         <span class="keywordtype">int</span> *addrlen );
<a name="l00586"></a>00586 
<a name="l00604"></a>00604 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gaf73fd64e7fbfa50b2c9ca7b00ceaea0b">pj_ioqueue_connect</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00605"></a>00605                                          const <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *addr,
<a name="l00606"></a>00606                                          <span class="keywordtype">int</span> addrlen );
<a name="l00607"></a>00607 
<a name="l00608"></a>00608 <span class="preprocessor">#endif  </span><span class="comment">/* PJ_HAS_TCP */</span>
<a name="l00609"></a>00609 
<a name="l00625"></a>00625 PJ_DECL(<span class="keywordtype">int</span>) <a class="code" href="group__PJ__IOQUEUE.htm#gac65cc5cb9a04f2008d1fa62709ba2d91">pj_ioqueue_poll</a>( <a class="code" href="group__PJ__BASIC.htm#ga26ca218655d86b00d807e1407854128e">pj_ioqueue_t</a> *ioque,
<a name="l00626"></a>00626                               const <a class="code" href="structpj__time__val.htm">pj_time_val</a> *timeout);
<a name="l00627"></a>00627 
<a name="l00628"></a>00628 
<a name="l00664"></a>00664 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga71e08c6414a6f0cd1c1d2fde267bccbe">pj_ioqueue_recv</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00665"></a>00665                                       <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *op_key,
<a name="l00666"></a>00666                                       <span class="keywordtype">void</span> *buffer,
<a name="l00667"></a>00667                                       <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *length,
<a name="l00668"></a>00668                                       <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags );
<a name="l00669"></a>00669 
<a name="l00707"></a>00707 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#ga374d409596460c721e6c185e4a13f25d">pj_ioqueue_recvfrom</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00708"></a>00708                                           <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *op_key,
<a name="l00709"></a>00709                                           <span class="keywordtype">void</span> *buffer,
<a name="l00710"></a>00710                                           <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *length,
<a name="l00711"></a>00711                                           <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags,
<a name="l00712"></a>00712                                           <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *addr,
<a name="l00713"></a>00713                                           <span class="keywordtype">int</span> *addrlen);
<a name="l00714"></a>00714 
<a name="l00749"></a>00749 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gabf96d153949aeda0e7b9dbb742ffcda7">pj_ioqueue_send</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00750"></a>00750                                       <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *op_key,
<a name="l00751"></a>00751                                       const <span class="keywordtype">void</span> *data,
<a name="l00752"></a>00752                                       <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *length,
<a name="l00753"></a>00753                                       <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags );
<a name="l00754"></a>00754 
<a name="l00755"></a>00755 
<a name="l00789"></a>00789 PJ_DECL(<a class="code" href="group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>) <a class="code" href="group__PJ__IOQUEUE.htm#gad9eaa7c7b2668255d6ee1a0bf3afb007">pj_ioqueue_sendto</a>( <a class="code" href="group__PJ__BASIC.htm#ga89da69533fa1109f3a11ef91c489d9ad">pj_ioqueue_key_t</a> *key,
<a name="l00790"></a>00790                                         <a class="code" href="structpj__ioqueue__op__key__t.htm">pj_ioqueue_op_key_t</a> *op_key,
<a name="l00791"></a>00791                                         const <span class="keywordtype">void</span> *data,
<a name="l00792"></a>00792                                         <a class="code" href="group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> *length,
<a name="l00793"></a>00793                                         <a class="code" href="group__PJ__BASIC.htm#gafbfd2fd08c6041ea3cb217310c0b5b48">pj_uint32_t</a> flags,
<a name="l00794"></a>00794                                         const <a class="code" href="group__PJ__BASIC.htm#gab18aea853290263f8563e171cde31514">pj_sockaddr_t</a> *addr,
<a name="l00795"></a>00795                                         <span class="keywordtype">int</span> addrlen);
<a name="l00796"></a>00796 
<a name="l00797"></a>00797 
<a name="l00802"></a>00802 <a class="code" href="group__pj__config.htm#gac961f7d199eeed7666ab3ec2442c1b00">PJ_END_DECL</a>
<a name="l00803"></a>00803 
<a name="l00804"></a>00804 <span class="preprocessor">#endif  </span><span class="comment">/* __PJ_IOQUEUE_H__ */</span>
<a name="l00805"></a>00805 
</pre></div></div>
</div>
<p>&nbsp;</p>
<hr><center>
PJLIB Open Source, high performance, small footprint, and very very portable framework<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
