<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>File Writer (Recorder) (2.12)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJMEDIA Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">File Writer (Recorder)<div class="ingroups"><a class="el" href="group__PJMEDIA__PORT.htm">Media Ports Framework</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Audio capture/recording to WAV file.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gab6f328573c0b3150bc4ac597105223a8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FILE__REC.htm#gab6f328573c0b3150bc4ac597105223a8">pjmedia_file_writer_option</a> { <br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FILE__REC.htm#ggab6f328573c0b3150bc4ac597105223a8aa4a2064d63f06b5e2f0b6617796427c4">PJMEDIA_FILE_WRITE_PCM</a> = 0, 
<br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FILE__REC.htm#ggab6f328573c0b3150bc4ac597105223a8ad1ff0881da5439d264d21259d2ecdb75">PJMEDIA_FILE_WRITE_ALAW</a> = 1, 
<br />
&#160;&#160;<a class="el" href="group__PJMEDIA__FILE__REC.htm#ggab6f328573c0b3150bc4ac597105223a8a7a6bce4704ae0ea47d6acdca15758b04">PJMEDIA_FILE_WRITE_ULAW</a> = 2
<br />
 }</td></tr>
<tr class="separator:gab6f328573c0b3150bc4ac597105223a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga899268674e9657e8033738bca29621a2"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FILE__REC.htm#ga899268674e9657e8033738bca29621a2">pjmedia_wav_writer_port_create</a> (<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *pool, const char *filename, unsigned clock_rate, unsigned channel_count, unsigned samples_per_frame, unsigned bits_per_sample, unsigned <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__SYS__INFO.htm#gae4737d316c3696dc34a85aa1c09dab99">flags</a>, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> buff_size, <a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **p_port)</td></tr>
<tr class="separator:ga899268674e9657e8033738bca29621a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b082dd005f5f05586433d5ce1c52883"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FILE__REC.htm#ga3b082dd005f5f05586433d5ce1c52883">pjmedia_wav_writer_port_get_pos</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port)</td></tr>
<tr class="separator:ga3b082dd005f5f05586433d5ce1c52883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga82fae99a11b2ff461721e20e18061da9"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FILE__REC.htm#ga82fae99a11b2ff461721e20e18061da9">pjmedia_wav_writer_port_set_cb</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pos, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*cb)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data))</td></tr>
<tr class="separator:ga82fae99a11b2ff461721e20e18061da9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11b64421b5160088848be8acb4d7dd0e"><td class="memItemLeft" align="right" valign="top"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJMEDIA__FILE__REC.htm#ga11b64421b5160088848be8acb4d7dd0e">pjmedia_wav_writer_port_set_cb2</a> (<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, <a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a> pos, void *<a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__IOQUEUE.htm#gab06c131ab29b37c027f2400bd5be6045">user_data</a>, void(*cb)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data))</td></tr>
<tr class="separator:ga11b64421b5160088848be8acb4d7dd0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gab6f328573c0b3150bc4ac597105223a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab6f328573c0b3150bc4ac597105223a8">&#9670;&nbsp;</a></span>pjmedia_file_writer_option</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJMEDIA__FILE__REC.htm#gab6f328573c0b3150bc4ac597105223a8">pjmedia_file_writer_option</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>WAV file writer options. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggab6f328573c0b3150bc4ac597105223a8aa4a2064d63f06b5e2f0b6617796427c4"></a>PJMEDIA_FILE_WRITE_PCM&#160;</td><td class="fielddoc"><p>Tell the file writer to save the audio in PCM format. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggab6f328573c0b3150bc4ac597105223a8ad1ff0881da5439d264d21259d2ecdb75"></a>PJMEDIA_FILE_WRITE_ALAW&#160;</td><td class="fielddoc"><p>Tell the file writer to save the audio in G711 Alaw format. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggab6f328573c0b3150bc4ac597105223a8a7a6bce4704ae0ea47d6acdca15758b04"></a>PJMEDIA_FILE_WRITE_ULAW&#160;</td><td class="fielddoc"><p>Tell the file writer to save the audio in G711 Alaw format. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga899268674e9657e8033738bca29621a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga899268674e9657e8033738bca29621a2">&#9670;&nbsp;</a></span>pjmedia_wav_writer_port_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_wav_writer_port_create </td>
          <td>(</td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/structpj__pool__t.htm">pj_pool_t</a> *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>clock_rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>channel_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>samples_per_frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bits_per_sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a>&#160;</td>
          <td class="paramname"><em>buff_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> **&#160;</td>
          <td class="paramname"><em>p_port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a media port to record streams to a WAV file. Note that the port must be closed properly (with <a class="el" href="group__PJMEDIA__PORT.htm#ga2d9ea1ac22e90437ef5d6471ef912d4b">pjmedia_port_destroy()</a>) so that the WAV header can be filled with correct values (such as the file length). WAV writer port supports for writing audio in uncompressed 16 bit PCM format or compressed G.711 U-law/A-law format, this needs to be specified in <em>flags</em> param.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to create memory buffers for this port. </td></tr>
    <tr><td class="paramname">filename</td><td>File name. </td></tr>
    <tr><td class="paramname">clock_rate</td><td>The sampling rate. </td></tr>
    <tr><td class="paramname">channel_count</td><td>Number of channels. </td></tr>
    <tr><td class="paramname">samples_per_frame</td><td>Number of samples per frame. </td></tr>
    <tr><td class="paramname">bits_per_sample</td><td>Number of bits per sample (eg 16). </td></tr>
    <tr><td class="paramname">flags</td><td>Port creation flags, see <a class="el" href="group__PJMEDIA__FILE__REC.htm#gab6f328573c0b3150bc4ac597105223a8">pjmedia_file_writer_option</a>. </td></tr>
    <tr><td class="paramname">buff_size</td><td>Buffer size to be allocated. If the value is zero or negative, the port will use default buffer size (which is about 4KB). </td></tr>
    <tr><td class="paramname">p_port</td><td>Pointer to receive the file port instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga3b082dd005f5f05586433d5ce1c52883"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3b082dd005f5f05586433d5ce1c52883">&#9670;&nbsp;</a></span>pjmedia_wav_writer_port_get_pos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga173588cd6381f3ad354c23c26929093a">pj_ssize_t</a> pjmedia_wav_writer_port_get_pos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get current writing position. Note that this does not necessarily match the size written to the file, since the WAV writer employs some internal buffering. Also the value reported here only indicates the payload size (it does not include the size of the WAV header),</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The file writer port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Positive value to indicate the position (in bytes), or negative value containing the error code. </dd></dl>

</div>
</div>
<a id="ga82fae99a11b2ff461721e20e18061da9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga82fae99a11b2ff461721e20e18061da9">&#9670;&nbsp;</a></span>pjmedia_wav_writer_port_set_cb()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_wav_writer_port_set_cb </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a>(*)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data)&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Register the callback to be called when the file writing has reached certain size. Application can use this callback, for example, to limit the size of the output file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The file writer port. </td></tr>
    <tr><td class="paramname">pos</td><td>The file position on which the callback will be called. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be specified in the callback, and will be given on the callback. </td></tr>
    <tr><td class="paramname">cb</td><td>Callback to be called. If the callback returns non- PJ_SUCCESS, the writing will stop. Note that if application destroys the port in the callback, it must return non-PJ_SUCCESS here.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a id="ga11b64421b5160088848be8acb4d7dd0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11b64421b5160088848be8acb4d7dd0e">&#9670;&nbsp;</a></span>pjmedia_wav_writer_port_set_cb2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#gab43ba3167bd2a2ab4580509dbf79200e">pj_status_t</a> pjmedia_wav_writer_port_set_cb2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="/home/nn/projects/pjproject/pjlib/docs/pjlib.tag:../../../pjlib/docs/html/" href="../../../pjlib/docs/html/group__PJ__BASIC.htm#ga9fdb3ceb491cd888cd30ca30d78026e8">pj_size_t</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(<a class="el" href="structpjmedia__port.htm">pjmedia_port</a> *port, void *usr_data)&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Register the callback to be called when the file writing has reached certain size. Application can use this callback, for example, to limit the size of the output file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The file writer port. </td></tr>
    <tr><td class="paramname">pos</td><td>The file position on which the callback will be called. </td></tr>
    <tr><td class="paramname">user_data</td><td>User data to be specified in the callback, and will be given on the callback. </td></tr>
    <tr><td class="paramname">cb</td><td>Callback to be called. Note that if application wishes to stop the writing, it can disconnect the port in the callback, and only after all connections have been removed could the application safely destroy the port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
</div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJMEDIA small footprint Open Source media stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
